## -*- coding: utf-8 -*-
<%inherit file="skeleton.tmp"/>

entity sram is
<%include file="sram_entity.tmp"/>
end sram;

architecture RTL of sram is
	subtype ram_rec_t is ${oc.ram_t()};
	type ram_array_t is array (0 to ${oc.sim_sramsize()}) of ram_rec_t;
	signal addr_in	: integer range 0 to ${oc.sim_sramsize()};

	signal ram_data : ram_array_t;
	signal pre_xwa : std_logic;
	signal clka : std_logic;

	signal debug : std_logic_vector(3 downto 0);
	signal debug_data0 : std_logic_vector(31 downto 0);
	signal debug_data1 : std_logic_vector(31 downto 0);

begin
	clka <= ZCLKMA(0);

	sram_sim: process(clka)
	begin
		if rising_edge(clka) then
			pre_xwa <= XWA;
			addr_in <= conv_integer(${oc.sim_sramaddr()});
			if XWA='0' then -- write
				ZD <= (others=>'Z');
			else
				ZD <= ram_data(addr_in);
			end if;

			if pre_xwa='0' then -- pre write
				ram_data(addr_in) <= ZD;
			end if;

		end if;
	end process;

end RTL;
<%namespace name="oc" file="macro.tmp"/>

