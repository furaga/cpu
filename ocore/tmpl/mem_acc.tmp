## -*- coding: utf-8 -*-
<%inherit file="skeleton.tmp"/>

entity mem_acc is
<%include file="mem_acc_entity.tmp"/>
end mem_acc;

architecture behavior of mem_acc is
	signal io_write : std_logic := '0';
	signal io_read : std_logic := '0';
	signal io_en : std_logic;

	signal xwa : std_logic;


begin

	io_en <= ADDR(19);
	xwa	<= io_en or (not RAM_WEN);


	DATA_OUT <= IO_IN when io_read='1' else SRAM_ZD;

	IO_WR <= '1' when io_write='1' and CLK_EX_DLY='1' else '0';
	IO_RD <= '1' when io_read='1' and CLK_EX_DLY='1' else '0';

	process(CLK_EX_DLY)
	begin
		if rising_edge(CLK_EX_DLY) then
			io_read  <= io_en and (not RAM_WEN);
			io_write <= io_en and RAM_WEN;

			SRAM_ZA <= ${oc.mem_acc_sram_addr()};
			SRAM_XWA <= xwa;

			if io_en='1' and RAM_WEN='1' then
				IO_OUT <= DATA_IN;
			end if;

		end if;
	end process;

	process(CLK_MA)
	begin
		if rising_edge(CLK_MA) then
			if xwa='0' then -- write
				SRAM_ZD <= DATA_IN;
			else
				SRAM_ZD <= (others=>'Z');
			end if;

		end if;
	end process;

end behavior;
<%namespace name="oc" file="macro.tmp"/>

