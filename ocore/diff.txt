diff --git a/ocore/core_c.vhd b/ocore/core_c.vhd
index 27bdfe2..de92771 100644
--- a/ocore/core_c.vhd
+++ b/ocore/core_c.vhd
diff --git a/ocore/exec.vhd b/ocore/exec.vhd
diff --git a/ocore/fadd.vhd b/ocore/fadd.vhd
index 3deaf08..eb59523 100644
 	winnerE <= E1 when E1>E2 else E2;
@@ -96,7 +96,7 @@ begin
 			else
 				V := (others=>'1');
 				count := count;
-				lswE <= varE-1;
+				lswE <= varE-"00000001";
 				lshiftwidth <= count;
 			end if;
 		end loop;
diff --git a/ocore/fmul.vhd b/ocore/fmul.vhd
index 636ae24..2bb3ab8 100644
 	raw_SO	<=	'0'	when S1=S2 else '1';
-	SO		<=	raw_SO;--'0' when EO=0 else raw_SO;
+	SO		<=	raw_SO; --'0' when EO=0 else raw_SO;
 
 	raw_EO	<=	(others=>'0') when E1=0 or E2=0 else
 				E1 + E2 - 126 when raw_FO(25)='1' else
diff --git a/ocore/io_dev.vhd b/ocore/io_dev.vhd
index c026653..56b4fc7 100644
--- a/ocore/io_dev.vhd
+++ b/ocore/io_dev.vhd
@@ -7,11 +7,11 @@ use ieee.std_logic_unsigned.all;
 entity io_dev is
 	port(
 		CLK		:	in	std_logic;
-		CPU_WR	:	in	std_logic_vector(1 downto 0);
-		CPU_RD	:	in	std_logic_vector(1 downto 0);
+		CPU_WR	:	in	std_logic;
+		CPU_RD	:	in	std_logic;
 		CPU_OUT	:	in	std_logic_vector(31 downto 0);
 		CPU_IN	:	out	std_logic_vector(31 downto 0);
-		NYET	:	out std_logic_vector(1 downto 0);
+		NYET	:	out std_logic;
 		RS_RX	:	in	std_logic;
 		RS_TX	:	out	std_logic
 	);
@@ -35,42 +35,288 @@ architecture RTL of io_dev is
 
 
 	end component;
+
 	subtype buf_rec_t is std_logic_vector(7 downto 0);
 
-	-- (4 * 4096) = 16384 bytes
-	type sendbuf_t is array (0 to 4095) of buf_rec_t;
-	signal sendbuf0 : sendbuf_t;
-	signal sendbuf1 : sendbuf_t;
-	signal sendbuf2 : sendbuf_t;
-	signal sendbuf3 : sendbuf_t;
+	type sendbuf_t is array (0 to 16383) of buf_rec_t;
+	signal sendbuf : sendbuf_t;
 	signal send_head	: std_logic_vector(13 downto 0) := (others=>'0');
 	signal send_tail	: std_logic_vector(13 downto 0) := (others=>'0');
-	signal sheadi	: integer range 0 to 4095;
-	signal staili	: integer range 0 to 4095;
+
 	signal send_empty : std_logic := '0';
 
-	-- (4 * 512) = 2048 bytes
-	type recvbuf_t is array (0 to 511) of buf_rec_t;
 	signal recv_head	: std_logic_vector(10 downto 0) := (others=>'0');
-	signal recv_tail	: std_logic_vector(10 downto 0) := (others=>'0');
-	signal rheadi	: integer range 0 to 511;
-	signal rtaili	: integer range 0 to 511;
-	signal recvbuf0 : recvbuf_t;
-	signal recvbuf1 : recvbuf_t;
-	signal recvbuf2 : recvbuf_t;
-	signal recvbuf3 : recvbuf_t;
-	--signal recvbuf : recvbuf_t := (
-	--);
+	signal recv_tail	: std_logic_vector(10 downto 0) := conv_std_logic_vector(2000, 11);
+	type recvbuf_t is array (0 to 2047) of buf_rec_t;
+
+	--signal recvbuf : recvbuf_t;
+	signal recvbuf : recvbuf_t := (
+x"2D", x"37", x"30", x"20", x"20", x"33", x"35", x"20",
+x"2D", x"32", x"30", x"20", x"20", x"20", x"20", x"20",
+x"20", x"32", x"30", x"20", x"33", x"30", x"0A", x"31",
+x"20", x"35", x"30", x"20", x"35", x"30", x"0A", x"32",
+x"35", x"35", x"0A", x"30", x"20", x"31", x"20", x"31",
+x"20", x"30", x"20", x"20", x"20", x"20", x"32", x"30",
+x"20", x"20", x"32", x"30", x"20", x"20", x"36", x"35",
+x"20", x"20", x"20", x"20", x"30", x"20", x"20", x"32",
+x"30", x"20", x"20", x"34", x"35", x"20", x"20", x"31",
+x"20", x"31", x"2E", x"30", x"20", x"32", x"35", x"30",
+x"20", x"31", x"32", x"38", x"20", x"32", x"31", x"30",
+x"20", x"20", x"20", x"30", x"0A", x"30", x"20", x"33",
+x"20", x"31", x"20", x"30", x"20", x"20", x"20", x"20",
+x"32", x"35", x"20", x"20", x"34", x"30", x"20", x"20",
+x"37", x"30", x"20", x"20", x"20", x"20", x"30", x"20",
+x"20", x"20", x"30", x"20", x"20", x"34", x"30", x"20",
+x"20", x"31", x"20", x"31", x"2E", x"30", x"20", x"32",
+x"35", x"30", x"20", x"31", x"32", x"38", x"20", x"32",
+x"31", x"30", x"20", x"20", x"20", x"30", x"0A", x"30",
+x"20", x"33", x"20", x"31", x"20", x"30", x"20", x"20",
+x"20", x"20", x"20", x"30", x"20", x"20", x"33", x"30",
+x"20", x"20", x"33", x"30", x"20", x"20", x"20", x"20",
+x"30", x"20", x"20", x"2D", x"35", x"20", x"20", x"20",
+x"30", x"20", x"2D", x"31", x"20", x"31", x"2E", x"30",
+x"20", x"32", x"35", x"30", x"20", x"31", x"32", x"38",
+x"20", x"32", x"31", x"31", x"20", x"20", x"20", x"30",
+x"0A", x"30", x"20", x"31", x"20", x"31", x"20", x"30",
+x"20", x"20", x"20", x"20", x"32", x"30", x"20", x"20",
+x"31", x"30", x"20", x"20", x"33", x"30", x"20", x"20",
+x"20", x"20", x"30", x"20", x"2D", x"31", x"30", x"20",
+x"20", x"38", x"30", x"20", x"20", x"31", x"20", x"31",
+x"2E", x"30", x"20", x"32", x"35", x"30", x"20", x"31",
+x"32", x"38", x"20", x"32", x"31", x"31", x"20", x"20",
+x"20", x"30", x"0A", x"30", x"20", x"32", x"20", x"31",
+x"20", x"30", x"20", x"20", x"20", x"20", x"20", x"30",
+x"20", x"2D", x"31", x"2E", x"35", x"20", x"2D", x"31",
+x"20", x"20", x"20", x"20", x"30", x"20", x"20", x"20",
+x"30", x"20", x"20", x"35", x"30", x"20", x"20", x"31",
+x"20", x"31", x"2E", x"30", x"20", x"32", x"35", x"30",
+x"20", x"31", x"32", x"38", x"20", x"32", x"31", x"31",
+x"20", x"20", x"20", x"30", x"0A", x"30", x"20", x"31",
+x"20", x"31", x"20", x"30", x"20", x"20", x"20", x"20",
+x"32", x"32", x"20", x"20", x"32", x"38", x"20", x"20",
+x"32", x"38", x"20", x"20", x"20", x"20", x"30", x"20",
+x"20", x"2D", x"35", x"20", x"20", x"20", x"30", x"20",
+x"20", x"31", x"20", x"31", x"2E", x"30", x"20", x"32",
+x"35", x"30", x"20", x"20", x"20", x"30", x"20", x"32",
+x"31", x"31", x"20", x"32", x"31", x"31", x"0A", x"30",
+x"20", x"33", x"20", x"31", x"20", x"30", x"20", x"20",
+x"20", x"20", x"34", x"30", x"20", x"20", x"32", x"38",
+x"20", x"20", x"32", x"38", x"20", x"20", x"20", x"20",
+x"30", x"20", x"20", x"2D", x"35", x"20", x"20", x"20",
+x"30", x"20", x"20", x"31", x"20", x"31", x"2E", x"30",
+x"20", x"32", x"35", x"30", x"20", x"20", x"20", x"30",
+x"20", x"32", x"31", x"31", x"20", x"32", x"31", x"31",
+x"0A", x"30", x"20", x"33", x"20", x"31", x"20", x"30",
+x"20", x"20", x"20", x"20", x"20", x"30", x"20", x"20",
+x"31", x"35", x"20", x"20", x"31", x"35", x"20", x"20",
+x"20", x"20", x"30", x"20", x"20", x"2D", x"35", x"20",
+x"20", x"20", x"30", x"20", x"2D", x"31", x"20", x"31",
+x"2E", x"30", x"20", x"32", x"35", x"30", x"20", x"20",
+x"20", x"30", x"20", x"32", x"31", x"31", x"20", x"32",
+x"31", x"31", x"0A", x"30", x"20", x"33", x"20", x"31",
+x"20", x"30", x"20", x"20", x"20", x"20", x"31", x"35",
+x"20", x"20", x"32", x"35", x"20", x"20", x"32", x"35",
+x"20", x"20", x"20", x"20", x"30", x"20", x"20", x"2D",
+x"35", x"20", x"20", x"37", x"30", x"20", x"20", x"31",
+x"20", x"31", x"2E", x"30", x"20", x"32", x"35", x"30",
+x"20", x"32", x"31", x"31", x"20", x"20", x"20", x"30",
+x"20", x"20", x"20", x"30", x"0A", x"30", x"20", x"31",
+x"20", x"31", x"20", x"30", x"20", x"20", x"20", x"20",
+x"20", x"35", x"20", x"20", x"31", x"31", x"20", x"20",
+x"34", x"35", x"20", x"20", x"20", x"20", x"30", x"20",
+x"20", x"33", x"35", x"20", x"20", x"34", x"30", x"20",
+x"20", x"31", x"20", x"31", x"2E", x"30", x"20", x"32",
+x"35", x"30", x"20", x"32", x"31", x"31", x"20", x"31",
+x"32", x"38", x"20", x"20", x"20", x"30", x"0A", x"30",
+x"20", x"33", x"20", x"31", x"20", x"30", x"20", x"20",
+x"20", x"20", x"33", x"30", x"20", x"20", x"34", x"35",
+x"20", x"20", x"37", x"35", x"20", x"20", x"20", x"20",
+x"30", x"20", x"20", x"20", x"30", x"20", x"20", x"34",
+x"30", x"20", x"20", x"31", x"20", x"31", x"2E", x"30",
+x"20", x"32", x"35", x"30", x"20", x"32", x"31", x"31",
+x"20", x"31", x"32", x"38", x"20", x"20", x"20", x"30",
+x"0A", x"30", x"20", x"31", x"20", x"31", x"20", x"30",
+x"20", x"20", x"20", x"20", x"32", x"35", x"20", x"20",
+x"34", x"31", x"20", x"20", x"37", x"30", x"20", x"20",
+x"20", x"20", x"30", x"20", x"20", x"20", x"35", x"20",
+x"20", x"34", x"30", x"20", x"20", x"31", x"20", x"31",
+x"2E", x"30", x"20", x"32", x"35", x"30", x"20", x"20",
+x"20", x"30", x"20", x"20", x"20", x"30", x"20", x"20",
+x"20", x"30", x"0A", x"31", x"20", x"31", x"20", x"31",
+x"20", x"30", x"20", x"20", x"20", x"31", x"30", x"30",
+x"20", x"20", x"20", x"35", x"20", x"32", x"30", x"30",
+x"20", x"20", x"20", x"20", x"30", x"20", x"2D", x"33",
+x"35", x"20", x"31", x"35", x"30", x"20", x"20", x"31",
+x"20", x"31", x"2E", x"30", x"20", x"32", x"35", x"30",
+x"20", x"32", x"30", x"30", x"20", x"32", x"30", x"30",
+x"20", x"32", x"30", x"30", x"0A", x"30", x"20", x"33",
+x"20", x"31", x"20", x"30", x"20", x"20", x"20", x"20",
+x"32", x"35", x"20", x"20", x"31", x"30", x"20", x"20",
+x"31", x"30", x"20", x"20", x"20", x"20", x"30", x"20",
+x"20", x"2D", x"35", x"20", x"20", x"20", x"30", x"20",
+x"20", x"31", x"20", x"31", x"2E", x"30", x"20", x"32",
+x"35", x"30", x"20", x"32", x"31", x"31", x"20", x"31",
+x"32", x"38", x"20", x"31", x"32", x"38", x"0A", x"30",
+x"20", x"33", x"20", x"32", x"20", x"30", x"20", x"20",
+x"20", x"20", x"32", x"35", x"20", x"20", x"32", x"30",
+x"20", x"20", x"32", x"30", x"20", x"20", x"20", x"20",
+x"30", x"20", x"20", x"20", x"30", x"20", x"20", x"37",
+x"30", x"20", x"20", x"31", x"20", x"30", x"2E", x"33",
+x"20", x"20", x"20", x"30", x"20", x"20", x"20", x"30",
+x"20", x"20", x"20", x"30", x"20", x"32", x"35", x"35",
+x"0A", x"32", x"20", x"33", x"20", x"31", x"20", x"30",
+x"09", x"20", x"20", x"20", x"32", x"30", x"20", x"20",
+x"32", x"30", x"20", x"20", x"32", x"30", x"20", x"20",
+x"31", x"30", x"30", x"20", x"20", x"34", x"30", x"20",
+x"31", x"32", x"30", x"20", x"20", x"31", x"20", x"31",
+x"2E", x"30", x"20", x"31", x"35", x"30", x"20", x"32",
+x"35", x"35", x"20", x"32", x"35", x"35", x"20", x"32",
+x"35", x"35", x"0A", x"30", x"20", x"32", x"20", x"32",
+x"20", x"30", x"20", x"20", x"20", x"20", x"20", x"30",
+x"20", x"20", x"20", x"30", x"20", x"20", x"2D", x"31",
+x"20", x"20", x"20", x"20", x"30", x"20", x"20", x"20",
+x"30", x"20", x"32", x"30", x"30", x"20", x"20", x"31",
+x"20", x"30", x"2E", x"32", x"20", x"20", x"20", x"30",
+x"20", x"32", x"35", x"35", x"20", x"20", x"20", x"30",
+x"20", x"20", x"20", x"30", x"20", x"20", x"20", x"20",
+x"20", x"0A", x"2D", x"31", x"0A", x"30", x"20", x"31",
+x"20", x"32", x"20", x"2D", x"31", x"0A", x"33", x"20",
+x"31", x"20", x"34", x"20", x"2D", x"31", x"0A", x"35",
+x"20", x"36", x"20", x"37", x"20", x"2D", x"31", x"0A",
+x"38", x"20", x"2D", x"31", x"0A", x"39", x"20", x"31",
+x"30", x"20", x"2D", x"31", x"0A", x"31", x"32", x"20",
+x"2D", x"31", x"0A", x"31", x"33", x"20", x"2D", x"31",
+x"0A", x"31", x"34", x"20", x"2D", x"31", x"0A", x"31",
+x"35", x"20", x"2D", x"31", x"0A", x"31", x"36", x"20",
+x"2D", x"31", x"0A", x"2D", x"31", x"0A", x"31", x"31",
+x"20", x"30", x"20", x"31", x"20", x"32", x"20", x"33",
+x"20", x"34", x"20", x"36", x"20", x"2D", x"31", x"0A",
+x"39", x"39", x"20", x"39", x"20", x"38", x"20", x"37",
+x"20", x"35", x"20", x"2D", x"31", x"0A", x"2D", x"31",
+x"0A", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00"
 
+	);
 	signal u232c_o : std_logic_vector(7 downto 0);
 	signal u232c_i : std_logic_vector(7 downto 0);
 
-	signal send_go : std_logic := '0';
+	signal send_go : std_logic;
 	signal send_busy : std_logic := '0';
+
 	signal recv_ready : std_logic;
 
-	signal nyetb : std_logic;
-	signal nyetw : std_logic;
 	
 begin
 	
@@ -81,66 +327,18 @@ begin
 ------------------------------------------------------------------------
 ---- send
 ------------------------------------------------------------------------
-	sheadi <= conv_integer(send_head(13 downto 2));
-	staili <= conv_integer(send_tail(13 downto 2));
-
 	send_empty <= '1' when send_head=send_tail else '0';
 	send: process(CLK)
 	begin
 		if rising_edge(CLK) then
-			if CPU_WR="10" then
+			if CPU_WR='1' then
+				sendbuf(conv_integer(send_tail)) <= CPU_OUT(7 downto 0);
 				send_tail <= send_tail + 1;
-				case send_tail(1 downto 0) is
-					when "00" =>
-						sendbuf0(staili) <= CPU_OUT(7 downto 0);
-					when "01" =>
-						sendbuf1(staili) <= CPU_OUT(7 downto 0);
-					when "10" =>
-						sendbuf2(staili) <= CPU_OUT(7 downto 0);
-					when "11" =>
-						sendbuf3(staili) <= CPU_OUT(7 downto 0);
-					when others =>
-				end case;
-			elsif CPU_WR="11" then
-				send_tail <= send_tail + 4;
-				case send_tail(1 downto 0) is
-					when "00" =>
-						sendbuf0(staili) <= CPU_OUT(7 downto 0);
-						sendbuf1(staili) <= CPU_OUT(15 downto 8);
-						sendbuf2(staili) <= CPU_OUT(23 downto 16);
-						sendbuf3(staili) <= CPU_OUT(31 downto 24);
-					when "01" =>
-						sendbuf0(staili+1) <= CPU_OUT(7 downto 0);
-						sendbuf1(staili)   <= CPU_OUT(15 downto 8);
-						sendbuf2(staili)   <= CPU_OUT(23 downto 16);
-						sendbuf3(staili)   <= CPU_OUT(31 downto 24);
-					when "10" =>
-						sendbuf0(staili+1) <= CPU_OUT(7 downto 0);
-						sendbuf1(staili+1) <= CPU_OUT(15 downto 8);
-						sendbuf2(staili)   <= CPU_OUT(23 downto 16);
-						sendbuf3(staili)   <= CPU_OUT(31 downto 24);
-					when "11" =>
-						sendbuf0(staili+1) <= CPU_OUT(7 downto 0);
-						sendbuf1(staili+1) <= CPU_OUT(15 downto 8);
-						sendbuf2(staili+1) <= CPU_OUT(23 downto 16);
-						sendbuf3(staili)   <= CPU_OUT(31 downto 24);
-					when others =>
-				end case;
 			end if;
 
 			if send_busy='0' and send_go='0' then
-				case send_head(1 downto 0) is
-					when "00" =>
-						u232c_o <= sendbuf0(sheadi);
-					when "01" =>
-						u232c_o <= sendbuf1(sheadi);
-					when "10" =>
-						u232c_o <= sendbuf2(sheadi);
-					when "11" =>
-						u232c_o <= sendbuf3(sheadi);
-					when others =>
-				end case;
-				send_go <= not send_empty;
+				u232c_o <= sendbuf(conv_integer(send_head));
+				send_go<=not send_empty;
 				send_head <= send_head + conv_integer(not send_empty);
 			else
 				send_go<='0';
@@ -151,73 +349,17 @@ begin
 ------------------------------------------------------------------------
 ---- recv
 ------------------------------------------------------------------------
-	rheadi <= conv_integer(recv_head(10 downto 2));
-	rtaili <= conv_integer(recv_tail(10 downto 2));
-
-	NYET(1)	<= nyetw;
-	NYET(0)	<= nyetb;
-	nyetw	<= '1' when 
-					  recv_head   =recv_tail or
-					 (recv_head+1)=recv_tail or
-					 (recv_head+2)=recv_tail or
-					 (recv_head+3)=recv_tail
-				   else '0';
-	nyetb	<= '1' when recv_head=recv_tail else '0';
+	NYET <= '1' when recv_head=recv_tail else '0';
 	receive : process(CLK)
 	begin
 		if rising_edge(CLK) then
-			if CPU_RD="10" then
+			if CPU_RD='1' then
+				CPU_IN <= x"000000"&recvbuf(conv_integer(recv_head));
 				recv_head <= recv_head+1;
-				case recv_head(1 downto 0) is
-					when "00" =>
-						CPU_IN <= x"000000"&recvbuf0(rheadi);
-					when "01" =>
-						CPU_IN <= x"000000"&recvbuf1(rheadi);
-					when "10" =>
-						CPU_IN <= x"000000"&recvbuf2(rheadi);
-					when "11" =>
-						CPU_IN <= x"000000"&recvbuf3(rheadi);
-					when others =>
-				end case;
-			elsif CPU_RD="11" then
-				recv_head <= recv_head+4;
-				case recv_head(1 downto 0) is
-					when "00" =>
-						CPU_IN(7  downto 0)  <= recvbuf0(rheadi);
-						CPU_IN(15 downto 8)  <= recvbuf1(rheadi);
-						CPU_IN(23 downto 16) <= recvbuf2(rheadi);
-						CPU_IN(31 downto 24) <= recvbuf3(rheadi);
-					when "01" =>
-						CPU_IN(7  downto 0)  <= recvbuf1(rheadi);
-						CPU_IN(15 downto 8)  <= recvbuf2(rheadi);
-						CPU_IN(23 downto 16) <= recvbuf3(rheadi);
-						CPU_IN(31 downto 24) <= recvbuf0(rheadi+1);
-					when "10" =>
-						CPU_IN(7  downto 0)  <= recvbuf2(rheadi);
-						CPU_IN(15 downto 8)  <= recvbuf3(rheadi);
-						CPU_IN(23 downto 16) <= recvbuf0(rheadi+1);
-						CPU_IN(31 downto 24) <= recvbuf1(rheadi+1);
-					when "11" =>
-						CPU_IN(7  downto 0)  <= recvbuf3(rheadi);
-						CPU_IN(15 downto 8)  <= recvbuf0(rheadi+1);
-						CPU_IN(23 downto 16) <= recvbuf1(rheadi+1);
-						CPU_IN(31 downto 24) <= recvbuf2(rheadi+1);
-					when others =>
-				end case;
 			end if;
 
 			if recv_ready='1' then
-				case recv_tail(1 downto 0) is
-					when "00" =>
-						recvbuf0(rtaili)<=u232c_i;
-					when "01" =>
-						recvbuf1(rtaili)<=u232c_i;
-					when "10" =>
-						recvbuf2(rtaili)<=u232c_i;
-					when "11" =>
-						recvbuf3(rtaili)<=u232c_i;
-					when others =>
-				end case;
+				recvbuf(conv_integer(recv_tail))<=u232c_i;
 				recv_tail <= recv_tail+1;
 			end if;
 		end if;
diff --git a/ocore/mem_acc.vhd b/ocore/mem_acc.vhd
index 9bd4254..894227a 100644
--- a/ocore/mem_acc.vhd
+++ b/ocore/mem_acc.vhd
@@ -14,8 +14,8 @@ entity mem_acc is
@@ -31,8 +31,7 @@ architecture behavior of mem_acc is
 	signal io_read : std_logic := '0';
 	signal io_en : std_logic;
 
-	signal xwa : std_logic;
-	signal long_flag : std_logic;
+	signal xwa,pre_xwa : std_logic;
 
 
 begin
@@ -43,23 +42,18 @@ begin
 
 	DATA_OUT <= IO_IN when io_read='1' else SRAM_ZD;
 
-	IO_WR <= "11" when io_write='1' and CLK_EX_DLY='1' and long_flag='1' else
-			 "10" when io_write='1' and CLK_EX_DLY='1' and long_flag='0' else 
-			 "00";
-
-	IO_RD <= "11" when io_read ='1' and CLK_EX_DLY='1' and long_flag='1' else 
-			 "10" when io_read ='1' and CLK_EX_DLY='1' and long_flag='0' else 
-			 "00";
+	IO_WR <= io_write and CLK_EX_DLY;
+	IO_RD <= io_read and CLK_EX_DLY;
 
 	process(CLK_EX_DLY)
 	begin
 		if rising_edge(CLK_EX_DLY) then
 			io_read  <= io_en and (not RAM_WEN);
 			io_write <= io_en and RAM_WEN;
-			long_flag <= ADDR(0); --
 
-			SRAM_ZA <= "00000000"&ADDR(13 downto 2);
+			SRAM_ZA <= "000"&ADDR(18 downto 2);
 			SRAM_XWA <= xwa;
+			pre_xwa <= xwa;
 
 			if io_en='1' and RAM_WEN='1' then
 				IO_OUT <= DATA_IN;
@@ -71,7 +65,7 @@ begin
 	process(CLK_MA)
 	begin
 		if rising_edge(CLK_MA) then
-			if xwa='0' then -- write
+			if pre_xwa='0' then -- write
 				SRAM_ZD <= DATA_IN;
 			else
 				SRAM_ZD <= (others=>'Z');
diff --git a/ocore/myfadd/Makefile b/ocore/myfadd/Makefile
deleted file mode 100644
index bd6659d..0000000
--- a/ocore/myfadd/Makefile
+++ /dev/null
@@ -1,44 +0,0 @@
-TB = top_tb
-OBJS =\
-expo.o\
-fpadder.o\
-fpu.o\
-rom.o\
-rom_false.o\
-rounding.o\
-rshifter.o\
-selector.o\
-sign.o\
-top.o\
-top_tb.o
-
-TARGET = $(TB)
-
-IEEE = 'synopsys'
-TIME = 10000ns
-OPTION = -fexplicit
-.SUFFIXES: .vhd .vcd .tmp
-
-.PHONY: default wave vcd reload
-
-rel: reload
-reload: clean vcd
-wave: vcd
-	gtkwave $(TB).vcd
-vcd: $(OBJS) $(TB) $(TB).vcd
-	
-
-$(TB).vcd: $(TB) $(OBJS)
-	ghdl -r $(TB) --vcd=$@ --stop-time=$(TIME)
-$(TB): 
-	ghdl -e --ieee=$(IEEE) $(OPTION) $(TB)
-.vhd.o:
-	ghdl -a --ieee=$(IEEE) $(OPTION) $<
-
-asm:
-	make -sC $(TMPL_DIR) asm
-sim:
-	make -sC $(TMPL_DIR) sim
-
-clean:
-	rm -f *.o *.vcd *.cf $(TB)
diff --git a/ocore/myfadd/addi.vhd b/ocore/myfadd/addi.vhd
deleted file mode 100644
index 10d30e4..0000000
--- a/ocore/myfadd/addi.vhd
+++ /dev/null
@@ -1,16 +0,0 @@
-LIBRARY ieee;
-USE ieee.std_logic_1164.ALL;
-USE ieee.std_logic_unsigned.all;
-
-ENTITY addi IS
-	port (
-		A, B : in std_logic_vector(31 downto 0);
-		O	: out std_logic_vector(31 downto 0));
-END addi;
-
-ARCHITECTURE arch OF addi IS 
-  
-BEGIN
-	O <= A + B;
-  
-END;
diff --git a/ocore/myfadd/expo.vhd b/ocore/myfadd/expo.vhd
deleted file mode 100644
index 92bb499..0000000
--- a/ocore/myfadd/expo.vhd
+++ /dev/null
@@ -1,30 +0,0 @@
-library IEEE;
-use IEEE.STD_LOGIC_1164.ALL;
-use IEEE.STD_LOGIC_ARITH.ALL;
-use IEEE.STD_LOGIC_UNSIGNED.ALL;
-
-entity expo is
-	port ( a,b	: in  std_logic_vector(7 downto 0);
-				 flag : out std_logic;
-				 d,o	: out std_logic_vector(7 downto 0));
-end expo;
-
-architecture arch of expo is
-
-begin
-
-	exp: process(a, b)
-	begin
-		if a > b then
-			d <= a - b;
-			o <= a;
-			flag <= '1';
-		else
-			d <= b - a;
-			o <= b;
-			flag <= '0';
-		end if;
-	end process;
-
-end arch;
-
diff --git a/ocore/myfadd/fpadder.vhd b/ocore/myfadd/fpadder.vhd
deleted file mode 100644
index 542a6a0..0000000
--- a/ocore/myfadd/fpadder.vhd
+++ /dev/null
@@ -1,130 +0,0 @@
-library IEEE;
-use IEEE.STD_LOGIC_1164.ALL;
-use IEEE.STD_LOGIC_ARITH.ALL;
-use IEEE.STD_LOGIC_UNSIGNED.ALL;
-
-entity fpadder is
-	port ( s1,s2: in std_logic;
-				 e		: in std_logic_vector(7 downto 0);
-				 a, b	: in std_logic_vector(26 downto 0);
-				 eo		: out std_logic_vector(7 downto 0);
-				 fo  	: out std_logic_vector(26 downto 0));
-end fpadder;
-
-architecture arch of fpadder is
-	signal ftmp : std_logic_vector(26 downto 0);
-	signal etmp : std_logic_vector(7 downto 0);
-
-begin
-
-	arith: process(s1,s2,e,a,b)
-		variable tmp : std_logic_vector(27 downto 0);
-	begin
-		if s1 = s2 then
-			tmp := ('0'&a) + ('0'&b);
-			if tmp(27) = '1' then
-				ftmp <= tmp(27 downto 2)&(tmp(1) or tmp(0));
-				etmp <= e+1;
-			else
-				ftmp <= tmp(26 downto 0);
-				etmp <= e;
-			end if;
-		else
-			if a > b then
-				tmp := ('0'&a) - ('0'&b);
-			else
-				tmp := ('0'&b) - ('0'&a);
-			end if;
-			
-			if tmp(26) = '1' then
-				ftmp <= tmp(26 downto 0);
-				etmp <= e;
-			elsif tmp(25) = '1' then
-				ftmp <= tmp(25 downto 0)&'0';
-				etmp <= e-1;
-			elsif tmp(24) = '1' then
-				ftmp <= tmp(24 downto 0)&"00";
-				etmp <= e-2;
-			elsif tmp(23) = '1' then
-				ftmp <= tmp(23 downto 0)&"000";
-				etmp <= e-3;
-			elsif tmp(22) = '1' then
-				ftmp <= tmp(22 downto 0)&"0000";
-				etmp <= e-4;
-			elsif tmp(21) = '1' then
-				ftmp <= tmp(21 downto 0)&"00000";
-				etmp <= e-5;
-			elsif tmp(20) = '1' then
-				ftmp <= tmp(20 downto 0)&"000000";
-				etmp <= e-6;
-			elsif tmp(19) = '1' then
-				ftmp <= tmp(19 downto 0)&"0000000";
-				etmp <= e-7;
-			elsif tmp(18) = '1' then
-				ftmp <= tmp(18 downto 0)&"00000000";
-				etmp <= e-8;
-			elsif tmp(17) = '1' then
-				ftmp <= tmp(17 downto 0)&"000000000";
-				etmp <= e-9;
-			elsif tmp(16) = '1' then
-				ftmp <= tmp(16 downto 0)&"0000000000";
-				etmp <= e-10;
-			elsif tmp(15) = '1' then
-				ftmp <= tmp(15 downto 0)&"00000000000";
-				etmp <= e-11;
-			elsif tmp(14) = '1' then
-				ftmp <= tmp(14 downto 0)&"000000000000";
-				etmp <= e-12;
-			elsif tmp(13) = '1' then
-				ftmp <= tmp(13 downto 0)&"0000000000000";
-				etmp <= e-13;
-			elsif tmp(12) = '1' then
-				ftmp <= tmp(12 downto 0)&"00000000000000";
-				etmp <= e-14;
-			elsif tmp(11) = '1' then
-				ftmp <= tmp(11 downto 0)&"000000000000000";
-				etmp <= e-15;
-			elsif tmp(10) = '1' then
-				ftmp <= tmp(10 downto 0)&x"0000";
-				etmp <= e-16;
-			elsif tmp(9) = '1' then
-				ftmp <= tmp(9 downto 0)&x"0000"&"0";
-				etmp <= e-17;
-			elsif tmp(8) = '1' then
-				ftmp <= tmp(8 downto 0)&x"0000"&"00";
-				etmp <= e-18;
-			elsif tmp(7) = '1' then
-				ftmp <= tmp(7 downto 0)&x"0000"&"000";
-				etmp <= e-19;
-			elsif tmp(6) = '1' then
-				ftmp <= tmp(6 downto 0)&x"0000"&"0000";
-				etmp <= e-20;
-			elsif tmp(5) = '1' then
-				ftmp <= tmp(5 downto 0)&x"0000"&"00000";
-				etmp <= e-21;
-			elsif tmp(4) = '1' then
-				ftmp <= tmp(4 downto 0)&x"0000"&"000000";
-				etmp <= e-22;
-			elsif tmp(3) = '1' then
-				ftmp <= tmp(3 downto 0)&x"0000"&"0000000";
-				etmp <= e-23;
-			elsif tmp(2) = '1' then
-				ftmp <= tmp(2 downto 0)&x"0000"&"00000000";
-				etmp <= e-24;
-			elsif tmp(1) = '1' then
-				ftmp <= tmp(1 downto 0)&x"0000"&"000000000";
-				etmp <= e-25;
-			elsif tmp(0) = '1' then
-				ftmp <= tmp(0)&x"0000"&"0000000000";
-				etmp <= e-26;
-			end if;
-
-		end if;
-
-	end process;
-
-
-	fo <= ftmp;
-	eo <= etmp;
-
-end arch;
diff --git a/ocore/myfadd/fpu.vhd b/ocore/myfadd/fpu.vhd
deleted file mode 100644
index 805a55b..0000000
--- a/ocore/myfadd/fpu.vhd
+++ /dev/null
@@ -1,74 +0,0 @@
-library IEEE;
-use IEEE.STD_LOGIC_1164.ALL;
-use IEEE.STD_LOGIC_ARITH.ALL;
-use IEEE.STD_LOGIC_UNSIGNED.ALL;
-
-entity fpu is
-	port ( a, b	: in  std_logic_vector(31 downto 0);
-				 o  	: out std_logic_vector(31 downto 0));
-end fpu;
-
-architecture structure of fpu is
-	
-	component expo
-		port ( a,b	: in  std_logic_vector(7 downto 0);
-					 flag : out std_logic;
-					 d,o	: out std_logic_vector(7 downto 0));
-	end component;
-	
-	component sign
-		port ( a,b	: in  std_logic_vector(31 downto 0);
-					 s		: out std_logic);
-	end component;
-
-	component sel is
-		port (a, b: in std_logic_vector(26 downto 0);
-					flag: in std_logic;
-					w, l:	out std_logic_vector(26 downto 0));
-	end component;
-
-	component rshifter is
-		port ( f		: in  std_logic_vector(26 downto 0);
-					 n		: in  std_logic_vector( 7 downto 0);
-					 o		: out std_logic_vector(26 downto 0));
-	end component;
-
-	component fpadder is
-		port ( s1,s2: in std_logic;
-					 e		: in std_logic_vector(7 downto 0);
-					 a, b	: in std_logic_vector(26 downto 0);
-					 eo		: out std_logic_vector(7 downto 0);
-					 fo  	: out std_logic_vector(26 downto 0));
-	end component;
-
-
-	component rounding is
-		port ( f		: in std_logic_vector(26 downto 0);
-					 o  	: out std_logic_vector(22 downto 0));
-	end component;
-
-	signal so,s1,s2: std_logic;
-	signal etmp,eo,e1,e2: std_logic_vector(7 downto 0);
-	signal flag: std_logic;
-	signal w,l,f1,f2,ff,fff: std_logic_vector(26 downto 0);
-	signal fo: std_logic_vector(22 downto 0);
-
-	signal dif: std_logic_vector(7 downto 0);
-
-begin
-	s1<=a(31);
-	s2<=b(31);
-	e1<=a(30 downto 23);
-	e2<=b(30 downto 23);
-	f1<='1'&a(22 downto 0)&"000";
-	f2<='1'&b(22 downto 0)&"000";
-
-	expu:  expo port map(e1, e2, flag, dif, etmp);
-  signu: sign port map(a, b, so);
-	selector: sel port map(f1, f2, flag, w, l);
-	rshu: rshifter port map(l, dif, ff);
-	addu:	fpadder port map(s1,s2,etmp,ff,w,eo,fff);
-	ru	: rounding port map(fff,fo); 
-	o <= so&eo&fo;
-
-end structure;
diff --git a/ocore/myfadd/rounding.vhd b/ocore/myfadd/rounding.vhd
deleted file mode 100644
index a498e9d..0000000
--- a/ocore/myfadd/rounding.vhd
+++ /dev/null
@@ -1,32 +0,0 @@
-library IEEE;
-use IEEE.STD_LOGIC_1164.ALL;
-use IEEE.STD_LOGIC_ARITH.ALL;
-use IEEE.STD_LOGIC_UNSIGNED.ALL;
-
-entity rounding is
-	port ( f		: in std_logic_vector(26 downto 0);
-				 o  	: out std_logic_vector(22 downto 0));
-end rounding;
-
-architecture arch of rounding is
-begin
- 
-	round: process(f)
-		variable grs : std_logic_vector(3 downto 0);
-		variable tmp : std_logic_vector(26 downto 0);
-	begin
-		grs := f(3 downto 0);
-		case grs is
-			when x"5" => tmp := f+8;
-			when x"6" => tmp := f+8;
-			when x"7" => tmp := f+8;
-			when x"c" => tmp := f+8;
-			when x"d" => tmp := f+8;
-			when x"e" => tmp := f+8;
-			when x"f" => tmp := f+8;
-			when others => tmp := f;
-		end case;
-		o <= tmp(25 downto 3);
-	end process;
-
-end arch;
diff --git a/ocore/myfadd/rshifter.vhd b/ocore/myfadd/rshifter.vhd
deleted file mode 100644
index e8d58dc..0000000
--- a/ocore/myfadd/rshifter.vhd
+++ /dev/null
@@ -1,50 +0,0 @@
-library IEEE;
-use IEEE.STD_LOGIC_1164.ALL;
-use IEEE.STD_LOGIC_ARITH.ALL;
-use IEEE.STD_LOGIC_UNSIGNED.ALL;
-
-entity rshifter is
-	port ( f		: in  std_logic_vector(26 downto 0);
-				 n		: in  std_logic_vector( 7 downto 0);
-				 o		: out std_logic_vector(26 downto 0));
-end rshifter;
-
-architecture arch of rshifter is
-
-begin
-	rsh: process(f,n)
-	begin
-		case n is
-			when x"00" => o<=f;
-			when x"01" => o<="0"&f(26 downto 1);
-			when x"02" => o<="00"&f(26 downto 2);
-			when x"03" => o<="000"&f(26 downto 3);
-			when x"04" => o<=x"0"&f(26 downto 4);
-			when x"05" => o<="0"&x"0"&f(26 downto 5);
-			when x"06" => o<="00"&x"0"&f(26 downto 6);
-			when x"07" => o<="000"&x"0"&f(26 downto 7);
-			when x"08" => o<=x"00"&f(26 downto 8);
-			when x"09" => o<="0"&x"00"&f(26 downto 9);
-			when x"0a" => o<="00"&x"00"&f(26 downto 10);
-			when x"0b" => o<="000"&x"00"&f(26 downto 11);
-			when x"0c" => o<=x"000"&f(26 downto 12);
-			when x"0d" => o<="0"&x"000"&f(26 downto 13);
-			when x"0e" => o<="00"&x"000"&f(26 downto 14);
-			when x"0f" => o<="000"&x"000"&f(26 downto 15);
-			when x"10" => o<=x"0000"&f(26 downto 16);
-			when x"11" => o<="0"&x"0000"&f(26 downto 17);
-			when x"12" => o<="00"&x"0000"&f(26 downto 18);
-			when x"13" => o<="000"&x"0000"&f(26 downto 19);
-			when x"14" => o<=x"00000"&f(26 downto 20);
-			when x"15" => o<="0"&x"00000"&f(26 downto 21);
-			when x"16" => o<="00"&x"00000"&f(26 downto 22);
-			when x"17" => o<="000"&x"00000"&f(26 downto 23);
-			when x"18" => o<=x"000000"&f(26 downto 24);
-			when x"19" => o<="0"&x"000000"&f(26 downto 25);
-			when x"1a" => o<="00"&x"000000"&f(26);
-			when others => o<=(others=>'0');
-		end case;
-	end process;
-
-end arch;
-
diff --git a/ocore/myfadd/selector.vhd b/ocore/myfadd/selector.vhd
deleted file mode 100644
index c2daab7..0000000
--- a/ocore/myfadd/selector.vhd
+++ /dev/null
@@ -1,25 +0,0 @@
-library ieee;
-use ieee.std_logic_1164.all;
-
-entity sel is
-	port (a, b: in std_logic_vector(26 downto 0);
-				flag: in std_logic;
-				w, l:	out std_logic_vector(26 downto 0));
-end sel;
-
-architecture arch of sel is
-begin
-
-	process (a, b, flag)
-	begin
-		if (flag='1') then
-			w <= a;				-- a is winner
-			l <= b;
-		else
-			w <= b;
-			l <= a;
-		end if;
-	end process;
-
-end arch;
-
diff --git a/ocore/myfadd/sign.vhd b/ocore/myfadd/sign.vhd
deleted file mode 100644
index 1ee3ae2..0000000
--- a/ocore/myfadd/sign.vhd
+++ /dev/null
@@ -1,30 +0,0 @@
-library IEEE;
-use IEEE.STD_LOGIC_1164.ALL;
-use IEEE.STD_LOGIC_ARITH.ALL;
-use IEEE.STD_LOGIC_UNSIGNED.ALL;
-
-entity sign is
-	port ( a,b	: in  std_logic_vector(31 downto 0);
-				 s	  : out std_logic);
-end sign;
-
-architecture arch of sign is
-
-begin
-
-	sign: process(a,b)
-	begin
-		if a(30 downto 23) = b(30 downto 23) then
-			if a(22 downto 0) > b(22 downto 0) then
-				s <= a(31);
-			else 
-				s <= b(31);
-			end if;
-		elsif a(30 downto 23) > b(30 downto 23) then
-			s <= a(31);
-		else
-			s <= b(31);
-		end if;
-	end process;
-
-end arch;
diff --git a/ocore/mymatmul.txt b/ocore/mymatmul.txt
deleted file mode 100644
index 8a44597..0000000
--- a/ocore/mymatmul.txt
+++ /dev/null
@@ -1,31 +0,0 @@
-./asmcho -h test.s
-assemble test.s ==>	test
-./asmcho test.s
-assemble test.s ==>	test
-./simcho ./test
-
-6 12 72 72
-5 10 50 122
-4 8 32 154
-
-72 11 792 792
-50 9 450 1242
-32 7 224 1466
-
-3 12 36 36
-2 10 20 56
-1 8 8 64
-
-36 11 396 396
-20 9 180 576
-8 7 56 632
-
-
-a = 
-	1	2	3
-	4	5	6
-
-b =
-	7	 8
-	9	10
-	11	12
diff --git a/ocore/over256.txt b/ocore/over256.txt
deleted file mode 100644
index 9e6f4d5..0000000
--- a/ocore/over256.txt
+++ /dev/null
@@ -1,425 +0,0 @@
-1141.[ 146] x8C230004 ldi	g1=524252 g3=10 4
-1142.[ 147] x46A00006 fmov	f0=4B0000FA f21=43820000
-1143.[ 148] x40210004 subi	g1=524252 g1=524252 4
-1144.[ 149] xC000009A call	9a
-
-1145.[  9a] x08000079 jmp	79
-1146.[  79] x20030000 addi	g0=0 g3=48 0
-1147.[  7a] xC4610000 fldi	f1=437A0000 g3=0 0
-1148.[  7b] xE8200006 fjlt	f1=00000000 f0=43820000 6
-1149.[  81] xC000002A call	2a
-114a.[  2a] x44000806 fmov	f1=00000000 f0=43820000
-114b.[  2b] x20030000 addi	g0=0 g3=0 0
-114c.[  2c] xC4640000 fldi	f4=00000000 g3=0 0
-114d.[  2d] xE8800015 fjlt	f4=00000000 f0=43820000 15
-114e.[  42] x20030010 addi	g0=0 g3=0 16
-114f.[  43] xC4620000 fldi	f2=4B000000 g3=16 0
-1150.[  44] xE8020003 fjlt	f0=43820000 f2=4B000000 3
-1151.[  47] x44000806 fmov	f1=43820000 f0=43820000
-1152.[  48] x44020000 fadd	f0=260.0000000000 f0=260.0000000000 f2=8388608.0000000000
-1153.[  49] xE4200000 fsti	f0=4B000104 g1=524240 0
-1154.[  4a] x8C240000 ldi	g1=524240 g4=0 0
-1155.[  4b] x44020001 fsub	f0=8388868.0000000000 f0=8388868.0000000000 f2=8388608.0000000000
-1156.[  4c] xE4200000 fsti	f0=43820000 g1=524240 0
-1157.[  4d] x8C240000 ldi	g1=524240 g4=1258291460 0
-1158.[  4e] xE8010005 fjlt	f0=43820000 f1=43820000 5
-1159.[  4f] xC8010004 fjeq	f0=43820000 f1=43820000 4
-115a.[  53] xE0000000 return
-115b.[  82] x20040010 addi	g0=0 g4=1132593152 16
-115c.[  83] xC4820000 fldi	f2=4B000000 g4=16 0
-115d.[  84] x20040014 addi	g0=0 g4=16 20
-115e.[  85] x8C840000 ldi	g4=20 g4=20 0
-115f.[  86] xE8400007 fjlt	f2=4B000000 f0=43820000 7
-1160.[  87] xC8400006 fjeq	f2=4B000000 f0=43820000 6
-1161.[  88] x44020000 fadd	f0=260.0000000000 f0=260.0000000000 f2=8388608.0000000000
-1162.[  89] xE4200000 fsti	f0=4B000104 g1=524244 0
-1163.[  8a] x8C230000 ldi	g1=524244 g3=16 0
-1164.[  8b] x00641822 sub	g3=1258291460 g3=1258291460 g4=1258291200
-1165.[  8c] xE0000000 return
-1166.[ 14a] x20680000 addi	g3=260 g8=50 0
-1167.[ 14b] xC0000193 call	193
-1168.[ 193] x690000C4 jlt	g8=260 g0=0 c4
-1169.[ 194] x3CE005F5 mvhi	g7=10 1525
-116a.[ 195] x1CE0E100 mvlo	g7=99942410 -7936
-116b.[ 196] x20050000 addi	g0=0 g5=1 0
-116c.[ 197] x20060003 addi	g0=0 g6=10 3
-116d.[ 198] xAC280000 sti	g1=524244 g8=260 0
-116e.[ 199] x40210008 subi	g1=524244 g1=524244 8
-116f.[ 19a] xC0000184 call	184
-1170.[ 184] x00A61820 add	g3=260 g5=0 g6=3
-1171.[ 185] xA8640001 srli	g3=3 g4=1258291200 1
-1172.[ 186] x00874818 mul	g9=50 g4=1 g7=100000000
-1173.[ 187] x00C51822 sub	g3=3 g6=3 g5=0
-1174.[ 188] x6B830003 jlt	g28=1 g3=3 3
-1175.[ 18b] x69280006 jlt	g9=100000000 g8=260 6
-1176.[ 18c] x49280003 jne	g9=100000000 g8=260 3
-1177.[ 18f] x20860000 addi	g4=1 g6=3 0
-1178.[ 190] x08000184 jmp	184
-1179.[ 184] x00A61820 add	g3=3 g5=0 g6=1
-117a.[ 185] xA8640001 srli	g3=1 g4=1 1
-117b.[ 186] x00874818 mul	g9=100000000 g4=0 g7=100000000
-117c.[ 187] x00C51822 sub	g3=1 g6=1 g5=0
-117d.[ 188] x6B830003 jlt	g28=1 g3=1 3
-117e.[ 189] x20A30000 addi	g5=0 g3=1 0
-117f.[ 18a] xE0000000 return
-1180.[ 19b] x20210008 addi	g1=524236 g1=524236 8
-1181.[ 19c] x3C8005F5 mvhi	g4=0 1525
-1182.[ 19d] x1C80E100 mvlo	g4=99942400 -7936
-1183.[ 19e] x00642018 mul	g4=100000000 g3=0 g4=100000000
-1184.[ 19f] x8C280000 ldi	g1=524244 g8=260 0
-1185.[ 1a0] x01044022 sub	g8=260 g8=260 g4=0
-1186.[ 1a1] x68030003 jlt	g0=0 g3=0 3
-1187.[ 1a2] x200A0000 addi	g0=0 g10=1 0
-1188.[ 1a3] x080001A8 jmp	1a8
-1189.[ 1a8] x3CE00098 mvhi	g7=100000000 152
-118a.[ 1a9] x1CE09680 mvlo	g7=10019072 -27008
-118b.[ 1aa] x20050000 addi	g0=0 g5=0 0
-118c.[ 1ab] x2006000A addi	g0=0 g6=1 10
-118d.[ 1ac] xAC280004 sti	g1=524244 g8=260 4
-118e.[ 1ad] x4021000C subi	g1=524244 g1=524244 12
-118f.[ 1ae] xC0000184 call	184
-1190.[ 184] x00A61820 add	g3=0 g5=0 g6=10
-1191.[ 185] xA8640001 srli	g3=10 g4=0 1
-1192.[ 186] x00874818 mul	g9=0 g4=5 g7=10000000
-1193.[ 187] x00C51822 sub	g3=10 g6=10 g5=0
-1194.[ 188] x6B830003 jlt	g28=1 g3=10 3
-1195.[ 18b] x69280006 jlt	g9=50000000 g8=260 6
-1196.[ 18c] x49280003 jne	g9=50000000 g8=260 3
-1197.[ 18f] x20860000 addi	g4=5 g6=10 0
-1198.[ 190] x08000184 jmp	184
-1199.[ 184] x00A61820 add	g3=10 g5=0 g6=5
-119a.[ 185] xA8640001 srli	g3=5 g4=5 1
-119b.[ 186] x00874818 mul	g9=50000000 g4=2 g7=10000000
-119c.[ 187] x00C51822 sub	g3=5 g6=5 g5=0
-119d.[ 188] x6B830003 jlt	g28=1 g3=5 3
-119e.[ 18b] x69280006 jlt	g9=20000000 g8=260 6
-119f.[ 18c] x49280003 jne	g9=20000000 g8=260 3
-11a0.[ 18f] x20860000 addi	g4=2 g6=5 0
-11a1.[ 190] x08000184 jmp	184
-11a2.[ 184] x00A61820 add	g3=5 g5=0 g6=2
-11a3.[ 185] xA8640001 srli	g3=2 g4=2 1
-11a4.[ 186] x00874818 mul	g9=20000000 g4=1 g7=10000000
-11a5.[ 187] x00C51822 sub	g3=2 g6=2 g5=0
-11a6.[ 188] x6B830003 jlt	g28=1 g3=2 3
-11a7.[ 18b] x69280006 jlt	g9=10000000 g8=260 6
-11a8.[ 18c] x49280003 jne	g9=10000000 g8=260 3
-11a9.[ 18f] x20860000 addi	g4=1 g6=2 0
-11aa.[ 190] x08000184 jmp	184
-11ab.[ 184] x00A61820 add	g3=2 g5=0 g6=1
-11ac.[ 185] xA8640001 srli	g3=1 g4=1 1
-11ad.[ 186] x00874818 mul	g9=10000000 g4=0 g7=10000000
-11ae.[ 187] x00C51822 sub	g3=1 g6=1 g5=0
-11af.[ 188] x6B830003 jlt	g28=1 g3=1 3
-11b0.[ 189] x20A30000 addi	g5=0 g3=1 0
-11b1.[ 18a] xE0000000 return
-11b2.[ 1af] x2021000C addi	g1=524232 g1=524232 12
-11b3.[ 1b0] x3C800098 mvhi	g4=0 152
-11b4.[ 1b1] x1C809680 mvlo	g4=9961472 -27008
-11b5.[ 1b2] x00642018 mul	g4=10000000 g3=0 g4=10000000
-11b6.[ 1b3] x8C280004 ldi	g1=524244 g8=260 4
-11b7.[ 1b4] x01044022 sub	g8=260 g8=260 g4=0
-11b8.[ 1b5] x68030009 jlt	g0=0 g3=0 9
-11b9.[ 1b6] x49400003 jne	g10=0 g0=0 3
-11ba.[ 1b7] x200B0000 addi	g0=0 g11=0 0
-11bb.[ 1b8] x080001BD jmp	1bd
-11bc.[ 1bd] x080001C2 jmp	1c2
-11bd.[ 1c2] x3CE0000F mvhi	g7=10000000 15
-11be.[ 1c3] x1CE04240 mvlo	g7=1021568 16960
-11bf.[ 1c4] x20050000 addi	g0=0 g5=0 0
-11c0.[ 1c5] x2006000A addi	g0=0 g6=1 10
-11c1.[ 1c6] xAC280008 sti	g1=524244 g8=260 8
-11c2.[ 1c7] x40210010 subi	g1=524244 g1=524244 16
-11c3.[ 1c8] xC0000184 call	184
-11c4.[ 184] x00A61820 add	g3=0 g5=0 g6=10
-11c5.[ 185] xA8640001 srli	g3=10 g4=0 1
-11c6.[ 186] x00874818 mul	g9=0 g4=5 g7=1000000
-11c7.[ 187] x00C51822 sub	g3=10 g6=10 g5=0
-11c8.[ 188] x6B830003 jlt	g28=1 g3=10 3
-11c9.[ 18b] x69280006 jlt	g9=5000000 g8=260 6
-11ca.[ 18c] x49280003 jne	g9=5000000 g8=260 3
-11cb.[ 18f] x20860000 addi	g4=5 g6=10 0
-11cc.[ 190] x08000184 jmp	184
-11cd.[ 184] x00A61820 add	g3=10 g5=0 g6=5
-11ce.[ 185] xA8640001 srli	g3=5 g4=5 1
-11cf.[ 186] x00874818 mul	g9=5000000 g4=2 g7=1000000
-11d0.[ 187] x00C51822 sub	g3=5 g6=5 g5=0
-11d1.[ 188] x6B830003 jlt	g28=1 g3=5 3
-11d2.[ 18b] x69280006 jlt	g9=2000000 g8=260 6
-11d3.[ 18c] x49280003 jne	g9=2000000 g8=260 3
-11d4.[ 18f] x20860000 addi	g4=2 g6=5 0
-11d5.[ 190] x08000184 jmp	184
-11d6.[ 184] x00A61820 add	g3=5 g5=0 g6=2
-11d7.[ 185] xA8640001 srli	g3=2 g4=2 1
-11d8.[ 186] x00874818 mul	g9=2000000 g4=1 g7=1000000
-11d9.[ 187] x00C51822 sub	g3=2 g6=2 g5=0
-11da.[ 188] x6B830003 jlt	g28=1 g3=2 3
-11db.[ 18b] x69280006 jlt	g9=1000000 g8=260 6
-11dc.[ 18c] x49280003 jne	g9=1000000 g8=260 3
-11dd.[ 18f] x20860000 addi	g4=1 g6=2 0
-11de.[ 190] x08000184 jmp	184
-11df.[ 184] x00A61820 add	g3=2 g5=0 g6=1
-11e0.[ 185] xA8640001 srli	g3=1 g4=1 1
-11e1.[ 186] x00874818 mul	g9=1000000 g4=0 g7=1000000
-11e2.[ 187] x00C51822 sub	g3=1 g6=1 g5=0
-11e3.[ 188] x6B830003 jlt	g28=1 g3=1 3
-11e4.[ 189] x20A30000 addi	g5=0 g3=1 0
-11e5.[ 18a] xE0000000 return
-11e6.[ 1c9] x20210010 addi	g1=524228 g1=524228 16
-11e7.[ 1ca] x3C80000F mvhi	g4=0 15
-11e8.[ 1cb] x1C804240 mvlo	g4=983040 16960
-11e9.[ 1cc] x00642018 mul	g4=1000000 g3=0 g4=1000000
-11ea.[ 1cd] x8C280008 ldi	g1=524244 g8=260 8
-11eb.[ 1ce] x01044022 sub	g8=260 g8=260 g4=0
-11ec.[ 1cf] x68030009 jlt	g0=0 g3=0 9
-11ed.[ 1d0] x49600003 jne	g11=0 g0=0 3
-11ee.[ 1d1] x200A0000 addi	g0=0 g10=0 0
-11ef.[ 1d2] x080001D7 jmp	1d7
-11f0.[ 1d7] x080001DC jmp	1dc
-11f1.[ 1dc] x3CE00001 mvhi	g7=1000000 1
-11f2.[ 1dd] x1CE086A0 mvlo	g7=82496 -31072
-11f3.[ 1de] x20050000 addi	g0=0 g5=0 0
-11f4.[ 1df] x2006000A addi	g0=0 g6=1 10
-11f5.[ 1e0] xAC28000C sti	g1=524244 g8=260 12
-11f6.[ 1e1] x40210014 subi	g1=524244 g1=524244 20
-11f7.[ 1e2] xC0000184 call	184
-11f8.[ 184] x00A61820 add	g3=0 g5=0 g6=10
-11f9.[ 185] xA8640001 srli	g3=10 g4=0 1
-11fa.[ 186] x00874818 mul	g9=0 g4=5 g7=100000
-11fb.[ 187] x00C51822 sub	g3=10 g6=10 g5=0
-11fc.[ 188] x6B830003 jlt	g28=1 g3=10 3
-11fd.[ 18b] x69280006 jlt	g9=500000 g8=260 6
-11fe.[ 18c] x49280003 jne	g9=500000 g8=260 3
-11ff.[ 18f] x20860000 addi	g4=5 g6=10 0
-1200.[ 190] x08000184 jmp	184
-1201.[ 184] x00A61820 add	g3=10 g5=0 g6=5
-1202.[ 185] xA8640001 srli	g3=5 g4=5 1
-1203.[ 186] x00874818 mul	g9=500000 g4=2 g7=100000
-1204.[ 187] x00C51822 sub	g3=5 g6=5 g5=0
-1205.[ 188] x6B830003 jlt	g28=1 g3=5 3
-1206.[ 18b] x69280006 jlt	g9=200000 g8=260 6
-1207.[ 18c] x49280003 jne	g9=200000 g8=260 3
-1208.[ 18f] x20860000 addi	g4=2 g6=5 0
-1209.[ 190] x08000184 jmp	184
-120a.[ 184] x00A61820 add	g3=5 g5=0 g6=2
-120b.[ 185] xA8640001 srli	g3=2 g4=2 1
-120c.[ 186] x00874818 mul	g9=200000 g4=1 g7=100000
-120d.[ 187] x00C51822 sub	g3=2 g6=2 g5=0
-120e.[ 188] x6B830003 jlt	g28=1 g3=2 3
-120f.[ 18b] x69280006 jlt	g9=100000 g8=260 6
-1210.[ 18c] x49280003 jne	g9=100000 g8=260 3
-1211.[ 18f] x20860000 addi	g4=1 g6=2 0
-1212.[ 190] x08000184 jmp	184
-1213.[ 184] x00A61820 add	g3=2 g5=0 g6=1
-1214.[ 185] xA8640001 srli	g3=1 g4=1 1
-1215.[ 186] x00874818 mul	g9=100000 g4=0 g7=100000
-1216.[ 187] x00C51822 sub	g3=1 g6=1 g5=0
-1217.[ 188] x6B830003 jlt	g28=1 g3=1 3
-1218.[ 189] x20A30000 addi	g5=0 g3=1 0
-1219.[ 18a] xE0000000 return
-121a.[ 1e3] x20210014 addi	g1=524224 g1=524224 20
-121b.[ 1e4] x3C800001 mvhi	g4=0 1
-121c.[ 1e5] x1C8086A0 mvlo	g4=65536 -31072
-121d.[ 1e6] x00642018 mul	g4=100000 g3=0 g4=100000
-121e.[ 1e7] x8C28000C ldi	g1=524244 g8=260 12
-121f.[ 1e8] x01044022 sub	g8=260 g8=260 g4=0
-1220.[ 1e9] x68030009 jlt	g0=0 g3=0 9
-1221.[ 1ea] x49400003 jne	g10=0 g0=0 3
-1222.[ 1eb] x200B0000 addi	g0=0 g11=0 0
-1223.[ 1ec] x080001F1 jmp	1f1
-1224.[ 1f1] x080001F6 jmp	1f6
-1225.[ 1f6] x20072710 addi	g0=0 g7=100000 10000
-1226.[ 1f7] x20050000 addi	g0=0 g5=0 0
-1227.[ 1f8] x2006000A addi	g0=0 g6=1 10
-1228.[ 1f9] xAC280010 sti	g1=524244 g8=260 16
-1229.[ 1fa] x40210018 subi	g1=524244 g1=524244 24
-122a.[ 1fb] xC0000184 call	184
-122b.[ 184] x00A61820 add	g3=0 g5=0 g6=10
-122c.[ 185] xA8640001 srli	g3=10 g4=0 1
-122d.[ 186] x00874818 mul	g9=0 g4=5 g7=10000
-122e.[ 187] x00C51822 sub	g3=10 g6=10 g5=0
-122f.[ 188] x6B830003 jlt	g28=1 g3=10 3
-1230.[ 18b] x69280006 jlt	g9=50000 g8=260 6
-1231.[ 18c] x49280003 jne	g9=50000 g8=260 3
-1232.[ 18f] x20860000 addi	g4=5 g6=10 0
-1233.[ 190] x08000184 jmp	184
-1234.[ 184] x00A61820 add	g3=10 g5=0 g6=5
-1235.[ 185] xA8640001 srli	g3=5 g4=5 1
-1236.[ 186] x00874818 mul	g9=50000 g4=2 g7=10000
-1237.[ 187] x00C51822 sub	g3=5 g6=5 g5=0
-1238.[ 188] x6B830003 jlt	g28=1 g3=5 3
-1239.[ 18b] x69280006 jlt	g9=20000 g8=260 6
-123a.[ 18c] x49280003 jne	g9=20000 g8=260 3
-123b.[ 18f] x20860000 addi	g4=2 g6=5 0
-123c.[ 190] x08000184 jmp	184
-123d.[ 184] x00A61820 add	g3=5 g5=0 g6=2
-123e.[ 185] xA8640001 srli	g3=2 g4=2 1
-123f.[ 186] x00874818 mul	g9=20000 g4=1 g7=10000
-1240.[ 187] x00C51822 sub	g3=2 g6=2 g5=0
-1241.[ 188] x6B830003 jlt	g28=1 g3=2 3
-1242.[ 18b] x69280006 jlt	g9=10000 g8=260 6
-1243.[ 18c] x49280003 jne	g9=10000 g8=260 3
-1244.[ 18f] x20860000 addi	g4=1 g6=2 0
-1245.[ 190] x08000184 jmp	184
-1246.[ 184] x00A61820 add	g3=2 g5=0 g6=1
-1247.[ 185] xA8640001 srli	g3=1 g4=1 1
-1248.[ 186] x00874818 mul	g9=10000 g4=0 g7=10000
-1249.[ 187] x00C51822 sub	g3=1 g6=1 g5=0
-124a.[ 188] x6B830003 jlt	g28=1 g3=1 3
-124b.[ 189] x20A30000 addi	g5=0 g3=1 0
-124c.[ 18a] xE0000000 return
-124d.[ 1fc] x20210018 addi	g1=524220 g1=524220 24
-124e.[ 1fd] x20042710 addi	g0=0 g4=0 10000
-124f.[ 1fe] x00642018 mul	g4=10000 g3=0 g4=10000
-1250.[ 1ff] x8C280010 ldi	g1=524244 g8=260 16
-1251.[ 200] x01044022 sub	g8=260 g8=260 g4=0
-1252.[ 201] x68030009 jlt	g0=0 g3=0 9
-1253.[ 202] x49600003 jne	g11=0 g0=0 3
-1254.[ 203] x200A0000 addi	g0=0 g10=0 0
-1255.[ 204] x08000209 jmp	209
-1256.[ 209] x0800020E jmp	20e
-1257.[ 20e] x200703E8 addi	g0=0 g7=10000 1000
-1258.[ 20f] x20050000 addi	g0=0 g5=0 0
-1259.[ 210] x2006000A addi	g0=0 g6=1 10
-125a.[ 211] xAC280014 sti	g1=524244 g8=260 20
-125b.[ 212] x4021001C subi	g1=524244 g1=524244 28
-125c.[ 213] xC0000184 call	184
-125d.[ 184] x00A61820 add	g3=0 g5=0 g6=10
-125e.[ 185] xA8640001 srli	g3=10 g4=0 1
-125f.[ 186] x00874818 mul	g9=0 g4=5 g7=1000
-1260.[ 187] x00C51822 sub	g3=10 g6=10 g5=0
-1261.[ 188] x6B830003 jlt	g28=1 g3=10 3
-1262.[ 18b] x69280006 jlt	g9=5000 g8=260 6
-1263.[ 18c] x49280003 jne	g9=5000 g8=260 3
-1264.[ 18f] x20860000 addi	g4=5 g6=10 0
-1265.[ 190] x08000184 jmp	184
-1266.[ 184] x00A61820 add	g3=10 g5=0 g6=5
-1267.[ 185] xA8640001 srli	g3=5 g4=5 1
-1268.[ 186] x00874818 mul	g9=5000 g4=2 g7=1000
-1269.[ 187] x00C51822 sub	g3=5 g6=5 g5=0
-126a.[ 188] x6B830003 jlt	g28=1 g3=5 3
-126b.[ 18b] x69280006 jlt	g9=2000 g8=260 6
-126c.[ 18c] x49280003 jne	g9=2000 g8=260 3
-126d.[ 18f] x20860000 addi	g4=2 g6=5 0
-126e.[ 190] x08000184 jmp	184
-126f.[ 184] x00A61820 add	g3=5 g5=0 g6=2
-1270.[ 185] xA8640001 srli	g3=2 g4=2 1
-1271.[ 186] x00874818 mul	g9=2000 g4=1 g7=1000
-1272.[ 187] x00C51822 sub	g3=2 g6=2 g5=0
-1273.[ 188] x6B830003 jlt	g28=1 g3=2 3
-1274.[ 18b] x69280006 jlt	g9=1000 g8=260 6
-1275.[ 18c] x49280003 jne	g9=1000 g8=260 3
-1276.[ 18f] x20860000 addi	g4=1 g6=2 0
-1277.[ 190] x08000184 jmp	184
-1278.[ 184] x00A61820 add	g3=2 g5=0 g6=1
-1279.[ 185] xA8640001 srli	g3=1 g4=1 1
-127a.[ 186] x00874818 mul	g9=1000 g4=0 g7=1000
-127b.[ 187] x00C51822 sub	g3=1 g6=1 g5=0
-127c.[ 188] x6B830003 jlt	g28=1 g3=1 3
-127d.[ 189] x20A30000 addi	g5=0 g3=1 0
-127e.[ 18a] xE0000000 return
-127f.[ 214] x2021001C addi	g1=524216 g1=524216 28
-1280.[ 215] x606403E8 muli	g3=0 g4=0 1000
-1281.[ 216] x8C280014 ldi	g1=524244 g8=260 20
-1282.[ 217] x01044022 sub	g8=260 g8=260 g4=0
-1283.[ 218] x68030009 jlt	g0=0 g3=0 9
-1284.[ 219] x49400003 jne	g10=0 g0=0 3
-1285.[ 21a] x200B0000 addi	g0=0 g11=0 0
-1286.[ 21b] x08000220 jmp	220
-1287.[ 220] x08000225 jmp	225
-1288.[ 225] x20070064 addi	g0=0 g7=1000 100
-1289.[ 226] x20050000 addi	g0=0 g5=0 0
-128a.[ 227] x2006000A addi	g0=0 g6=1 10
-128b.[ 228] xAC280018 sti	g1=524244 g8=260 24
-128c.[ 229] x40210020 subi	g1=524244 g1=524244 32
-128d.[ 22a] xC0000184 call	184
-128e.[ 184] x00A61820 add	g3=0 g5=0 g6=10
-128f.[ 185] xA8640001 srli	g3=10 g4=0 1
-1290.[ 186] x00874818 mul	g9=0 g4=5 g7=100
-1291.[ 187] x00C51822 sub	g3=10 g6=10 g5=0
-1292.[ 188] x6B830003 jlt	g28=1 g3=10 3
-1293.[ 18b] x69280006 jlt	g9=500 g8=260 6
-1294.[ 18c] x49280003 jne	g9=500 g8=260 3
-1295.[ 18f] x20860000 addi	g4=5 g6=10 0
-1296.[ 190] x08000184 jmp	184
-1297.[ 184] x00A61820 add	g3=10 g5=0 g6=5
-1298.[ 185] xA8640001 srli	g3=5 g4=5 1
-1299.[ 186] x00874818 mul	g9=500 g4=2 g7=100
-129a.[ 187] x00C51822 sub	g3=5 g6=5 g5=0
-129b.[ 188] x6B830003 jlt	g28=1 g3=5 3
-129c.[ 18b] x69280006 jlt	g9=200 g8=260 6
-129d.[ 191] x20850000 addi	g4=2 g5=0 0
-129e.[ 192] x08000184 jmp	184
-129f.[ 184] x00A61820 add	g3=5 g5=2 g6=5
-12a0.[ 185] xA8640001 srli	g3=7 g4=2 1
-12a1.[ 186] x00874818 mul	g9=200 g4=3 g7=100
-12a2.[ 187] x00C51822 sub	g3=7 g6=5 g5=2
-12a3.[ 188] x6B830003 jlt	g28=1 g3=3 3
-12a4.[ 18b] x69280006 jlt	g9=300 g8=260 6
-12a5.[ 18c] x49280003 jne	g9=300 g8=260 3
-12a6.[ 18f] x20860000 addi	g4=3 g6=5 0
-12a7.[ 190] x08000184 jmp	184
-12a8.[ 184] x00A61820 add	g3=3 g5=2 g6=3
-12a9.[ 185] xA8640001 srli	g3=5 g4=3 1
-12aa.[ 186] x00874818 mul	g9=300 g4=2 g7=100
-12ab.[ 187] x00C51822 sub	g3=5 g6=3 g5=2
-12ac.[ 188] x6B830003 jlt	g28=1 g3=1 3
-12ad.[ 189] x20A30000 addi	g5=2 g3=1 0
-12ae.[ 18a] xE0000000 return
-12af.[ 22b] x20210020 addi	g1=524212 g1=524212 32
-12b0.[ 22c] x60640064 muli	g3=2 g4=2 100
-12b1.[ 22d] x8C280018 ldi	g1=524244 g8=260 24
-12b2.[ 22e] x01044022 sub	g8=260 g8=260 g4=200
-12b3.[ 22f] x68030009 jlt	g0=0 g3=2 9
-12b4.[ 238] x20040030 addi	g0=0 g4=200 48
-12b5.[ 239] x00831820 add	g3=2 g4=48 g3=2
-12b6.[ 23a] x04600001 output	g3=50
-12b7.[ 23b] x200A0001 addi	g0=0 g10=0 1
-12b8.[ 23c] x2007000A addi	g0=0 g7=100 10
-12b9.[ 23d] x20050000 addi	g0=0 g5=2 0
-12ba.[ 23e] x2006000A addi	g0=0 g6=3 10
-12bb.[ 23f] xAC28001C sti	g1=524244 g8=60 28
-12bc.[ 240] x40210024 subi	g1=524244 g1=524244 36
-
-12bd.[ 241] xC0000184 call	184
-12be.[ 184] x00A61820 add	g3=50 g5=0 g6=10
-12bf.[ 185] xA8640001 srli	g3=10 g4=48 1
-12c0.[ 186] x00874818 mul	g9=200 g4=5 g7=10
-12c1.[ 187] x00C51822 sub	g3=10 g6=10 g5=0
-12c2.[ 188] x6B830003 jlt	g28=1 g3=10 3
-12c3.[ 18b] x69280006 jlt	g9=50 g8=60 6
-12c4.[ 191] x20850000 addi	g4=5 g5=0 0
-
-12c5.[ 192] x08000184 jmp	184
-12c6.[ 184] x00A61820 add	g3=10 g5=5 g6=10
-12c7.[ 185] xA8640001 srli	g3=15 g4=5 1
-12c8.[ 186] x00874818 mul	g9=50 g4=7 g7=10
-12c9.[ 187] x00C51822 sub	g3=15 g6=10 g5=5
-12ca.[ 188] x6B830003 jlt	g28=1 g3=5 3
-12cb.[ 18b] x69280006 jlt	g9=70 g8=60 6
-12cc.[ 18c] x49280003 jne	g9=70 g8=60 3
-12cd.[ 18f] x20860000 addi	g4=7 g6=10 0
-
-12ce.[ 190] x08000184 jmp	184
-12cf.[ 184] x00A61820 add	g3=5 g5=5 g6=7
-12d0.[ 185] xA8640001 srli	g3=12 g4=7 1
-12d1.[ 186] x00874818 mul	g9=70 g4=6 g7=10
-12d2.[ 187] x00C51822 sub	g3=12 g6=7 g5=5
-12d3.[ 188] x6B830003 jlt	g28=1 g3=2 3
-12d4.[ 18b] x69280006 jlt	g9=60 g8=60 6
-12d5.[ 18c] x49280003 jne	g9=60 g8=60 3
-12d6.[ 18d] x20830000 addi	g4=6 g3=2 0
-12d7.[ 18e] xE0000000 return
-
-12d8.[ 242] x20210024 addi	g1=524208 g1=524208 36
-12d9.[ 243] x6064000A muli	g3=6 g4=6 10
-12da.[ 244] x8C28001C ldi	g1=524244 g8=60 28
-12db.[ 245] x01042022 sub	g4=60 g8=60 g4=60
-12dc.[ 246] x68030009 jlt	g0=0 g3=6 9
-12dd.[ 24f] x20050030 addi	g0=0 g5=5 48
-12de.[ 250] x00A31820 add	g3=6 g5=48 g3=6
-12df.[ 251] x04600001 output	g3=54
-12e0.[ 252] x20050001 addi	g0=0 g5=48 1
-12e1.[ 253] x20030030 addi	g0=0 g3=54 48
-12e2.[ 254] x00641820 add	g3=48 g3=48 g4=0
-12e3.[ 255] x04600001 output	g3=48
-12e4.[ 256] xE0000000 return
diff --git a/ocore/ppm/contest.ppm b/ocore/ppm/contest.ppm
new file mode 100644
index 0000000..f936e40
Binary files /dev/null and b/ocore/ppm/contest.ppm differ
diff --git a/ocore/ppm/contest2.ppm b/ocore/ppm/contest2.ppm
new file mode 100644
index 0000000..6bd2871
Binary files /dev/null and b/ocore/ppm/contest2.ppm differ
diff --git a/ocore/ppm/contest3.ppm b/ocore/ppm/contest3.ppm
new file mode 100644
index 0000000..a7b7394
Binary files /dev/null and b/ocore/ppm/contest3.ppm differ
diff --git a/ocore/prom.vhd b/ocore/prom.vhd
index 5a3eda1..a522b64 100644
--- a/ocore/prom.vhd
+++ b/ocore/prom.vhd
@@ -7,7 +7,7 @@ use ieee.std_logic_unsigned.all;
 entity prom is
 	port (
 		clka : in std_logic;
-		addra : in std_logic_vector(9 downto 0);
+		addra : in std_logic_vector(13 downto 0);
 		douta : out std_logic_vector(31 downto 0));
 
 
@@ -16,1033 +16,15985 @@ end prom;
 
 architecture RTL of prom is
 	subtype word_t is std_logic_vector(31 downto 0);
-	type mem_t is array (0 to 1023) of word_t;
-	signal addr_in	: integer range 0 to 1023;
+	type mem_t is array (0 to 32767) of word_t;
+	signal addr_in	: integer range 0 to 32767;
 
 	constant mem : mem_t := (
-x"00000000",
+x"000000F4",
+x"00000000",
+x"3F800000",
+x"BF800000",
+x"00800000",
+x"4B000000",
+x"4B000000",
+x"43160000",
+x"C3160000",
+x"C0000000",
+x"3B800000",
+x"41A00000",
+x"3D4CCCC4",
+x"3E800000",
+x"41200000",
+x"3E999999",
+x"3E199999",
+x"40490FDA",
+x"41F00000",
+x"BFC90FDA",
+x"40800000",
+x"41800000",
+x"41300000",
+x"41C80000",
+x"41500000",
+x"42100000",
+x"42440000",
+x"41880000",
+x"42800000",
+x"41980000",
+x"42A20000",
+x"41A80000",
+x"42C80000",
+x"41B80000",
+x"42F20000",
+x"41700000",
+x"38D1B70F",
+x"4CBEBC20",
+x"BDCCCCC4",
+x"3C23D70A",
+x"BE4CCCC4",
+x"BF800000",
+x"3DCCCCC4",
+x"3F66665E",
+x"3E4CCCC4",
+x"C3480000",
+x"43480000",
+x"40400000",
+x"40A00000",
+x"41100000",
+x"40E00000",
+x"3F800000",
+x"3C8EFA2D",
+x"43000000",
+x"4E6E6B28",
+x"437F0000",
+x"00000000",
+x"3FC90FDA",
+x"3F000000",
+x"40C90FDA",
+x"40000000",
+x"40490FDA",
+x"080000C2",
+x"A0630002",
+x"00622820",
+x"20430000",
+x"68A20005",
+x"28A20004",
+x"AC440000",
+x"20420004",
+x"08000042",
+x"E0000000",
+x"A0630002",
+x"00622020",
+x"20430000",
+x"68820005",
+x"28820004",
+x"E4400000",
+x"20420004",
+x"0800004B",
+x"E0000000",
+x"44000806",
+x"20030000",
+x"C4640000",
+x"E8800015",
+x"C8800014",
+x"44000007",
+x"20030010",
+x"C4620000",
+x"E8020004",
+x"C8020003",
+x"44000007",
+x"E0000000",
+x"44020000",
+x"44020001",
+x"44200807",
+x"E820001B",
+x"C820001A",
+x"44020000",
+x"20030004",
+x"C4630000",
+x"44030000",
+x"44020001",
+x"44000007",
+x"E0000000",
+x"20030010",
+x"C4620000",
+x"E8020003",
+x"C8020002",
+x"E0000000",
+x"44000806",
+x"44020000",
+x"E4200000",
+x"8C240000",
+x"44020001",
+x"E4200000",
+x"8C240000",
+x"E8010005",
+x"C8010004",
+x"20030004",
+x"C4630000",
+x"44030001",
+x"E0000000",
+x"44000007",
+x"E0000000",
+x"44000007",
+x"C0000051",
+x"44000007",
+x"E0000000",
+x"68030006",
+x"28030005",
+x"00031822",
+x"C0000087",
+x"44000007",
+x"E0000000",
+x"20050010",
+x"C4A10000",
+x"20050014",
+x"8CA40000",
+x"2005000C",
+x"8CA50000",
+x"68A30007",
+x"28A30006",
+x"00641820",
+x"AC230000",
+x"C4200000",
+x"44010001",
+x"E0000000",
+x"20040000",
+x"C4820000",
+x"00651822",
+x"44411000",
+x"68A3FFFE",
+x"28A3FFFD",
+x"00641820",
+x"AC230000",
+x"C4200000",
+x"44010001",
+x"44020000",
+x"E0000000",
+x"20030000",
+x"C4610000",
+x"E8200006",
+x"C8200005",
+x"44000007",
+x"C00000A8",
+x"00031822",
+x"E0000000",
+x"C0000051",
+x"20040010",
+x"C4820000",
+x"20040014",
+x"8C840000",
+x"E8400007",
+x"C8400006",
+x"44020000",
+x"E4200000",
+x"8C230000",
+x"00641822",
+x"E0000000",
+x"2005000C",
+x"8CA50000",
+x"20030000",
+x"44020001",
+x"00651820",
+x"E840FFFE",
+x"C840FFFD",
+x"44020000",
+x"E4200000",
+x"8C250000",
+x"00A42822",
+x"00A31820",
+x"E0000000",
+x"080000A0",
+x"203F0000",
+x"40210948",
+x"201C0001",
+x"201DFFFF",
+x"201B00DC",
+x"C7700000",
+x"201B00C8",
+x"C7710000",
+x"201B0018",
+x"C7720000",
+x"201B001C",
+x"C7730000",
+x"201B00A0",
+x"C7740000",
+x"201B00E4",
+x"C7750000",
+x"201B00E0",
+x"C7760000",
+x"201B00B8",
+x"C7770000",
+x"201B00BC",
+x"C7780000",
+x"201B00C0",
+x"C7790000",
+x"201B00C4",
+x"C77A0000",
+x"201B00D8",
+x"C77B0000",
+x"201B0088",
+x"C77C0000",
+x"201B00E8",
+x"C77D0000",
+x"201B0040",
+x"C77E0000",
+x"201B0048",
+x"C77F0000",
+x"200300F0",
+x"C4650000",
+x"200300EC",
+x"C46A0000",
+x"20030001",
+x"20040000",
+x"AFE20944",
+x"43E20004",
+x"40210004",
+x"C000003F",
+x"8FE20944",
+x"20030001",
+x"20040000",
+x"AFE20944",
+x"43E20008",
+x"C000003F",
+x"8FE20944",
+x"20030001",
+x"20040000",
+x"AFE20944",
+x"43E2000C",
+x"C000003F",
+x"8FE20944",
+x"20030001",
+x"20040000",
+x"AFE20944",
+x"43E20010",
+x"C000003F",
+x"8FE20944",
+x"20030001",
+x"20040001",
+x"AFE20944",
+x"43E20014",
+x"C000003F",
+x"8FE20944",
+x"20030001",
+x"20040000",
+x"AFE20944",
+x"43E20018",
+x"C000003F",
+x"8FE20944",
+x"20030001",
+x"20040000",
+x"AFE20944",
+x"43E2001C",
+x"C000003F",
+x"8FE20944",
+x"20030000",
+x"AFE20944",
+x"43E20020",
+x"46000006",
+x"C0000048",
+x"20640000",
+x"8FE20944",
+x"2006003C",
+x"200A0000",
+x"20090000",
+x"20080000",
+x"20070000",
+x"20050000",
+x"20430000",
+x"2042002C",
+x"AC64FFD8",
+x"AC64FFDC",
+x"AC64FFE0",
+x"AC64FFE4",
+x"AC65FFE8",
+x"AC64FFEC",
+x"AC64FFF0",
+x"AC67FFF4",
+x"AC68FFF8",
+x"AC69FFFC",
+x"AC6A0000",
+x"AFE20944",
+x"43E20110",
+x"20640000",
+x"20C30000",
+x"C000003F",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E2011C",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E20128",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E20134",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030001",
+x"AFE20944",
+x"43E20138",
+x"47600006",
+x"C0000048",
+x"8FE20944",
+x"20060032",
+x"20030001",
+x"2004FFFF",
+x"C000003F",
+x"20640000",
+x"AFE20944",
+x"43E20200",
+x"20C30000",
+x"C000003F",
+x"8FE20944",
+x"20060001",
+x"20030001",
+x"8FE40200",
+x"C000003F",
+x"20640000",
+x"AFE20944",
+x"43E20204",
+x"20C30000",
+x"C000003F",
+x"8FE20944",
+x"20030001",
+x"AFE20944",
+x"43E20208",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030001",
+x"20040000",
+x"AFE20944",
+x"43E2020C",
+x"C000003F",
+x"8FE20944",
+x"20030001",
+x"200400D4",
+x"C4800000",
+x"AFE20944",
+x"43E20210",
+x"C0000048",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E2021C",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030001",
+x"20040000",
+x"AFE20944",
+x"43E20220",
+x"C000003F",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E2022C",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E20238",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E20244",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E20250",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030002",
+x"20040000",
+x"AFE20944",
+x"43E20258",
+x"C000003F",
+x"8FE20944",
+x"20030002",
+x"20040000",
+x"AFE20944",
+x"43E20260",
+x"C000003F",
+x"8FE20944",
+x"20030001",
+x"AFE20944",
+x"43E20264",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E20270",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E2027C",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E20288",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E20294",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E202A0",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E202AC",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030000",
+x"AFE20944",
+x"43E202B0",
+x"46000006",
+x"C0000048",
+x"20670000",
+x"8FE20944",
+x"20030000",
+x"AFE20944",
+x"43E202B4",
+x"43E402B0",
+x"C000003F",
+x"20640000",
+x"8FE20944",
+x"20060000",
+x"20430000",
+x"20420008",
+x"AC64FFFC",
+x"AC670000",
+x"AFE20944",
+x"43E202B8",
+x"20640000",
+x"20C30000",
+x"C000003F",
+x"8FE20944",
+x"20030005",
+x"AFE20944",
+x"43E202CC",
+x"43E402B8",
+x"C000003F",
+x"8FE20944",
+x"20030000",
+x"AFE20944",
+x"43E202D0",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E202DC",
+x"46000006",
+x"C0000048",
+x"20660000",
+x"8FE20944",
+x"2003003C",
+x"AFE20944",
+x"43E203CC",
+x"43E402D0",
+x"C000003F",
+x"20640000",
+x"8FE20944",
+x"AFE20944",
+x"43E203D4",
+x"20430000",
+x"20420008",
+x"AC64FFFC",
+x"AC660000",
+x"8FE20944",
+x"20030000",
+x"AFE20944",
+x"43E203D8",
+x"46000006",
+x"C0000048",
+x"20660000",
+x"8FE20944",
+x"20030000",
+x"AFE20944",
+x"43E203DC",
+x"43E403D8",
+x"C000003F",
+x"8FE20944",
+x"AFE20944",
+x"43E203E4",
+x"20440000",
+x"20420008",
+x"AC83FFFC",
+x"AC860000",
+x"8FE20944",
+x"200600B4",
+x"20050000",
+x"20430000",
+x"2042000C",
+x"E470FFF8",
+x"AC64FFFC",
+x"AC650000",
+x"AFE20944",
+x"43E206B4",
+x"20640000",
+x"20C30000",
+x"C000003F",
+x"8FE20944",
+x"20030001",
+x"20040000",
+x"AFE20944",
+x"43E206B8",
+x"C000003F",
+x"8FE20944",
+x"20030080",
+x"20040080",
+x"AFE30258",
+x"AFE40254",
+x"20040040",
+x"AFE40260",
+x"20040040",
+x"AFE4025C",
+x"200400D0",
+x"C4830000",
+x"C0000081",
+x"44600003",
+x"E7E00264",
+x"8FEC0258",
+x"20030003",
+x"AFE20944",
+x"43E206C4",
+x"46000006",
+x"C0000048",
+x"206B0000",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E206D0",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030005",
+x"AFE20944",
+x"43E206E4",
+x"43E406D0",
+x"C000003F",
+x"206A0000",
+x"8FE20944",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE306E0",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE306DC",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE306D8",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE306D4",
+x"20030005",
+x"20040000",
+x"AFE20944",
+x"43E206F8",
+x"C000003F",
+x"20690000",
+x"8FE20944",
+x"20030005",
+x"20040000",
+x"AFE20944",
+x"43E2070C",
+x"C000003F",
+x"20680000",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E20718",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030005",
+x"AFE20944",
+x"43E2072C",
+x"43E40718",
+x"C000003F",
+x"20670000",
+x"8FE20944",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30728",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30724",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30720",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE3071C",
+x"20030003",
+x"AFE20944",
+x"43E20738",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030005",
+x"AFE20944",
+x"43E2074C",
+x"43E40738",
+x"C000003F",
+x"20660000",
+x"8FE20944",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30748",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30744",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30740",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE3073C",
+x"20030001",
+x"20040000",
+x"AFE20944",
+x"43E20750",
+x"C000003F",
+x"206D0000",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E2075C",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030005",
+x"AFE20944",
+x"43E20770",
+x"43E4075C",
+x"C000003F",
+x"20650000",
+x"8FE20944",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE3076C",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30768",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30764",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30760",
+x"20430000",
+x"20420020",
+x"AC65FFE4",
+x"AC6DFFE8",
+x"AC66FFEC",
+x"AC67FFF0",
+x"AC68FFF4",
+x"AC69FFF8",
+x"AC6AFFFC",
+x"AC6B0000",
+x"20640000",
+x"21830000",
+x"C000003F",
+x"206A0000",
+x"AFEA0774",
+x"8FE30258",
+x"40690002",
+x"C0003922",
+x"20720000",
+x"AFF20778",
+x"8FEC0258",
+x"20030003",
+x"AFE20944",
+x"43E20784",
+x"46000006",
+x"C0000048",
+x"206B0000",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E20790",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030005",
+x"AFE20944",
+x"43E207A4",
+x"43E40790",
+x"C000003F",
+x"206A0000",
+x"8FE20944",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE307A0",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE3079C",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30798",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30794",
+x"20030005",
+x"20040000",
+x"AFE20944",
+x"43E207B8",
+x"C000003F",
+x"20690000",
+x"8FE20944",
+x"20030005",
+x"20040000",
+x"AFE20944",
+x"43E207CC",
+x"C000003F",
+x"20680000",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E207D8",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030005",
+x"AFE20944",
+x"43E207EC",
+x"43E407D8",
+x"C000003F",
+x"20670000",
+x"8FE20944",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE307E8",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE307E4",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE307E0",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE307DC",
+x"20030003",
+x"AFE20944",
+x"43E207F8",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030005",
+x"AFE20944",
+x"43E2080C",
+x"43E407F8",
+x"C000003F",
+x"20660000",
+x"8FE20944",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30808",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30804",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30800",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE307FC",
+x"20030001",
+x"20040000",
+x"AFE20944",
+x"43E20810",
+x"C000003F",
+x"206D0000",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E2081C",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030005",
+x"AFE20944",
+x"43E20830",
+x"43E4081C",
+x"C000003F",
+x"20650000",
+x"8FE20944",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE3082C",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30828",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30824",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30820",
+x"20430000",
+x"20420020",
+x"AC65FFE4",
+x"AC6DFFE8",
+x"AC66FFEC",
+x"AC67FFF0",
+x"AC68FFF4",
+x"AC69FFF8",
+x"AC6AFFFC",
+x"AC6B0000",
+x"20640000",
+x"21830000",
+x"C000003F",
+x"206A0000",
+x"AFEA0834",
+x"8FE30258",
+x"40690002",
+x"C0003922",
+x"20700000",
+x"AFF00838",
+x"8FEC0258",
+x"20030003",
+x"AFE20944",
+x"43E20844",
+x"46000006",
+x"C0000048",
+x"206B0000",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E20850",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030005",
+x"AFE20944",
+x"43E20864",
+x"43E40850",
+x"C000003F",
+x"206A0000",
+x"8FE20944",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30860",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE3085C",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30858",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE30854",
+x"20030005",
+x"20040000",
+x"AFE20944",
+x"43E20878",
+x"C000003F",
+x"20690000",
+x"8FE20944",
+x"20030005",
+x"20040000",
+x"AFE20944",
+x"43E2088C",
+x"C000003F",
+x"20680000",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E20898",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030005",
+x"AFE20944",
+x"43E208AC",
+x"43E40898",
+x"C000003F",
+x"20670000",
+x"8FE20944",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE308A8",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE308A4",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE308A0",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE3089C",
+x"20030003",
+x"AFE20944",
+x"43E208B8",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030005",
+x"AFE20944",
+x"43E208CC",
+x"43E408B8",
+x"C000003F",
+x"20660000",
+x"8FE20944",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE308C8",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE308C4",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE308C0",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE308BC",
+x"20030001",
+x"20040000",
+x"AFE20944",
+x"43E208D0",
+x"C000003F",
+x"206D0000",
+x"8FE20944",
+x"20030003",
+x"AFE20944",
+x"43E208DC",
+x"46000006",
+x"C0000048",
+x"8FE20944",
+x"20030005",
+x"AFE20944",
+x"43E208F0",
+x"43E408DC",
+x"C000003F",
+x"20650000",
+x"8FE20944",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE308EC",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE308E8",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE308E4",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AFE308E0",
+x"20430000",
+x"20420020",
+x"AC65FFE4",
+x"AC6DFFE8",
+x"AC66FFEC",
+x"AC67FFF0",
+x"AC68FFF4",
+x"AC69FFF8",
+x"AC6AFFFC",
+x"AC6B0000",
+x"20640000",
+x"21830000",
+x"C000003F",
+x"206A0000",
+x"AFEA08F4",
+x"8FE30258",
+x"40690002",
+x"C0003922",
+x"20210004",
+x"20710000",
+x"AFF108F8",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"0800043C",
+x"20030001",
+x"0800043E",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"08000444",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"08000454",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"0800045E",
+x"20040001",
+x"08000460",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"08000476",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002006",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44800000",
+x"08000487",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"0800048C",
+x"44000807",
+x"E7E1011C",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"0800049D",
+x"20030001",
+x"0800049F",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"080004A5",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"080004B5",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"080004BF",
+x"20040001",
+x"080004C1",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"080004D7",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002006",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44800000",
+x"080004E8",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"080004ED",
+x"44000807",
+x"E7E10118",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"080004FE",
+x"20030001",
+x"08000500",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"08000506",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"08000516",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"08000520",
+x"20040001",
+x"08000522",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"08000538",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002006",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44800000",
+x"08000549",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"0800054E",
+x"44000807",
+x"E7E10114",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"0800055F",
+x"20030001",
+x"08000561",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"08000567",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"08000577",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"08000581",
+x"20040001",
+x"08000583",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"08000599",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002006",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44800000",
+x"080005AA",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"080005AF",
+x"44000807",
+x"200300CC",
+x"C4680000",
+x"44281802",
+x"46C31001",
+x"E8500003",
+x"44400806",
+x"080005B7",
+x"44400807",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"080005DD",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"080005CE",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080005C9",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080005CE",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080005DD",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080005D8",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080005DD",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000600",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"080005F1",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080005EC",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080005F1",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000600",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080005FB",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000600",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"E8A00006",
+x"EA020003",
+x"20030000",
+x"08000605",
+x"20030001",
+x"0800060A",
+x"EA020003",
+x"20030001",
+x"0800060A",
+x"20030000",
+x"E8A00003",
+x"44000806",
+x"0800060E",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"08000612",
+x"44A10001",
+x"44150802",
+x"44210002",
+x"44191003",
+x"47421001",
+x"44021003",
+x"47021001",
+x"44021003",
+x"46E21001",
+x"44020003",
+x"46200001",
+x"44200003",
+x"45400802",
+x"44000002",
+x"46200000",
+x"44200003",
+x"48600003",
+x"44003807",
+x"08000625",
+x"44003806",
+x"E8700003",
+x"44600806",
+x"08000629",
+x"44600807",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"0800064F",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08000640",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"0800063B",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000640",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"0800064F",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"0800064A",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"0800064F",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000672",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08000663",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"0800065E",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000663",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000672",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"0800066D",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000672",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"E8A00006",
+x"EA030003",
+x"20030000",
+x"08000677",
+x"20030001",
+x"0800067C",
+x"EA030003",
+x"20030001",
+x"0800067C",
+x"20030000",
+x"E8A00003",
+x"44000806",
+x"08000680",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"08000684",
+x"44A10001",
+x"44150802",
+x"44210002",
+x"44191003",
+x"47421001",
+x"44021003",
+x"47021001",
+x"44021003",
+x"46E21001",
+x"44020003",
+x"46200001",
+x"44200003",
+x"45400802",
+x"44000002",
+x"46200000",
+x"44200003",
+x"48600003",
+x"44003007",
+x"08000697",
+x"44003006",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"080006A7",
+x"20030001",
+x"080006A9",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"080006AF",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"080006BF",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"080006C9",
+x"20040001",
+x"080006CB",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"080006E1",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002006",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44800000",
+x"080006F2",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"080006F7",
+x"44000807",
+x"44281802",
+x"46C31001",
+x"E8500003",
+x"44400806",
+x"080006FD",
+x"44400807",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"08000723",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08000714",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"0800070F",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000714",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000723",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"0800071E",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000723",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000746",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08000737",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08000732",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000737",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000746",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08000741",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000746",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"E8A00006",
+x"EA020003",
+x"20030000",
+x"0800074B",
+x"20030001",
+x"08000750",
+x"EA020003",
+x"20030001",
+x"08000750",
+x"20030000",
+x"E8A00003",
+x"44000806",
+x"08000754",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"08000758",
+x"44A10001",
+x"44150802",
+x"44210002",
+x"44191003",
+x"47421001",
+x"44021003",
+x"47021001",
+x"44021003",
+x"46E21001",
+x"44020003",
+x"46200001",
+x"44200003",
+x"45400802",
+x"44000002",
+x"46200000",
+x"44200003",
+x"48600003",
+x"44001007",
+x"0800076B",
+x"44001006",
+x"E8700003",
+x"44600806",
+x"0800076F",
+x"44600807",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"08000795",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08000786",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08000781",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000786",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000795",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08000790",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000795",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080007B8",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"080007A9",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080007A4",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080007A9",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080007B8",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080007B3",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080007B8",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"E8A00006",
+x"EA030003",
+x"20030000",
+x"080007BD",
+x"20030001",
+x"080007C2",
+x"EA030003",
+x"20030001",
+x"080007C2",
+x"20030000",
+x"E8A00003",
+x"44000806",
+x"080007C6",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"080007CA",
+x"44A10001",
+x"44150802",
+x"44210002",
+x"44191803",
+x"47431801",
+x"44031803",
+x"47031801",
+x"44031803",
+x"46E31801",
+x"44030003",
+x"46200001",
+x"44200003",
+x"45400802",
+x"44000002",
+x"46200000",
+x"44200803",
+x"48600003",
+x"44200007",
+x"080007DD",
+x"44200006",
+x"44E01802",
+x"200300B4",
+x"C4610000",
+x"44611802",
+x"E7E302A0",
+x"200300B0",
+x"C4630000",
+x"44C31802",
+x"E7E3029C",
+x"44E21802",
+x"44610802",
+x"E7E10298",
+x"E7E20288",
+x"E7F00284",
+x"44000807",
+x"E7E10280",
+x"44C00807",
+x"44200002",
+x"E7E00294",
+x"44E03807",
+x"E7E70290",
+x"44220002",
+x"E7E0028C",
+x"C7E1011C",
+x"C7E002A0",
+x"44200001",
+x"E7E00128",
+x"C7E10118",
+x"C7E0029C",
+x"44200001",
+x"E7E00124",
+x"C7E10114",
+x"C7E00298",
+x"44200001",
+x"E7E00120",
+x"20030000",
+x"AFE30004",
+x"20030000",
+x"AFE30008",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"0800080C",
+x"20030001",
+x"0800080E",
+x"20030001",
+x"48600012",
+x"8FE30008",
+x"48600004",
+x"20030001",
+x"AFE30008",
+x"08000814",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"08000824",
+x"20060000",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"08000834",
+x"20030001",
+x"08000836",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"0800083C",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"0800084C",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"08000856",
+x"20040001",
+x"08000858",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"0800086E",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002006",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44800000",
+x"0800087F",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"08000884",
+x"44000807",
+x"44281802",
+x"E8700003",
+x"44600806",
+x"08000889",
+x"44600807",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"080008AF",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"080008A0",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"0800089B",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080008A0",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080008AF",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080008AA",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080008AF",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080008D2",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"080008C3",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080008BE",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080008C3",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080008D2",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080008CD",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080008D2",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"E8A00006",
+x"EA030003",
+x"20030000",
+x"080008D7",
+x"20030001",
+x"080008DC",
+x"EA030003",
+x"20030001",
+x"080008DC",
+x"20030000",
+x"E8A00003",
+x"44000806",
+x"080008E0",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"080008E4",
+x"44A10001",
+x"44150802",
+x"44210002",
+x"44191003",
+x"47421001",
+x"44021003",
+x"47021001",
+x"44021003",
+x"46E21001",
+x"44020003",
+x"46200001",
+x"44200003",
+x"45400802",
+x"44000002",
+x"46200000",
+x"44200803",
+x"48600003",
+x"44200007",
+x"080008F7",
+x"44200006",
+x"44000007",
+x"E7E00130",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"08000909",
+x"20030001",
+x"0800090B",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"08000911",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"08000921",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"0800092B",
+x"20040001",
+x"0800092D",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"08000943",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44003006",
+x"8FE30010",
+x"C0000081",
+x"44002006",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44800003",
+x"44C00000",
+x"08000954",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"08000959",
+x"44000807",
+x"44282002",
+x"46C31001",
+x"E8500003",
+x"44400806",
+x"0800095F",
+x"44400807",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"08000985",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08000976",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08000971",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000976",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000985",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08000980",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000985",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080009A8",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08000999",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08000994",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000999",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080009A8",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080009A3",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080009A8",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"E8A00006",
+x"EA020003",
+x"20030000",
+x"080009AD",
+x"20030001",
+x"080009B2",
+x"EA020003",
+x"20030001",
+x"080009B2",
+x"20030000",
+x"E8A00003",
+x"44000806",
+x"080009B6",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"080009BA",
+x"44A10001",
+x"44150802",
+x"44210002",
+x"44191003",
+x"47421001",
+x"44021003",
+x"47021001",
+x"44021003",
+x"46E21001",
+x"44020003",
+x"46200001",
+x"44200003",
+x"45400802",
+x"44000002",
+x"46200000",
+x"44200003",
+x"48600003",
+x"44001807",
+x"080009CD",
+x"44001806",
+x"E8900003",
+x"44800806",
+x"080009D1",
+x"44800807",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"080009F7",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"080009E8",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080009E3",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080009E8",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080009F7",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080009F2",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"080009F7",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000A1A",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08000A0B",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08000A06",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000A0B",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000A1A",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08000A15",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000A1A",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"E8A00006",
+x"EA040003",
+x"20030000",
+x"08000A1F",
+x"20030001",
+x"08000A24",
+x"EA040003",
+x"20030001",
+x"08000A24",
+x"20030000",
+x"E8A00003",
+x"44000806",
+x"08000A28",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"08000A2C",
+x"44A10001",
+x"44150802",
+x"44210002",
+x"44191003",
+x"47421001",
+x"44021003",
+x"47021001",
+x"44021003",
+x"46E21001",
+x"44020003",
+x"46200001",
+x"44200003",
+x"45400802",
+x"44000002",
+x"46200000",
+x"44200803",
+x"48600003",
+x"44200007",
+x"08000A3F",
+x"44200006",
+x"44600002",
+x"E7E00134",
+x"46C41001",
+x"E8500003",
+x"44400806",
+x"08000A46",
+x"44400807",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"08000A6C",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08000A5D",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08000A58",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000A5D",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000A6C",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08000A67",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000A6C",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000A8F",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08000A80",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08000A7B",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000A80",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000A8F",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08000A8A",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08000A8F",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"E8A00006",
+x"EA020003",
+x"20030000",
+x"08000A94",
+x"20030001",
+x"08000A99",
+x"EA020003",
+x"20030001",
+x"08000A99",
+x"20030000",
+x"E8A00003",
+x"44000806",
+x"08000A9D",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"08000AA1",
+x"44A10001",
+x"44150002",
+x"44001002",
+x"44590803",
+x"47410801",
+x"44410803",
+x"47010801",
+x"44410803",
+x"46E10801",
+x"44410803",
+x"46210801",
+x"44010003",
+x"45400802",
+x"44000002",
+x"46200000",
+x"44200803",
+x"48600003",
+x"44200007",
+x"08000AB4",
+x"44200006",
+x"44600002",
+x"E7E0012C",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"08000AC6",
+x"20030001",
+x"08000AC8",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"08000ACE",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"08000ADE",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"08000AE8",
+x"20040001",
+x"08000AEA",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"08000B00",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002006",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44800000",
+x"08000B11",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"08000B16",
+x"44000807",
+x"E7E10138",
+x"20130000",
+x"AC300000",
+x"E42A0004",
+x"22700000",
+x"4021000C",
+x"C000110D",
+x"2021000C",
+x"20030000",
+x"AFE30004",
+x"20030000",
+x"AFE30008",
+x"04002800",
+x"200A0030",
+x"68AA0007",
+x"200A0039",
+x"69450003",
+x"200A0000",
+x"08000B2A",
+x"200A0001",
+x"08000B2C",
+x"200A0001",
+x"49400013",
+x"8FE30008",
+x"48600004",
+x"20030001",
+x"AFE30008",
+x"08000B32",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"4021000C",
+x"C0000E4E",
+x"2021000C",
+x"206A0000",
+x"08000B44",
+x"20060000",
+x"4021000C",
+x"C0000E4E",
+x"2021000C",
+x"206A0000",
+x"495D0007",
+x"20030001",
+x"2004FFFF",
+x"4021000C",
+x"C000003F",
+x"2021000C",
+x"08000B50",
+x"20080001",
+x"4021000C",
+x"C0001AF7",
+x"2021000C",
+x"AC6A0000",
+x"AFE308FC",
+x"8C640000",
+x"489D0002",
+x"08000B59",
+x"AFE30200",
+x"200B0001",
+x"4021000C",
+x"C0001C2F",
+x"2021000C",
+x"20030000",
+x"AFE30004",
+x"20030000",
+x"AFE30008",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"08000B65",
+x"20030001",
+x"08000B67",
+x"20030001",
+x"48600012",
+x"8FE30008",
+x"48600004",
+x"20030001",
+x"AFE30008",
+x"08000B6D",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"4021000C",
+x"C0000E4E",
+x"2021000C",
+x"08000B7D",
+x"20060000",
+x"4021000C",
+x"C0000E4E",
+x"2021000C",
+x"487D0008",
+x"20030001",
+x"2004FFFF",
+x"4021000C",
+x"C000003F",
+x"2021000C",
+x"20640000",
+x"08000B8D",
+x"20080001",
+x"AC230008",
+x"40210010",
+x"C0001AF7",
+x"20210010",
+x"20640000",
+x"8C230008",
+x"AC830000",
+x"AFE40900",
+x"8C830000",
+x"487D0006",
+x"20030001",
+x"40210010",
+x"C000003F",
+x"20210010",
+x"08000B9C",
+x"200B0001",
+x"AC24000C",
+x"40210014",
+x"C0001BA6",
+x"20210014",
+x"8C24000C",
+x"AC640000",
+x"AFE30204",
+x"20030050",
+x"04600001",
+x"20030033",
+x"04600001",
+x"2003000A",
+x"04600001",
+x"8FE40258",
+x"40210014",
+x"C0001037",
+x"20030020",
+x"04600001",
+x"8FE40254",
+x"C0001037",
+x"20030020",
+x"04600001",
+x"200400FF",
+x"C0001037",
+x"2003000A",
+x"04600001",
+x"20060078",
+x"20030003",
+x"AFE20944",
+x"43E2090C",
+x"46000006",
+x"C0000048",
+x"20670000",
+x"8FE20944",
+x"8FE3001C",
+x"43E4090C",
+x"C000003F",
+x"20640000",
+x"AFE40910",
+x"20430000",
+x"20420008",
+x"AC64FFFC",
+x"AC670000",
+x"20640000",
+x"20C30000",
+x"C000003F",
+x"AFE302BC",
+x"8FE602BC",
+x"20030003",
+x"AFE20944",
+x"43E2091C",
+x"46000006",
+x"C0000048",
+x"20670000",
+x"8FE20944",
+x"8FE3001C",
+x"43E4091C",
+x"C000003F",
+x"20640000",
+x"AFE40920",
+x"20430000",
+x"20420008",
+x"AC64FFFC",
+x"AC670000",
+x"ACC3FE28",
+x"20030003",
+x"AFE20944",
+x"43E2092C",
+x"46000006",
+x"C0000048",
+x"20670000",
+x"8FE20944",
+x"8FE3001C",
+x"43E4092C",
+x"C000003F",
+x"20640000",
+x"AFE40930",
+x"20430000",
+x"20420008",
+x"AC64FFFC",
+x"AC670000",
+x"ACC3FE2C",
+x"20030003",
+x"AFE20944",
+x"43E2093C",
+x"46000006",
+x"C0000048",
+x"20670000",
+x"8FE20944",
+x"8FE3001C",
+x"43E4093C",
+x"C000003F",
+x"20640000",
+x"AFE40940",
+x"20430000",
+x"20420008",
+x"AC64FFFC",
+x"AC670000",
+x"ACC3FE30",
+x"20070073",
+x"C0003C7B",
+x"20080003",
+x"C0003CD4",
+x"20030009",
+x"20080000",
+x"200C0000",
+x"C0000081",
+x"20210014",
+x"200300AC",
+x"C4640000",
+x"44040002",
+x"200300A8",
+x"C4630000",
+x"44030001",
+x"20030004",
+x"E4200010",
+x"40210018",
+x"C0000081",
+x"20210018",
+x"44000806",
+x"44240802",
+x"44231001",
+x"20040000",
+x"C4200010",
+x"E4230014",
+x"E4240018",
+x"E421001C",
+x"21830000",
+x"21050000",
+x"46000806",
+x"46002806",
+x"40210024",
+x"C00039A1",
+x"20210024",
+x"200300A4",
+x"C4650000",
+x"C421001C",
+x"44251000",
+x"20040000",
+x"20030002",
+x"C4200010",
+x"E4250020",
+x"21050000",
+x"46000806",
+x"46002806",
+x"40210028",
+x"C00039A1",
+x"20210028",
+x"20030003",
+x"20050001",
+x"AC250024",
+x"4021002C",
+x"C0000081",
+x"2021002C",
+x"44000806",
+x"C4240018",
+x"44240802",
+x"C4230014",
+x"44231001",
+x"20040000",
+x"C4200010",
+x"8C250024",
+x"E4210028",
+x"21830000",
+x"46000806",
+x"46002806",
+x"40210030",
+x"C00039A1",
+x"20210030",
+x"C4250020",
+x"C4210028",
+x"44251000",
+x"20040000",
+x"20080002",
+x"C4200010",
+x"8C250024",
+x"21030000",
+x"46000806",
+x"46002806",
+x"40210030",
+x"C00039A1",
+x"20210030",
+x"20030002",
+x"20050002",
+x"AC25002C",
+x"40210034",
+x"C0000081",
+x"20210034",
+x"44000806",
+x"C4240018",
+x"44240802",
+x"C4230014",
+x"44231001",
+x"20040000",
+x"C4200010",
+x"8C25002C",
+x"E4210030",
+x"21830000",
+x"46000806",
+x"46002806",
+x"40210038",
+x"C00039A1",
+x"20210038",
+x"C4250020",
+x"C4210030",
+x"44251000",
+x"20040000",
+x"C4200010",
+x"8C25002C",
+x"21030000",
+x"46000806",
+x"46002806",
+x"40210038",
+x"C00039A1",
+x"20210038",
+x"200A0001",
+x"20090003",
+x"C4200010",
+x"21880000",
+x"40210038",
+x"C0003A9D",
+x"200D0008",
+x"200C0002",
+x"20080004",
+x"C0003B48",
+x"8FEB02BC",
+x"8D63FE24",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"8D63FE28",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"8D63FE2C",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"8D63FE30",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"8D63FE34",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"8D63FE38",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"8D63FE3C",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"200C0070",
+x"C0003D97",
+x"20210038",
+x"200D0003",
+x"AC320034",
+x"AC310038",
+x"40210040",
+x"C0003DF8",
+x"C7E00134",
+x"E7E002DC",
+x"C7E00130",
+x"E7E002D8",
+x"C7E0012C",
+x"E7E002D4",
+x"8FE3001C",
+x"40650001",
+x"43E702DC",
+x"43E603CC",
+x"C0001D15",
+x"20210040",
+x"8FE3001C",
+x"40660001",
+x"68C000D6",
+x"A0C30002",
+x"03E31820",
+x"8C630110",
+x"8C64FFF8",
+x"20050002",
+x"488500CF",
+x"8C64FFE4",
+x"C4800000",
+x"E8110002",
+x"08000D8C",
+x"8C65FFFC",
+x"48BC0084",
+x"A0CB0002",
+x"8FEC06B8",
+x"C4800000",
+x"46206001",
+x"C7E10134",
+x"44205807",
+x"C7EA0130",
+x"45405007",
+x"C7E9012C",
+x"45204807",
+x"216E0001",
+x"20030003",
+x"46000006",
+x"40210040",
+x"C0000048",
+x"20210040",
+x"20640000",
+x"8FE3001C",
+x"AC24003C",
+x"40210044",
+x"C000003F",
+x"20210044",
+x"20450000",
+x"20420008",
+x"ACA3FFFC",
+x"8C24003C",
+x"ACA40000",
+x"E4810000",
+x"E48AFFFC",
+x"E489FFF8",
+x"8FE6001C",
+x"40CD0001",
+x"AC250040",
+x"21A50000",
+x"20660000",
+x"20870000",
+x"40210048",
+x"C0001D15",
+x"20210048",
+x"20430000",
+x"2042000C",
+x"E46CFFF8",
+x"8C250040",
+x"AC65FFFC",
+x"AC6E0000",
+x"A1840002",
+x"03E42020",
+x"AC8306B4",
+x"218F0001",
+x"216E0002",
+x"C7E10130",
+x"20030003",
+x"46000006",
+x"40210048",
+x"C0000048",
+x"20210048",
+x"20640000",
+x"8FE3001C",
+x"AC240044",
+x"4021004C",
+x"C000003F",
+x"2021004C",
+x"20450000",
+x"20420008",
+x"ACA3FFFC",
+x"8C240044",
+x"ACA40000",
+x"E48B0000",
+x"E481FFFC",
+x"E489FFF8",
+x"8FE6001C",
+x"40CD0001",
+x"AC250048",
+x"21A50000",
+x"20660000",
+x"20870000",
+x"40210050",
+x"C0001D15",
+x"20210050",
+x"20430000",
+x"2042000C",
+x"E46CFFF8",
+x"8C250048",
+x"AC65FFFC",
+x"AC6E0000",
+x"A1E40002",
+x"03E42020",
+x"AC8306B4",
+x"218E0002",
+x"216D0003",
+x"C7E1012C",
+x"20030003",
+x"46000006",
+x"40210050",
+x"C0000048",
+x"20210050",
+x"20640000",
+x"8FE3001C",
+x"AC24004C",
+x"40210054",
+x"C000003F",
+x"20210054",
+x"20450000",
+x"20420008",
+x"ACA3FFFC",
+x"8C24004C",
+x"ACA40000",
+x"E48B0000",
+x"E48AFFFC",
+x"E481FFF8",
+x"8FE6001C",
+x"40CB0001",
+x"AC250050",
+x"21650000",
+x"20660000",
+x"20870000",
+x"40210058",
+x"C0001D15",
+x"20210058",
+x"20430000",
+x"2042000C",
+x"E46CFFF8",
+x"8C250050",
+x"AC65FFFC",
+x"AC6D0000",
+x"A1C40002",
+x"03E42020",
+x"AC8306B4",
+x"21830003",
+x"AFE306B8",
+x"08000D8C",
+x"20040002",
+x"48A40043",
+x"A0C40002",
+x"208C0001",
+x"8FED06B8",
+x"46204801",
+x"8C63FFF0",
+x"C7E70134",
+x"C4650000",
+x"44E51002",
+x"C7E10130",
+x"C466FFFC",
+x"44260002",
+x"44402000",
+x"C7E2012C",
+x"C460FFF8",
+x"44401802",
+x"44831800",
+x"C42A0004",
+x"45452002",
+x"44832002",
+x"44872801",
+x"45462002",
+x"44832002",
+x"44812001",
+x"45400002",
+x"44030002",
+x"44020801",
+x"20030003",
+x"46000006",
+x"40210058",
+x"C0000048",
+x"20210058",
+x"20640000",
+x"8FE3001C",
+x"AC240054",
+x"4021005C",
+x"C000003F",
+x"2021005C",
+x"20450000",
+x"20420008",
+x"ACA3FFFC",
+x"8C240054",
+x"ACA40000",
+x"E4850000",
+x"E484FFFC",
+x"E481FFF8",
+x"8FE6001C",
+x"40CB0001",
+x"AC250058",
+x"21650000",
+x"20660000",
+x"20870000",
+x"40210060",
+x"C0001D15",
+x"20210060",
+x"20430000",
+x"2042000C",
+x"E469FFF8",
+x"8C250058",
+x"AC65FFFC",
+x"AC6C0000",
+x"A1A40002",
+x"03E42020",
+x"AC8306B4",
+x"21A30001",
+x"AFE306B8",
+x"08000D8C",
+x"08000D8D",
+x"08000D8E",
+x"20080000",
+x"C7E30264",
+x"8FE3025C",
+x"00031822",
+x"40210060",
+x"C0000081",
+x"20210060",
+x"44600002",
+x"C7E10294",
+x"44011002",
+x"C7E102A0",
+x"44416800",
+x"C7E10290",
+x"44011002",
+x"C7E1029C",
+x"44416000",
+x"C7E1028C",
+x"44010802",
+x"C7E00298",
+x"44205800",
+x"8FE30258",
+x"40660001",
+x"8C300000",
+x"22070000",
+x"40210060",
+x"C00037C4",
+x"20210060",
+x"200F0000",
+x"20080002",
+x"8FE30254",
+x"69E30002",
+x"08000DE2",
+x"40630001",
+x"AC2F005C",
+x"69E30002",
+x"08000DCD",
+x"20040001",
+x"C7E30264",
+x"8FE3025C",
+x"00831822",
+x"40210064",
+x"C0000081",
+x"20210064",
+x"44600002",
+x"C7E10294",
+x"44011002",
+x"C7E102A0",
+x"44416800",
+x"C7E10290",
+x"44011002",
+x"C7E1029C",
+x"44416000",
+x"C7E1028C",
+x"44010802",
+x"C7E00298",
+x"44205800",
+x"8FE30258",
+x"40660001",
+x"8C310038",
+x"22270000",
+x"40210064",
+x"C00037C4",
+x"20210064",
+x"200E0000",
+x"8C2F005C",
+x"8C320034",
+x"8C300000",
+x"8C310038",
+x"225B0000",
+x"22320000",
+x"23710000",
+x"40210064",
+x"C000383B",
+x"20210064",
+x"200F0001",
+x"20080004",
+x"8C300000",
+x"8C310038",
+x"8C320034",
+x"22070000",
+x"22500000",
+x"40210064",
+x"C00038AE",
+x"20210064",
+x"20000000",
+x"0000003F",
+x"EBA10037",
+x"E8300003",
+x"44200006",
+x"E0000000",
+x"443D0800",
+x"EBA1001B",
+x"E8300003",
+x"44200006",
+x"E0000000",
+x"443D0800",
+x"EBA1000D",
+x"E8300003",
+x"44200006",
+x"E0000000",
+x"443D0800",
+x"EBA10006",
+x"E8300003",
+x"44200006",
+x"E0000000",
+x"443D0800",
+x"08000DE4",
+x"443D0801",
+x"08000DE4",
+x"443D0801",
+x"EBA10006",
+x"E8300003",
+x"44200006",
+x"E0000000",
+x"443D0800",
+x"08000DE4",
+x"443D0801",
+x"08000DE4",
+x"443D0801",
+x"EBA1000D",
+x"E8300003",
+x"44200006",
+x"E0000000",
+x"443D0800",
+x"EBA10006",
+x"E8300003",
+x"44200006",
+x"E0000000",
+x"443D0800",
+x"08000DE4",
+x"443D0801",
+x"08000DE4",
+x"443D0801",
+x"EBA10006",
+x"E8300003",
+x"44200006",
+x"E0000000",
+x"443D0800",
+x"08000DE4",
+x"443D0801",
+x"08000DE4",
+x"443D0801",
+x"EBA1001B",
+x"E8300003",
+x"44200006",
+x"E0000000",
+x"443D0800",
+x"EBA1000D",
+x"E8300003",
+x"44200006",
+x"E0000000",
+x"443D0800",
+x"EBA10006",
+x"E8300003",
+x"44200006",
+x"E0000000",
+x"443D0800",
+x"08000DE4",
+x"443D0801",
+x"08000DE4",
+x"443D0801",
+x"EBA10006",
+x"E8300003",
+x"44200006",
+x"E0000000",
+x"443D0800",
+x"08000DE4",
+x"443D0801",
+x"08000DE4",
+x"443D0801",
+x"EBA1000D",
+x"E8300003",
+x"44200006",
+x"E0000000",
+x"443D0800",
+x"EBA10006",
+x"E8300003",
+x"44200006",
+x"E0000000",
+x"443D0800",
+x"08000DE4",
+x"443D0801",
+x"08000DE4",
+x"443D0801",
+x"EBA10006",
+x"E8300003",
+x"44200006",
+x"E0000000",
+x"443D0800",
+x"08000DE4",
+x"443D0801",
+x"08000DE4",
+x"04002000",
 x"20030030",
+x"68830007",
+x"20030039",
+x"68640003",
+x"20030000",
+x"08000E56",
+x"20030001",
+x"08000E58",
+x"20030001",
+x"48600037",
+x"8FE30008",
+x"48600009",
+x"2003002D",
+x"48A30004",
+x"2003FFFF",
+x"AFE30008",
+x"08000E62",
+x"20030001",
+x"AFE30008",
+x"08000E63",
+x"8FE30004",
+x"A0650003",
+x"A0630001",
+x"00A32820",
+x"40830030",
+x"00A31820",
+x"AFE30004",
+x"04002800",
 x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"08000E72",
+x"20030001",
+x"08000E74",
+x"20030001",
+x"48600014",
+x"8FE30008",
+x"48600009",
+x"2003002D",
+x"48830004",
+x"2003FFFF",
+x"AFE30008",
+x"08000E7E",
+x"20030001",
+x"AFE30008",
+x"08000E7F",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"08000E4E",
+x"8FE30008",
+x"487C0003",
+x"8FE30004",
+x"E0000000",
+x"8FE30004",
+x"00031822",
+x"E0000000",
+x"48C00021",
+x"04002800",
 x"20030030",
-x"04002008",
-x"04800009",
-x"04000010",
-x"04000011",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"08000E98",
+x"20030001",
+x"08000E9A",
+x"20030001",
+x"48600014",
+x"8FE30008",
+x"48600009",
+x"2003002D",
+x"48830004",
+x"2003FFFF",
+x"AFE30008",
+x"08000EA4",
+x"20030001",
+x"AFE30008",
+x"08000EA5",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"08000E4E",
+x"20060000",
+x"08000E4E",
+x"8FE30008",
+x"487C0003",
+x"8FE30004",
+x"E0000000",
+x"8FE30004",
+x"00031822",
+x"E0000000",
 x"04002000",
-x"04800001",
+x"20030030",
+x"68830007",
+x"20030039",
+x"68640003",
+x"20030000",
+x"08000EBF",
+x"20030001",
+x"08000EC1",
+x"20030001",
+x"48600032",
+x"8FE30018",
+x"48600009",
+x"2003002D",
+x"48A30004",
+x"2003FFFF",
+x"AFE30018",
+x"08000ECB",
+x"20030001",
+x"AFE30018",
+x"08000ECC",
+x"8FE3000C",
+x"A0650003",
+x"A0630001",
+x"00A32820",
+x"40830030",
+x"00A31820",
+x"AFE3000C",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"08000EDB",
+x"20030001",
+x"08000EDD",
+x"20030001",
+x"48600014",
+x"8FE30018",
+x"48600009",
+x"2003002D",
+x"48830004",
+x"2003FFFF",
+x"AFE30018",
+x"08000EE7",
+x"20030001",
+x"AFE30018",
+x"08000EE8",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"08000EB7",
+x"20A30000",
+x"E0000000",
+x"48C00021",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"08000EFC",
+x"20030001",
+x"08000EFE",
+x"20030001",
+x"48600014",
+x"8FE30018",
+x"48600009",
+x"2003002D",
+x"48830004",
+x"2003FFFF",
+x"AFE30018",
+x"08000F08",
+x"20030001",
+x"AFE30018",
+x"08000F09",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"08000EB7",
+x"20060000",
+x"08000EB7",
+x"20830000",
+x"E0000000",
+x"04001800",
+x"20050030",
+x"68650007",
+x"20050039",
+x"68A30003",
+x"20050000",
+x"08000F1E",
+x"20050001",
+x"08000F20",
+x"20050001",
+x"48A00027",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"08000F35",
+x"20040001",
+x"08000F37",
+x"20040001",
+x"4880000F",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"08000F16",
+x"E0000000",
+x"4880001C",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"08000F50",
+x"20040001",
+x"08000F52",
+x"20040001",
+x"4880000F",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"08000F16",
+x"20040000",
+x"08000F16",
+x"E0000000",
+x"012A1820",
+x"A8650001",
+x"00A63818",
+x"01491822",
+x"6B830003",
+x"21230000",
+x"E0000000",
+x"68E40068",
+x"48E40003",
+x"20A30000",
+x"E0000000",
+x"01251820",
+x"A8670001",
+x"00E64018",
+x"00A91822",
+x"6B830003",
+x"21230000",
+x"E0000000",
+x"69040030",
+x"49040003",
+x"20E30000",
+x"E0000000",
+x"01271820",
+x"A8680001",
+x"01062818",
+x"00E91822",
+x"6B830003",
+x"21230000",
+x"E0000000",
+x"68A40014",
+x"48A40003",
+x"21030000",
+x"E0000000",
+x"01281820",
+x"A8650001",
+x"00A63818",
+x"01091822",
+x"6B830003",
+x"21230000",
+x"E0000000",
+x"68E40006",
+x"48E40003",
+x"20A30000",
+x"E0000000",
+x"20AA0000",
+x"08000F64",
+x"210A0000",
+x"20A90000",
+x"08000F64",
+x"01071820",
+x"A8650001",
+x"00A64818",
+x"00E81822",
+x"6B830003",
+x"21030000",
+x"E0000000",
+x"69240007",
+x"49240003",
+x"20A30000",
+x"E0000000",
+x"20AA0000",
+x"21090000",
+x"08000F64",
+x"20EA0000",
+x"20A90000",
+x"08000F64",
+x"00E51820",
+x"A8680001",
+x"01064818",
+x"00A71822",
+x"6B830003",
+x"20E30000",
+x"E0000000",
+x"69240015",
+x"49240003",
+x"21030000",
+x"E0000000",
+x"00E81820",
+x"A8650001",
+x"00A64818",
+x"01071822",
+x"6B830003",
+x"20E30000",
+x"E0000000",
+x"69240007",
+x"49240003",
+x"20A30000",
+x"E0000000",
+x"20AA0000",
+x"20E90000",
+x"08000F64",
+x"210A0000",
+x"20A90000",
+x"08000F64",
+x"01051820",
+x"A8670001",
+x"00E64818",
+x"00A81822",
+x"6B830003",
+x"21030000",
+x"E0000000",
+x"69240007",
+x"49240003",
+x"20E30000",
+x"E0000000",
+x"20EA0000",
+x"21090000",
+x"08000F64",
+x"20AA0000",
+x"20E90000",
+x"08000F64",
+x"00AA1820",
+x"A8680001",
+x"01063818",
+x"01451822",
+x"6B830003",
+x"20A30000",
+x"E0000000",
+x"68E40031",
+x"48E40003",
+x"21030000",
+x"E0000000",
+x"00A81820",
+x"A8670001",
+x"00E64818",
+x"01051822",
+x"6B830003",
+x"20A30000",
+x"E0000000",
+x"69240015",
+x"49240003",
+x"20E30000",
+x"E0000000",
+x"00A71820",
+x"A8680001",
+x"01064818",
+x"00E51822",
+x"6B830003",
+x"20A30000",
+x"E0000000",
+x"69240007",
+x"49240003",
+x"21030000",
+x"E0000000",
+x"210A0000",
+x"20A90000",
+x"08000F64",
+x"20EA0000",
+x"21090000",
+x"08000F64",
+x"00E81820",
+x"A8650001",
+x"00A64818",
+x"01071822",
+x"6B830003",
+x"20E30000",
+x"E0000000",
+x"69240007",
+x"49240003",
+x"20A30000",
+x"E0000000",
+x"20AA0000",
+x"20E90000",
+x"08000F64",
+x"210A0000",
+x"20A90000",
+x"08000F64",
+x"010A1820",
+x"A8670001",
+x"00E62818",
+x"01481822",
+x"6B830003",
+x"21030000",
+x"E0000000",
+x"68A40015",
+x"48A40003",
+x"20E30000",
+x"E0000000",
+x"01071820",
+x"A8650001",
+x"00A64818",
+x"00E81822",
+x"6B830003",
+x"21030000",
+x"E0000000",
+x"69240007",
+x"49240003",
+x"20A30000",
+x"E0000000",
+x"20AA0000",
+x"21090000",
+x"08000F64",
+x"20EA0000",
+x"20A90000",
+x"08000F64",
+x"00EA1820",
+x"A8650001",
+x"00A64018",
+x"01471822",
+x"6B830003",
+x"20E30000",
+x"E0000000",
+x"69040007",
+x"49040003",
+x"20A30000",
+x"E0000000",
+x"20AA0000",
+x"20E90000",
+x"08000F64",
+x"20A90000",
+x"08000F64",
+x"200303E8",
+x"68830002",
+x"E0000000",
+x"688000CF",
+x"20060064",
+x"200C0000",
+x"200A000A",
+x"20090005",
+x"200501F4",
+x"AC240000",
+x"68A4002D",
+x"48A40003",
+x"20030005",
+x"0800106D",
+x"200B0002",
+x"200500C8",
+x"68A40015",
+x"48A40003",
+x"20030002",
+x"0800105B",
+x"20090001",
+x"20050064",
+x"68A4000A",
+x"48A40003",
+x"20030001",
+x"08001056",
+x"212A0000",
+x"21890000",
+x"40210008",
+x"C0000F64",
+x"20210008",
+x"0800105B",
+x"216A0000",
+x"40210008",
+x"C0000F64",
+x"20210008",
+x"0800106D",
+x"200A0003",
+x"2005012C",
+x"68A40009",
+x"48A40003",
+x"20030003",
+x"08001066",
+x"21690000",
+x"40210008",
+x"C0000F64",
+x"20210008",
+x"0800106D",
+x"215B0000",
+x"212A0000",
+x"23690000",
+x"40210008",
+x"C0000F64",
+x"20210008",
+x"08001093",
+x"200B0007",
+x"200502BC",
+x"68A40014",
+x"48A40003",
+x"20030007",
+x"08001083",
+x"200A0006",
+x"20050258",
+x"68A40008",
+x"48A40003",
+x"20030006",
+x"0800107D",
+x"40210008",
+x"C0000F64",
+x"20210008",
+x"08001083",
+x"21490000",
+x"216A0000",
+x"40210008",
+x"C0000F64",
+x"20210008",
+x"08001093",
+x"20090008",
+x"20050320",
+x"68A4000A",
+x"48A40003",
+x"20030008",
+x"0800108F",
+x"212A0000",
+x"21690000",
+x"40210008",
+x"C0000F64",
+x"20210008",
+x"08001093",
+x"40210008",
+x"C0000F64",
+x"20210008",
+x"60650064",
+x"8C240000",
+x"00852022",
+x"68030003",
+x"200D0000",
+x"0800109D",
+x"20050030",
+x"00A31820",
 x"04600001",
-x"20630001",
-x"08000004",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
+x"200D0001",
+x"2006000A",
+x"200C0000",
+x"200A000A",
+x"20090005",
+x"20050032",
+x"AC240004",
+x"68A4002D",
+x"48A40003",
+x"20030005",
+x"080010CF",
+x"200B0002",
+x"20050014",
+x"68A40015",
+x"48A40003",
+x"20030002",
+x"080010BD",
+x"20090001",
+x"2005000A",
+x"68A4000A",
+x"48A40003",
+x"20030001",
+x"080010B8",
+x"212A0000",
+x"21890000",
+x"4021000C",
+x"C0000F64",
+x"2021000C",
+x"080010BD",
+x"216A0000",
+x"4021000C",
+x"C0000F64",
+x"2021000C",
+x"080010CF",
+x"200A0003",
+x"2005001E",
+x"68A40009",
+x"48A40003",
+x"20030003",
+x"080010C8",
+x"21690000",
+x"4021000C",
+x"C0000F64",
+x"2021000C",
+x"080010CF",
+x"215B0000",
+x"212A0000",
+x"23690000",
+x"4021000C",
+x"C0000F64",
+x"2021000C",
+x"080010F5",
+x"200B0007",
+x"20050046",
+x"68A40014",
+x"48A40003",
+x"20030007",
+x"080010E5",
+x"200A0006",
+x"2005003C",
+x"68A40008",
+x"48A40003",
+x"20030006",
+x"080010DF",
+x"4021000C",
+x"C0000F64",
+x"2021000C",
+x"080010E5",
+x"21490000",
+x"216A0000",
+x"4021000C",
+x"C0000F64",
+x"2021000C",
+x"080010F5",
+x"20090008",
+x"20050050",
+x"68A4000A",
+x"48A40003",
+x"20030008",
+x"080010F1",
+x"212A0000",
+x"21690000",
+x"4021000C",
+x"C0000F64",
+x"2021000C",
+x"080010F5",
+x"4021000C",
+x"C0000F64",
+x"2021000C",
+x"6065000A",
+x"8C240004",
+x"00852022",
+x"68030009",
+x"49A00003",
+x"20050000",
+x"08001100",
+x"20050030",
+x"00A31820",
+x"04600001",
+x"20050001",
+x"08001105",
+x"20050030",
+x"00A31820",
+x"04600001",
+x"20050001",
+x"20030030",
+x"00641820",
+x"04600001",
+x"E0000000",
+x"2003002D",
+x"04600001",
+x"00042022",
+x"08001037",
+x"2003003C",
+x"6A030002",
+x"E0000000",
+x"20030000",
+x"AFE30004",
+x"20030000",
+x"AFE30008",
+x"04002800",
+x"200E0030",
+x"68AE0007",
+x"200E0039",
+x"69C50003",
+x"200E0000",
+x"0800111C",
+x"200E0001",
+x"0800111E",
+x"200E0001",
+x"49C00013",
+x"8FE30008",
+x"48600004",
+x"20030001",
+x"AFE30008",
+x"08001124",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"206E0000",
+x"08001136",
+x"20060000",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"206E0000",
+x"49DD0003",
+x"20030000",
+x"08001AF2",
+x"20030000",
+x"AFE30004",
+x"20030000",
+x"AFE30008",
+x"04002800",
+x"200B0030",
+x"68AB0007",
+x"200B0039",
+x"69650003",
+x"200B0000",
+x"08001145",
+x"200B0001",
+x"08001147",
+x"200B0001",
+x"49600013",
+x"8FE30008",
+x"48600004",
+x"20030001",
+x"AFE30008",
+x"0800114D",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"206B0000",
+x"0800115F",
+x"20060000",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"206B0000",
+x"20030000",
+x"AFE30004",
+x"20030000",
+x"AFE30008",
+x"04002800",
+x"200F0030",
+x"68AF0007",
+x"200F0039",
+x"69E50003",
+x"200F0000",
+x"0800116B",
+x"200F0001",
+x"0800116D",
+x"200F0001",
+x"49E00013",
+x"8FE30008",
+x"48600004",
+x"20030001",
+x"AFE30008",
+x"08001173",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"206F0000",
+x"08001185",
+x"20060000",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"206F0000",
+x"20030000",
+x"AFE30004",
+x"20030000",
+x"AFE30008",
+x"04002800",
+x"200D0030",
+x"68AD0007",
+x"200D0039",
+x"69A50003",
+x"200D0000",
+x"08001191",
+x"200D0001",
+x"08001193",
+x"200D0001",
+x"49A00013",
+x"8FE30008",
+x"48600004",
+x"20030001",
+x"AFE30008",
+x"08001199",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"206D0000",
+x"080011AB",
+x"20060000",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"206D0000",
+x"20030003",
+x"46000006",
+x"40210004",
+x"C0000048",
+x"20210004",
+x"20680000",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"080011C1",
+x"20030001",
+x"080011C3",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"080011C9",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"080011D9",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"080011E3",
+x"20040001",
+x"080011E5",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"080011FB",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002006",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44800000",
+x"0800120C",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"08001211",
+x"44000807",
+x"E5010000",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"08001222",
+x"20030001",
+x"08001224",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"0800122A",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"0800123A",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"08001244",
+x"20040001",
+x"08001246",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"0800125C",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002006",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44800000",
+x"0800126D",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"08001272",
+x"44000807",
+x"E501FFFC",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"08001283",
+x"20030001",
+x"08001285",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"0800128B",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"0800129B",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"080012A5",
+x"20040001",
+x"080012A7",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"080012BD",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002006",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44800000",
+x"080012CE",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"080012D3",
+x"44000807",
+x"E501FFF8",
+x"20030003",
+x"46000006",
+x"40210004",
+x"C0000048",
+x"20210004",
+x"206C0000",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"080012EA",
+x"20030001",
+x"080012EC",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"080012F2",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"08001302",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"0800130C",
+x"20040001",
+x"0800130E",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"08001324",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002006",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44800000",
+x"08001335",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"0800133A",
+x"44000807",
+x"E5810000",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"0800134B",
+x"20030001",
+x"0800134D",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"08001353",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"08001363",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"0800136D",
+x"20040001",
+x"0800136F",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"08001385",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002006",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44800000",
+x"08001396",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"0800139B",
+x"44000807",
+x"E581FFFC",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"080013AC",
+x"20030001",
+x"080013AE",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"080013B4",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"080013C4",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"080013CE",
+x"20040001",
+x"080013D0",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"080013E6",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002006",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44800000",
+x"080013F7",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"080013FC",
+x"44000807",
+x"E581FFF8",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"0800140D",
+x"20030001",
+x"0800140F",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"08001415",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"08001425",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"0800142F",
+x"20040001",
+x"08001431",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"08001447",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002006",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44800000",
+x"08001458",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44002006",
+x"0800145D",
+x"44002007",
+x"20030002",
+x"46000006",
+x"40210004",
+x"C0000048",
+x"20210004",
+x"206A0000",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"08001473",
+x"20030001",
+x"08001475",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"0800147B",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"0800148B",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"08001495",
+x"20040001",
+x"08001497",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"080014AD",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002806",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44A00000",
+x"080014BE",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"080014C3",
+x"44000807",
+x"E5410000",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"080014D4",
+x"20030001",
+x"080014D6",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"080014DC",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"080014EC",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"080014F6",
+x"20040001",
+x"080014F8",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"0800150E",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002806",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44A00000",
+x"0800151F",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"08001524",
+x"44000807",
+x"E541FFFC",
+x"20030003",
+x"46000006",
+x"40210004",
+x"C0000048",
+x"20210004",
+x"20690000",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"0800153B",
+x"20030001",
+x"0800153D",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"08001543",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"08001553",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"0800155D",
+x"20040001",
+x"0800155F",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"08001575",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002806",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44A00000",
+x"08001586",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"0800158B",
+x"44000807",
+x"E5210000",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"0800159C",
+x"20030001",
+x"0800159E",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"080015A4",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"080015B4",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"080015BE",
+x"20040001",
+x"080015C0",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"080015D6",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002806",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44A00000",
+x"080015E7",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"080015EC",
+x"44000807",
+x"E521FFFC",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"080015FD",
+x"20030001",
+x"080015FF",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"08001605",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"08001615",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"0800161F",
+x"20040001",
+x"08001621",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"08001637",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002806",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44A00000",
+x"08001648",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"0800164D",
+x"44000807",
+x"E521FFF8",
+x"20030003",
+x"46000006",
+x"40210004",
+x"C0000048",
+x"20210004",
+x"20670000",
+x"49A00002",
+x"0800177E",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"08001666",
+x"20030001",
+x"08001668",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"0800166E",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"0800167E",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"08001688",
+x"20040001",
+x"0800168A",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"080016A0",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44002806",
+x"8FE30010",
+x"C0000081",
+x"44001806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44600003",
+x"44A00000",
+x"080016B1",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"080016B6",
+x"44000807",
+x"200300CC",
+x"C4630000",
+x"44230002",
+x"E4E00000",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"080016CA",
+x"20030001",
+x"080016CC",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"080016D2",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"080016E2",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"080016EC",
+x"20040001",
+x"080016EE",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"08001704",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44003006",
+x"8FE30010",
+x"C0000081",
+x"44002806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44A00003",
+x"44C00000",
+x"08001715",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"0800171A",
+x"44000807",
+x"44230002",
+x"E4E0FFFC",
+x"20030000",
+x"AFE3000C",
+x"20030000",
+x"AFE30010",
+x"20030001",
+x"AFE30014",
+x"20030000",
+x"AFE30018",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"0800172C",
+x"20030001",
+x"0800172E",
+x"20030001",
+x"48600012",
+x"8FE30018",
+x"48600004",
+x"20030001",
+x"AFE30018",
+x"08001734",
+x"8FE3000C",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE3000C",
+x"20060001",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"08001744",
+x"20060000",
+x"40210004",
+x"C0000EB7",
+x"20210004",
+x"2004002E",
+x"4864002E",
+x"04001800",
+x"20040030",
+x"68640007",
+x"20040039",
+x"68830003",
+x"20040000",
+x"0800174E",
+x"20040001",
+x"08001750",
+x"20040001",
+x"48800012",
+x"8FE40010",
+x"A0850003",
+x"A0840001",
+x"00A42020",
+x"40630030",
+x"00831820",
+x"AFE30010",
+x"8FE30014",
+x"A0640003",
+x"A0630001",
+x"00831820",
+x"AFE30014",
+x"20040001",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"08001766",
+x"20040000",
+x"40210004",
+x"C0000F16",
+x"20210004",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"44003006",
+x"8FE30010",
+x"C0000081",
+x"44002806",
+x"8FE30014",
+x"C0000081",
+x"20210004",
+x"44A00003",
+x"44C00000",
+x"08001777",
+x"8FE3000C",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"8FE30018",
+x"487C0003",
+x"44000806",
+x"0800177C",
+x"44000807",
+x"44230002",
+x"E4E0FFF8",
+x"20050002",
+x"49650003",
+x"20050001",
+x"08001786",
+x"E8900003",
+x"20050000",
+x"08001786",
+x"20050001",
+x"20030004",
+x"46000006",
+x"40210004",
+x"C0000048",
+x"20210004",
+x"20640000",
+x"20430000",
+x"2042002C",
+x"AC64FFD8",
+x"AC67FFDC",
+x"AC69FFE0",
+x"AC6AFFE4",
+x"AC65FFE8",
+x"AC6CFFEC",
+x"AC68FFF0",
+x"AC6DFFF4",
+x"AC6FFFF8",
+x"AC6BFFFC",
+x"AC6E0000",
+x"A2040002",
+x"03E42020",
+x"AC830110",
+x"20030003",
+x"49630032",
+x"C5010000",
+x"C830000D",
+x"C8300008",
+x"EA010004",
+x"200300A0",
+x"C4600000",
+x"080017A7",
+x"200300C8",
+x"C4600000",
+x"080017A9",
+x"46000006",
+x"44210802",
+x"44010003",
+x"080017AD",
+x"46000006",
+x"E5000000",
+x"C501FFFC",
+x"C830000D",
+x"C8300008",
+x"EA010004",
+x"200300A0",
+x"C4600000",
+x"080017B7",
+x"200300C8",
+x"C4600000",
+x"080017B9",
+x"46000006",
+x"44210802",
+x"44010003",
+x"080017BD",
+x"46000006",
+x"E500FFFC",
+x"C501FFF8",
+x"C830000D",
+x"C8300008",
+x"EA010004",
+x"200300A0",
+x"C4600000",
+x"080017C7",
+x"200300C8",
+x"C4600000",
+x"080017C9",
+x"46000006",
+x"44210802",
+x"44010003",
+x"080017CD",
+x"46000006",
+x"E500FFF8",
+x"080017EB",
+x"20030002",
+x"4963001B",
+x"C5010000",
+x"44211002",
+x"C500FFFC",
+x"44000002",
+x"44401000",
+x"C500FFF8",
+x"44000002",
+x"44400000",
+x"44001004",
+x"C8500006",
+x"E8900003",
+x"46820003",
+x"080017DF",
+x"46220003",
+x"080017E2",
+x"200300C8",
+x"C4600000",
+x"44200802",
+x"E5010000",
+x"C501FFFC",
+x"44200802",
+x"E501FFFC",
+x"C501FFF8",
+x"44200002",
+x"E500FFF8",
+x"080017EB",
+x"49A00002",
+x"08001AF1",
+x"C4E30000",
+x"46C31001",
+x"200300F0",
+x"C4640000",
+x"200300EC",
+x"C46E0000",
+x"E8500003",
+x"44400806",
+x"080017F7",
+x"44400807",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"0800181D",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"0800180E",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08001809",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"0800180E",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"0800181D",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08001818",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"0800181D",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08001840",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08001831",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"0800182C",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08001831",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08001840",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"0800183B",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08001840",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"E8800006",
+x"EA020003",
+x"20030000",
+x"08001845",
+x"20030001",
+x"0800184A",
+x"EA020003",
+x"20030001",
+x"0800184A",
+x"20030000",
+x"E8800003",
+x"44000806",
+x"0800184E",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"08001852",
+x"44810001",
+x"44150802",
+x"44210002",
+x"44191003",
+x"47421001",
+x"44021003",
+x"47021001",
+x"44021003",
+x"46E21001",
+x"44020003",
+x"46200001",
+x"44200003",
+x"45C00802",
+x"44000002",
+x"46200000",
+x"44200003",
+x"48600003",
+x"44007807",
+x"08001865",
+x"44007806",
+x"E8700003",
+x"44600806",
+x"08001869",
+x"44600807",
+x"E42F0000",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"08001890",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08001881",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"0800187C",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001881",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001890",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"0800188B",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001890",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"080018B3",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"080018A4",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"0800189F",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"080018A4",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"080018B3",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080018AE",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"080018B3",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"E8800006",
+x"EA030003",
+x"20030000",
+x"080018B8",
+x"20030001",
+x"080018BD",
+x"EA030003",
+x"20030001",
+x"080018BD",
+x"20030000",
+x"E8800003",
+x"44000806",
+x"080018C1",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"080018C5",
+x"44810001",
+x"44150802",
+x"44210002",
+x"44191003",
+x"47421001",
+x"44021003",
+x"47021001",
+x"44021003",
+x"46E21001",
+x"44020003",
+x"46200001",
+x"44200003",
+x"45C00802",
+x"44000002",
+x"46200000",
+x"44200003",
+x"48600003",
+x"44003807",
+x"080018D8",
+x"44003806",
+x"C4E3FFFC",
+x"46C31001",
+x"E8500003",
+x"44400806",
+x"080018DE",
+x"44400807",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"08001904",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"080018F5",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080018F0",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"080018F5",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001904",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080018FF",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001904",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001927",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08001918",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08001913",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001918",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001927",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08001922",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001927",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"E8800006",
+x"EA020003",
+x"20030000",
+x"0800192C",
+x"20030001",
+x"08001931",
+x"EA020003",
+x"20030001",
+x"08001931",
+x"20030000",
+x"E8800003",
+x"44000806",
+x"08001935",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"08001939",
+x"44810001",
+x"44150802",
+x"44210002",
+x"44191003",
+x"47421001",
+x"44021003",
+x"47021001",
+x"44021003",
+x"46E21001",
+x"44020003",
+x"46200001",
+x"44200803",
+x"45C10002",
+x"44210802",
+x"46210800",
+x"44010003",
+x"48600003",
+x"44006807",
+x"0800194C",
+x"44006806",
+x"E8700003",
+x"44600806",
+x"08001950",
+x"44600807",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"08001976",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08001967",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08001962",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001967",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001976",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08001971",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001976",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001999",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"0800198A",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08001985",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"0800198A",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001999",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08001994",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001999",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"E8800006",
+x"EA030003",
+x"20030000",
+x"0800199E",
+x"20030001",
+x"080019A3",
+x"EA030003",
+x"20030001",
+x"080019A3",
+x"20030000",
+x"E8800003",
+x"44000806",
+x"080019A7",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"080019AB",
+x"44810001",
+x"44150802",
+x"44210002",
+x"44191003",
+x"47421001",
+x"44021003",
+x"47021001",
+x"44021003",
+x"46E21001",
+x"44020003",
+x"46200001",
+x"44200803",
+x"45C10002",
+x"44210802",
+x"46210800",
+x"44010003",
+x"48600003",
+x"44004807",
+x"080019BE",
+x"44004806",
+x"C4E3FFF8",
+x"46C31001",
+x"E8500003",
+x"44400806",
+x"080019C4",
+x"44400807",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"080019EA",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"080019DB",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080019D6",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"080019DB",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"080019EA",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080019E5",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"080019EA",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001A0D",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"080019FE",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"080019F9",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"080019FE",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001A0D",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08001A08",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001A0D",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"E8800006",
+x"EA020003",
+x"20030000",
+x"08001A12",
+x"20030001",
+x"08001A17",
+x"EA020003",
+x"20030001",
+x"08001A17",
+x"20030000",
+x"E8800003",
+x"44000806",
+x"08001A1B",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"08001A1F",
+x"44810001",
+x"44150802",
+x"44210002",
+x"44191003",
+x"47421001",
+x"44021003",
+x"47021001",
+x"44021003",
+x"46E21001",
+x"44020003",
+x"46200001",
+x"44200003",
+x"45C00802",
+x"44000002",
+x"46200000",
+x"44200003",
+x"48600003",
+x"44001007",
+x"08001A32",
+x"44001006",
+x"E8700003",
+x"44600806",
+x"08001A36",
+x"44600807",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"08001A5C",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08001A4D",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08001A48",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001A4D",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001A5C",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08001A57",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001A5C",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001A7F",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08001A70",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08001A6B",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001A70",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001A7F",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08001A7A",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08001A7F",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"E8800006",
+x"EA030003",
+x"20030000",
+x"08001A84",
+x"20030001",
+x"08001A89",
+x"EA030003",
+x"20030001",
+x"08001A89",
+x"20030000",
+x"E8800003",
+x"44000806",
+x"08001A8D",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"08001A91",
+x"44810001",
+x"44150802",
+x"44210002",
+x"44191803",
+x"47431801",
+x"44031803",
+x"47031801",
+x"44031803",
+x"46E31801",
+x"44030003",
+x"46200001",
+x"44200003",
+x"45C00802",
+x"44000002",
+x"46200000",
+x"44200803",
+x"48600003",
+x"44200007",
+x"08001AA4",
+x"44200006",
+x"45A26002",
+x"44E92802",
+x"44A21802",
+x"C42F0000",
+x"45E00802",
+x"44615001",
+x"45E90802",
+x"44222002",
+x"44E01802",
+x"44833000",
+x"45A05802",
+x"44A02002",
+x"45E21802",
+x"44834000",
+x"44200802",
+x"44E20002",
+x"44202801",
+x"45204807",
+x"44ED3802",
+x"45ED2002",
+x"C5000000",
+x"C502FFFC",
+x"C503FFF8",
+x"458C0802",
+x"44016802",
+x"456B0802",
+x"44410802",
+x"45A16800",
+x"45290802",
+x"44610802",
+x"45A10800",
+x"E5010000",
+x"454A0802",
+x"44016802",
+x"45080802",
+x"44410802",
+x"45A16800",
+x"44E70802",
+x"44610802",
+x"45A10800",
+x"E501FFFC",
+x"44C60802",
+x"44016802",
+x"44A50802",
+x"44410802",
+x"45A16800",
+x"44840802",
+x"44610802",
+x"45A10800",
+x"E501FFF8",
+x"440A0802",
+x"44266802",
+x"44480802",
+x"44250802",
+x"45A16800",
+x"44670802",
+x"44240802",
+x"45A10800",
+x"45C10802",
+x"E4E10000",
+x"440C0802",
+x"44263002",
+x"444B0002",
+x"44051002",
+x"44C22800",
+x"44691802",
+x"44641002",
+x"44A21000",
+x"45C21002",
+x"E4E2FFFC",
+x"442A0802",
+x"44080002",
+x"44200800",
+x"44670002",
+x"44200000",
+x"45C00002",
+x"E4E0FFF8",
+x"20030001",
+x"48600003",
+x"AFF0001C",
+x"E0000000",
+x"22100001",
+x"0800110D",
+x"20030000",
+x"AFE30004",
+x"20030000",
+x"AFE30008",
+x"04002000",
+x"20070030",
+x"68870007",
+x"20070039",
+x"68E40003",
+x"20070000",
+x"08001B03",
+x"20070001",
+x"08001B05",
+x"20070001",
+x"48E00036",
+x"8FE30008",
+x"48600004",
+x"20030001",
+x"AFE30008",
+x"08001B0B",
+x"8FE30004",
+x"A0650003",
+x"A0630001",
+x"00A32820",
+x"40830030",
+x"00A31820",
+x"AFE30004",
+x"04002800",
+x"20070030",
+x"68A70007",
+x"20070039",
+x"68E50003",
+x"20070000",
+x"08001B1A",
+x"20070001",
+x"08001B1C",
+x"20070001",
+x"48E00018",
+x"8FE30008",
+x"48600009",
+x"2003002D",
+x"48830004",
+x"2003FFFF",
+x"AFE30008",
+x"08001B26",
+x"20030001",
+x"AFE30008",
+x"08001B27",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"20670000",
+x"08001B3A",
+x"8FE70008",
+x"48FC0003",
+x"8FE70004",
+x"08001B3A",
+x"8FE70004",
+x"00073822",
+x"08001B62",
+x"04002800",
+x"20070030",
+x"68A70007",
+x"20070039",
+x"68E50003",
+x"20070000",
+x"08001B43",
+x"20070001",
+x"08001B45",
+x"20070001",
+x"48E00018",
+x"8FE30008",
+x"48600009",
+x"2003002D",
+x"48830004",
+x"2003FFFF",
+x"AFE30008",
+x"08001B4F",
+x"20030001",
+x"AFE30008",
+x"08001B50",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"20670000",
+x"08001B62",
+x"20060000",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"20670000",
+x"48FD0004",
+x"21030001",
+x"2004FFFF",
+x"0800003F",
+x"21090001",
+x"20030000",
+x"AFE30004",
+x"20030000",
+x"AFE30008",
+x"04002800",
+x"20040030",
+x"68A40007",
+x"20040039",
+x"68850003",
+x"20040000",
+x"08001B73",
+x"20040001",
+x"08001B75",
+x"20040001",
+x"48800013",
+x"8FE30008",
+x"48600004",
+x"20030001",
+x"AFE30008",
+x"08001B7B",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"20640000",
+x"08001B8D",
+x"20060000",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"20640000",
+x"AC270000",
+x"AC280004",
+x"489D0007",
+x"21230001",
+x"2004FFFF",
+x"4021000C",
+x"C000003F",
+x"2021000C",
+x"08001BA1",
+x"21230001",
+x"AC240008",
+x"AC29000C",
+x"20680000",
+x"40210014",
+x"C0001AF7",
+x"20210014",
+x"8C29000C",
+x"A1250002",
+x"8C240008",
+x"6C652000",
+x"8C280004",
+x"A1040002",
+x"8C270000",
+x"6C643800",
+x"E0000000",
+x"20030000",
+x"AFE30004",
+x"20030000",
+x"AFE30008",
+x"04002800",
+x"20030030",
+x"68A30007",
+x"20030039",
+x"68650003",
+x"20030000",
+x"08001BB2",
+x"20030001",
+x"08001BB4",
+x"20030001",
+x"48600012",
+x"8FE30008",
+x"48600004",
+x"20030001",
+x"AFE30008",
+x"08001BBA",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"08001BCA",
+x"20060000",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"487D0008",
+x"20030001",
+x"2004FFFF",
+x"40210004",
+x"C000003F",
+x"20210004",
+x"20650000",
+x"08001BDA",
+x"20080001",
+x"AC230000",
+x"40210008",
+x"C0001AF7",
+x"20210008",
+x"20650000",
+x"8C230000",
+x"ACA30000",
+x"8CA30000",
+x"487D0004",
+x"21630001",
+x"20A40000",
+x"0800003F",
+x"216A0001",
+x"20030000",
+x"AFE30004",
+x"20030000",
+x"AFE30008",
+x"04003800",
+x"20030030",
+x"68E30007",
+x"20030039",
+x"68670003",
+x"20030000",
+x"08001BEC",
+x"20030001",
+x"08001BEE",
+x"20030001",
+x"AC250004",
+x"48600013",
+x"8FE30008",
+x"48600004",
+x"20030001",
+x"AFE30008",
+x"08001BF5",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40E30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"20E50000",
+x"4021000C",
+x"C0000E4E",
+x"2021000C",
+x"08001C07",
+x"20060000",
+x"20E50000",
+x"4021000C",
+x"C0000E4E",
+x"2021000C",
+x"487D0008",
+x"20030001",
+x"2004FFFF",
+x"4021000C",
+x"C000003F",
+x"2021000C",
+x"20640000",
+x"08001C17",
+x"20080001",
+x"AC230008",
+x"40210010",
+x"C0001AF7",
+x"20210010",
+x"20640000",
+x"8C230008",
+x"AC830000",
+x"8C830000",
+x"AC2B000C",
+x"487D0006",
+x"21430001",
+x"40210014",
+x"C000003F",
+x"20210014",
+x"08001C2A",
+x"21430001",
+x"AC240010",
+x"AC2A0014",
+x"206B0000",
+x"4021001C",
+x"C0001BA6",
+x"2021001C",
+x"8C2A0014",
+x"A1460002",
+x"8C240010",
+x"6C662000",
+x"8C2B000C",
+x"A1640002",
+x"8C250004",
+x"6C642800",
+x"E0000000",
+x"20030000",
+x"AFE30004",
+x"20030000",
+x"AFE30008",
+x"04002000",
+x"200A0030",
+x"688A0007",
+x"200A0039",
+x"69440003",
+x"200A0000",
+x"08001C3B",
+x"200A0001",
+x"08001C3D",
+x"200A0001",
+x"49400036",
+x"8FE30008",
+x"48600004",
+x"20030001",
+x"AFE30008",
+x"08001C43",
+x"8FE30004",
+x"A0650003",
+x"A0630001",
+x"00A32820",
+x"40830030",
+x"00A31820",
+x"AFE30004",
+x"04002800",
+x"200A0030",
+x"68AA0007",
+x"200A0039",
+x"69450003",
+x"200A0000",
+x"08001C52",
+x"200A0001",
+x"08001C54",
+x"200A0001",
+x"49400018",
+x"8FE30008",
+x"48600009",
+x"2003002D",
+x"48830004",
+x"2003FFFF",
+x"AFE30008",
+x"08001C5E",
+x"20030001",
+x"AFE30008",
+x"08001C5F",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"206A0000",
+x"08001C72",
+x"8FEA0008",
+x"495C0003",
+x"8FEA0004",
+x"08001C72",
+x"8FEA0004",
+x"000A5022",
+x"08001C9A",
+x"04002800",
+x"200A0030",
+x"68AA0007",
+x"200A0039",
+x"69450003",
+x"200A0000",
+x"08001C7B",
+x"200A0001",
+x"08001C7D",
+x"200A0001",
+x"49400018",
+x"8FE30008",
+x"48600009",
+x"2003002D",
+x"48830004",
+x"2003FFFF",
+x"AFE30008",
+x"08001C87",
+x"20030001",
+x"AFE30008",
+x"08001C88",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"206A0000",
+x"08001C9A",
+x"20060000",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"206A0000",
+x"495D0007",
+x"20030001",
+x"2004FFFF",
+x"40210004",
+x"C000003F",
+x"20210004",
+x"08001CD4",
+x"20030000",
+x"AFE30004",
+x"20030000",
+x"AFE30008",
+x"04002800",
+x"200C0030",
+x"68AC0007",
+x"200C0039",
+x"69850003",
+x"200C0000",
+x"08001CAD",
+x"200C0001",
+x"08001CAF",
+x"200C0001",
+x"49800013",
+x"8FE30008",
+x"48600004",
+x"20030001",
+x"AFE30008",
+x"08001CB5",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"206C0000",
+x"08001CC7",
+x"20060000",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"206C0000",
+x"499D0007",
+x"20030002",
+x"2004FFFF",
+x"40210004",
+x"C000003F",
+x"20210004",
+x"08001CD3",
+x"20080002",
+x"40210004",
+x"C0001AF7",
+x"20210004",
+x"AC6CFFFC",
+x"AC6A0000",
+x"8C640000",
+x"489D0002",
+x"E0000000",
+x"A1640002",
+x"03E42020",
+x"AC830200",
+x"216B0001",
+x"20030000",
+x"AFE30004",
+x"20030000",
+x"AFE30008",
+x"04002800",
+x"200A0030",
+x"68AA0007",
+x"200A0039",
+x"69450003",
+x"200A0000",
+x"08001CE7",
+x"200A0001",
+x"08001CE9",
+x"200A0001",
+x"49400013",
+x"8FE30008",
+x"48600004",
+x"20030001",
+x"AFE30008",
+x"08001CEF",
+x"8FE30004",
+x"A0640003",
+x"A0630001",
+x"00832020",
+x"40A30030",
+x"00831820",
+x"AFE30004",
+x"20060001",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"206A0000",
+x"08001D01",
+x"20060000",
+x"40210004",
+x"C0000E4E",
+x"20210004",
+x"206A0000",
+x"495D0007",
+x"20030001",
+x"2004FFFF",
+x"40210004",
+x"C000003F",
+x"20210004",
+x"08001D0D",
+x"20080001",
+x"40210004",
+x"C0001AF7",
+x"20210004",
+x"AC6A0000",
+x"8C640000",
+x"489D0002",
+x"E0000000",
+x"A1640002",
+x"03E42020",
+x"AC830200",
+x"216B0001",
+x"08001C2F",
+x"68A000C6",
+x"A0A30002",
+x"03E31820",
+x"8C690110",
+x"8D23FFFC",
+x"487C0042",
+x"20030006",
+x"46000006",
+x"40210004",
+x"C0000048",
+x"20210004",
+x"C4E00000",
+x"C8100011",
+x"8D24FFE8",
+x"E8100003",
+x"200A0000",
+x"08001D27",
+x"200A0001",
+x"8D28FFF0",
+x"C5010000",
+x"488A0003",
+x"44200007",
+x"08001D2D",
+x"44200006",
+x"E4600000",
+x"C4E00000",
+x"46200003",
+x"E460FFFC",
+x"08001D33",
+x"E470FFFC",
+x"C4E0FFFC",
+x"C8100011",
+x"8D24FFE8",
+x"E8100003",
+x"200A0000",
+x"08001D3A",
+x"200A0001",
+x"8D28FFF0",
+x"C501FFFC",
+x"488A0003",
+x"44200007",
+x"08001D40",
+x"44200006",
+x"E460FFF8",
+x"C4E0FFFC",
+x"46200003",
+x"E460FFF4",
+x"08001D46",
+x"E470FFF4",
+x"C4E0FFF8",
+x"C8100011",
+x"8D24FFE8",
+x"E8100003",
+x"200A0000",
+x"08001D4D",
+x"200A0001",
+x"8D28FFF0",
+x"C501FFF8",
+x"488A0003",
+x"44200007",
+x"08001D53",
+x"44200006",
+x"E460FFF0",
+x"C4E0FFF8",
+x"46200003",
+x"E460FFEC",
+x"08001D59",
+x"E470FFEC",
+x"A0A40002",
+x"6CC41800",
+x"08001DD9",
+x"20040002",
+x"48640026",
+x"20030004",
+x"46000006",
+x"40210004",
+x"C0000048",
+x"20210004",
+x"C4E10000",
+x"8D24FFF0",
+x"C4800000",
+x"44201002",
+x"C4E1FFFC",
+x"C480FFFC",
+x"44200002",
+x"44401000",
+x"C4E1FFF8",
+x"C480FFF8",
+x"44200002",
+x"44400000",
+x"EA000003",
+x"E4700000",
+x"08001D80",
+x"46800803",
+x"E4610000",
+x"C4810000",
+x"44200803",
+x"44200807",
+x"E461FFFC",
+x"C481FFFC",
+x"44200803",
+x"44200807",
+x"E461FFF8",
+x"C481FFF8",
+x"44200003",
+x"44000007",
+x"E460FFF4",
+x"A0A40002",
+x"6CC41800",
+x"08001DD9",
+x"20030005",
+x"46000006",
+x"40210004",
+x"C0000048",
+x"20210004",
+x"C4E00000",
+x"C4E1FFFC",
+x"C4E2FFF8",
+x"44001802",
+x"8D24FFF0",
+x"C4850000",
+x"44652002",
+x"44211802",
+x"C486FFFC",
+x"44661802",
+x"44833800",
+x"44421802",
+x"C484FFF8",
+x"44641802",
+x"44E33800",
+x"8D28FFF4",
+x"49000003",
+x"44E01806",
+x"08001DA8",
+x"44224002",
+x"8D24FFDC",
+x"C4830000",
+x"45031802",
+x"44E34000",
+x"44403802",
+x"C483FFFC",
+x"44E31802",
+x"45034000",
+x"44013802",
+x"C483FFF8",
+x"44E31802",
+x"45031800",
+x"44050002",
+x"44000007",
+x"44260802",
+x"44200807",
+x"44441002",
+x"44401007",
+x"E4630000",
+x"49000005",
+x"E460FFFC",
+x"E461FFF8",
+x"E462FFF4",
+x"08001DD3",
+x"C4E5FFF8",
+x"8D24FFDC",
+x"C484FFFC",
+x"44A43002",
+x"C4E5FFFC",
+x"C484FFF8",
+x"44A42002",
+x"44C42000",
+x"44952002",
+x"44040001",
+x"E460FFFC",
+x"C4E4FFF8",
+x"C4800000",
+x"44802802",
+x"C4E40000",
+x"C480FFF8",
+x"44800002",
+x"44A00000",
+x"44150002",
+x"44200001",
+x"E460FFF8",
+x"C4E1FFFC",
+x"C4800000",
+x"44202002",
+x"C4E10000",
+x"C480FFFC",
+x"44200002",
+x"44800000",
+x"44150002",
+x"44400001",
+x"E460FFF4",
+x"C8700004",
+x"46230003",
+x"E460FFF0",
+x"08001DD7",
+x"A0A40002",
+x"6CC41800",
+x"40A50001",
+x"08001D15",
+x"E0000000",
+x"6880009C",
+x"A0850002",
+x"03E52820",
+x"8CA50110",
+x"8CA8FFD8",
+x"8CA7FFFC",
+x"C4610000",
+x"8CA6FFEC",
+x"C4C00000",
+x"44200001",
+x"E5000000",
+x"C461FFFC",
+x"C4C0FFFC",
+x"44200001",
+x"E500FFFC",
+x"C461FFF8",
+x"C4C0FFF8",
+x"44200001",
+x"E500FFF8",
+x"20060002",
+x"48E6000F",
+x"8CA5FFF0",
+x"C5010000",
+x"C503FFFC",
+x"C502FFF8",
+x"C4A00000",
+x"44010802",
+x"C4A0FFFC",
+x"44030002",
+x"44200800",
+x"C4A0FFF8",
+x"44020002",
+x"44200000",
+x"E500FFF4",
+x"08001E28",
+x"20060002",
+x"68C70002",
+x"08001E28",
+x"C5020000",
+x"C501FFFC",
+x"C500FFF8",
+x"44422002",
+x"8CA6FFF0",
+x"C4C30000",
+x"44832802",
+x"44212002",
+x"C4C3FFFC",
+x"44831802",
+x"44A32800",
+x"44002002",
+x"C4C3FFF8",
+x"44831802",
+x"44A32000",
+x"8CA6FFF4",
+x"48C00003",
+x"44801806",
+x"08001E22",
+x"44202802",
+x"8CA5FFDC",
+x"C4A30000",
+x"44A31802",
+x"44832000",
+x"44021802",
+x"C4A0FFFC",
+x"44600002",
+x"44802000",
+x"44410802",
+x"C4A0FFF8",
+x"44201802",
+x"44831800",
+x"20050003",
+x"48E50003",
+x"44710001",
+x"08001E27",
+x"44600006",
+x"E500FFF4",
+x"40880001",
+x"6900004E",
+x"A1040002",
+x"03E42020",
+x"8C840110",
+x"8C87FFD8",
+x"8C86FFFC",
+x"C4610000",
+x"8C85FFEC",
+x"C4A00000",
+x"44200001",
+x"E4E00000",
+x"C461FFFC",
+x"C4A0FFFC",
+x"44200001",
+x"E4E0FFFC",
+x"C461FFF8",
+x"C4A0FFF8",
+x"44200001",
+x"E4E0FFF8",
+x"20050002",
+x"48C5000F",
+x"8C84FFF0",
+x"C4E10000",
+x"C4E3FFFC",
+x"C4E2FFF8",
+x"C4800000",
+x"44010802",
+x"C480FFFC",
+x"44030002",
+x"44200800",
+x"C480FFF8",
+x"44020002",
+x"44200000",
+x"E4E0FFF4",
+x"08001E75",
+x"20050002",
+x"68A60002",
+x"08001E75",
+x"C4E20000",
+x"C4E1FFFC",
+x"C4E0FFF8",
+x"44422002",
+x"8C85FFF0",
+x"C4A30000",
+x"44832802",
+x"44212002",
+x"C4A3FFFC",
+x"44831802",
+x"44A32800",
+x"44002002",
+x"C4A3FFF8",
+x"44831802",
+x"44A32000",
+x"8C85FFF4",
+x"48A00003",
+x"44801806",
+x"08001E6F",
+x"44202802",
+x"8C84FFDC",
+x"C4830000",
+x"44A31802",
+x"44832000",
+x"44021802",
+x"C480FFFC",
+x"44600002",
+x"44802000",
+x"44410802",
+x"C480FFF8",
+x"44201802",
+x"44831800",
+x"20040003",
+x"48C40003",
+x"44710001",
+x"08001E74",
+x"44600006",
+x"E4E0FFF4",
+x"41040001",
+x"08001DDC",
+x"E0000000",
+x"E0000000",
+x"A0A30002",
+x"4C833000",
+x"48DD0003",
+x"20030001",
+x"E0000000",
+x"A0C30002",
+x"03E31820",
+x"8C670110",
+x"8CE3FFEC",
+x"C4600000",
+x"44A00001",
+x"C461FFFC",
+x"44811001",
+x"C461FFF8",
+x"44610801",
+x"8CE6FFFC",
+x"48DC0024",
+x"E8100003",
+x"44003006",
+x"08001E8E",
+x"44003007",
+x"8CE3FFF0",
+x"C4600000",
+x"E8C00003",
+x"20060000",
+x"08001EA4",
+x"E8500003",
+x"44400006",
+x"08001E97",
+x"44400007",
+x"C462FFFC",
+x"E8020003",
+x"20060000",
+x"08001EA4",
+x"E8300003",
+x"44200006",
+x"08001E9F",
+x"44200007",
+x"C461FFF8",
+x"E8010003",
+x"20060000",
+x"08001EA4",
+x"20060001",
+x"48C00007",
+x"8CE3FFE8",
+x"48600003",
+x"20030001",
+x"08001EAA",
+x"20030000",
+x"08001EAC",
+x"8CE3FFE8",
+x"08001EED",
+x"20030002",
+x"48C30014",
+x"8CE3FFF0",
+x"C4660000",
+x"44C03002",
+x"C460FFFC",
+x"44020002",
+x"44C01000",
+x"C460FFF8",
+x"44010002",
+x"44400000",
+x"8CE3FFE8",
+x"E8100003",
+x"20060000",
+x"08001EBD",
+x"20060001",
+x"48660003",
+x"20030001",
+x"08001EC1",
+x"20030000",
+x"08001EED",
+x"44003802",
+x"8CE3FFF0",
+x"C4660000",
+x"44E64002",
+x"44423802",
+x"C466FFFC",
+x"44E63002",
+x"45064000",
+x"44213802",
+x"C466FFF8",
+x"44E63002",
+x"45063800",
+x"8CE3FFF4",
+x"48600003",
+x"44E03006",
+x"08001EDF",
+x"44414002",
+x"8CE3FFDC",
+x"C4660000",
+x"45063002",
+x"44E63800",
+x"44203002",
+x"C461FFFC",
+x"44C10802",
+x"44E13800",
+x"44020802",
+x"C460FFF8",
+x"44203002",
+x"44E63000",
+x"20030003",
+x"48C30003",
+x"44D10001",
+x"08001EE4",
+x"44C00006",
+x"8CE3FFE8",
+x"E8100003",
+x"20060000",
+x"08001EE9",
+x"20060001",
+x"48660003",
+x"20030001",
+x"08001EED",
+x"20030000",
+x"4860007B",
+x"20A70001",
+x"A0E30002",
+x"4C832800",
+x"48BD0003",
+x"20030001",
+x"E0000000",
+x"A0A30002",
+x"03E31820",
+x"8C660110",
+x"8CC3FFEC",
+x"C4600000",
+x"44A00001",
+x"C461FFFC",
+x"44811001",
+x"C461FFF8",
+x"44610801",
+x"8CC5FFFC",
+x"48BC0024",
+x"E8100003",
+x"44003006",
+x"08001F04",
+x"44003007",
+x"8CC3FFF0",
+x"C4600000",
+x"E8C00003",
+x"20050000",
+x"08001F1A",
+x"E8500003",
+x"44400006",
+x"08001F0D",
+x"44400007",
+x"C462FFFC",
+x"E8020003",
+x"20050000",
+x"08001F1A",
+x"E8300003",
+x"44200006",
+x"08001F15",
+x"44200007",
+x"C461FFF8",
+x"E8010003",
+x"20050000",
+x"08001F1A",
+x"20050001",
+x"48A00007",
+x"8CC3FFE8",
+x"48600003",
+x"20030001",
+x"08001F20",
+x"20030000",
+x"08001F22",
+x"8CC3FFE8",
+x"08001F63",
+x"20030002",
+x"48A30014",
+x"8CC3FFF0",
+x"C4660000",
+x"44C03002",
+x"C460FFFC",
+x"44020002",
+x"44C01000",
+x"C460FFF8",
+x"44010002",
+x"44400000",
+x"8CC3FFE8",
+x"E8100003",
+x"20050000",
+x"08001F33",
+x"20050001",
+x"48650003",
+x"20030001",
+x"08001F37",
+x"20030000",
+x"08001F63",
+x"44003802",
+x"8CC3FFF0",
+x"C4660000",
+x"44E64002",
+x"44423802",
+x"C466FFFC",
+x"44E63002",
+x"45064000",
+x"44213802",
+x"C466FFF8",
+x"44E63002",
+x"45063800",
+x"8CC3FFF4",
+x"48600003",
+x"44E03006",
+x"08001F55",
+x"44414002",
+x"8CC3FFDC",
+x"C4660000",
+x"45063002",
+x"44E63800",
+x"44203002",
+x"C461FFFC",
+x"44C10802",
+x"44E13800",
+x"44020802",
+x"C460FFF8",
+x"44203002",
+x"44E63000",
+x"20030003",
+x"48A30003",
+x"44D10001",
+x"08001F5A",
+x"44C00006",
+x"8CC3FFE8",
+x"E8100003",
+x"20050000",
+x"08001F5F",
+x"20050001",
+x"48650003",
+x"20030001",
+x"08001F63",
+x"20030000",
+x"48600003",
+x"20E50001",
+x"08001E79",
+x"20030000",
+x"E0000000",
+x"20030000",
+x"E0000000",
+x"A1030002",
+x"4C834800",
+x"493D0003",
+x"20030000",
+x"E0000000",
+x"A1230002",
+x"03E31820",
+x"8C660110",
+x"C7E1021C",
+x"8CC3FFEC",
+x"C4600000",
+x"44201801",
+x"C7E10218",
+x"C460FFFC",
+x"44202001",
+x"C7E10214",
+x"C460FFF8",
+x"44201001",
+x"A1230002",
+x"03E31820",
+x"8C6703CC",
+x"8CC5FFFC",
+x"48BC006A",
+x"C4E00000",
+x"44030001",
+x"C4E1FFFC",
+x"44010002",
+x"C7E502D8",
+x"44052802",
+x"44A43000",
+x"E8D00003",
+x"44C02806",
+x"08001F8C",
+x"44C02807",
+x"8CC5FFF0",
+x"C4A6FFFC",
+x"E8A60003",
+x"20030000",
+x"08001FA0",
+x"C7E502D4",
+x"44052802",
+x"44A23000",
+x"E8D00003",
+x"44C02806",
+x"08001F98",
+x"44C02807",
+x"C4A6FFF8",
+x"E8A60003",
+x"20030000",
+x"08001FA0",
+x"C8300003",
+x"20030001",
+x"08001FA0",
+x"20030000",
+x"48600047",
+x"C4E0FFF8",
+x"44040001",
+x"C4E1FFF4",
+x"44010002",
+x"C7E502DC",
+x"44052802",
+x"44A33000",
+x"E8D00003",
+x"44C02806",
+x"08001FAC",
+x"44C02807",
+x"C4A60000",
+x"E8A60003",
+x"20030000",
+x"08001FBF",
+x"C7E502D4",
+x"44052802",
+x"44A23000",
+x"E8D00003",
+x"44C02806",
+x"08001FB7",
+x"44C02807",
+x"C4A6FFF8",
+x"E8A60003",
+x"20030000",
+x"08001FBF",
+x"C8300003",
+x"20030001",
+x"08001FBF",
+x"20030000",
+x"48600025",
+x"C4E0FFF0",
+x"44020801",
+x"C4E0FFEC",
+x"44202802",
+x"C7E102DC",
+x"44A10802",
+x"44231000",
+x"E8500003",
+x"44400806",
+x"08001FCB",
+x"44400807",
+x"C4A20000",
+x"E8220003",
+x"20030000",
+x"08001FDE",
+x"C7E102D8",
+x"44A10802",
+x"44241000",
+x"E8500003",
+x"44400806",
+x"08001FD6",
+x"44400807",
+x"C4A2FFFC",
+x"E8220003",
+x"20030000",
+x"08001FDE",
+x"C8100003",
+x"20030001",
+x"08001FDE",
+x"20030000",
+x"48600003",
+x"20030000",
+x"08001FE3",
+x"E7E50208",
+x"20030003",
+x"08001FE6",
+x"E7E00208",
+x"20030002",
+x"08001FE9",
+x"E7E00208",
+x"20030001",
+x"0800203D",
+x"20030002",
+x"48A30010",
+x"C4E00000",
+x"E8100003",
+x"20030000",
+x"08001FFA",
+x"C4E0FFFC",
+x"44030802",
+x"C4E0FFF8",
+x"44040002",
+x"44200800",
+x"C4E0FFF4",
+x"44020002",
+x"44200000",
+x"E7E00208",
+x"20030001",
+x"0800203D",
+x"C4E00000",
+x"C8100040",
+x"C4E1FFFC",
+x"44232802",
+x"C4E1FFF8",
+x"44240802",
+x"44A12800",
+x"C4E1FFF4",
+x"44220802",
+x"44A10800",
+x"44633002",
+x"8CC3FFF0",
+x"C4650000",
+x"44C53802",
+x"44843002",
+x"C465FFFC",
+x"44C52802",
+x"44E53800",
+x"44423002",
+x"C465FFF8",
+x"44C52802",
+x"44E53000",
+x"8CC3FFF4",
+x"48600003",
+x"44C02806",
+x"08002022",
+x"44823802",
+x"8CC3FFDC",
+x"C4650000",
+x"44E52802",
+x"44C53000",
+x"44432802",
+x"C462FFFC",
+x"44A21002",
+x"44C23000",
+x"44641802",
+x"C462FFF8",
+x"44622802",
+x"44C52800",
+x"20030003",
+x"48A30003",
+x"44B11001",
+x"08002027",
+x"44A01006",
+x"44211802",
+x"44020002",
+x"44600001",
+x"EA000003",
+x"20030000",
+x"0800203B",
+x"8CC3FFE8",
+x"48600007",
+x"44000004",
+x"44200801",
+x"C4E0FFF0",
+x"44200002",
+x"E7E00208",
+x"0800203A",
+x"44000004",
+x"44200800",
+x"C4E0FFF0",
+x"44200002",
+x"E7E00208",
+x"20030001",
+x"0800203D",
+x"20030000",
+x"C7E00208",
+x"48600003",
+x"20030000",
+x"08002047",
+x"2003009C",
+x"C4610000",
+x"E8010003",
+x"20030000",
+x"08002047",
+x"20030001",
+x"4860000A",
+x"A1230002",
+x"03E31820",
+x"8C630110",
+x"8C63FFE8",
+x"48600003",
+x"20030000",
+x"E0000000",
+x"21080001",
+x"08001F6A",
+x"20030098",
+x"C4610000",
+x"44010000",
+x"C7E10134",
+x"44201002",
+x"C7E1021C",
+x"44412800",
+x"C7E10130",
+x"44201002",
+x"C7E10218",
+x"44412000",
+x"C7E1012C",
+x"44200802",
+x"C7E00214",
+x"44201800",
+x"8C850000",
+x"AC240000",
+x"48BD0003",
+x"20030001",
+x"080020DB",
+x"A0A30002",
+x"03E31820",
+x"8C660110",
+x"8CC3FFEC",
+x"C4600000",
+x"44A00001",
+x"C461FFFC",
+x"44811001",
+x"C461FFF8",
+x"44610801",
+x"8CC5FFFC",
+x"48BC0024",
+x"E8100003",
+x"44003006",
+x"08002075",
+x"44003007",
+x"8CC3FFF0",
+x"C4600000",
+x"E8C00003",
+x"20050000",
+x"0800208B",
+x"E8500003",
+x"44400006",
+x"0800207E",
+x"44400007",
+x"C462FFFC",
+x"E8020003",
+x"20050000",
+x"0800208B",
+x"E8300003",
+x"44200006",
+x"08002086",
+x"44200007",
+x"C461FFF8",
+x"E8010003",
+x"20050000",
+x"0800208B",
+x"20050001",
+x"48A00007",
+x"8CC3FFE8",
+x"48600003",
+x"20030001",
+x"08002091",
+x"20030000",
+x"08002093",
+x"8CC3FFE8",
+x"080020D4",
+x"20030002",
+x"48A30014",
+x"8CC3FFF0",
+x"C4660000",
+x"44C03002",
+x"C460FFFC",
+x"44020002",
+x"44C01000",
+x"C460FFF8",
+x"44010002",
+x"44400000",
+x"8CC3FFE8",
+x"E8100003",
+x"20050000",
+x"080020A4",
+x"20050001",
+x"48650003",
+x"20030001",
+x"080020A8",
+x"20030000",
+x"080020D4",
+x"44003802",
+x"8CC3FFF0",
+x"C4660000",
+x"44E64002",
+x"44423802",
+x"C466FFFC",
+x"44E63002",
+x"45064000",
+x"44213802",
+x"C466FFF8",
+x"44E63002",
+x"45063800",
+x"8CC3FFF4",
+x"48600003",
+x"44E03006",
+x"080020C6",
+x"44414002",
+x"8CC3FFDC",
+x"C4660000",
+x"45063002",
+x"44E63800",
+x"44203002",
+x"C461FFFC",
+x"44C10802",
+x"44E13800",
+x"44020802",
+x"C460FFF8",
+x"44203002",
+x"44E63000",
+x"20030003",
+x"48A30003",
+x"44D10001",
+x"080020CB",
+x"44C00006",
+x"8CC3FFE8",
+x"E8100003",
+x"20050000",
+x"080020D0",
+x"20050001",
+x"48650003",
+x"20030001",
+x"080020D4",
+x"20030000",
+x"48600006",
+x"20050001",
+x"40210008",
+x"C0001E79",
+x"20210008",
+x"080020DB",
+x"20030000",
+x"48600004",
+x"21080001",
+x"8C240000",
+x"08001F6A",
+x"20030001",
+x"E0000000",
+x"A1630002",
+x"4D432000",
+x"489D0003",
+x"20030000",
+x"E0000000",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210004",
+x"C0001F6A",
+x"20210004",
+x"48600073",
+x"216B0001",
+x"A1630002",
+x"4D432000",
+x"489D0003",
+x"20030000",
+x"E0000000",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210004",
+x"C0001F6A",
+x"20210004",
+x"48600063",
+x"216B0001",
+x"A1630002",
+x"4D432000",
+x"489D0003",
+x"20030000",
+x"E0000000",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210004",
+x"C0001F6A",
+x"20210004",
+x"48600053",
+x"216B0001",
+x"A1630002",
+x"4D432000",
+x"489D0003",
+x"20030000",
+x"E0000000",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210004",
+x"C0001F6A",
+x"20210004",
+x"48600043",
+x"216B0001",
+x"A1630002",
+x"4D432000",
+x"489D0003",
+x"20030000",
+x"E0000000",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210004",
+x"C0001F6A",
+x"20210004",
+x"48600033",
+x"216B0001",
+x"A1630002",
+x"4D432000",
+x"489D0003",
+x"20030000",
+x"E0000000",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210004",
+x"C0001F6A",
+x"20210004",
+x"48600023",
+x"216B0001",
+x"A1630002",
+x"4D432000",
+x"489D0003",
+x"20030000",
+x"E0000000",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210004",
+x"C0001F6A",
+x"20210004",
+x"48600013",
+x"216B0001",
+x"A1630002",
+x"4D432000",
+x"489D0003",
+x"20030000",
+x"E0000000",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210004",
+x"C0001F6A",
+x"20210004",
+x"48600003",
+x"216B0001",
+x"080020E1",
+x"20030001",
+x"E0000000",
+x"20030001",
+x"E0000000",
+x"20030001",
+x"E0000000",
+x"20030001",
+x"E0000000",
+x"20030001",
+x"E0000000",
+x"20030001",
+x"E0000000",
+x"20030001",
+x"E0000000",
+x"20030001",
+x"E0000000",
+x"A1830002",
+x"4DA35000",
+x"8D440000",
+x"489D0003",
+x"20030000",
+x"E0000000",
+x"20030063",
+x"AC2A0000",
+x"48830003",
+x"20030001",
+x"080022AE",
+x"A0830002",
+x"03E31820",
+x"8C650110",
+x"C7E1021C",
+x"8CA3FFEC",
+x"C4600000",
+x"44201801",
+x"C7E10218",
+x"C460FFFC",
+x"44202001",
+x"C7E10214",
+x"C460FFF8",
+x"44200801",
+x"A0830002",
+x"03E31820",
+x"8C6603CC",
+x"8CA4FFFC",
+x"489C006A",
+x"C4C00000",
+x"44031001",
+x"C4C0FFFC",
+x"44403002",
+x"C7E202D8",
+x"44C21002",
+x"44442800",
+x"E8B00003",
+x"44A01006",
+x"0800218A",
+x"44A01007",
+x"8CA4FFF0",
+x"C485FFFC",
+x"E8450003",
+x"20030000",
+x"0800219E",
+x"C7E202D4",
+x"44C21002",
+x"44412800",
+x"E8B00003",
+x"44A01006",
+x"08002196",
+x"44A01007",
+x"C485FFF8",
+x"E8450003",
+x"20030000",
+x"0800219E",
+x"C8100003",
+x"20030001",
+x"0800219E",
+x"20030000",
+x"48600047",
+x"C4C0FFF8",
+x"44040001",
+x"C4C6FFF4",
+x"44062802",
+x"C7E002DC",
+x"44A00002",
+x"44031000",
+x"E8500003",
+x"44400006",
+x"080021AA",
+x"44400007",
+x"C4820000",
+x"E8020003",
+x"20030000",
+x"080021BD",
+x"C7E002D4",
+x"44A00002",
+x"44011000",
+x"E8500003",
+x"44400006",
+x"080021B5",
+x"44400007",
+x"C482FFF8",
+x"E8020003",
+x"20030000",
+x"080021BD",
+x"C8D00003",
+x"20030001",
+x"080021BD",
+x"20030000",
+x"48600025",
+x"C4C0FFF0",
+x"44010001",
+x"C4C5FFEC",
+x"44051002",
+x"C7E002DC",
+x"44400002",
+x"44030800",
+x"E8300003",
+x"44200006",
+x"080021C9",
+x"44200007",
+x"C4810000",
+x"E8010003",
+x"20030000",
+x"080021DC",
+x"C7E002D8",
+x"44400002",
+x"44040800",
+x"E8300003",
+x"44200006",
+x"080021D4",
+x"44200007",
+x"C481FFFC",
+x"E8010003",
+x"20030000",
+x"080021DC",
+x"C8B00003",
+x"20030001",
+x"080021DC",
+x"20030000",
+x"48600003",
+x"20030000",
+x"080021E1",
+x"E7E20208",
+x"20030003",
+x"080021E4",
+x"E7E50208",
+x"20030002",
+x"080021E7",
+x"E7E60208",
+x"20030001",
+x"0800223B",
+x"20030002",
+x"48830010",
+x"C4C00000",
+x"E8100003",
+x"20030000",
+x"080021F8",
+x"C4C0FFFC",
+x"44031002",
+x"C4C0FFF8",
+x"44040002",
+x"44401000",
+x"C4C0FFF4",
+x"44010002",
+x"44400000",
+x"E7E00208",
+x"20030001",
+x"0800223B",
+x"C4C00000",
+x"C8100040",
+x"C4C2FFFC",
+x"44432802",
+x"C4C2FFF8",
+x"44441002",
+x"44A22800",
+x"C4C2FFF4",
+x"44411002",
+x"44A21000",
+x"44633002",
+x"8CA3FFF0",
+x"C4650000",
+x"44C53802",
+x"44843002",
+x"C465FFFC",
+x"44C52802",
+x"44E53800",
+x"44213002",
+x"C465FFF8",
+x"44C52802",
+x"44E53000",
+x"8CA3FFF4",
+x"48600003",
+x"44C02806",
+x"08002220",
+x"44813802",
+x"8CA3FFDC",
+x"C4650000",
+x"44E52802",
+x"44C53000",
+x"44232802",
+x"C461FFFC",
+x"44A10802",
+x"44C13000",
+x"44641802",
+x"C461FFF8",
+x"44612802",
+x"44C52800",
+x"20030003",
+x"48830003",
+x"44B10801",
+x"08002225",
+x"44A00806",
+x"44421802",
+x"44010002",
+x"44600001",
+x"EA000003",
+x"20030000",
+x"08002239",
+x"8CA3FFE8",
+x"48600007",
+x"44000004",
+x"44400801",
+x"C4C0FFF0",
+x"44200002",
+x"E7E00208",
+x"08002238",
+x"44000004",
+x"44400800",
+x"C4C0FFF0",
+x"44200002",
+x"E7E00208",
+x"20030001",
+x"0800223B",
+x"20030000",
+x"48600003",
+x"20030000",
+x"080022AE",
+x"C7E10208",
+x"20030094",
+x"C4600000",
+x"E8200003",
+x"20030000",
+x"080022AE",
+x"8D44FFFC",
+x"489D0003",
+x"20030000",
+x"080022AA",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210008",
+x"C0001F6A",
+x"20210008",
+x"4860005A",
+x"8D44FFF8",
+x"489D0003",
+x"20030000",
+x"080022A8",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210008",
+x"C0001F6A",
+x"20210008",
+x"4860004C",
+x"8D44FFF4",
+x"489D0003",
+x"20030000",
+x"080022A6",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210008",
+x"C0001F6A",
+x"20210008",
+x"4860003E",
+x"8D44FFF0",
+x"489D0003",
+x"20030000",
+x"080022A4",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210008",
+x"C0001F6A",
+x"20210008",
+x"48600030",
+x"8D44FFEC",
+x"489D0003",
+x"20030000",
+x"080022A2",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210008",
+x"C0001F6A",
+x"20210008",
+x"48600022",
+x"8D44FFE8",
+x"489D0003",
+x"20030000",
+x"080022A0",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210008",
+x"C0001F6A",
+x"20210008",
+x"48600014",
+x"8D44FFE4",
+x"489D0003",
+x"20030000",
+x"0800229E",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210008",
+x"C0001F6A",
+x"20210008",
+x"48600006",
+x"200B0008",
+x"40210008",
+x"C00020E1",
+x"20210008",
+x"0800229E",
+x"20030001",
+x"080022A0",
+x"20030001",
+x"080022A2",
+x"20030001",
+x"080022A4",
+x"20030001",
+x"080022A6",
+x"20030001",
+x"080022A8",
+x"20030001",
+x"080022AA",
+x"20030001",
+x"48600003",
+x"20030000",
+x"080022AE",
+x"20030001",
+x"48600003",
+x"218C0001",
+x"08002162",
+x"8C2A0000",
+x"8D44FFFC",
+x"489D0003",
+x"20030000",
+x"08002318",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210008",
+x"C0001F6A",
+x"20210008",
+x"4860005A",
+x"8D44FFF8",
+x"489D0003",
+x"20030000",
+x"08002316",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210008",
+x"C0001F6A",
+x"20210008",
+x"4860004C",
+x"8D44FFF4",
+x"489D0003",
+x"20030000",
+x"08002314",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210008",
+x"C0001F6A",
+x"20210008",
+x"4860003E",
+x"8D44FFF0",
+x"489D0003",
+x"20030000",
+x"08002312",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210008",
+x"C0001F6A",
+x"20210008",
+x"48600030",
+x"8D44FFEC",
+x"489D0003",
+x"20030000",
+x"08002310",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210008",
+x"C0001F6A",
+x"20210008",
+x"48600022",
+x"8D44FFE8",
+x"489D0003",
+x"20030000",
+x"0800230E",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210008",
+x"C0001F6A",
+x"20210008",
+x"48600014",
+x"8D44FFE4",
+x"489D0003",
+x"20030000",
+x"0800230C",
+x"A0830002",
+x"03E31820",
+x"8C640200",
+x"20080000",
+x"40210008",
+x"C0001F6A",
+x"20210008",
+x"48600006",
+x"200B0008",
+x"40210008",
+x"C00020E1",
+x"20210008",
+x"0800230C",
+x"20030001",
+x"0800230E",
+x"20030001",
+x"08002310",
+x"20030001",
+x"08002312",
+x"20030001",
+x"08002314",
+x"20030001",
+x"08002316",
+x"20030001",
+x"08002318",
+x"20030001",
+x"48600003",
+x"218C0001",
+x"08002162",
+x"20030001",
+x"E0000000",
+x"A1630002",
+x"4C835000",
+x"495D0002",
+x"E0000000",
+x"A1430002",
+x"03E31820",
+x"8C670110",
+x"C7E10270",
+x"8CE3FFEC",
+x"C4600000",
+x"44203001",
+x"C7E1026C",
+x"C460FFFC",
+x"44203801",
+x"C7E10268",
+x"C460FFF8",
+x"44202801",
+x"8CE3FFFC",
+x"487C0087",
+x"C5220000",
+x"C8500027",
+x"8CE5FFF0",
+x"8CE3FFE8",
+x"E8500003",
+x"20060000",
+x"08002338",
+x"20060001",
+x"C4A10000",
+x"48660003",
+x"44200007",
+x"0800233D",
+x"44200006",
+x"44060001",
+x"44021003",
+x"C520FFFC",
+x"44400002",
+x"44070800",
+x"E8300003",
+x"44200006",
+x"08002346",
+x"44200007",
+x"C4A1FFFC",
+x"E8010003",
+x"20080000",
+x"08002357",
+x"C520FFF8",
+x"44400002",
+x"44050800",
+x"E8300003",
+x"44200006",
+x"08002351",
+x"44200007",
+x"C4A1FFF8",
+x"E8010003",
+x"20080000",
+x"08002357",
+x"E7E20208",
+x"20080001",
+x"08002359",
+x"20080000",
+x"4900005B",
+x"C522FFFC",
+x"C8500027",
+x"8CE5FFF0",
+x"8CE3FFE8",
+x"E8500003",
+x"20060000",
+x"08002362",
+x"20060001",
+x"C4A1FFFC",
+x"48660003",
+x"44200007",
+x"08002367",
+x"44200006",
+x"44070001",
+x"44021003",
+x"C520FFF8",
+x"44400002",
+x"44050800",
+x"E8300003",
+x"44200006",
+x"08002370",
+x"44200007",
+x"C4A1FFF8",
+x"E8010003",
+x"20080000",
+x"08002381",
+x"C5200000",
+x"44400002",
+x"44060800",
+x"E8300003",
+x"44200006",
+x"0800237B",
+x"44200007",
+x"C4A10000",
+x"E8010003",
+x"20080000",
+x"08002381",
+x"E7E20208",
+x"20080001",
+x"08002383",
+x"20080000",
+x"4900002F",
+x"C522FFF8",
+x"C8500027",
+x"8CE5FFF0",
+x"8CE3FFE8",
+x"E8500003",
+x"20060000",
+x"0800238C",
+x"20060001",
+x"C4A1FFF8",
+x"48660003",
+x"44200007",
+x"08002391",
+x"44200006",
+x"44050001",
+x"44021003",
+x"C5200000",
+x"44400002",
+x"44060800",
+x"E8300003",
+x"44200006",
+x"0800239A",
+x"44200007",
+x"C4A10000",
+x"E8010003",
+x"20080000",
+x"080023AB",
+x"C520FFFC",
+x"44400002",
+x"44070800",
+x"E8300003",
+x"44200006",
+x"080023A5",
+x"44200007",
+x"C4A1FFFC",
+x"E8010003",
+x"20080000",
+x"080023AB",
+x"E7E20208",
+x"20080001",
+x"080023AD",
+x"20080000",
+x"49000003",
+x"20080000",
+x"080023B1",
+x"20080003",
+x"080023B3",
+x"20080002",
+x"080023B5",
+x"20080001",
+x"08002440",
+x"20080002",
+x"4868001A",
+x"8CE3FFF0",
+x"C5200000",
+x"C4640000",
+x"44040802",
+x"C520FFFC",
+x"C463FFFC",
+x"44030002",
+x"44201000",
+x"C520FFF8",
+x"C461FFF8",
+x"44010002",
+x"44400000",
+x"EA000003",
+x"20080000",
+x"080023D0",
+x"44862002",
+x"44671002",
+x"44821000",
+x"44250802",
+x"44410800",
+x"44200807",
+x"44200003",
+x"E7E00208",
+x"20080001",
+x"08002440",
+x"C5210000",
+x"C522FFFC",
+x"C520FFF8",
+x"44211802",
+x"8CE5FFF0",
+x"C4AA0000",
+x"446A2002",
+x"44421802",
+x"C4ACFFFC",
+x"446C1802",
+x"44832000",
+x"44001802",
+x"C4ABFFF8",
+x"446B1802",
+x"44831800",
+x"8CE6FFF4",
+x"48C00003",
+x"44604806",
+x"080023F1",
+x"44404002",
+x"8CE5FFDC",
+x"C4A40000",
+x"45042002",
+x"44644000",
+x"44012002",
+x"C4A3FFFC",
+x"44831802",
+x"45034000",
+x"44222002",
+x"C4A3FFF8",
+x"44834802",
+x"45094800",
+x"C930004E",
+x"44261802",
+x"446A2002",
+x"44471802",
+x"446C1802",
+x"44832000",
+x"44051802",
+x"446B1802",
+x"44834000",
+x"48C00003",
+x"45001806",
+x"08002411",
+x"44072002",
+x"44451802",
+x"44832000",
+x"8CE5FFDC",
+x"C4A30000",
+x"44832002",
+x"44251802",
+x"44060002",
+x"44601800",
+x"C4A0FFFC",
+x"44600002",
+x"44800000",
+x"44271802",
+x"44460802",
+x"44611000",
+x"C4A1FFF8",
+x"44410802",
+x"44010000",
+x"44151802",
+x"45031800",
+x"44C60002",
+x"440A0802",
+x"44E70002",
+x"440C0002",
+x"44200800",
+x"44A50002",
+x"440B0002",
+x"44200800",
+x"48C00003",
+x"44200006",
+x"08002429",
+x"44E51002",
+x"8CE5FFDC",
+x"C4A00000",
+x"44400002",
+x"44201000",
+x"44A60802",
+x"C4A0FFFC",
+x"44200002",
+x"44401000",
+x"44C70802",
+x"C4A0FFF8",
+x"44200002",
+x"44400000",
+x"20050003",
+x"48650003",
+x"44110801",
+x"0800242E",
+x"44000806",
+x"44631002",
+x"45210002",
+x"44400001",
+x"EA000003",
+x"20080000",
+x"0800243E",
+x"44000004",
+x"8CE3FFE8",
+x"48600003",
+x"44000807",
+x"0800243A",
+x"44000806",
+x"44230001",
+x"44090003",
+x"E7E00208",
+x"20080001",
+x"08002440",
+x"20080000",
+x"49000009",
+x"A1430002",
+x"03E31820",
+x"8C630110",
+x"8C63FFE8",
+x"48600002",
+x"E0000000",
+x"216B0001",
+x"0800231D",
+x"C7E00208",
+x"AC240000",
+x"EA000002",
+x"080024E7",
+x"C7E10210",
+x"E8010002",
+x"080024E7",
+x"20030098",
+x"C4610000",
+x"44014800",
+x"C5200000",
+x"44090802",
+x"C7E00270",
+x"44202800",
+x"C520FFFC",
+x"44090802",
+x"C7E0026C",
+x"44202000",
+x"C520FFF8",
+x"44090802",
+x"C7E00268",
+x"44201800",
+x"8C850000",
+x"E4230004",
+x"E4240008",
+x"E425000C",
+x"48BD0003",
+x"20030001",
+x"080024DC",
+x"A0A30002",
+x"03E31820",
+x"8C660110",
+x"8CC3FFEC",
+x"C4600000",
+x"44A00001",
+x"C461FFFC",
+x"44811001",
+x"C461FFF8",
+x"44610801",
+x"8CC5FFFC",
+x"48BC0024",
+x"E8100003",
+x"44003006",
+x"08002476",
+x"44003007",
+x"8CC3FFF0",
+x"C4600000",
+x"E8C00003",
+x"20050000",
+x"0800248C",
+x"E8500003",
+x"44400006",
+x"0800247F",
+x"44400007",
+x"C462FFFC",
+x"E8020003",
+x"20050000",
+x"0800248C",
+x"E8300003",
+x"44200006",
+x"08002487",
+x"44200007",
+x"C461FFF8",
+x"E8010003",
+x"20050000",
+x"0800248C",
+x"20050001",
+x"48A00007",
+x"8CC3FFE8",
+x"48600003",
+x"20030001",
+x"08002492",
+x"20030000",
+x"08002494",
+x"8CC3FFE8",
+x"080024D5",
+x"20030002",
+x"48A30014",
+x"8CC3FFF0",
+x"C4660000",
+x"44C03002",
+x"C460FFFC",
+x"44020002",
+x"44C01000",
+x"C460FFF8",
+x"44010002",
+x"44400000",
+x"8CC3FFE8",
+x"E8100003",
+x"20050000",
+x"080024A5",
+x"20050001",
+x"48650003",
+x"20030001",
+x"080024A9",
+x"20030000",
+x"080024D5",
+x"44003802",
+x"8CC3FFF0",
+x"C4660000",
+x"44E64002",
+x"44423802",
+x"C466FFFC",
+x"44E63002",
+x"45064000",
+x"44213802",
+x"C466FFF8",
+x"44E63002",
+x"45063800",
+x"8CC3FFF4",
+x"48600003",
+x"44E03006",
+x"080024C7",
+x"44414002",
+x"8CC3FFDC",
+x"C4660000",
+x"45063002",
+x"44E63800",
+x"44203002",
+x"C461FFFC",
+x"44C10802",
+x"44E13800",
+x"44020802",
+x"C460FFF8",
+x"44203002",
+x"44E63000",
+x"20030003",
+x"48A30003",
+x"44D10001",
+x"080024CC",
+x"44C00006",
+x"8CC3FFE8",
+x"E8100003",
+x"20050000",
+x"080024D1",
+x"20050001",
+x"48650003",
+x"20030001",
+x"080024D5",
+x"20030000",
+x"48600006",
+x"20050001",
+x"40210014",
+x"C0001E79",
+x"20210014",
+x"080024DC",
+x"20030000",
+x"48600002",
+x"080024E7",
+x"E7E90210",
+x"C425000C",
+x"E7E5021C",
+x"C4240008",
+x"E7E40218",
+x"C4230004",
+x"E7E30214",
+x"AFEA0220",
+x"AFE8020C",
+x"216B0001",
+x"8C240000",
+x"0800231D",
+x"A1A30002",
+x"4D831800",
+x"487D0002",
+x"E0000000",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"AC290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"21AD0001",
+x"A1A30002",
+x"4D831800",
+x"487D0002",
+x"E0000000",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"21AD0001",
+x"A1A30002",
+x"4D831800",
+x"487D0002",
+x"E0000000",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"21AD0001",
+x"A1A30002",
+x"4D831800",
+x"487D0002",
+x"E0000000",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"21AD0001",
+x"A1A30002",
+x"4D831800",
+x"487D0002",
+x"E0000000",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"21AD0001",
+x"A1A30002",
+x"4D831800",
+x"487D0002",
+x"E0000000",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"21AD0001",
+x"A1A30002",
+x"4D831800",
+x"487D0002",
+x"E0000000",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"21AD0001",
+x"A1A30002",
+x"4D831800",
+x"487D0002",
+x"E0000000",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"21AD0001",
+x"8C290000",
+x"080024EA",
+x"A1C30002",
+x"4DE36000",
+x"8D830000",
+x"487D0002",
+x"E0000000",
+x"20040063",
+x"AC290000",
+x"48640053",
+x"8D83FFFC",
+x"487D0002",
+x"080025AD",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"8D83FFF8",
+x"487D0002",
+x"080025AD",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"8D83FFF4",
+x"487D0002",
+x"080025AD",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"8D83FFF0",
+x"487D0002",
+x"080025AD",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"8D83FFEC",
+x"487D0002",
+x"080025AD",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"8D83FFE8",
+x"487D0002",
+x"080025AD",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"8D83FFE4",
+x"487D0002",
+x"080025AD",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"200D0008",
+x"8C290000",
+x"40210008",
+x"C00024EA",
+x"20210008",
+x"08002724",
+x"A0630002",
+x"03E31820",
+x"8C660110",
+x"C7E10270",
+x"8CC3FFEC",
+x"C4600000",
+x"44202801",
+x"C7E1026C",
+x"C460FFFC",
+x"44203001",
+x"C7E10268",
+x"C460FFF8",
+x"44202001",
+x"8CC4FFFC",
+x"489C0087",
+x"C5220000",
+x"C8500027",
+x"8CC4FFF0",
+x"8CC3FFE8",
+x"E8500003",
+x"20050000",
+x"080025C5",
+x"20050001",
+x"C4810000",
+x"48650003",
+x"44200007",
+x"080025CA",
+x"44200006",
+x"44050001",
+x"44021003",
+x"C520FFFC",
+x"44400002",
+x"44060800",
+x"E8300003",
+x"44200006",
+x"080025D3",
+x"44200007",
+x"C481FFFC",
+x"E8010003",
+x"20030000",
+x"080025E4",
+x"C520FFF8",
+x"44400002",
+x"44040800",
+x"E8300003",
+x"44200006",
+x"080025DE",
+x"44200007",
+x"C481FFF8",
+x"E8010003",
+x"20030000",
+x"080025E4",
+x"E7E20208",
+x"20030001",
+x"080025E6",
+x"20030000",
+x"4860005B",
+x"C522FFFC",
+x"C8500027",
+x"8CC4FFF0",
+x"8CC3FFE8",
+x"E8500003",
+x"20050000",
+x"080025EF",
+x"20050001",
+x"C481FFFC",
+x"48650003",
+x"44200007",
+x"080025F4",
+x"44200006",
+x"44060001",
+x"44021003",
+x"C520FFF8",
+x"44400002",
+x"44040800",
+x"E8300003",
+x"44200006",
+x"080025FD",
+x"44200007",
+x"C481FFF8",
+x"E8010003",
+x"20030000",
+x"0800260E",
+x"C5200000",
+x"44400002",
+x"44050800",
+x"E8300003",
+x"44200006",
+x"08002608",
+x"44200007",
+x"C4810000",
+x"E8010003",
+x"20030000",
+x"0800260E",
+x"E7E20208",
+x"20030001",
+x"08002610",
+x"20030000",
+x"4860002F",
+x"C522FFF8",
+x"C8500027",
+x"8CC4FFF0",
+x"8CC3FFE8",
+x"E8500003",
+x"20050000",
+x"08002619",
+x"20050001",
+x"C481FFF8",
+x"48650003",
+x"44200007",
+x"0800261E",
+x"44200006",
+x"44040001",
+x"44021003",
+x"C5200000",
+x"44400002",
+x"44050800",
+x"E8300003",
+x"44200006",
+x"08002627",
+x"44200007",
+x"C4810000",
+x"E8010003",
+x"20030000",
+x"08002638",
+x"C520FFFC",
+x"44400002",
+x"44060800",
+x"E8300003",
+x"44200006",
+x"08002632",
+x"44200007",
+x"C481FFFC",
+x"E8010003",
+x"20030000",
+x"08002638",
+x"E7E20208",
+x"20030001",
+x"0800263A",
+x"20030000",
+x"48600003",
+x"20030000",
+x"0800263E",
+x"20030003",
+x"08002640",
+x"20030002",
+x"08002642",
+x"20030001",
+x"080026CD",
+x"20030002",
+x"4883001A",
+x"8CC3FFF0",
+x"C5200000",
+x"C4670000",
+x"44070802",
+x"C520FFFC",
+x"C463FFFC",
+x"44030002",
+x"44201000",
+x"C520FFF8",
+x"C461FFF8",
+x"44010002",
+x"44400000",
+x"EA000003",
+x"20030000",
+x"0800265D",
+x"44E52802",
+x"44661002",
+x"44A21000",
+x"44240802",
+x"44410800",
+x"44200807",
+x"44200003",
+x"E7E00208",
+x"20030001",
+x"080026CD",
+x"C5210000",
+x"C522FFFC",
+x"C520FFF8",
+x"44211802",
+x"8CC3FFF0",
+x"C4690000",
+x"44693802",
+x"44421802",
+x"C46BFFFC",
+x"446B1802",
+x"44E33800",
+x"44001802",
+x"C46AFFF8",
+x"446A1802",
+x"44E31800",
+x"8CC5FFF4",
+x"48A00003",
+x"44604006",
+x"0800267E",
+x"44404002",
+x"8CC3FFDC",
+x"C4670000",
+x"45073802",
+x"44674000",
+x"44013802",
+x"C463FFFC",
+x"44E31802",
+x"45036000",
+x"44223802",
+x"C463FFF8",
+x"44E34002",
+x"45884000",
+x"C910004E",
+x"44251802",
+x"44693802",
+x"44461802",
+x"446B1802",
+x"44E33800",
+x"44041802",
+x"446A1802",
+x"44E33800",
+x"48A00003",
+x"44E01806",
+x"0800269E",
+x"44066002",
+x"44441802",
+x"45836000",
+x"8CC3FFDC",
+x"C4630000",
+x"45831802",
+x"44246002",
+x"44050002",
+x"45806000",
+x"C460FFFC",
+x"45800002",
+x"44600000",
+x"44261802",
+x"44450802",
+x"44611000",
+x"C461FFF8",
+x"44410802",
+x"44010000",
+x"44151802",
+x"44E31800",
+x"44A50002",
+x"44090802",
+x"44C60002",
+x"440B0002",
+x"44200800",
+x"44840002",
+x"440A0002",
+x"44200800",
+x"48A00003",
+x"44200006",
+x"080026B6",
+x"44C41002",
+x"8CC3FFDC",
+x"C4600000",
+x"44400002",
+x"44201000",
+x"44850802",
+x"C460FFFC",
+x"44200002",
+x"44401000",
+x"44A60802",
+x"C460FFF8",
+x"44200002",
+x"44400000",
+x"20030003",
+x"48830003",
+x"44110801",
+x"080026BB",
+x"44000806",
+x"44631002",
+x"45010002",
+x"44400001",
+x"EA000003",
+x"20030000",
+x"080026CB",
+x"44000004",
+x"8CC3FFE8",
+x"48600003",
+x"44000807",
+x"080026C7",
+x"44000806",
+x"44230001",
+x"44080003",
+x"E7E00208",
+x"20030001",
+x"080026CD",
+x"20030000",
+x"48600002",
+x"08002724",
+x"C7E00208",
+x"C7E10210",
+x"E8010002",
+x"08002724",
+x"8D83FFFC",
+x"487D0002",
+x"08002724",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"8D83FFF8",
+x"487D0002",
+x"08002724",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"8D83FFF4",
+x"487D0002",
+x"08002724",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"8D83FFF0",
+x"487D0002",
+x"08002724",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"8D83FFEC",
+x"487D0002",
+x"08002724",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"8D83FFE8",
+x"487D0002",
+x"08002724",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"8D83FFE4",
+x"487D0002",
+x"08002724",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200B0000",
+x"8C290000",
+x"40210008",
+x"C000231D",
+x"20210008",
+x"200D0008",
+x"8C290000",
+x"40210008",
+x"C00024EA",
+x"20210008",
+x"21CE0001",
+x"8C290000",
+x"08002554",
+x"A1430002",
+x"4C834800",
+x"493D0002",
+x"E0000000",
+x"A1230002",
+x"03E31820",
+x"8C660110",
+x"8CC5FFD8",
+x"C4A30000",
+x"C4A4FFFC",
+x"C4A2FFF8",
+x"A1230002",
+x"4D633800",
+x"8CC3FFFC",
+x"487C006A",
+x"C4E00000",
+x"44030001",
+x"C4E1FFFC",
+x"44010002",
+x"C585FFFC",
+x"44052802",
+x"44A43000",
+x"E8D00003",
+x"44C02806",
+x"08002741",
+x"44C02807",
+x"8CC3FFF0",
+x"C466FFFC",
+x"E8A60003",
+x"20080000",
+x"08002755",
+x"C585FFF8",
+x"44052802",
+x"44A23000",
+x"E8D00003",
+x"44C02806",
+x"0800274D",
+x"44C02807",
+x"C466FFF8",
+x"E8A60003",
+x"20080000",
+x"08002755",
+x"C8300003",
+x"20080001",
+x"08002755",
+x"20080000",
+x"49000047",
+x"C4E0FFF8",
+x"44040001",
+x"C4E1FFF4",
+x"44010002",
+x"C5850000",
+x"44052802",
+x"44A33000",
+x"E8D00003",
+x"44C02806",
+x"08002761",
+x"44C02807",
+x"C4660000",
+x"E8A60003",
+x"20080000",
+x"08002774",
+x"C585FFF8",
+x"44052802",
+x"44A23000",
+x"E8D00003",
+x"44C02806",
+x"0800276C",
+x"44C02807",
+x"C466FFF8",
+x"E8A60003",
+x"20080000",
+x"08002774",
+x"C8300003",
+x"20080001",
+x"08002774",
+x"20080000",
+x"49000025",
+x"C4E0FFF0",
+x"44020801",
+x"C4E0FFEC",
+x"44202802",
+x"C5810000",
+x"44A10802",
+x"44231000",
+x"E8500003",
+x"44400806",
+x"08002780",
+x"44400807",
+x"C4620000",
+x"E8220003",
+x"20080000",
+x"08002793",
+x"C581FFFC",
+x"44A10802",
+x"44241000",
+x"E8500003",
+x"44400806",
+x"0800278B",
+x"44400807",
+x"C462FFFC",
+x"E8220003",
+x"20080000",
+x"08002793",
+x"C8100003",
+x"20080001",
+x"08002793",
+x"20080000",
+x"49000003",
+x"20080000",
+x"08002798",
+x"E7E50208",
+x"20080003",
+x"0800279B",
+x"E7E00208",
+x"20080002",
+x"0800279E",
+x"E7E00208",
+x"20080001",
+x"080027CB",
+x"20080002",
+x"4868000A",
+x"C4E10000",
+x"E8300003",
+x"20080000",
+x"080027A9",
+x"C4A0FFF4",
+x"44200002",
+x"E7E00208",
+x"20080001",
+x"080027CB",
+x"C4E50000",
+x"C8B0001F",
+x"C4E0FFFC",
+x"44030802",
+x"C4E0FFF8",
+x"44040002",
+x"44200800",
+x"C4E0FFF4",
+x"44020002",
+x"44200800",
+x"C4A0FFF4",
+x"44211002",
+x"44A00002",
+x"44400001",
+x"EA000003",
+x"20080000",
+x"080027C9",
+x"8CC3FFE8",
+x"48600007",
+x"44000004",
+x"44200801",
+x"C4E0FFF0",
+x"44200002",
+x"E7E00208",
+x"080027C8",
+x"44000004",
+x"44200800",
+x"C4E0FFF0",
+x"44200002",
+x"E7E00208",
+x"20080001",
+x"080027CB",
+x"20080000",
+x"49000009",
+x"A1230002",
+x"03E31820",
+x"8C630110",
+x"8C63FFE8",
+x"48600002",
+x"E0000000",
+x"214A0001",
+x"08002727",
+x"C7E00208",
+x"AC240000",
+x"EA000002",
+x"08002872",
+x"C7E10210",
+x"E8010002",
+x"08002872",
+x"20030098",
+x"C4610000",
+x"44014800",
+x"C5800000",
+x"44090802",
+x"C7E0027C",
+x"44202800",
+x"C580FFFC",
+x"44090802",
+x"C7E00278",
+x"44202000",
+x"C580FFF8",
+x"44090802",
+x"C7E00274",
+x"44201800",
+x"8C850000",
+x"E4230004",
+x"E4240008",
+x"E425000C",
+x"48BD0003",
+x"20030001",
+x"08002867",
+x"A0A30002",
+x"03E31820",
+x"8C660110",
+x"8CC3FFEC",
+x"C4600000",
+x"44A00001",
+x"C461FFFC",
+x"44811001",
+x"C461FFF8",
+x"44610801",
+x"8CC5FFFC",
+x"48BC0024",
+x"E8100003",
+x"44003006",
+x"08002801",
+x"44003007",
+x"8CC3FFF0",
+x"C4600000",
+x"E8C00003",
+x"20050000",
+x"08002817",
+x"E8500003",
+x"44400006",
+x"0800280A",
+x"44400007",
+x"C462FFFC",
+x"E8020003",
+x"20050000",
+x"08002817",
+x"E8300003",
+x"44200006",
+x"08002812",
+x"44200007",
+x"C461FFF8",
+x"E8010003",
+x"20050000",
+x"08002817",
+x"20050001",
+x"48A00007",
+x"8CC3FFE8",
+x"48600003",
+x"20030001",
+x"0800281D",
+x"20030000",
+x"0800281F",
+x"8CC3FFE8",
+x"08002860",
+x"20030002",
+x"48A30014",
+x"8CC3FFF0",
+x"C4660000",
+x"44C03002",
+x"C460FFFC",
+x"44020002",
+x"44C01000",
+x"C460FFF8",
+x"44010002",
+x"44400000",
+x"8CC3FFE8",
+x"E8100003",
+x"20050000",
+x"08002830",
+x"20050001",
+x"48650003",
+x"20030001",
+x"08002834",
+x"20030000",
+x"08002860",
+x"44003802",
+x"8CC3FFF0",
+x"C4660000",
+x"44E64002",
+x"44423802",
+x"C466FFFC",
+x"44E63002",
+x"45064000",
+x"44213802",
+x"C466FFF8",
+x"44E63002",
+x"45063800",
+x"8CC3FFF4",
+x"48600003",
+x"44E03006",
+x"08002852",
+x"44414002",
+x"8CC3FFDC",
+x"C4660000",
+x"45063002",
+x"44E63800",
+x"44203002",
+x"C461FFFC",
+x"44C10802",
+x"44E13800",
+x"44020802",
+x"C460FFF8",
+x"44203002",
+x"44E63000",
+x"20030003",
+x"48A30003",
+x"44D10001",
+x"08002857",
+x"44C00006",
+x"8CC3FFE8",
+x"E8100003",
+x"20050000",
+x"0800285C",
+x"20050001",
+x"48650003",
+x"20030001",
+x"08002860",
+x"20030000",
+x"48600006",
+x"20050001",
+x"40210014",
+x"C0001E79",
+x"20210014",
+x"08002867",
+x"20030000",
+x"48600002",
+x"08002872",
+x"E7E90210",
+x"C425000C",
+x"E7E5021C",
+x"C4240008",
+x"E7E40218",
+x"C4230004",
+x"E7E30214",
+x"AFE90220",
+x"AFE8020C",
+x"214A0001",
+x"8C240000",
+x"08002727",
+x"A2030002",
+x"4DE31800",
+x"487D0002",
+x"E0000000",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"21AB0000",
+x"21CC0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"22100001",
+x"A2030002",
+x"4DE31800",
+x"487D0002",
+x"E0000000",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"21AB0000",
+x"21CC0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"22100001",
+x"A2030002",
+x"4DE31800",
+x"487D0002",
+x"E0000000",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"21AB0000",
+x"21CC0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"22100001",
+x"A2030002",
+x"4DE31800",
+x"487D0002",
+x"E0000000",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"21AB0000",
+x"21CC0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"22100001",
+x"A2030002",
+x"4DE31800",
+x"487D0002",
+x"E0000000",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"21AB0000",
+x"21CC0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"22100001",
+x"A2030002",
+x"4DE31800",
+x"487D0002",
+x"E0000000",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"21AB0000",
+x"21CC0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"22100001",
+x"A2030002",
+x"4DE31800",
+x"487D0002",
+x"E0000000",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"21AB0000",
+x"21CC0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"22100001",
+x"A2030002",
+x"4DE31800",
+x"487D0002",
+x"E0000000",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"21AB0000",
+x"21CC0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"22100001",
+x"08002875",
+x"A2630002",
+x"4E837800",
+x"8DE30000",
+x"487D0002",
+x"E0000000",
+x"20040063",
+x"4864005A",
+x"8DE3FFFC",
+x"487D0002",
+x"08002945",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"222B0000",
+x"224C0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"8DE3FFF8",
+x"487D0002",
+x"08002945",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"222B0000",
+x"224C0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"8DE3FFF4",
+x"487D0002",
+x"08002945",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"222B0000",
+x"224C0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"8DE3FFF0",
+x"487D0002",
+x"08002945",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"222B0000",
+x"224C0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"8DE3FFEC",
+x"487D0002",
+x"08002945",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"222B0000",
+x"224C0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"8DE3FFE8",
+x"487D0002",
+x"08002945",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"222B0000",
+x"224C0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"8DE3FFE4",
+x"487D0002",
+x"08002945",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"222B0000",
+x"224C0000",
+x"40210004",
+x"C0002727",
+x"20100008",
+x"222D0000",
+x"224E0000",
+x"C0002875",
+x"20210004",
+x"08002A44",
+x"A0640002",
+x"03E42020",
+x"8C860110",
+x"8CC5FFD8",
+x"C4A20000",
+x"C4A3FFFC",
+x"C4A1FFF8",
+x"A0630002",
+x"4E233800",
+x"8CC4FFFC",
+x"489C006A",
+x"C4E00000",
+x"44022001",
+x"C4E0FFFC",
+x"44803002",
+x"C644FFFC",
+x"44C42002",
+x"44832800",
+x"E8B00003",
+x"44A02006",
+x"0800295C",
+x"44A02007",
+x"8CC4FFF0",
+x"C485FFFC",
+x"E8850003",
+x"20030000",
+x"08002970",
+x"C644FFF8",
+x"44C42002",
+x"44812800",
+x"E8B00003",
+x"44A02006",
+x"08002968",
+x"44A02007",
+x"C485FFF8",
+x"E8850003",
+x"20030000",
+x"08002970",
+x"C8100003",
+x"20030001",
+x"08002970",
+x"20030000",
+x"48600047",
+x"C4E0FFF8",
+x"44030001",
+x"C4E6FFF4",
+x"44062802",
+x"C6400000",
+x"44A00002",
+x"44022000",
+x"E8900003",
+x"44800006",
+x"0800297C",
+x"44800007",
+x"C4840000",
+x"E8040003",
+x"20030000",
+x"0800298F",
+x"C640FFF8",
+x"44A00002",
+x"44012000",
+x"E8900003",
+x"44800006",
+x"08002987",
+x"44800007",
+x"C484FFF8",
+x"E8040003",
+x"20030000",
+x"0800298F",
+x"C8D00003",
+x"20030001",
+x"0800298F",
+x"20030000",
+x"48600025",
+x"C4E0FFF0",
+x"44010001",
+x"C4E5FFEC",
+x"44052002",
+x"C6400000",
+x"44800002",
+x"44020800",
+x"E8300003",
+x"44200006",
+x"0800299B",
+x"44200007",
+x"C4810000",
+x"E8010003",
+x"20030000",
+x"080029AE",
+x"C640FFFC",
+x"44800002",
+x"44030800",
+x"E8300003",
+x"44200006",
+x"080029A6",
+x"44200007",
+x"C481FFFC",
+x"E8010003",
+x"20030000",
+x"080029AE",
+x"C8B00003",
+x"20030001",
+x"080029AE",
+x"20030000",
+x"48600003",
+x"20030000",
+x"080029B3",
+x"E7E40208",
+x"20030003",
+x"080029B6",
+x"E7E50208",
+x"20030002",
+x"080029B9",
+x"E7E60208",
+x"20030001",
+x"080029E6",
+x"20030002",
+x"4883000A",
+x"C4E10000",
+x"E8300003",
+x"20030000",
+x"080029C4",
+x"C4A0FFF4",
+x"44200002",
+x"E7E00208",
+x"20030001",
+x"080029E6",
+x"C4E40000",
+x"C890001F",
+x"C4E0FFFC",
+x"44021002",
+x"C4E0FFF8",
+x"44030002",
+x"44401000",
+x"C4E0FFF4",
+x"44010002",
+x"44400800",
+x"C4A0FFF4",
+x"44211002",
+x"44800002",
+x"44400001",
+x"EA000003",
+x"20030000",
+x"080029E4",
+x"8CC3FFE8",
+x"48600007",
+x"44000004",
+x"44200801",
+x"C4E0FFF0",
+x"44200002",
+x"E7E00208",
+x"080029E3",
+x"44000004",
+x"44200800",
+x"C4E0FFF0",
+x"44200002",
+x"E7E00208",
+x"20030001",
+x"080029E6",
+x"20030000",
+x"48600002",
+x"08002A44",
+x"C7E00208",
+x"C7E10210",
+x"E8010002",
+x"08002A44",
+x"8DE3FFFC",
+x"487D0002",
+x"08002A44",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"222B0000",
+x"224C0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"8DE3FFF8",
+x"487D0002",
+x"08002A44",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"222B0000",
+x"224C0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"8DE3FFF4",
+x"487D0002",
+x"08002A44",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"222B0000",
+x"224C0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"8DE3FFF0",
+x"487D0002",
+x"08002A44",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"222B0000",
+x"224C0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"8DE3FFEC",
+x"487D0002",
+x"08002A44",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"222B0000",
+x"224C0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"8DE3FFE8",
+x"487D0002",
+x"08002A44",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"222B0000",
+x"224C0000",
+x"40210004",
+x"C0002727",
+x"20210004",
+x"8DE3FFE4",
+x"487D0002",
+x"08002A44",
+x"A0630002",
+x"03E31820",
+x"8C640200",
+x"200A0000",
+x"222B0000",
+x"224C0000",
+x"40210004",
+x"C0002727",
+x"20100008",
+x"222D0000",
+x"224E0000",
+x"C0002875",
+x"20210004",
+x"22730001",
+x"080028E6",
+x"6AA00064",
+x"A2A30002",
+x"03E31820",
+x"8C7706B4",
+x"8EF8FFFC",
+x"200300D4",
+x"C4600000",
+x"E7E00210",
+x"20130000",
+x"8FF40204",
+x"8F11FFFC",
+x"8F120000",
+x"40210004",
+x"C00028E6",
+x"20210004",
+x"C7E00210",
+x"20030094",
+x"C4610000",
+x"E8200003",
+x"20030000",
+x"08002A61",
+x"20030090",
+x"C4610000",
+x"E8010003",
+x"20030000",
+x"08002A61",
+x"20030001",
+x"48600002",
+x"08002AA8",
+x"8FE30220",
+x"A0640002",
+x"8FE3020C",
+x"00831820",
+x"8EE40000",
+x"48640040",
+x"200C0000",
+x"8FED0204",
+x"40210004",
+x"C0002162",
+x"20210004",
+x"48600039",
+x"8F030000",
+x"C7E0022C",
+x"C4620000",
+x"44020802",
+x"C7E00228",
+x"C464FFFC",
+x"44040002",
+x"44200800",
+x"C7E00224",
+x"C463FFF8",
+x"44030002",
+x"44200800",
+x"C6E0FFF8",
+x"440B2802",
+x"44A10802",
+x"C6C50000",
+x"44A22802",
+x"C6C2FFFC",
+x"44441002",
+x"44A22000",
+x"C6C2FFF8",
+x"44431002",
+x"44821000",
+x"44020002",
+x"EA010002",
+x"08002A98",
+x"C7E30250",
+x"C7E20238",
+x"44221002",
+x"44621000",
+x"E7E20250",
+x"C7E3024C",
+x"C7E20234",
+x"44221002",
+x"44621000",
+x"E7E2024C",
+x"C7E30248",
+x"C7E20230",
+x"44220802",
+x"44610800",
+x"E7E10248",
+x"EA000002",
+x"08002AA6",
+x"44000002",
+x"44000002",
+x"440A0002",
+x"C7E10250",
+x"44200800",
+x"E7E10250",
+x"C7E1024C",
+x"44200800",
+x"E7E1024C",
+x"C7E10248",
+x"44200000",
+x"E7E00248",
+x"08002AA7",
+x"08002AA8",
+x"42B50001",
+x"08002A46",
+x"E0000000",
+x"20030004",
+x"68790415",
+x"200300D4",
+x"C4600000",
+x"E7E00210",
+x"200E0000",
+x"8FEF0204",
+x"22C90000",
+x"40210004",
+x"C0002554",
+x"20210004",
+x"C7E00210",
+x"20030094",
+x"C4610000",
+x"E8200003",
+x"20030000",
+x"08002AC2",
+x"20030090",
+x"C4610000",
+x"E8010003",
+x"20030000",
+x"08002AC2",
+x"20030001",
+x"48600023",
+x"2004FFFF",
+x"A3230002",
+x"6E632000",
+x"4B200002",
+x"E0000000",
+x"C6C10000",
+x"C7E00134",
+x"44201002",
+x"C6C1FFFC",
+x"C7E00130",
+x"44200002",
+x"44401000",
+x"C6C1FFF8",
+x"C7E0012C",
+x"44200002",
+x"44400000",
+x"44000007",
+x"EA000002",
+x"E0000000",
+x"44000802",
+x"44200002",
+x"440D0802",
+x"C7E00138",
+x"44200002",
+x"C7E10250",
+x"44200800",
+x"E7E10250",
+x"C7E1024C",
+x"44200800",
+x"E7E1024C",
+x"C7E10248",
+x"44200000",
+x"E7E00248",
+x"E0000000",
+x"8FE70220",
+x"A0E30002",
+x"03E31820",
+x"8C630110",
+x"8C7EFFF8",
+x"8C7AFFE4",
+x"C7400000",
+x"440D5802",
+x"8C64FFFC",
+x"489C0016",
+x"8FE4020C",
+x"E7F0022C",
+x"E7F00228",
+x"E7F00224",
+x"40850001",
+x"A0A40002",
+x"02C40831",
+x"C8300008",
+x"EA010004",
+x"200400A0",
+x"C4800000",
+x"08002AFD",
+x"200400C8",
+x"C4800000",
+x"08002AFF",
+x"46000006",
+x"44000007",
+x"A0A40002",
+x"03E42020",
+x"E480022C",
+x"08002B5B",
+x"20050002",
+x"4885000C",
+x"8C64FFF0",
+x"C4800000",
+x"44000007",
+x"E7E0022C",
+x"C480FFFC",
+x"44000007",
+x"E7E00228",
+x"C480FFF8",
+x"44000007",
+x"E7E00224",
+x"08002B5B",
+x"C7E1021C",
+x"8C64FFEC",
+x"C4800000",
+x"44202001",
+x"C7E10218",
+x"C480FFFC",
+x"44201801",
+x"C7E10214",
+x"C480FFF8",
+x"44200001",
+x"8C64FFF0",
+x"C4810000",
+x"44810802",
+x"C482FFFC",
+x"44622802",
+x"C482FFF8",
+x"44023802",
+x"8C64FFF4",
+x"48800005",
+x"E7E1022C",
+x"E7E50228",
+x"E7E70224",
+x"08002B41",
+x"8C64FFDC",
+x"C482FFF8",
+x"44623002",
+x"C482FFFC",
+x"44021002",
+x"44C21000",
+x"44551002",
+x"44220800",
+x"E7E1022C",
+x"C481FFF8",
+x"44811002",
+x"C4810000",
+x"44010002",
+x"44400000",
+x"44150002",
+x"44A00000",
+x"E7E00228",
+x"C480FFFC",
+x"44800802",
+x"C4800000",
+x"44600002",
+x"44200000",
+x"44150002",
+x"44E00000",
+x"E7E00224",
+x"8C64FFE8",
+x"C7E2022C",
+x"44420802",
+x"C7E00228",
+x"44000002",
+x"44200800",
+x"C7E00224",
+x"44000002",
+x"44200000",
+x"44000804",
+x"C8300006",
+x"48800003",
+x"46210003",
+x"08002B50",
+x"46810003",
+x"08002B53",
+x"200400C8",
+x"C4800000",
+x"44400802",
+x"E7E1022C",
+x"C7E10228",
+x"44200802",
+x"E7E10228",
+x"C7E10224",
+x"44200002",
+x"E7E00224",
+x"C7E0021C",
+x"E7E00270",
+x"C7E00218",
+x"E7E0026C",
+x"C7E00214",
+x"E7E00268",
+x"8C640000",
+x"8C65FFE0",
+x"C4A00000",
+x"E7E00238",
+x"C4A0FFFC",
+x"E7E00234",
+x"C4A0FFF8",
+x"E7E00230",
+x"489C0028",
+x"C7E1021C",
+x"8C65FFEC",
+x"C4A00000",
+x"44202801",
+x"2003002C",
+x"C4690000",
+x"44A90002",
+x"40210004",
+x"C0000051",
+x"20030028",
+x"C4660000",
+x"44060002",
+x"44A04001",
+x"20030034",
+x"C4650000",
+x"C7E10214",
+x"C4A0FFF8",
+x"44203801",
+x"44E90002",
+x"C0000051",
+x"20210004",
+x"44060002",
+x"44E00801",
+x"E9050008",
+x"E8250004",
+x"200300D8",
+x"C4600000",
+x"08002B88",
+x"200300DC",
+x"C4600000",
+x"08002B8F",
+x"E8250004",
+x"200300DC",
+x"C4600000",
+x"08002B8F",
+x"200300D8",
+x"C4600000",
+x"E7E00234",
+x"08002DAB",
+x"20050002",
+x"48850082",
+x"C7E10218",
+x"20030030",
+x"C4600000",
+x"44201002",
+x"200300F0",
+x"C4630000",
+x"200300EC",
+x"C4640000",
+x"E8500003",
+x"44400806",
+x"08002B9F",
+x"44400807",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"08002BC5",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08002BB6",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08002BB1",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08002BB6",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08002BC5",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08002BC0",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08002BC5",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08002BE8",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08002BD9",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08002BD4",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08002BD9",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08002BE8",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08002BE3",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08002BE8",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"E8600006",
+x"EA020003",
+x"20030000",
+x"08002BED",
+x"20030001",
+x"08002BF2",
+x"EA020003",
+x"20030001",
+x"08002BF2",
+x"20030000",
+x"E8600003",
+x"44000806",
+x"08002BF6",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"08002BFA",
+x"44610001",
+x"44150802",
+x"44210002",
+x"44191003",
+x"47421001",
+x"44021003",
+x"47021001",
+x"44021003",
+x"46E21001",
+x"44020003",
+x"46200001",
+x"44200003",
+x"44800802",
+x"44000002",
+x"46200000",
+x"44200003",
+x"48600003",
+x"44000807",
+x"08002C0D",
+x"44000806",
+x"44210002",
+x"47600802",
+x"E7E10238",
+x"46200001",
+x"47600002",
+x"E7E00234",
+x"08002DAB",
+x"20050003",
+x"48850095",
+x"C7E1021C",
+x"8C63FFEC",
+x"C4600000",
+x"44200001",
+x"C7E20214",
+x"C461FFF8",
+x"44410801",
+x"44000002",
+x"44210802",
+x"44010000",
+x"44000004",
+x"20030034",
+x"C4610000",
+x"44010003",
+x"E4200000",
+x"40210008",
+x"C0000051",
+x"20210008",
+x"44000806",
+x"C4200000",
+x"44010001",
+x"441E0002",
+x"46C01001",
+x"200300F0",
+x"C4630000",
+x"200300EC",
+x"C4640000",
+x"E8500003",
+x"44400806",
+x"08002C35",
+x"44400807",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"08002C5B",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08002C4C",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08002C47",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08002C4C",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08002C5B",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08002C56",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08002C5B",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08002C7E",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08002C6F",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08002C6A",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08002C6F",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08002C7E",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08002C79",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08002C7E",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"E8600006",
+x"EA020003",
+x"20030000",
+x"08002C83",
+x"20030001",
+x"08002C88",
+x"EA020003",
+x"20030001",
+x"08002C88",
+x"20030000",
+x"E8600003",
+x"44000806",
+x"08002C8C",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"08002C90",
+x"44610001",
+x"44150802",
+x"44210002",
+x"44191003",
+x"47421001",
+x"44021003",
+x"47021001",
+x"44021003",
+x"46E21001",
+x"44020003",
+x"46200001",
+x"44200003",
+x"44800802",
+x"44000002",
+x"46200000",
+x"44200003",
+x"48600003",
+x"44000807",
+x"08002CA3",
+x"44000806",
+x"44210002",
+x"441B0802",
+x"E7E10234",
+x"46200001",
+x"441B0002",
+x"E7E00230",
+x"08002DAB",
+x"20050004",
+x"48850100",
+x"C7E1021C",
+x"8C66FFEC",
+x"C4C00000",
+x"44200801",
+x"8C65FFF0",
+x"C4A00000",
+x"44000004",
+x"44200802",
+x"C7E20214",
+x"C4C0FFF8",
+x"44401001",
+x"C4A0FFF8",
+x"44000004",
+x"44401002",
+x"44211802",
+x"44420002",
+x"44602800",
+x"E8300003",
+x"44200006",
+x"08002CC1",
+x"44200007",
+x"2003008C",
+x"C4660000",
+x"E806005D",
+x"44410803",
+x"E8300003",
+x"44200006",
+x"08002CC9",
+x"44200007",
+x"EA200006",
+x"E8140003",
+x"20030000",
+x"08002CCE",
+x"2003FFFF",
+x"08002CD0",
+x"20030001",
+x"48600003",
+x"44001806",
+x"08002CD4",
+x"46201803",
+x"44630002",
+x"20040084",
+x"C4810000",
+x"44201002",
+x"20040080",
+x"C4810000",
+x"44411003",
+x"2004007C",
+x"C4810000",
+x"44202002",
+x"20040078",
+x"C4810000",
+x"44220800",
+x"44811003",
+x"20040074",
+x"C4810000",
+x"44202002",
+x"20040070",
+x"C4810000",
+x"44220800",
+x"44811003",
+x"2004006C",
+x"C4810000",
+x"44202002",
+x"20040068",
+x"C4810000",
+x"44220800",
+x"44811003",
+x"20040064",
+x"C4810000",
+x"44202002",
+x"47820800",
+x"44811003",
+x"20040060",
+x"C4810000",
+x"44202002",
+x"2004005C",
+x"C4810000",
+x"44220800",
+x"44811003",
+x"20040058",
+x"C4810000",
+x"44202002",
+x"20040054",
+x"C4810000",
+x"44220800",
+x"44811003",
+x"20040050",
+x"C4810000",
+x"44202002",
+x"47220800",
+x"44810803",
+x"47201002",
+x"47410800",
+x"44411003",
+x"2004004C",
+x"C4810000",
+x"44202002",
+x"47020800",
+x"44810803",
+x"46E10800",
+x"44010003",
+x"46200000",
+x"44600803",
+x"68030006",
+x"68600003",
+x"44200006",
+x"08002D19",
+x"47E10001",
+x"08002D1B",
+x"46C10001",
+x"20030044",
+x"C4610000",
+x"44010002",
+x"441E0003",
+x"08002D22",
+x"20030088",
+x"C4600000",
+x"E4200004",
+x"4021000C",
+x"C0000051",
+x"2021000C",
+x"44000806",
+x"C4200004",
+x"44013801",
+x"C7E10218",
+x"C4C0FFFC",
+x"44200801",
+x"C4A0FFFC",
+x"44000004",
+x"44200802",
+x"E8B00003",
+x"44A00006",
+x"08002D33",
+x"44A00007",
+x"E806005D",
+x"44250803",
+x"E8300003",
+x"44200006",
+x"08002D39",
+x"44200007",
+x"EA200006",
+x"E8140003",
+x"20030000",
+x"08002D3E",
+x"2003FFFF",
+x"08002D40",
+x"20030001",
+x"48600003",
+x"44002006",
+x"08002D44",
+x"46202003",
+x"44840002",
+x"20040084",
+x"C4810000",
+x"44201002",
+x"20040080",
+x"C4810000",
+x"44411003",
+x"2004007C",
+x"C4810000",
+x"44201802",
+x"20040078",
+x"C4810000",
+x"44220800",
+x"44611003",
+x"20040074",
+x"C4810000",
+x"44201802",
+x"20040070",
+x"C4810000",
+x"44220800",
+x"44611003",
+x"2004006C",
+x"C4810000",
+x"44201802",
+x"20040068",
+x"C4810000",
+x"44220800",
+x"44611003",
+x"20040064",
+x"C4810000",
+x"44201802",
+x"47820800",
+x"44611003",
+x"20040060",
+x"C4810000",
+x"44201802",
+x"2004005C",
+x"C4810000",
+x"44220800",
+x"44611003",
+x"20040058",
+x"C4810000",
+x"44201802",
+x"20040054",
+x"C4810000",
+x"44220800",
+x"44611003",
+x"20040050",
+x"C4810000",
+x"44201802",
+x"47220800",
+x"44610803",
+x"47201002",
+x"47410800",
+x"44411003",
+x"2004004C",
+x"C4810000",
+x"44201802",
+x"47020800",
+x"44610803",
+x"46E10800",
+x"44010003",
+x"46200000",
+x"44800003",
+x"68030006",
+x"68600003",
+x"44000806",
+x"08002D89",
+x"47E00801",
+x"08002D8B",
+x"46C00801",
+x"20030044",
+x"C4600000",
+x"44200002",
+x"441E0003",
+x"08002D92",
+x"20030088",
+x"C4600000",
+x"E4200008",
+x"40210010",
+x"C0000051",
+x"20210010",
+x"44000806",
+x"C4200008",
+x"44010001",
+x"2003003C",
+x"C4620000",
+x"46A70801",
+x"44210802",
+x"44410801",
+x"46A00001",
+x"44000002",
+x"44200801",
+x"E8300003",
+x"44200006",
+x"08002DA5",
+x"46000006",
+x"47600802",
+x"20030038",
+x"C4600000",
+x"44200003",
+x"E7E00230",
+x"08002DAB",
+x"A0E40002",
+x"8FE3020C",
+x"00832020",
+x"A3230002",
+x"6E632000",
+x"A3230002",
+x"4E831800",
+x"C7E0021C",
+x"E4600000",
+x"C7E00218",
+x"E460FFFC",
+x"C7E00214",
+x"E460FFF8",
+x"C7400000",
+x"E8150023",
+x"20040001",
+x"A3230002",
+x"6E432000",
+x"A3230002",
+x"4E231800",
+x"C7E00238",
+x"E4600000",
+x"C7E00234",
+x"E460FFFC",
+x"C7E00230",
+x"E460FFF8",
+x"A3230002",
+x"4E232000",
+x"20030024",
+x"C4600000",
+x"440B0002",
+x"C4810000",
+x"44200802",
+x"E4810000",
+x"C481FFFC",
+x"44200802",
+x"E481FFFC",
+x"C481FFF8",
+x"44200002",
+x"E480FFF8",
+x"A3230002",
+x"4E031800",
+x"C7E0022C",
+x"E4600000",
+x"C7E00228",
+x"E460FFFC",
+x"C7E00224",
+x"E460FFF8",
+x"08002DDF",
+x"20040000",
+x"A3230002",
+x"6E432000",
+x"20030020",
+x"C4630000",
+x"C6C10000",
+x"C7E0022C",
+x"44202802",
+x"C6C4FFFC",
+x"C7E20228",
+x"44821002",
+x"44A22800",
+x"C6C4FFF8",
+x"C7E20224",
+x"44821002",
+x"44A21000",
+x"44621002",
+x"44400002",
+x"44200000",
+x"E6C00000",
+x"C6C1FFFC",
+x"C7E00228",
+x"44400002",
+x"44200000",
+x"E6C0FFFC",
+x"C6C1FFF8",
+x"C7E00224",
+x"44400002",
+x"44200000",
+x"E6C0FFF8",
+x"C740FFFC",
+x"45A05002",
+x"200C0000",
+x"8FED0204",
+x"40210010",
+x"C0002162",
+x"20210010",
+x"48600037",
+x"C7E1022C",
+x"C7E00134",
+x"44201002",
+x"C7E10228",
+x"C7E30130",
+x"44230802",
+x"44412000",
+x"C7E10224",
+x"C7E2012C",
+x"44220802",
+x"44810800",
+x"44200807",
+x"442B0802",
+x"C6C40000",
+x"44802002",
+x"C6C0FFFC",
+x"44030002",
+x"44801800",
+x"C6C0FFF8",
+x"44020002",
+x"44600000",
+x"44000007",
+x"EA010002",
+x"08002E29",
+x"C7E30250",
+x"C7E20238",
+x"44221002",
+x"44621000",
+x"E7E20250",
+x"C7E3024C",
+x"C7E20234",
+x"44221002",
+x"44621000",
+x"E7E2024C",
+x"C7E30248",
+x"C7E20230",
+x"44220802",
+x"44610800",
+x"E7E10248",
+x"EA000002",
+x"08002E37",
+x"44000002",
+x"44000002",
+x"440A0002",
+x"C7E10250",
+x"44200800",
+x"E7E10250",
+x"C7E1024C",
+x"44200800",
+x"E7E1024C",
+x"C7E10248",
+x"44200000",
+x"E7E00248",
+x"08002E38",
+x"C7E0021C",
+x"E7E0027C",
+x"C7E00218",
+x"E7E00278",
+x"C7E00214",
+x"E7E00274",
+x"8FE3001C",
+x"40630001",
+x"68600052",
+x"A0640002",
+x"03E42020",
+x"8C840110",
+x"8C87FFD8",
+x"8C86FFFC",
+x"C7E1021C",
+x"8C85FFEC",
+x"C4A00000",
+x"44200001",
+x"E4E00000",
+x"C7E10218",
+x"C4A0FFFC",
+x"44200001",
+x"E4E0FFFC",
+x"C7E10214",
+x"C4A0FFF8",
+x"44200001",
+x"E4E0FFF8",
+x"20050002",
+x"48C5000F",
+x"8C84FFF0",
+x"C4E10000",
+x"C4E3FFFC",
+x"C4E2FFF8",
+x"C4800000",
+x"44010802",
+x"C480FFFC",
+x"44030002",
+x"44200800",
+x"C480FFF8",
+x"44020002",
+x"44200000",
+x"E4E0FFF4",
+x"08002E8C",
+x"20050002",
+x"68A60002",
+x"08002E8C",
+x"C4E20000",
+x"C4E1FFFC",
+x"C4E0FFF8",
+x"44422002",
+x"8C85FFF0",
+x"C4A30000",
+x"44832802",
+x"44212002",
+x"C4A3FFFC",
+x"44831802",
+x"44A32800",
+x"44002002",
+x"C4A3FFF8",
+x"44831802",
+x"44A32000",
+x"8C85FFF4",
+x"48A00003",
+x"44801806",
+x"08002E86",
+x"44202802",
+x"8C84FFDC",
+x"C4830000",
+x"44A31802",
+x"44832000",
+x"44021802",
+x"C480FFFC",
+x"44600002",
+x"44802000",
+x"44410802",
+x"C480FFF8",
+x"44201802",
+x"44831800",
+x"20040003",
+x"48C40003",
+x"44710001",
+x"08002E8B",
+x"44600006",
+x"E4E0FFF4",
+x"40640001",
+x"43E3021C",
+x"40210010",
+x"C0001DDC",
+x"20210010",
+x"08002E92",
+x"8FE306B8",
+x"40630001",
+x"AC36000C",
+x"AC300010",
+x"AC350014",
+x"AC370018",
+x"AC31001C",
+x"AC320020",
+x"AC330024",
+x"AC340028",
+x"AC38002C",
+x"AC330030",
+x"20750000",
+x"40210038",
+x"C0002A46",
+x"20210038",
+x"200300A4",
+x"C4600000",
+x"E80D0002",
+x"E0000000",
+x"20030004",
+x"6B230002",
+x"08002EAE",
+x"23230001",
+x"2004FFFF",
+x"A0630002",
+x"8C330030",
+x"6E632000",
+x"20030002",
+x"4BC30011",
+x"C7400000",
+x"46200001",
+x"45A06802",
+x"23390001",
+x"C7E00210",
+x"45C07000",
+x"8C38002C",
+x"8C340028",
+x"8C330024",
+x"8C320020",
+x"8C31001C",
+x"8C370018",
+x"8C350014",
+x"8C300010",
+x"8C36000C",
+x"08002AAB",
+x"E0000000",
+x"E0000000",
+x"200400D4",
+x"C4800000",
+x"E7E00210",
+x"20130000",
+x"8FF40204",
+x"20710000",
+x"22B20000",
+x"40210004",
+x"C00028E6",
+x"20210004",
+x"C7E00210",
+x"20030094",
+x"C4610000",
+x"E8200003",
+x"20030000",
+x"08002ED8",
+x"20030090",
+x"C4610000",
+x"E8010003",
+x"20030000",
+x"08002ED8",
+x"20030001",
+x"48600002",
+x"E0000000",
+x"8FE30220",
+x"A0630002",
+x"03E31820",
+x"8C6E0110",
+x"8DC3FFFC",
+x"487C0016",
+x"8FE3020C",
+x"E7F0022C",
+x"E7F00228",
+x"E7F00224",
+x"40640001",
+x"A0830002",
+x"02A30831",
+x"C8300008",
+x"EA010004",
+x"200300A0",
+x"C4600000",
+x"08002EEE",
+x"200300C8",
+x"C4600000",
+x"08002EF0",
+x"46000006",
+x"44000007",
+x"A0830002",
+x"03E31820",
+x"E460022C",
+x"08002F4C",
+x"20040002",
+x"4864000C",
+x"8DC3FFF0",
+x"C4600000",
+x"44000007",
+x"E7E0022C",
+x"C460FFFC",
+x"44000007",
+x"E7E00228",
+x"C460FFF8",
+x"44000007",
+x"E7E00224",
+x"08002F4C",
+x"C7E1021C",
+x"8DC3FFEC",
+x"C4600000",
+x"44202001",
+x"C7E10218",
+x"C460FFFC",
+x"44201801",
+x"C7E10214",
+x"C460FFF8",
+x"44200001",
+x"8DC3FFF0",
+x"C4610000",
+x"44811002",
+x"C461FFFC",
+x"44613002",
+x"C461FFF8",
+x"44013802",
+x"8DC3FFF4",
+x"48600005",
+x"E7E2022C",
+x"E7E60228",
+x"E7E70224",
+x"08002F32",
+x"8DC3FFDC",
+x"C461FFF8",
+x"44612802",
+x"C461FFFC",
+x"44010802",
+x"44A10800",
+x"44350802",
+x"44410800",
+x"E7E1022C",
+x"C461FFF8",
+x"44811002",
+x"C4610000",
+x"44010002",
+x"44400000",
+x"44150002",
+x"44C00000",
+x"E7E00228",
+x"C460FFFC",
+x"44800802",
+x"C4600000",
+x"44600002",
+x"44200000",
+x"44150002",
+x"44E00000",
+x"E7E00224",
+x"8DC3FFE8",
+x"C7E2022C",
+x"44420802",
+x"C7E00228",
+x"44000002",
+x"44200800",
+x"C7E00224",
+x"44000002",
+x"44200000",
+x"44000804",
+x"C8300006",
+x"48600003",
+x"46210003",
+x"08002F41",
+x"46810003",
+x"08002F44",
+x"200300C8",
+x"C4600000",
+x"44400802",
+x"E7E1022C",
+x"C7E10228",
+x"44200802",
+x"E7E10228",
+x"C7E10224",
+x"44200002",
+x"E7E00224",
+x"8DC30000",
+x"8DC4FFE0",
+x"C4800000",
+x"E7E00238",
+x"C480FFFC",
+x"E7E00234",
+x"C480FFF8",
+x"E7E00230",
+x"487C0028",
+x"C7E1021C",
+x"8DC5FFEC",
+x"C4A00000",
+x"44202801",
+x"2003002C",
+x"C4690000",
+x"44A90002",
+x"40210004",
+x"C0000051",
+x"20030028",
+x"C4680000",
+x"44080002",
+x"44A03801",
+x"20030034",
+x"C4660000",
+x"C7E10214",
+x"C4A0FFF8",
+x"44202801",
+x"44A90002",
+x"C0000051",
+x"20210004",
+x"44080002",
+x"44A00801",
+x"E8E60008",
+x"E8260004",
+x"200300D8",
+x"C4600000",
+x"08002F73",
+x"200300DC",
+x"C4600000",
+x"08002F7A",
+x"E8260004",
+x"200300DC",
+x"C4600000",
+x"08002F7A",
+x"200300D8",
+x"C4600000",
+x"E7E00234",
+x"08003196",
+x"20040002",
+x"48640082",
+x"C7E10218",
+x"20030030",
+x"C4600000",
+x"44201002",
+x"200300F0",
+x"C4630000",
+x"200300EC",
+x"C4640000",
+x"E8500003",
+x"44400806",
+x"08002F8A",
+x"44400807",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"08002FB0",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08002FA1",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08002F9C",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08002FA1",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08002FB0",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08002FAB",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08002FB0",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08002FD3",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08002FC4",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08002FBF",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08002FC4",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08002FD3",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08002FCE",
+x"443D0800",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"08002FD3",
+x"443D0801",
+x"40210004",
+x"C0000DE4",
+x"20210004",
+x"E8600006",
+x"EA020003",
+x"20030000",
+x"08002FD8",
+x"20030001",
+x"08002FDD",
+x"EA020003",
+x"20030001",
+x"08002FDD",
+x"20030000",
+x"E8600003",
+x"44000806",
+x"08002FE1",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"08002FE5",
+x"44610001",
+x"44150802",
+x"44210002",
+x"44191003",
+x"47421001",
+x"44021003",
+x"47021001",
+x"44021003",
+x"46E21001",
+x"44020003",
+x"46200001",
+x"44200003",
+x"44800802",
+x"44000002",
+x"46200000",
+x"44200003",
+x"48600003",
+x"44000807",
+x"08002FF8",
+x"44000806",
+x"44210002",
+x"47600802",
+x"E7E10238",
+x"46200001",
+x"47600002",
+x"E7E00234",
+x"08003196",
+x"20040003",
+x"48640095",
+x"C7E1021C",
+x"8DC3FFEC",
+x"C4600000",
+x"44200801",
+x"C7E20214",
+x"C460FFF8",
+x"44400001",
+x"44210802",
+x"44000002",
+x"44200000",
+x"44000004",
+x"20030034",
+x"C4610000",
+x"44010003",
+x"E4200000",
+x"40210008",
+x"C0000051",
+x"20210008",
+x"44000806",
+x"C4200000",
+x"44010001",
+x"441E0002",
+x"46C01001",
+x"200300F0",
+x"C4630000",
+x"200300EC",
+x"C4640000",
+x"E8500003",
+x"44400806",
+x"08003020",
+x"44400807",
+x"EBA10027",
+x"E8300003",
+x"44200006",
+x"08003046",
+x"443D0800",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"08003037",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08003032",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08003037",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08003046",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08003041",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08003046",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08003069",
+x"443D0801",
+x"EBA10013",
+x"E8300003",
+x"44200006",
+x"0800305A",
+x"443D0800",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08003055",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"0800305A",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08003069",
+x"443D0801",
+x"EBA10009",
+x"E8300003",
+x"44200006",
+x"08003064",
+x"443D0800",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"08003069",
+x"443D0801",
+x"40210008",
+x"C0000DE4",
+x"20210008",
+x"E8600006",
+x"EA020003",
+x"20030000",
+x"0800306E",
+x"20030001",
+x"08003073",
+x"EA020003",
+x"20030001",
+x"08003073",
+x"20030000",
+x"E8600003",
+x"44000806",
+x"08003077",
+x"47A00801",
+x"EAC10003",
+x"44200006",
+x"0800307B",
+x"44610001",
+x"44150802",
+x"44210002",
+x"44191003",
+x"47421001",
+x"44021003",
+x"47021001",
+x"44021003",
+x"46E21001",
+x"44020003",
+x"46200001",
+x"44200003",
+x"44800802",
+x"44000002",
+x"46200000",
+x"44200003",
+x"48600003",
+x"44000807",
+x"0800308E",
+x"44000806",
+x"44210002",
+x"441B0802",
+x"E7E10234",
+x"46200001",
+x"441B0002",
+x"E7E00230",
+x"08003196",
+x"20040004",
+x"48640100",
+x"C7E1021C",
+x"8DC5FFEC",
+x"C4A00000",
+x"44200801",
+x"8DC6FFF0",
+x"C4C00000",
+x"44000004",
+x"44200802",
+x"C7E20214",
+x"C4A0FFF8",
+x"44401001",
+x"C4C0FFF8",
+x"44000004",
+x"44401002",
+x"44211802",
+x"44420002",
+x"44602800",
+x"E8300003",
+x"44200006",
+x"080030AC",
+x"44200007",
+x"2003008C",
+x"C4660000",
+x"E806005D",
+x"44410803",
+x"E8300003",
+x"44200006",
+x"080030B4",
+x"44200007",
+x"EA200006",
+x"E8140003",
+x"20030000",
+x"080030B9",
+x"2003FFFF",
+x"080030BB",
+x"20030001",
+x"48600003",
+x"44002006",
+x"080030BF",
+x"46202003",
+x"44840002",
+x"20040084",
+x"C4810000",
+x"44201002",
+x"20040080",
+x"C4810000",
+x"44411003",
+x"2004007C",
+x"C4810000",
+x"44201802",
+x"20040078",
+x"C4810000",
+x"44220800",
+x"44611003",
+x"20040074",
+x"C4810000",
+x"44201802",
+x"20040070",
+x"C4810000",
+x"44220800",
+x"44611003",
+x"2004006C",
+x"C4810000",
+x"44201802",
+x"20040068",
+x"C4810000",
+x"44220800",
+x"44611003",
+x"20040064",
+x"C4810000",
+x"44201802",
+x"47820800",
+x"44611003",
+x"20040060",
+x"C4810000",
+x"44201802",
+x"2004005C",
+x"C4810000",
+x"44220800",
+x"44611003",
+x"20040058",
+x"C4810000",
+x"44201802",
+x"20040054",
+x"C4810000",
+x"44220800",
+x"44611003",
+x"20040050",
+x"C4810000",
+x"44201802",
+x"47220800",
+x"44610803",
+x"47201002",
+x"47410800",
+x"44411003",
+x"2004004C",
+x"C4810000",
+x"44201802",
+x"47020800",
+x"44610803",
+x"46E10800",
+x"44010003",
+x"46200000",
+x"44800803",
+x"68030006",
+x"68600003",
+x"44200006",
+x"08003104",
+x"47E10001",
+x"08003106",
+x"46C10001",
+x"20030044",
+x"C4610000",
+x"44010002",
+x"441E0003",
+x"0800310D",
+x"20030088",
+x"C4600000",
+x"E4200004",
+x"4021000C",
+x"C0000051",
+x"2021000C",
+x"44000806",
+x"C4200004",
+x"44013801",
+x"C7E10218",
+x"C4A0FFFC",
+x"44200801",
+x"C4C0FFFC",
+x"44000004",
+x"44200802",
+x"E8B00003",
+x"44A00006",
+x"0800311E",
+x"44A00007",
+x"E806005D",
+x"44250803",
+x"E8300003",
+x"44200006",
+x"08003124",
+x"44200007",
+x"EA200006",
+x"E8140003",
+x"20030000",
+x"08003129",
+x"2003FFFF",
+x"0800312B",
+x"20030001",
+x"48600003",
+x"44002006",
+x"0800312F",
+x"46202003",
+x"44840002",
+x"20040084",
+x"C4810000",
+x"44201002",
+x"20040080",
+x"C4810000",
+x"44411003",
+x"2004007C",
+x"C4810000",
+x"44201802",
+x"20040078",
+x"C4810000",
+x"44220800",
+x"44611003",
+x"20040074",
+x"C4810000",
+x"44201802",
+x"20040070",
+x"C4810000",
+x"44220800",
+x"44611003",
+x"2004006C",
+x"C4810000",
+x"44201802",
+x"20040068",
+x"C4810000",
+x"44220800",
+x"44611003",
+x"20040064",
+x"C4810000",
+x"44201802",
+x"47820800",
+x"44611003",
+x"20040060",
+x"C4810000",
+x"44201802",
+x"2004005C",
+x"C4810000",
+x"44220800",
+x"44611003",
+x"20040058",
+x"C4810000",
+x"44201802",
+x"20040054",
+x"C4810000",
+x"44220800",
+x"44611003",
+x"20040050",
+x"C4810000",
+x"44201802",
+x"47220800",
+x"44611003",
+x"47200802",
+x"47421000",
+x"44220803",
+x"2004004C",
+x"C4820000",
+x"44401002",
+x"47010800",
+x"44410803",
+x"46E10800",
+x"44010003",
+x"46200000",
+x"44800003",
+x"68030006",
+x"68600003",
+x"44000806",
+x"08003174",
+x"47E00801",
+x"08003176",
+x"46C00801",
+x"20030044",
+x"C4600000",
+x"44200002",
+x"441E0003",
+x"0800317D",
+x"20030088",
+x"C4600000",
+x"E4200008",
+x"40210010",
+x"C0000051",
+x"20210010",
+x"44000806",
+x"C4200008",
+x"44010001",
+x"2003003C",
+x"C4620000",
+x"46A70801",
+x"44210802",
+x"44410801",
+x"46A00001",
+x"44000002",
+x"44200801",
+x"E8300003",
+x"44200006",
+x"08003190",
+x"46000006",
+x"47600802",
+x"20030038",
+x"C4600000",
+x"44200003",
+x"E7E00230",
+x"08003196",
+x"200C0000",
+x"8FED0204",
+x"40210010",
+x"C0002162",
+x"20210010",
+x"48600025",
+x"C7E1022C",
+x"C7E00134",
+x"44201002",
+x"C7E10228",
+x"C7E00130",
+x"44200002",
+x"44401000",
+x"C7E10224",
+x"C7E0012C",
+x"44200002",
+x"44400800",
+x"44200807",
+x"EA010003",
+x"46000006",
+x"080031AC",
+x"44200006",
+x"45400802",
+x"8DC3FFE4",
+x"C4600000",
+x"44200002",
+x"C7E20244",
+x"C7E10238",
+x"44010802",
+x"44410800",
+x"E7E10244",
+x"C7E20240",
+x"C7E10234",
+x"44010802",
+x"44410800",
+x"E7E10240",
+x"C7E2023C",
+x"C7E10230",
+x"44010002",
+x"44400000",
+x"E7E0023C",
+x"E0000000",
+x"E0000000",
+x"6B200090",
+x"A3230002",
+x"4EE31800",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E810000A",
+x"A3230002",
+x"4EE32000",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210004",
+x"C0002EC2",
+x"20210004",
+x"080031E3",
+x"23230001",
+x"A0630002",
+x"4EE32000",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210004",
+x"C0002EC2",
+x"20210004",
+x"43390002",
+x"6B20006C",
+x"A3230002",
+x"4EE31800",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E810000A",
+x"A3230002",
+x"4EE32000",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210004",
+x"C0002EC2",
+x"20210004",
+x"08003206",
+x"23230001",
+x"A0630002",
+x"4EE32000",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210004",
+x"C0002EC2",
+x"20210004",
+x"43390002",
+x"6B200048",
+x"A3230002",
+x"4EE31800",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E810000A",
+x"A3230002",
+x"4EE32000",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210004",
+x"C0002EC2",
+x"20210004",
+x"08003229",
+x"23230001",
+x"A0630002",
+x"4EE32000",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210004",
+x"C0002EC2",
+x"20210004",
+x"43390002",
+x"6B200024",
+x"A3230002",
+x"4EE31800",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E810000A",
+x"A3230002",
+x"4EE32000",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210004",
+x"C0002EC2",
+x"20210004",
+x"0800324C",
+x"23230001",
+x"A0630002",
+x"4EE32000",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210004",
+x"C0002EC2",
+x"20210004",
+x"43390002",
+x"080031C1",
+x"E0000000",
+x"E0000000",
+x"E0000000",
+x"E0000000",
+x"20030004",
+x"687A03E8",
+x"A3430002",
+x"4DA31800",
+x"686003E4",
+x"A3430002",
+x"4D831800",
+x"AC390000",
+x"AC290004",
+x"AC2A0008",
+x"AC2B000C",
+x"AC2C0010",
+x"AC2D0014",
+x"AC2E0018",
+x"AC2F001C",
+x"48600002",
+x"08003630",
+x"A3430002",
+x"4D431800",
+x"C4600000",
+x"E7E00244",
+x"C460FFFC",
+x"E7E00240",
+x"C460FFF8",
+x"E7E0023C",
+x"8D3E0000",
+x"A3430002",
+x"4F23B000",
+x"A3430002",
+x"4DC3C000",
+x"AC2B0020",
+x"AC360024",
+x"AC380028",
+x"4BC00002",
+x"0800332C",
+x"8FF702CC",
+x"C7000000",
+x"E7E0027C",
+x"C700FFFC",
+x"E7E00278",
+x"C700FFF8",
+x"E7E00274",
+x"8FE3001C",
+x"40630001",
+x"68600052",
+x"A0640002",
+x"03E42020",
+x"8C840110",
+x"8C87FFD8",
+x"8C86FFFC",
+x"C7010000",
+x"8C85FFEC",
+x"C4A00000",
+x"44200001",
+x"E4E00000",
+x"C701FFFC",
+x"C4A0FFFC",
+x"44200001",
+x"E4E0FFFC",
+x"C701FFF8",
+x"C4A0FFF8",
+x"44200001",
+x"E4E0FFF8",
+x"20050002",
+x"48C5000F",
+x"8C84FFF0",
+x"C4E10000",
+x"C4E3FFFC",
+x"C4E2FFF8",
+x"C4800000",
+x"44010802",
+x"C480FFFC",
+x"44030002",
+x"44200800",
+x"C480FFF8",
+x"44020002",
+x"44200000",
+x"E4E0FFF4",
+x"080032CA",
+x"20050002",
+x"68A60002",
+x"080032CA",
+x"C4E20000",
+x"C4E1FFFC",
+x"C4E0FFF8",
+x"44422002",
+x"8C85FFF0",
+x"C4A30000",
+x"44832802",
+x"44212002",
+x"C4A3FFFC",
+x"44831802",
+x"44A32800",
+x"44002002",
+x"C4A3FFF8",
+x"44831802",
+x"44A32000",
+x"8C85FFF4",
+x"48A00003",
+x"44801806",
+x"080032C4",
+x"44202802",
+x"8C84FFDC",
+x"C4830000",
+x"44A31802",
+x"44832000",
+x"44021802",
+x"C480FFFC",
+x"44600002",
+x"44802000",
+x"44410802",
+x"C480FFF8",
+x"44201802",
+x"44831800",
+x"20040003",
+x"48C40003",
+x"44710001",
+x"080032C9",
+x"44600006",
+x"E4E0FFF4",
+x"40640001",
+x"23030000",
+x"40210030",
+x"C0001DDC",
+x"20210030",
+x"080032D0",
+x"8EE3FE28",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E8100009",
+x"8EE4FE28",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"080032ED",
+x"8EE4FE24",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"8EE3FE30",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E8100009",
+x"8EE4FE30",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"0800330A",
+x"8EE4FE2C",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"8EE3FE38",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E8100009",
+x"8EE4FE38",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"08003327",
+x"8EE4FE34",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"20030070",
+x"20790000",
+x"40210030",
+x"C00031C1",
+x"20210030",
+x"4BDC0002",
+x"080033E7",
+x"8FF702C8",
+x"8C380028",
+x"C7000000",
+x"E7E0027C",
+x"C700FFFC",
+x"E7E00278",
+x"C700FFF8",
+x"E7E00274",
+x"8FE3001C",
+x"40630001",
+x"68600052",
+x"A0640002",
+x"03E42020",
+x"8C840110",
+x"8C87FFD8",
+x"8C86FFFC",
+x"C7010000",
+x"8C85FFEC",
+x"C4A00000",
+x"44200001",
+x"E4E00000",
+x"C701FFFC",
+x"C4A0FFFC",
+x"44200001",
+x"E4E0FFFC",
+x"C701FFF8",
+x"C4A0FFF8",
+x"44200001",
+x"E4E0FFF8",
+x"20050002",
+x"48C5000F",
+x"8C84FFF0",
+x"C4E10000",
+x"C4E3FFFC",
+x"C4E2FFF8",
+x"C4800000",
+x"44010802",
+x"C480FFFC",
+x"44030002",
+x"44200800",
+x"C480FFF8",
+x"44020002",
+x"44200000",
+x"E4E0FFF4",
+x"08003384",
+x"20050002",
+x"68A60002",
+x"08003384",
+x"C4E20000",
+x"C4E1FFFC",
+x"C4E0FFF8",
+x"44422002",
+x"8C85FFF0",
+x"C4A30000",
+x"44832802",
+x"44212002",
+x"C4A3FFFC",
+x"44831802",
+x"44A32800",
+x"44002002",
+x"C4A3FFF8",
+x"44831802",
+x"44A32000",
+x"8C85FFF4",
+x"48A00003",
+x"44801806",
+x"0800337E",
+x"44202802",
+x"8C84FFDC",
+x"C4830000",
+x"44A31802",
+x"44832000",
+x"44021802",
+x"C480FFFC",
+x"44600002",
+x"44802000",
+x"44410802",
+x"C480FFF8",
+x"44201802",
+x"44831800",
+x"20040003",
+x"48C40003",
+x"44710001",
+x"08003383",
+x"44600006",
+x"E4E0FFF4",
+x"40640001",
+x"23030000",
+x"40210030",
+x"C0001DDC",
+x"20210030",
+x"0800338A",
+x"8EE3FE28",
+x"8C630000",
+x"C4610000",
+x"8C360024",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E8100009",
+x"8EE4FE28",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"080033A8",
+x"8EE4FE24",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"8EE3FE30",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E8100009",
+x"8EE4FE30",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"080033C5",
+x"8EE4FE2C",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"8EE3FE38",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E8100009",
+x"8EE4FE38",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"080033E2",
+x"8EE4FE34",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"20030070",
+x"20790000",
+x"40210030",
+x"C00031C1",
+x"20210030",
+x"20030002",
+x"4BC30002",
+x"080034A3",
+x"8FF702C4",
+x"8C380028",
+x"C7000000",
+x"E7E0027C",
+x"C700FFFC",
+x"E7E00278",
+x"C700FFF8",
+x"E7E00274",
+x"8FE3001C",
+x"40630001",
+x"68600052",
+x"A0640002",
+x"03E42020",
+x"8C840110",
+x"8C87FFD8",
+x"8C86FFFC",
+x"C7010000",
+x"8C85FFEC",
+x"C4A00000",
+x"44200001",
+x"E4E00000",
+x"C701FFFC",
+x"C4A0FFFC",
+x"44200001",
+x"E4E0FFFC",
+x"C701FFF8",
+x"C4A0FFF8",
+x"44200001",
+x"E4E0FFF8",
+x"20050002",
+x"48C5000F",
+x"8C84FFF0",
+x"C4E10000",
+x"C4E3FFFC",
+x"C4E2FFF8",
+x"C4800000",
+x"44010802",
+x"C480FFFC",
+x"44030002",
+x"44200800",
+x"C480FFF8",
+x"44020002",
+x"44200000",
+x"E4E0FFF4",
+x"08003440",
+x"20050002",
+x"68A60002",
+x"08003440",
+x"C4E20000",
+x"C4E1FFFC",
+x"C4E0FFF8",
+x"44422002",
+x"8C85FFF0",
+x"C4A30000",
+x"44832802",
+x"44212002",
+x"C4A3FFFC",
+x"44831802",
+x"44A32800",
+x"44002002",
+x"C4A3FFF8",
+x"44831802",
+x"44A32000",
+x"8C85FFF4",
+x"48A00003",
+x"44801806",
+x"0800343A",
+x"44202802",
+x"8C84FFDC",
+x"C4830000",
+x"44A31802",
+x"44832000",
+x"44021802",
+x"C480FFFC",
+x"44600002",
+x"44802000",
+x"44410802",
+x"C480FFF8",
+x"44201802",
+x"44831800",
+x"20040003",
+x"48C40003",
+x"44710001",
+x"0800343F",
+x"44600006",
+x"E4E0FFF4",
+x"40640001",
+x"23030000",
+x"40210030",
+x"C0001DDC",
+x"20210030",
+x"08003446",
+x"8EE3FE28",
+x"8C630000",
+x"C4610000",
+x"8C360024",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E8100009",
+x"8EE4FE28",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"08003464",
+x"8EE4FE24",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"8EE3FE30",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E8100009",
+x"8EE4FE30",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"08003481",
+x"8EE4FE2C",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"8EE3FE38",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E8100009",
+x"8EE4FE38",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"0800349E",
+x"8EE4FE34",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"20030070",
+x"20790000",
+x"40210030",
+x"C00031C1",
+x"20210030",
+x"20030003",
+x"4BC30002",
+x"0800355F",
+x"8FF702C0",
+x"8C380028",
+x"C7000000",
+x"E7E0027C",
+x"C700FFFC",
+x"E7E00278",
+x"C700FFF8",
+x"E7E00274",
+x"8FE3001C",
+x"40630001",
+x"68600052",
+x"A0640002",
+x"03E42020",
+x"8C840110",
+x"8C87FFD8",
+x"8C86FFFC",
+x"C7010000",
+x"8C85FFEC",
+x"C4A00000",
+x"44200001",
+x"E4E00000",
+x"C701FFFC",
+x"C4A0FFFC",
+x"44200001",
+x"E4E0FFFC",
+x"C701FFF8",
+x"C4A0FFF8",
+x"44200001",
+x"E4E0FFF8",
+x"20050002",
+x"48C5000F",
+x"8C84FFF0",
+x"C4E10000",
+x"C4E3FFFC",
+x"C4E2FFF8",
+x"C4800000",
+x"44010802",
+x"C480FFFC",
+x"44030002",
+x"44200800",
+x"C480FFF8",
+x"44020002",
+x"44200000",
+x"E4E0FFF4",
+x"080034FC",
+x"20050002",
+x"68A60002",
+x"080034FC",
+x"C4E20000",
+x"C4E1FFFC",
+x"C4E0FFF8",
+x"44422002",
+x"8C85FFF0",
+x"C4A30000",
+x"44832802",
+x"44212002",
+x"C4A3FFFC",
+x"44831802",
+x"44A32800",
+x"44002002",
+x"C4A3FFF8",
+x"44831802",
+x"44A32000",
+x"8C85FFF4",
+x"48A00003",
+x"44801806",
+x"080034F6",
+x"44202802",
+x"8C84FFDC",
+x"C4830000",
+x"44A31802",
+x"44832000",
+x"44021802",
+x"C480FFFC",
+x"44600002",
+x"44802000",
+x"44410802",
+x"C480FFF8",
+x"44201802",
+x"44831800",
+x"20040003",
+x"48C40003",
+x"44710001",
+x"080034FB",
+x"44600006",
+x"E4E0FFF4",
+x"40640001",
+x"23030000",
+x"40210030",
+x"C0001DDC",
+x"20210030",
+x"08003502",
+x"8EE3FE28",
+x"8C630000",
+x"C4610000",
+x"8C360024",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E8100009",
+x"8EE4FE28",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"08003520",
+x"8EE4FE24",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"8EE3FE30",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E8100009",
+x"8EE4FE30",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"0800353D",
+x"8EE4FE2C",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"8EE3FE38",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E8100009",
+x"8EE4FE38",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"0800355A",
+x"8EE4FE34",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"20030070",
+x"20790000",
+x"40210030",
+x"C00031C1",
+x"20210030",
+x"20030004",
+x"4BC30002",
+x"0800361B",
+x"8FF702BC",
+x"8C380028",
+x"C7000000",
+x"E7E0027C",
+x"C700FFFC",
+x"E7E00278",
+x"C700FFF8",
+x"E7E00274",
+x"8FE3001C",
+x"40630001",
+x"68600052",
+x"A0640002",
+x"03E42020",
+x"8C840110",
+x"8C87FFD8",
+x"8C86FFFC",
+x"C7010000",
+x"8C85FFEC",
+x"C4A00000",
+x"44200001",
+x"E4E00000",
+x"C701FFFC",
+x"C4A0FFFC",
+x"44200001",
+x"E4E0FFFC",
+x"C701FFF8",
+x"C4A0FFF8",
+x"44200001",
+x"E4E0FFF8",
+x"20050002",
+x"48C5000F",
+x"8C84FFF0",
+x"C4E10000",
+x"C4E3FFFC",
+x"C4E2FFF8",
+x"C4800000",
+x"44010802",
+x"C480FFFC",
+x"44030002",
+x"44200800",
+x"C480FFF8",
+x"44020002",
+x"44200000",
+x"E4E0FFF4",
+x"080035B8",
+x"20050002",
+x"68A60002",
+x"080035B8",
+x"C4E20000",
+x"C4E1FFFC",
+x"C4E0FFF8",
+x"44422002",
+x"8C85FFF0",
+x"C4A30000",
+x"44832802",
+x"44212002",
+x"C4A3FFFC",
+x"44831802",
+x"44A32800",
+x"44002002",
+x"C4A3FFF8",
+x"44831802",
+x"44A32000",
+x"8C85FFF4",
+x"48A00003",
+x"44801806",
+x"080035B2",
+x"44202802",
+x"8C84FFDC",
+x"C4830000",
+x"44A31802",
+x"44832000",
+x"44021802",
+x"C480FFFC",
+x"44600002",
+x"44802000",
+x"44410802",
+x"C480FFF8",
+x"44201802",
+x"44831800",
+x"20040003",
+x"48C40003",
+x"44710001",
+x"080035B7",
+x"44600006",
+x"E4E0FFF4",
+x"40640001",
+x"23030000",
+x"40210030",
+x"C0001DDC",
+x"20210030",
+x"080035BE",
+x"8EE3FE28",
+x"8C630000",
+x"C4610000",
+x"8C360024",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E8100009",
+x"8EE4FE28",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"080035DC",
+x"8EE4FE24",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"8EE3FE30",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E8100009",
+x"8EE4FE30",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"080035F9",
+x"8EE4FE2C",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"8EE3FE38",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E8100009",
+x"8EE4FE38",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"08003616",
+x"8EE4FE34",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210030",
+x"C0002EC2",
+x"20210030",
+x"201E0070",
+x"23D90000",
+x"40210030",
+x"C00031C1",
+x"20210030",
+x"A3430002",
+x"8C2B0020",
+x"4D631800",
+x"C7E20250",
+x"C4610000",
+x"C7E00244",
+x"44200002",
+x"44400000",
+x"E7E00250",
+x"C7E2024C",
+x"C461FFFC",
+x"C7E00240",
+x"44200002",
+x"44400000",
+x"E7E0024C",
+x"C7E20248",
+x"C461FFF8",
+x"C7E0023C",
+x"44200002",
+x"44400000",
+x"E7E00248",
+x"235A0001",
+x"8C2F001C",
+x"8C2E0018",
+x"8C2D0014",
+x"8C2C0010",
+x"8C2B000C",
+x"8C2A0008",
+x"8C290004",
+x"8C390000",
+x"08003252",
+x"E0000000",
+x"E0000000",
+x"A0830002",
+x"4CA33000",
+x"20030004",
+x"687A00A0",
+x"8CC7FFF8",
+x"A3430002",
+x"4CE31800",
+x"6860009B",
+x"A0870002",
+x"4D273800",
+x"8CECFFF8",
+x"A34B0002",
+x"4D8B5800",
+x"4963001D",
+x"A08B0002",
+x"4D0B5800",
+x"8D6CFFF8",
+x"A34B0002",
+x"4D8B5800",
+x"49630015",
+x"408B0001",
+x"A16B0002",
+x"4CAB5800",
+x"8D6CFFF8",
+x"A34B0002",
+x"4D8B5800",
+x"4963000C",
+x"208B0001",
+x"A16B0002",
+x"4CAB5800",
+x"8D6CFFF8",
+x"A34B0002",
+x"4D8B5800",
+x"49630003",
+x"200B0001",
+x"08003661",
+x"200B0000",
+x"08003663",
+x"200B0000",
+x"08003665",
+x"200B0000",
+x"08003667",
+x"200B0000",
+x"4960000C",
+x"A0830002",
+x"4CA31800",
+x"8C79FFE4",
+x"8C69FFE8",
+x"8C6AFFEC",
+x"8C6BFFF0",
+x"8C6CFFF4",
+x"8C6DFFF8",
+x"8C6EFFFC",
+x"8C6F0000",
+x"08003252",
+x"8CCBFFF4",
+x"A3430002",
+x"4D631800",
+x"48600002",
+x"080036DC",
+x"8CE7FFEC",
+x"40830001",
+x"A0630002",
+x"4CA31800",
+x"8C6BFFEC",
+x"8CC6FFEC",
+x"20830001",
+x"A0630002",
+x"4CA31800",
+x"8C6CFFEC",
+x"A0830002",
+x"4D031800",
+x"8C6DFFEC",
+x"A3430002",
+x"4CE31800",
+x"C4600000",
+x"E7E00244",
+x"C460FFFC",
+x"E7E00240",
+x"C460FFF8",
+x"E7E0023C",
+x"A3430002",
+x"4D631800",
+x"C7E10244",
+x"C4600000",
+x"44200000",
+x"E7E00244",
+x"C7E10240",
+x"C460FFFC",
+x"44200000",
+x"E7E00240",
+x"C7E1023C",
+x"C460FFF8",
+x"44200000",
+x"E7E0023C",
+x"A3430002",
+x"4CC31800",
+x"C7E10244",
+x"C4600000",
+x"44200000",
+x"E7E00244",
+x"C7E10240",
+x"C460FFFC",
+x"44200000",
+x"E7E00240",
+x"C7E1023C",
+x"C460FFF8",
+x"44200000",
+x"E7E0023C",
+x"A3430002",
+x"4D831800",
+x"C7E10244",
+x"C4600000",
+x"44200000",
+x"E7E00244",
+x"C7E10240",
+x"C460FFFC",
+x"44200000",
+x"E7E00240",
+x"C7E1023C",
+x"C460FFF8",
+x"44200000",
+x"E7E0023C",
+x"A3430002",
+x"4DA31800",
+x"C7E10244",
+x"C4600000",
+x"44200000",
+x"E7E00244",
+x"C7E10240",
+x"C460FFFC",
+x"44200000",
+x"E7E00240",
+x"C7E1023C",
+x"C460FFF8",
+x"44200000",
+x"E7E0023C",
+x"A0830002",
+x"4CA31800",
+x"8C66FFF0",
+x"A3430002",
+x"4CC31800",
+x"C7E20250",
+x"C4610000",
+x"C7E00244",
+x"44200002",
+x"44400000",
+x"E7E00250",
+x"C7E2024C",
+x"C461FFFC",
+x"C7E00240",
+x"44200002",
+x"44400000",
+x"E7E0024C",
+x"C7E20248",
+x"C461FFF8",
+x"C7E0023C",
+x"44200002",
+x"44400000",
+x"E7E00248",
+x"235A0001",
+x"0800363C",
+x"E0000000",
+x"E0000000",
+x"20030004",
+x"687A00E2",
+x"A3430002",
+x"4D631800",
+x"686000DE",
+x"A3430002",
+x"4D431800",
+x"AC390000",
+x"AC2D0004",
+x"AC2A0008",
+x"AC2B000C",
+x"AC2C0010",
+x"AC2E0014",
+x"48600002",
+x"080037BA",
+x"8F230000",
+x"E7F00244",
+x"E7F00240",
+x"E7F0023C",
+x"A0630002",
+x"03E31820",
+x"8C7702CC",
+x"A3430002",
+x"4FC3B000",
+x"A3430002",
+x"4D83C000",
+x"C7000000",
+x"E7E0027C",
+x"C700FFFC",
+x"E7E00278",
+x"C700FFF8",
+x"E7E00274",
+x"8FE3001C",
+x"40670001",
+x"68E00052",
+x"A0E30002",
+x"03E31820",
+x"8C630110",
+x"8C66FFD8",
+x"8C65FFFC",
+x"C7010000",
+x"8C64FFEC",
+x"C4800000",
+x"44200001",
+x"E4C00000",
+x"C701FFFC",
+x"C480FFFC",
+x"44200001",
+x"E4C0FFFC",
+x"C701FFF8",
+x"C480FFF8",
+x"44200001",
+x"E4C0FFF8",
+x"20040002",
+x"48A4000F",
+x"8C63FFF0",
+x"C4C10000",
+x"C4C3FFFC",
+x"C4C2FFF8",
+x"C4600000",
+x"44010802",
+x"C460FFFC",
+x"44030002",
+x"44200800",
+x"C460FFF8",
+x"44020002",
+x"44200000",
+x"E4C0FFF4",
+x"0800374E",
+x"20040002",
+x"68850002",
+x"0800374E",
+x"C4C20000",
+x"C4C1FFFC",
+x"C4C0FFF8",
+x"44422002",
+x"8C64FFF0",
+x"C4830000",
+x"44832802",
+x"44212002",
+x"C483FFFC",
+x"44831802",
+x"44A32800",
+x"44002002",
+x"C483FFF8",
+x"44831802",
+x"44A32000",
+x"8C64FFF4",
+x"48800003",
+x"44801806",
+x"08003748",
+x"44202802",
+x"8C63FFDC",
+x"C4630000",
+x"44A31802",
+x"44832000",
+x"44021802",
+x"C460FFFC",
+x"44600002",
+x"44802000",
+x"44410802",
+x"C460FFF8",
+x"44201802",
+x"44831800",
+x"20030003",
+x"48A30003",
+x"44710001",
+x"0800374D",
+x"44600006",
+x"E4C0FFF4",
+x"40E40001",
+x"23030000",
+x"4021001C",
+x"C0001DDC",
+x"2021001C",
+x"08003754",
+x"8EE3FE28",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"AC290018",
+x"E8100009",
+x"8EE4FE28",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210020",
+x"C0002EC2",
+x"20210020",
+x"08003772",
+x"8EE4FE24",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210020",
+x"C0002EC2",
+x"20210020",
+x"8EE3FE30",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E8100009",
+x"8EE4FE30",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210020",
+x"C0002EC2",
+x"20210020",
+x"0800378F",
+x"8EE4FE2C",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210020",
+x"C0002EC2",
+x"20210020",
+x"8EE3FE38",
+x"8C630000",
+x"C4610000",
+x"C6C00000",
+x"44201002",
+x"C461FFFC",
+x"C6C0FFFC",
+x"44200002",
+x"44401000",
+x"C461FFF8",
+x"C6C0FFF8",
+x"44200002",
+x"44400000",
+x"E8100009",
+x"8EE4FE38",
+x"44125003",
+x"8C83FFFC",
+x"8C950000",
+x"40210020",
+x"C0002EC2",
+x"20210020",
+x"080037AC",
+x"8EE4FE34",
+x"44135003",
+x"8C83FFFC",
+x"8C950000",
+x"40210020",
+x"C0002EC2",
+x"20210020",
+x"20030070",
+x"20790000",
+x"40210020",
+x"C00031C1",
+x"20210020",
+x"8C290018",
+x"A3430002",
+x"4D231800",
+x"C7E00244",
+x"E4600000",
+x"C7E00240",
+x"E460FFFC",
+x"C7E0023C",
+x"E460FFF8",
+x"235A0001",
+x"8C2E0014",
+x"8C2C0010",
+x"8C2B000C",
+x"8C2A0008",
+x"8C2D0004",
+x"8C390000",
+x"080036E0",
+x"E0000000",
+x"E0000000",
+x"68C00076",
+x"C7E30264",
+x"8FE30260",
+x"00C31822",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"44600002",
+x"C7E10288",
+x"44010802",
+x"442D0800",
+x"E7E102AC",
+x"C7E10284",
+x"44010802",
+x"442C0800",
+x"E7E102A8",
+x"C7E10280",
+x"44010002",
+x"440B0000",
+x"E7E002A4",
+x"C7E202AC",
+x"44420802",
+x"C7E002A8",
+x"44000002",
+x"44200800",
+x"C7E002A4",
+x"44000002",
+x"44200000",
+x"44000004",
+x"C8100003",
+x"46200803",
+x"080037E6",
+x"200300C8",
+x"C4610000",
+x"44410002",
+x"E7E002AC",
+x"C7E002A8",
+x"44010002",
+x"E7E002A8",
+x"C7E002A4",
+x"44010002",
+x"E7E002A4",
+x"E7F00250",
+x"E7F0024C",
+x"E7F00248",
+x"C7E00128",
+x"E7E00270",
+x"C7E00124",
+x"E7E0026C",
+x"C7E00120",
+x"E7E00268",
+x"20190000",
+x"A0C30002",
+x"4CE31800",
+x"8C70FFE4",
+x"8C75FFE8",
+x"8C77FFEC",
+x"8C71FFF0",
+x"8C72FFF4",
+x"8C73FFF8",
+x"8C74FFFC",
+x"8C780000",
+x"43F602AC",
+x"E42B0000",
+x"E42C0004",
+x"E42D0008",
+x"AC28000C",
+x"AC270010",
+x"AC260014",
+x"46007006",
+x"46206806",
+x"4021001C",
+x"C0002AAB",
+x"2021001C",
+x"8C260014",
+x"A0C30002",
+x"8C270010",
+x"4CE31800",
+x"8C630000",
+x"C7E00250",
+x"E4600000",
+x"C7E0024C",
+x"E460FFFC",
+x"C7E00248",
+x"E460FFF8",
+x"A0C30002",
+x"4CE31800",
+x"8C63FFE8",
+x"8C28000C",
+x"AC680000",
+x"A0C30002",
+x"4CE31800",
+x"201A0000",
+x"8C7EFFE4",
+x"8C79FFE8",
+x"8C69FFEC",
+x"8C6DFFF0",
+x"8C6AFFF4",
+x"8C6BFFF8",
+x"8C6CFFFC",
+x"8C6E0000",
+x"4021001C",
+x"C00036E0",
+x"2021001C",
+x"8C260014",
+x"40C60001",
+x"8C28000C",
+x"21030001",
+x"20080005",
+x"68680003",
+x"40680005",
+x"08003835",
+x"20680000",
+x"C42D0008",
+x"C42C0004",
+x"C42B0000",
+x"8C270010",
+x"080037C4",
+x"E0000000",
+x"8FE30258",
+x"69C30002",
+x"E0000000",
+x"A1C30002",
+x"4E031800",
+x"8C630000",
+x"C4600000",
+x"E7E00250",
+x"C460FFFC",
+x"E7E0024C",
+x"C460FFF8",
+x"E7E00248",
+x"8FE40254",
+x"21E30001",
+x"68640003",
+x"20030000",
+x"08003858",
+x"680F0003",
+x"20030000",
+x"08003858",
+x"8FE40258",
+x"21C30001",
+x"68640003",
+x"20030000",
+x"08003858",
+x"680E0003",
+x"20030000",
+x"08003858",
+x"20030001",
+x"AC320000",
+x"AC300004",
+x"AC310008",
+x"AC2F000C",
+x"AC2E0010",
+x"48600012",
+x"A1C30002",
+x"4E032000",
+x"201A0000",
+x"8C99FFE4",
+x"8C89FFE8",
+x"8C8AFFEC",
+x"8C8BFFF0",
+x"8C8CFFF4",
+x"8C8DFFF8",
+x"8C83FFFC",
+x"8C840000",
+x"206E0000",
+x"208F0000",
+x"40210018",
+x"C0003252",
+x"20210018",
+x"08003878",
+x"201A0000",
+x"22480000",
+x"22050000",
+x"22290000",
+x"21EA0000",
+x"21C40000",
+x"40210018",
+x"C000363C",
+x"20210018",
+x"C7E00250",
+x"40210018",
+x"C00000A0",
+x"20210018",
+x"200400FF",
+x"68830006",
+x"68600003",
+x"20640000",
+x"08003882",
+x"20040000",
+x"08003884",
+x"200400FF",
+x"40210018",
+x"C0001037",
+x"20030020",
+x"04600001",
+x"C7E0024C",
+x"C00000A0",
+x"20210018",
+x"200400FF",
+x"68830006",
+x"68600003",
+x"20640000",
+x"08003891",
+x"20040000",
+x"08003893",
+x"200400FF",
+x"40210018",
+x"C0001037",
+x"20030020",
+x"04600001",
+x"C7E00248",
+x"C00000A0",
+x"20210018",
+x"200400FF",
+x"68830006",
+x"68600003",
+x"20640000",
+x"080038A0",
+x"20040000",
+x"080038A2",
+x"200400FF",
+x"40210018",
+x"C0001037",
+x"20210018",
+x"2003000A",
+x"04600001",
+x"8C2E0010",
+x"21CE0001",
+x"8C2F000C",
+x"8C310008",
+x"8C300004",
+x"8C320000",
+x"0800383B",
+x"8FE30254",
+x"69E30002",
+x"E0000000",
+x"40630001",
+x"AC280000",
+x"AC300004",
+x"AC310008",
+x"AC27000C",
+x"AC2F0010",
+x"69E30002",
+x"080038D1",
+x"21E40001",
+x"C7E30264",
+x"8FE3025C",
+x"00831822",
+x"40210018",
+x"C0000081",
+x"44600002",
+x"C7E10294",
+x"44011002",
+x"C7E102A0",
+x"44416800",
+x"C7E10290",
+x"44011002",
+x"C7E1029C",
+x"44416000",
+x"C7E1028C",
+x"44010802",
+x"C7E00298",
+x"44205800",
+x"8FE30258",
+x"40660001",
+x"22070000",
+x"C00037C4",
+x"20210018",
+x"200E0000",
+x"8C2F0010",
+x"8C27000C",
+x"8C310008",
+x"8C300004",
+x"22120000",
+x"22300000",
+x"20F10000",
+x"40210018",
+x"C000383B",
+x"20210018",
+x"8C2F0010",
+x"21EF0001",
+x"8C280000",
+x"21030002",
+x"20080005",
+x"68680003",
+x"40680005",
+x"080038E5",
+x"20680000",
+x"8FE30254",
+x"69E30002",
+x"E0000000",
+x"40630001",
+x"AC280014",
+x"AC2F0018",
+x"69E30002",
+x"08003907",
+x"21E40001",
+x"C7E30264",
+x"8FE3025C",
+x"00831822",
+x"40210020",
+x"C0000081",
+x"20210020",
+x"44600002",
+x"C7E10294",
+x"44011002",
+x"C7E102A0",
+x"44416800",
+x"C7E10290",
+x"44011002",
+x"C7E1029C",
+x"44416000",
+x"C7E1028C",
+x"44010802",
+x"C7E00298",
+x"44205800",
+x"8FE30258",
+x"40660001",
+x"8C27000C",
+x"40210020",
+x"C00037C4",
+x"20210020",
+x"200E0000",
+x"8C2F0018",
+x"8C310008",
+x"8C300004",
+x"8C27000C",
+x"20F20000",
+x"40210020",
+x"C000383B",
+x"20210020",
+x"8C2F0018",
+x"21EF0001",
+x"8C280014",
+x"21040002",
+x"20030005",
+x"68830003",
+x"40830005",
+x"08003919",
+x"20830000",
+x"8C300004",
+x"8C27000C",
+x"8C310008",
+x"20680000",
+x"221B0000",
+x"22300000",
+x"20F10000",
+x"23670000",
+x"080038AE",
+x"6920007D",
+x"20030003",
+x"46000006",
+x"40210004",
+x"C0000048",
+x"206D0000",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"20640000",
+x"20030005",
+x"C000003F",
+x"20680000",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AD03FFFC",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AD03FFF8",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AD03FFF4",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"AD03FFF0",
+x"20030005",
+x"20040000",
+x"C000003F",
+x"206C0000",
+x"20030005",
+x"20040000",
+x"C000003F",
+x"206B0000",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"20640000",
+x"20030005",
+x"C000003F",
+x"20670000",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"ACE3FFFC",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"ACE3FFF8",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"ACE3FFF4",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"ACE3FFF0",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"20640000",
+x"20030005",
+x"C000003F",
+x"20660000",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"ACC3FFFC",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"ACC3FFF8",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"ACC3FFF4",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"ACC3FFF0",
+x"20030001",
+x"20040000",
+x"C000003F",
+x"206E0000",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"20640000",
+x"20030005",
+x"C000003F",
+x"20650000",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"ACA3FFFC",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"ACA3FFF8",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"ACA3FFF4",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"20210004",
+x"ACA3FFF0",
+x"20430000",
+x"20420020",
+x"AC65FFE4",
+x"AC6EFFE8",
+x"AC66FFEC",
+x"AC67FFF0",
+x"AC6BFFF4",
+x"AC6CFFF8",
+x"AC68FFFC",
+x"AC6D0000",
+x"A1240002",
+x"6D441800",
+x"41290001",
+x"08003922",
+x"21430000",
+x"E0000000",
+x"E4200000",
+x"E4220004",
+x"20060005",
+x"68860039",
+x"44A51002",
+x"44210002",
+x"44400000",
+x"44110000",
+x"44000004",
+x"44A01003",
+x"44200803",
+x"46200003",
+x"A0A40002",
+x"03E42020",
+x"8C8502CC",
+x"A0640002",
+x"4CA42000",
+x"8C840000",
+x"E4820000",
+x"E481FFFC",
+x"E480FFF8",
+x"20640028",
+x"A0840002",
+x"4CA42000",
+x"8C840000",
+x"44202007",
+x"E4820000",
+x"E480FFFC",
+x"E484FFF8",
+x"20640050",
+x"A0840002",
+x"4CA42000",
+x"8C840000",
+x"44401807",
+x"E4800000",
+x"E483FFFC",
+x"E484FFF8",
+x"20640001",
+x"A0840002",
+x"4CA42000",
+x"8C840000",
+x"44000007",
+x"E4830000",
+x"E484FFFC",
+x"E480FFF8",
+x"20640029",
+x"A0840002",
+x"4CA42000",
+x"8C840000",
+x"E4830000",
+x"E480FFFC",
+x"E481FFF8",
+x"20630051",
+x"A0630002",
+x"4CA31800",
+x"8C630000",
+x"E4600000",
+x"E462FFFC",
+x"E461FFF8",
+x"E0000000",
+x"44210002",
+x"200600A4",
+x"C4C60000",
+x"44060000",
+x"44002804",
+x"46250003",
+x"EA200006",
+x"E8140003",
+x"20060000",
+x"080039E8",
+x"2006FFFF",
+x"080039EA",
+x"20060001",
+x"48C00003",
+x"44002006",
+x"080039EE",
+x"46202003",
+x"44840002",
+x"20070084",
+x"C4EE0000",
+x"45C00802",
+x"20070080",
+x"C4EF0000",
+x"442F1803",
+x"2007007C",
+x"C4E10000",
+x"E4210008",
+x"C4210008",
+x"44201002",
+x"20070078",
+x"C4E10000",
+x"E421000C",
+x"C421000C",
+x"44230800",
+x"44410803",
+x"20070074",
+x"C4EB0000",
+x"45601002",
+x"20070070",
+x"C4ED0000",
+x"45A10800",
+x"44411003",
+x"2007006C",
+x"C4EC0000",
+x"45801802",
+x"20070068",
+x"C4E10000",
+x"E4210010",
+x"C4210010",
+x"44220800",
+x"44610803",
+x"20070064",
+x"C4E90000",
+x"45201002",
+x"47810800",
+x"44411003",
+x"20070060",
+x"C4EA0000",
+x"45401802",
+x"2007005C",
+x"C4E10000",
+x"E4210014",
+x"C4210014",
+x"44220800",
+x"44611003",
+x"2007004C",
+x"C4E10000",
+x"E4210018",
+x"20070058",
+x"C4E80000",
+x"45001802",
+x"20070054",
+x"C4E10000",
+x"E421001C",
+x"C421001C",
+x"44220800",
+x"44610803",
+x"20070050",
+x"C4E70000",
+x"44E01002",
+x"47210800",
+x"44410803",
+x"47201002",
+x"47410800",
+x"44411003",
+x"C4210018",
+x"44201802",
+x"47020800",
+x"44610803",
+x"46E10800",
+x"44010003",
+x"46200000",
+x"44800803",
+x"68060006",
+x"68C00003",
+x"44200006",
+x"08003A3F",
+x"47E10001",
+x"08003A41",
+x"46C10001",
+x"C4210004",
+x"44010802",
+x"44210002",
+x"44191003",
+x"47421001",
+x"44021003",
+x"47021001",
+x"44021003",
+x"46E21001",
+x"44020003",
+x"46200001",
+x"44200003",
+x"44052802",
+x"20840001",
+x"44A50002",
+x"44060000",
+x"44003004",
+x"46260003",
+x"EA200006",
+x"E8140003",
+x"20060000",
+x"08003A58",
+x"2006FFFF",
+x"08003A5A",
+x"20060001",
+x"48C00003",
+x"44000806",
+x"08003A5E",
+x"46200803",
+x"44210002",
+x"45C01002",
+x"444F1803",
+x"C4220008",
+x"44402002",
+x"C422000C",
+x"44431000",
+x"44821003",
+x"45601802",
+x"45A21000",
+x"44621803",
+x"45802002",
+x"C4220010",
+x"44431000",
+x"44821003",
+x"45201802",
+x"47821000",
+x"44621003",
+x"45401802",
+x"C4240014",
+x"44821000",
+x"44621003",
+x"45002002",
+x"C423001C",
+x"44621000",
+x"44821003",
+x"44E01802",
+x"47221000",
+x"44621003",
+x"47201802",
+x"47421000",
+x"44621003",
+x"C4230018",
+x"44601802",
+x"47021000",
+x"44621003",
+x"46E21000",
+x"44020003",
+x"46200000",
+x"44200803",
+x"68060006",
+x"68C00003",
+x"44200006",
+x"08003A8B",
+x"47E10001",
+x"08003A8D",
+x"46C10001",
+x"C4210000",
+x"44010002",
+x"44001002",
+x"44590803",
+x"47410801",
+x"44410803",
+x"47010801",
+x"44410803",
+x"46E10801",
+x"44410803",
+x"46210801",
+x"44010003",
+x"44060802",
+x"C4220004",
+x"C4200000",
+x"080039A1",
+x"694000AA",
+x"E4200000",
+x"21430000",
+x"40210008",
+x"C0000081",
+x"20210008",
+x"44000806",
+x"200300AC",
+x"C4650000",
+x"44250802",
+x"200300A8",
+x"C4640000",
+x"44241001",
+x"20040000",
+x"C4200000",
+x"E4240004",
+x"E4250008",
+x"E421000C",
+x"21030000",
+x"21250000",
+x"46000806",
+x"46002806",
+x"40210014",
+x"C00039A1",
+x"20210014",
+x"200300A4",
+x"C4630000",
+x"C421000C",
+x"44231000",
+x"20040000",
+x"210B0002",
+x"C4200000",
+x"E4230010",
+x"21630000",
+x"21250000",
+x"46000806",
+x"46002806",
+x"40210018",
+x"C00039A1",
+x"20210018",
+x"414A0001",
+x"21230001",
+x"20090005",
+x"68690003",
+x"40690005",
+x"08003ACC",
+x"20690000",
+x"6940007A",
+x"21430000",
+x"40210018",
+x"C0000081",
+x"20210018",
+x"44000806",
+x"C4250008",
+x"44250802",
+x"C4240004",
+x"44241001",
+x"20040000",
+x"C4200000",
+x"E4210014",
+x"21030000",
+x"21250000",
+x"46000806",
+x"46002806",
+x"4021001C",
+x"C00039A1",
+x"2021001C",
+x"C4230010",
+x"C4210014",
+x"44231000",
+x"20040000",
+x"C4200000",
+x"21630000",
+x"21250000",
+x"46000806",
+x"46002806",
+x"4021001C",
+x"C00039A1",
+x"2021001C",
+x"414A0001",
+x"21230001",
+x"20090005",
+x"68690003",
+x"40690005",
+x"08003AF3",
+x"20690000",
+x"69400052",
+x"21430000",
+x"4021001C",
+x"C0000081",
+x"2021001C",
+x"44000806",
+x"C4250008",
+x"44250802",
+x"C4240004",
+x"44241001",
+x"20040000",
+x"C4200000",
+x"E4210018",
+x"21030000",
+x"21250000",
+x"46000806",
+x"46002806",
+x"40210020",
+x"C00039A1",
+x"20210020",
+x"C4230010",
+x"C4210018",
+x"44231000",
+x"20040000",
+x"C4200000",
+x"21630000",
+x"21250000",
+x"46000806",
+x"46002806",
+x"40210020",
+x"C00039A1",
+x"20210020",
+x"414A0001",
+x"21230001",
+x"20090005",
+x"68690003",
+x"40690005",
+x"08003B1A",
+x"20690000",
+x"6940002A",
+x"21430000",
+x"40210020",
+x"C0000081",
+x"20210020",
+x"44000806",
+x"C4250008",
+x"44250802",
+x"C4240004",
+x"44241001",
+x"20040000",
+x"C4200000",
+x"E421001C",
+x"21030000",
+x"21250000",
+x"46000806",
+x"46002806",
+x"40210024",
+x"C00039A1",
+x"20210024",
+x"C4230010",
+x"C421001C",
+x"44231000",
+x"20040000",
+x"C4200000",
+x"21630000",
+x"21250000",
+x"46000806",
+x"46002806",
+x"40210024",
+x"C00039A1",
+x"20210024",
+x"414A0001",
+x"21240001",
+x"20030005",
+x"68830003",
+x"40830005",
+x"08003B41",
+x"20830000",
+x"C4200000",
+x"20690000",
+x"08003A9D",
+x"E0000000",
+x"E0000000",
+x"E0000000",
+x"E0000000",
+x"69A00132",
+x"21A30000",
+x"40210004",
+x"C0000081",
+x"20210004",
+x"200300AC",
+x"C4640000",
+x"44040002",
+x"200300A8",
+x"C4630000",
+x"44030001",
+x"20030004",
+x"E4200000",
+x"40210008",
+x"C0000081",
+x"20210008",
+x"44000806",
+x"44240802",
+x"44235001",
+x"20040000",
+x"C4200000",
+x"E42A0004",
+x"E4230008",
+x"E424000C",
+x"E4210010",
+x"21030000",
+x"21850000",
+x"45401006",
+x"46000806",
+x"46002806",
+x"40210018",
+x"C00039A1",
+x"20210018",
+x"200300A4",
+x"C4650000",
+x"C4210010",
+x"44254800",
+x"20040000",
+x"210A0002",
+x"C4200000",
+x"E4290014",
+x"E4250018",
+x"21430000",
+x"21850000",
+x"45201006",
+x"46000806",
+x"46002806",
+x"40210020",
+x"C00039A1",
+x"20210020",
+x"20060003",
+x"21830001",
+x"20090005",
+x"68690003",
+x"40690005",
+x"08003B81",
+x"20690000",
+x"20C30000",
+x"40210020",
+x"C0000081",
+x"20210020",
+x"44000806",
+x"C424000C",
+x"44240802",
+x"C4230008",
+x"44234001",
+x"20040000",
+x"C4200000",
+x"E428001C",
+x"E4210020",
+x"21030000",
+x"21250000",
+x"45001006",
+x"46000806",
+x"46002806",
+x"40210028",
+x"C00039A1",
+x"20210028",
+x"C4250018",
+x"C4210020",
+x"44253800",
+x"20040000",
+x"C4200000",
+x"E4270024",
+x"21430000",
+x"21250000",
+x"44E01006",
+x"46000806",
+x"46002806",
+x"4021002C",
+x"C00039A1",
+x"2021002C",
+x"20060002",
+x"21230001",
+x"20090005",
+x"68690003",
+x"40690005",
+x"08003BAB",
+x"20690000",
+x"20C30000",
+x"4021002C",
+x"C0000081",
+x"2021002C",
+x"44000806",
+x"C424000C",
+x"44240802",
+x"C4230008",
+x"44233001",
+x"20040000",
+x"C4200000",
+x"E4260028",
+x"E421002C",
+x"21030000",
+x"21250000",
+x"44C01006",
+x"46000806",
+x"46002806",
+x"40210034",
+x"C00039A1",
+x"20210034",
+x"C4250018",
+x"C421002C",
+x"44251000",
+x"20040000",
+x"C4200000",
+x"E4220030",
+x"21430000",
+x"21250000",
+x"46000806",
+x"46002806",
+x"40210038",
+x"C00039A1",
+x"20210038",
+x"20060001",
+x"21230001",
+x"20090005",
+x"68690003",
+x"40690005",
+x"08003BD4",
+x"20690000",
+x"20C30000",
+x"40210038",
+x"C0000081",
+x"20210038",
+x"44000806",
+x"C424000C",
+x"44245802",
+x"C4230008",
+x"45630801",
+x"20040000",
+x"C4200000",
+x"E42B0034",
+x"21030000",
+x"21250000",
+x"44201006",
+x"46002806",
+x"46000806",
+x"4021003C",
+x"C00039A1",
+x"2021003C",
+x"C4250018",
+x"C42B0034",
+x"45650800",
+x"20040000",
+x"C4200000",
+x"21430000",
+x"21250000",
+x"44201006",
+x"46002806",
+x"46000806",
+x"4021003C",
+x"C00039A1",
+x"2021003C",
+x"200A0000",
+x"21230001",
+x"20090005",
+x"68690003",
+x"40690005",
+x"08003BFC",
+x"20690000",
+x"C4200000",
+x"AC280038",
+x"40210040",
+x"C0003A9D",
+x"20210040",
+x"41AE0001",
+x"21830002",
+x"200C0005",
+x"686C0003",
+x"406C0005",
+x"08003C08",
+x"206C0000",
+x"8C280038",
+x"210D0004",
+x"69C0006F",
+x"21C30000",
+x"40210040",
+x"C0000081",
+x"20210040",
+x"C424000C",
+x"44040002",
+x"C4230008",
+x"44030001",
+x"20040000",
+x"C42A0004",
+x"E420003C",
+x"21A30000",
+x"21850000",
+x"45401006",
+x"46000806",
+x"46002806",
+x"40210044",
+x"C00039A1",
+x"20210044",
+x"20040000",
+x"21A80002",
+x"C4290014",
+x"C420003C",
+x"21030000",
+x"21850000",
+x"45201006",
+x"46000806",
+x"46002806",
+x"40210044",
+x"C00039A1",
+x"20210044",
+x"21830001",
+x"20050005",
+x"68650003",
+x"40650005",
+x"08003C30",
+x"20650000",
+x"20040000",
+x"C428001C",
+x"C420003C",
+x"AC250040",
+x"21A30000",
+x"45001006",
+x"46000806",
+x"46002806",
+x"40210048",
+x"C00039A1",
+x"20210048",
+x"20040000",
+x"C4270024",
+x"C420003C",
+x"8C250040",
+x"21030000",
+x"44E01006",
+x"46000806",
+x"46002806",
+x"40210048",
+x"C00039A1",
+x"20210048",
+x"8C250040",
+x"20A30001",
+x"20050005",
+x"68650003",
+x"40650005",
+x"08003C4D",
+x"20650000",
+x"20040000",
+x"C4260028",
+x"C420003C",
+x"AC250044",
+x"21A30000",
+x"44C01006",
+x"46000806",
+x"46002806",
+x"4021004C",
+x"C00039A1",
+x"2021004C",
+x"20040000",
+x"C4220030",
+x"C420003C",
+x"8C250044",
+x"21030000",
+x"46000806",
+x"46002806",
+x"4021004C",
+x"C00039A1",
+x"2021004C",
+x"200A0001",
+x"8C250044",
+x"20A30001",
+x"20090005",
+x"68690003",
+x"40690005",
+x"08003C6A",
+x"20690000",
+x"C420003C",
+x"21A80000",
+x"4021004C",
+x"C0003A9D",
+x"2021004C",
+x"41C40001",
+x"21830002",
+x"200C0005",
+x"686C0003",
+x"406C0005",
+x"08003C76",
+x"206C0000",
+x"21A80004",
+x"208D0000",
+x"08003B48",
+x"E0000000",
+x"E0000000",
+x"68E00058",
+x"20030003",
+x"46000006",
+x"40210004",
+x"C0000048",
+x"20210004",
+x"20640000",
+x"8FE3001C",
+x"AC240000",
+x"40210008",
+x"C000003F",
+x"20210008",
+x"20650000",
+x"20430000",
+x"20420008",
+x"AC65FFFC",
+x"8C240000",
+x"AC640000",
+x"A0E40002",
+x"6CC41800",
+x"40E70001",
+x"68E00042",
+x"20030003",
+x"46000006",
+x"40210008",
+x"C0000048",
+x"20210008",
+x"20640000",
+x"8FE3001C",
+x"AC240004",
+x"4021000C",
+x"C000003F",
+x"2021000C",
+x"20650000",
+x"20430000",
+x"20420008",
+x"AC65FFFC",
+x"8C240004",
+x"AC640000",
+x"A0E40002",
+x"6CC41800",
+x"40E70001",
+x"68E0002C",
+x"20030003",
+x"46000006",
+x"4021000C",
+x"C0000048",
+x"2021000C",
+x"20640000",
+x"8FE3001C",
+x"AC240008",
+x"40210010",
+x"C000003F",
+x"20210010",
+x"20650000",
+x"20430000",
+x"20420008",
+x"AC65FFFC",
+x"8C240008",
+x"AC640000",
+x"A0E40002",
+x"6CC41800",
+x"40E70001",
+x"68E00016",
+x"20030003",
+x"46000006",
+x"40210010",
+x"C0000048",
+x"20210010",
+x"20640000",
+x"8FE3001C",
+x"AC24000C",
+x"40210014",
+x"C000003F",
+x"20210014",
+x"20650000",
+x"20430000",
+x"20420008",
+x"AC65FFFC",
+x"8C24000C",
+x"AC640000",
+x"A0E40002",
+x"6CC41800",
+x"40E70001",
+x"08003C7B",
+x"E0000000",
+x"E0000000",
+x"E0000000",
+x"E0000000",
+x"690000C2",
+x"20060078",
+x"20030003",
+x"46000006",
+x"40210004",
+x"C0000048",
+x"20210004",
+x"20640000",
+x"8FE3001C",
+x"AC240000",
+x"40210008",
+x"C000003F",
+x"20210008",
+x"20650000",
+x"20430000",
+x"20420008",
+x"AC65FFFC",
+x"8C240000",
+x"AC640000",
+x"20640000",
+x"20C30000",
+x"40210008",
+x"C000003F",
+x"A1040002",
+x"03E42020",
+x"AC8302CC",
+x"A1030002",
+x"03E31820",
+x"8C6602CC",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"20210008",
+x"20640000",
+x"8FE3001C",
+x"AC240004",
+x"4021000C",
+x"C000003F",
+x"2021000C",
+x"20650000",
+x"20430000",
+x"20420008",
+x"AC65FFFC",
+x"8C240004",
+x"AC640000",
+x"ACC3FE28",
+x"20030003",
+x"46000006",
+x"4021000C",
+x"C0000048",
+x"2021000C",
+x"20640000",
+x"8FE3001C",
+x"AC240008",
+x"40210010",
+x"C000003F",
+x"20210010",
+x"20650000",
+x"20430000",
+x"20420008",
+x"AC65FFFC",
+x"8C240008",
+x"AC640000",
+x"ACC3FE2C",
+x"20030003",
+x"46000006",
+x"40210010",
+x"C0000048",
+x"20210010",
+x"20640000",
+x"8FE3001C",
+x"AC24000C",
+x"40210014",
+x"C000003F",
+x"20210014",
+x"20650000",
+x"20430000",
+x"20420008",
+x"AC65FFFC",
+x"8C24000C",
+x"AC640000",
+x"ACC3FE30",
+x"20030003",
+x"46000006",
+x"40210014",
+x"C0000048",
+x"20210014",
+x"20640000",
+x"8FE3001C",
+x"AC240010",
+x"40210018",
+x"C000003F",
+x"20210018",
+x"20650000",
+x"20430000",
+x"20420008",
+x"AC65FFFC",
+x"8C240010",
+x"AC640000",
+x"ACC3FE34",
+x"20070072",
+x"40210018",
+x"C0003C7B",
+x"20210018",
+x"41080001",
+x"69000058",
+x"20060078",
+x"20030003",
+x"46000006",
+x"40210018",
+x"C0000048",
+x"20210018",
+x"20640000",
+x"8FE3001C",
+x"AC240014",
+x"4021001C",
+x"C000003F",
+x"2021001C",
+x"20650000",
+x"20430000",
+x"20420008",
+x"AC65FFFC",
+x"8C240014",
+x"AC640000",
+x"20640000",
+x"20C30000",
+x"4021001C",
+x"C000003F",
+x"A1040002",
+x"03E42020",
+x"AC8302CC",
+x"A1030002",
+x"03E31820",
+x"8C6602CC",
+x"20030003",
+x"46000006",
+x"C0000048",
+x"2021001C",
+x"20640000",
+x"8FE3001C",
+x"AC240018",
+x"40210020",
+x"C000003F",
+x"20210020",
+x"20650000",
+x"20430000",
+x"20420008",
+x"AC65FFFC",
+x"8C240018",
+x"AC640000",
+x"ACC3FE28",
+x"20030003",
+x"46000006",
+x"40210020",
+x"C0000048",
+x"20210020",
+x"20640000",
+x"8FE3001C",
+x"AC24001C",
+x"40210024",
+x"C000003F",
+x"20210024",
+x"20650000",
+x"20430000",
+x"20420008",
+x"AC65FFFC",
+x"8C24001C",
+x"AC640000",
+x"ACC3FE2C",
+x"20030003",
+x"46000006",
+x"40210024",
+x"C0000048",
+x"20210024",
+x"20640000",
+x"8FE3001C",
+x"AC240020",
+x"40210028",
+x"C000003F",
+x"20210028",
+x"20650000",
+x"20430000",
+x"20420008",
+x"AC65FFFC",
+x"8C240020",
+x"AC640000",
+x"ACC3FE30",
+x"20070073",
+x"40210028",
+x"C0003C7B",
+x"20210028",
+x"41080001",
+x"08003CD4",
+x"E0000000",
+x"E0000000",
+x"69800060",
+x"A1830002",
+x"4D631800",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"40210004",
+x"C0001D15",
+x"20210004",
+x"418C0001",
+x"69800054",
+x"A1830002",
+x"4D631800",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"40210004",
+x"C0001D15",
+x"20210004",
+x"418C0001",
+x"69800048",
+x"A1830002",
+x"4D631800",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"40210004",
+x"C0001D15",
+x"20210004",
+x"418C0001",
+x"6980003C",
+x"A1830002",
+x"4D631800",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"40210004",
+x"C0001D15",
+x"20210004",
+x"418C0001",
+x"69800030",
+x"A1830002",
+x"4D631800",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"40210004",
+x"C0001D15",
+x"20210004",
+x"418C0001",
+x"69800024",
+x"A1830002",
+x"4D631800",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"40210004",
+x"C0001D15",
+x"20210004",
+x"418C0001",
+x"69800018",
+x"A1830002",
+x"4D631800",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"40210004",
+x"C0001D15",
+x"20210004",
+x"418C0001",
+x"6980000C",
+x"A1830002",
+x"4D631800",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"40210004",
+x"C0001D15",
+x"20210004",
+x"418C0001",
+x"08003D97",
+x"E0000000",
+x"E0000000",
+x"E0000000",
+x"E0000000",
+x"E0000000",
+x"E0000000",
+x"E0000000",
+x"E0000000",
+x"69A0006E",
+x"A1A30002",
+x"03E31820",
+x"8C6B02CC",
+x"8D63FE24",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"40210004",
+x"C0001D15",
+x"8D63FE28",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"8D63FE2C",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"8D63FE30",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"8D63FE34",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"8D63FE38",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"8D63FE3C",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"8D63FE40",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"200C006F",
+x"C0003D97",
+x"20210004",
+x"41AD0001",
+x"69A00034",
+x"A1A30002",
+x"03E31820",
+x"8C6B02CC",
+x"8D63FE24",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"40210004",
+x"C0001D15",
+x"8D63FE28",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"8D63FE2C",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"8D63FE30",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"8D63FE34",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"8D63FE38",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"8D63FE3C",
+x"8FE4001C",
+x"40850001",
+x"8C66FFFC",
+x"8C670000",
+x"C0001D15",
+x"200C0070",
+x"C0003D97",
+x"20210004",
+x"41AD0001",
+x"08003DF8",
+x"E0000000",
+x"E0000000",
 x"00000000"
 
 	 );
diff --git a/ocore/ram.vhd b/ocore/ram.vhd
deleted file mode 100644
index bbd69ce..0000000
--- a/ocore/ram.vhd
+++ /dev/null
@@ -1,48 +0,0 @@
-library ieee;
-use ieee.std_logic_1164.all;
-use ieee.std_logic_arith.all;
-use ieee.std_logic_unsigned.all;
---use ieee.std_logic_signed.all;
-
-
-entity ram is
-	port (
-		CLKA		: in	std_logic;
-		WEA			: in	std_logic_vector(0 downto 0);
-		ADDRA		: in	std_logic_vector(11 downto 0);
-		DINA		: in	std_logic_vector(31 downto 0);
-		DOUTA		: out	std_logic_vector(31 downto 0)
-	);
-
-
-end ram;
-
-architecture RTL of ram is
-	subtype ram_rec_t is std_logic_vector(31 downto 0);
-	type ram_array_t is array (0 to 4095) of ram_rec_t;
-	signal addr_in	: integer range 0 to 4095;
-
-	signal ram_data : ram_array_t;
-	signal pre_wea : std_logic_vector(0 downto 0);
-	signal data_in : std_logic_vector(31 downto 0);
-
-begin
-	ram_sim: process(CLKA)
-	begin
-		if rising_edge(CLKA) then
-			pre_wea(0) <= WEA(0);
-			addr_in <= conv_integer(ADDRA);
-			data_in <= DINA;
-			if pre_wea(0)='1' then
-				ram_data(addr_in) <= data_in;
-			else
-				DOUTA <= ram_data(addr_in);
-			end if;
-		end if;
-	end process;
-
-end RTL;
-
-
-
-
diff --git a/ocore/ram_c.vhd b/ocore/ram_c.vhd
deleted file mode 100644
index cfe16ca..0000000
--- a/ocore/ram_c.vhd
+++ /dev/null
@@ -1,84 +0,0 @@
-library ieee;
-use ieee.std_logic_1164.all;
-use ieee.std_logic_arith.all;
-use ieee.std_logic_unsigned.all;
---use ieee.std_logic_signed.all;
-
-
-entity ram is
-	port (
-		CLKA		: in	std_logic;
-		WEA			: in	std_logic;
-		ADDRA		: in	std_logic_vector(19 downto 0);
-		DINA		: in	std_logic_vector(31 downto 0);
-		DOUTA		: out	std_logic_vector(31 downto 0)
-	);
-
-
-end ram;
-
-architecture behavior of ram is
-	subtype ram_rec_t is std_logic_vector(31 downto 0);
-	type ram_array_t is array (0 to 4095) of ram_rec_t;
-	signal ram_data : ram_array_t;
-	signal addr_in	: integer range 0 to 4095;
-	signal io_write : std_logic := '0';
-	signal io_read : std_logic := '0';
-
-begin
-
-	addr_in <= conv_integer(ADDR(13 downto 2));
-
-------------------------------------------------------------------------
--- pulse for I/O
-------------------------------------------------------------------------
-	process (CLK2X, io_write, io_read)
-	begin 
-		if rising_edge(CLK) then
-			if clk_ma='1' then
-				IO_WR <= io_write;
-				IO_RD <= io_read;
-			else
-				IO_WR <= '0';
-				IO_RD <= '0';
-			end if;
-		end if;
-	end process;
-
-	process(CLK_MA)
-	begin
-		if (rising_edge(CLK_MA)) then
-			if RAM_WEN='1' then
-------------------------------------------------------------------------
--- write to ram
-------------------------------------------------------------------------
-				io_read <= '0';
-				if ADDR(19)='1' and ADDR(0)='1' then
-					io_write <= '1';
-					IO_OUT <= x"000000"&DATA_IN(7 downto 0);
-				else
-					io_write <= '0';
-					ram_data(addr_in) <= DATA_IN;
-				end if;
-			else ---- RAM_WEN='0'
-------------------------------------------------------------------------
--- read from ram
-------------------------------------------------------------------------
-				io_write <= '0';
-				if (RAM_WEN='0') then
-					if ADDR(19)='1' and ADDR(0)='0'then
-						io_read <= '1';
-						DATA_OUT <= IO_IN;
-					else
-						io_read <= '0';
-						DATA_OUT <= ram_data(addr_in);
-					end if;
-				end if;
-			end if;
-		end if;
-	end process;
-end behavior;
-
-
-
-
diff --git a/ocore/ram_dc.vhd b/ocore/ram_dc.vhd
deleted file mode 100644
index 426ab7f..0000000
--- a/ocore/ram_dc.vhd
+++ /dev/null
@@ -1,41 +0,0 @@
-library IEEE;
-use IEEE.std_logic_1164.all;
-use IEEE.std_logic_unsigned.all;
-
-entity ram_dc is
-port (
-CLK_DC	:	in	std_logic;
-RAM_0	:	in	std_logic_vector (31 downto 0);
-RAM_1	:	in	std_logic_vector (31 downto 0);
-RAM_2	:	in	std_logic_vector (31 downto 0);
-RAM_3	:	in	std_logic_vector (31 downto 0);
-RAM_4	:	in	std_logic_vector (31 downto 0);
-RAM_5	:	in	std_logic_vector (31 downto 0);
-RAM_6	:	in	std_logic_vector (31 downto 0);
-RAM_7	:	in	std_logic_vector (31 downto 0);
-IO65_IN	:	in	std_logic_vector (31 downto 0);
-RAM_ADDR	:	in	std_logic_vector (7 downto 0);
-RAM_OUT	:	out	std_logic_vector (31 downto 0)
-);
-end ram_dc;
-architecture RTL of ram_dc is
-
-begin
-process(CLK_DC)
-begin
-if(CLK_DC'event and CLK_DC = '1') then
-case RAM_ADDR is
-when "00000000" => RAM_OUT <= RAM_0;
-when "00000001" => RAM_OUT <= RAM_1;
-when "00000010" => RAM_OUT <= RAM_2;
-when "00000011" => RAM_OUT <= RAM_3;
-when "00000100" => RAM_OUT <= RAM_4;
-when "00000101" => RAM_OUT <= RAM_5;
-when "00000110" => RAM_OUT <= RAM_6;
-when "00000111" => RAM_OUT <= RAM_7;
-when "01000001" => RAM_OUT <= IO65_IN;
-when others =>
-end case;
-end if;
-end process;
-end RTL;
diff --git a/ocore/ram_wb.vhd b/ocore/ram_wb.vhd
deleted file mode 100644
index f58fd3b..0000000
--- a/ocore/ram_wb.vhd
+++ /dev/null
@@ -1,49 +0,0 @@
-library IEEE;
-use IEEE.std_logic_1164.all;
-use IEEE.std_logic_unsigned.all;
-
-entity ram_wb is
-port (
-CLK_WB	:	in	std_logic;
-RAM_ADDR	:	in	std_logic_vector (31 downto 0);
-RAM_IN	:	in	std_logic_vector (31 downto 0);
-RAM_WEN	:	in	std_logic;
-RAM_0	:	out	std_logic_vector (31 downto 0);
-RAM_1	:	out	std_logic_vector (31 downto 0);
-RAM_2	:	out	std_logic_vector (31 downto 0);
-RAM_3	:	out	std_logic_vector (31 downto 0);
-RAM_4	:	out	std_logic_vector (31 downto 0);
-RAM_5	:	out	std_logic_vector (31 downto 0);
-RAM_6	:	out	std_logic_vector (31 downto 0);
-RAM_7	:	out	std_logic_vector (31 downto 0);
-IO64_OUT	:	out	std_logic_vector (31 downto 0)
-);
-end ram_wb;
-
-architecture RTL of ram_wb is
-	signal RAM_TARGET :std_logic_vector(7 downto 0);
-
-begin
-	RAM_TARGET <= RAM_ADDR(7 downto 0);
-
-	process(CLK_WB)
-	begin
-		if(CLK_WB'event and CLK_WB = '1') then
-			if(RAM_WEN = '1') then
-				case RAM_TARGET is
-					when "00000000" => RAM_0 <= RAM_IN;	-- RAM_0
-					when "00000001" => RAM_1 <= RAM_IN;	-- RAM_1
-					when "00000010" => RAM_2 <= RAM_IN;	-- RAM_2
-					when "00000011" => RAM_3 <= RAM_IN;	-- RAM_3
-					when "00000100" => RAM_4 <= RAM_IN;	-- RAM_4
-					when "00000101" => RAM_5 <= RAM_IN;	-- RAM_5
-					when "00000110" => RAM_6 <= RAM_IN;	-- RAM_6
-					when "00000111" => RAM_7 <= RAM_IN;	-- RAM_7
-					when "01000000" => IO64_OUT <= RAM_IN;	-- IO_64
-					when others =>	
-				end case;
-			end if;
-		end if;
-	end process;
-end RTL;
-
diff --git a/ocore/readme.txt b/ocore/readme.txt
deleted file mode 100644
index 73dfb5d..0000000
--- a/ocore/readme.txt
+++ /dev/null
@@ -1,40 +0,0 @@
-
-審判プログラムの使い方
-----------------------
-----------------------------------------------
-
-        PC側審判プログラム                             基板(自作CPU)側
-
-｜時                                               CPUの回路がImpactにより
-↓間                                               転送され動作開始
-       審判プログラム起動
-
-                                                   初期化が終ったら、SLDデータ
-                                                   転送開始の合図として1バイト
-                                    (0xaa)         データ0xaaを送る
-                               ←−−−−−−−
-       0xaaを受信したら、現在
-       の時刻を測定開始時間と
-       して記録。続いてSLD
-       データをバイナリ形式で
-       送る                      (SLDデータ)
-                               −−−−−−−→
-                                                   画像を計算し、PPM形式で送り
-                                                   返す。P3(text形式)、P6
-                                   (PPM画像)       (binary形式)どちらでも良い
-                               ←−−−−−−−
-       画像のピクセルが全て揃
-       った時点で、現在の時刻
-       を測定終了時間として記
-       録。この時刻と測定開始
-       時刻の差を計算時間とし
-       て表示。
-
-
-■SLDファイルは、int, floatともに4バイトのバイナリフォーマットで送る(リトル・エ
-  ンディアンかビッグ・エンディアンかを審判プログラムの -b オプションで選択可能)
-■PPM画像は、P3(text)かP6(binary)のいずれかのフォーマットで送る。審判プログラム
-  は送られたバイト列をそのままファイルに保存する(ただし、後ろに余計なデータが付
-  いていた場合は無視される)
-
--------------------------------------------------------------------------------

diff --git a/ocore/tmp.vhd b/ocore/tmp.vhd
deleted file mode 100644
index c033e76..0000000
--- a/ocore/tmp.vhd
+++ /dev/null
@@ -1,62 +0,0 @@
-
-
-  signal S1 : std_logic;
-  signal E1 : std_logic_vector(0 to 7);
-  signal DATA : std_logic_vector(35 downto 0);
-  signal CONST : std_logic_vector(23 downto 0);
-  signal INC : std_logic_vector(12 downto 0);
-  signal KEY : std_logic_vector(0 to 9);
-  signal DIST : std_logic_vector(0 to 12);
-
-component finv_table
-  port (
-    ADDRA : in std_logic_vector(9 downto 0);
-    CLKA  : in std_logic;
-    DOUTA : out std_logic_vector(35 downto 0));
-end component;
-
-  
-begin  -- finv_archi
-  S1 <= I1(0);
-  E1(0 to 7) <= I1(1 to 8);
-  KEY(0 to 9) <= I1(9 to 18);
-  DIST(0 to 12) <= I1(19 to 31);
-  CONST(23) <= '1';
-  CONST(22 downto 0) <= DATA(35 downto 13);
-  INC(12 downto 0) <= DATA(12 downto 0);
-  
-  FINV_TABLE1 : finv_table port map(KEY, CLK, DATA);
-  
-  
-  E:process(CLK)
-  
-  variable DIFF : std_logic_vector(0 to 25);
-  variable SO : std_logic;
-  variable CO : std_logic_vector(0 to 23);
-  variable EO : std_logic_vector(0 to 7);
-	begin
-	if rising_edge(CLK) then
-
-	DIFF := INC * DIST;
-	if KEY = conv_std_logic_vector(0, 10) and DIFF = conv_std_logic_vector(0, 13) then
-		CO := conv_std_logic_vector(0, 24);
-		else
-		CO := CONST - DIFF(1 to 13);
-	end if;
-	
-	SO := S1;
-	
-	if E1 = conv_std_logic_vector(255, 8) then EO := conv_std_logic_vector(255, 8);
-	elsif E1 = conv_std_logic_vector(254, 8) then EO := conv_std_logic_vector(0, 8);
-	elsif E1 = conv_std_logic_vector(0, 8) then EO := conv_std_logic_vector(255, 8);
-	elsif KEY = conv_std_logic_vector(0, 10) and DIFF = conv_std_logic_vector(0, 13) then 
-	EO := conv_std_logic_vector(254, 8) - E1;
-	else EO := conv_std_logic_vector(253, 8) - E1;
-	end if;
-
-	O(0) <= SO;
-	O(1 to 8) <= EO(0 to 7);
-	O(9 to 31) <= CO(1 to 23);
-	end if;
-  end process;
-end finv_archi;
diff --git a/ocore/tmpl/Makefile b/ocore/tmpl/Makefile
index cbe579b..d2b2b20 100644
--- a/ocore/tmpl/Makefile
+++ b/ocore/tmpl/Makefile
@@ -2,8 +2,8 @@ RENDER = mako-render
 OCORE_DIR = ..
 ISE_SPACE = ../../ise_space
 VSIM_SPACE = ../../vsim_space
-ASM = ./asmcho2_prom10
-SIM = ./simcho3
+ASM = ./asmcho_prom10
+SIM = ./simcho
 
 OCORE_MODS = top u232c io_dev core_c clk_gen clk_delay fetch \
 			 prom decode reg_dc exec mem_acc sram reg_wb testbench
@@ -57,7 +57,7 @@ sram.vhd: sram.tmp sram_entity.tmp $(BASE)
 u232c.vhd: u232c.tmp $(BASE)
 ise_u232c.vhd: ise_u232c.tmp $(BASE)
 skeleton_u232c.tmp: u232c_entity.tmp $(BASE)
-io_dev.vhd: io_dev.tmp skeleton_io_dev.tmp $(BASE)
+io_dev.vhd: io_dev.tmp skeleton_io_dev.tmp contest_sldbin.txt contest_sld.txt $(BASE)
 ise_io_dev.vhd: ise_io_dev.tmp skeleton_io_dev.tmp $(BASE)
 skeleton_io_dev.tmp: contest_sld.txt u232c_entity.tmp io_dev_entity.tmp $(BASE)
 
diff --git a/ocore/tmpl/a.tmp b/ocore/tmpl/a.tmp
deleted file mode 100644
index 09d56f6..0000000
--- a/ocore/tmpl/a.tmp
+++ /dev/null
@@ -1,94 +0,0 @@
-## -*- coding: utf-8 -*-
-<%inherit file="skeleton.tmp"/>
-entity io_dev is
-<%include file="io_dev_entity.tmp"/>
-end io_dev;
-
-architecture RTL of io_dev is
-	component u232c is
-<%include file="u232c_entity.tmp"/>
-	end component;
-
-	subtype buf_rec_t is std_logic_vector(7 downto 0);
-
-	--type sendbuf_t is array (0 to 16383) of buf_rec_t;
-	type sendbuf_t is array (0 to 4095) of buf_rec_t;
-	--signal sendbuf : sendbuf_t;
-	signal sendbuf0 : sendbuf_t;
-	signal sendbuf1 : sendbuf_t;
-	signal sendbuf2 : sendbuf_t;
-	signal sendbuf3 : sendbuf_t;
-	signal send_head	: std_logic_vector(13 downto 0) := (others=>'0');
-	signal send_tail	: std_logic_vector(13 downto 0) := (others=>'0');
-	signal stail0	:	integer range 0 to 4095;
-	signal stail1	:	integer range 0 to 4095;
-	signal stail2	:	integer range 0 to 4095;
-	signal stail3	:	integer range 0 to 4095;
-	signal send_empty : std_logic := '0';
-
-	signal recv_head	: std_logic_vector(10 downto 0) := (others=>'0');
-	signal recv_tail	: std_logic_vector(10 downto 0) := ${oc.io_rtail()};
-	type recvbuf_t is array (0 to 2047) of buf_rec_t;
-	--signal recvbuf : recvbuf_t;
-	signal recvbuf : recvbuf_t := (
-<%include file="contest_sld.txt"/>
-	);
-	signal u232c_o : std_logic_vector(7 downto 0);
-	signal u232c_i : std_logic_vector(7 downto 0);
-
-	signal send_go : std_logic;
-	signal send_busy : std_logic := '0';
-
-	signal recv_ready : std_logic;
-
-	
-begin
-	
-	rs232c: u232c generic map (wtime=>${next.wtime()})
-	port map (clk, u232c_o, send_go, send_busy, RS_TX, 
-				   u232c_i, recv_ready, RS_RX);
-
-------------------------------------------------------------------------
----- send
-------------------------------------------------------------------------
-	send_empty <= '1' when send_head=send_tail else '0';
-	send: process(CLK)
-	begin
-		if rising_edge(CLK) then
-			if CPU_WR='1' then
-				sendbuf(conv_integer(send_tail)) <= CPU_OUT(7 downto 0);
-				send_tail <= send_tail + 1;
-			end if;
-
-			if send_busy='0' and send_go='0' then
-				u232c_o <= sendbuf(conv_integer(send_head));
-				send_go<=not send_empty;
-				send_head <= send_head + conv_integer(not send_empty);
-			else
-				send_go<='0';
-			end if;
-		end if;
-	end process;
-
-------------------------------------------------------------------------
----- recv
-------------------------------------------------------------------------
-	NYET <= '1' when recv_head=recv_tail else '0';
-	receive : process(CLK)
-	begin
-		if rising_edge(CLK) then
-			if CPU_RD='1' then
-				CPU_IN <= x"000000"&recvbuf(conv_integer(recv_head));
-				recv_head <= recv_head+1;
-			end if;
-
-			if recv_ready='1' then
-				recvbuf(conv_integer(recv_tail))<=u232c_i;
-				recv_tail <= recv_tail+1;
-			end if;
-		end if;
-	end process;
-
-
-end RTL;
-<%namespace name="oc" file="macro.tmp"/>
diff --git a/ocore/tmpl/as/ack.s b/ocore/tmpl/as/ack.s
deleted file mode 100644
index ae70a00..0000000
--- a/ocore/tmpl/as/ack.s
+++ /dev/null
@@ -1,546 +0,0 @@
-.init_heap_size	192
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-	jmp	min_caml_start
-
-!#####################################################################
-!
-! 		↓　ここから lib_asm.s
-!
-!#####################################################################
-
-! * create_array
-min_caml_create_array:
-	slli %g3, %g3, 2
-	add %g5, %g3, %g2
-	mov %g3, %g2
-CREATE_ARRAY_LOOP:
-	jlt %g5, %g2, CREATE_ARRAY_END
-	jeq %g5, %g2, CREATE_ARRAY_END
-	sti %g4, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_ARRAY_LOOP
-CREATE_ARRAY_END:
-	return
-
-! * create_float_array
-min_caml_create_float_array:
-	slli %g3, %g3, 2
-	add %g4, %g3, %g2
-	mov %g3, %g2
-CREATE_FLOAT_ARRAY_LOOP:
-	jlt %g4, %g2, CREATE_FLOAT_ARRAY_END
-	jeq %g4, %g2, CREATE_FLOAT_ARRAY_END
-	fsti %f0, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_FLOAT_ARRAY_LOOP
-CREATE_FLOAT_ARRAY_END:
-	return
-
-! * floor		%f0 + MAGICF - MAGICF
-min_caml_floor:
-	fmov %f1, %f0
-	! %f4 = 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f4, %g3, 0
-	fjlt %f4, %f0, FLOOR_POSITIVE	! if (%f4 <= %f0) goto FLOOR_PISITIVE
-	fjeq %f4, %f0, FLOOR_POSITIVE
-FLOOR_NEGATIVE:
-	fneg %f0, %f0
-	setL %g3, FLOAT_MAGICF
-	! %f2 = FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fjeq %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fneg %f0, %f0
-	return
-FLOOR_NEGATIVE_MAIN:
-	fadd %f0, %f0, %f2
-	fsub %f0, %f0, %f2
-	fneg %f1, %f1
-	fjlt %f1, %f0, FLOOR_RET2
-	fjeq %f1, %f0, FLOOR_RET2
-	fadd %f0, %f0, %f2
-	! %f3 = 1.0
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fadd %f0, %f0, %f3
-	fsub %f0, %f0, %f2
-	fneg %f0, %f0
-	return
-FLOOR_POSITIVE:
-	setL %g3, FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_POSITIVE_MAIN
-	fjeq %f0, %f2, FLOOR_POSITIVE_MAIN
-	return
-FLOOR_POSITIVE_MAIN:
-	fmov %f1, %f0
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fsub %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fjlt %f0, %f1, FLOOR_RET
-	fjeq %f0, %f1, FLOOR_RET
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fsub %f0, %f0, %f3
-FLOOR_RET:
-	return
-FLOOR_RET2:
-	fneg %f0, %f0
-	return
-	
-min_caml_ceil:
-	fneg %f0, %f0
-	call min_caml_floor
-	fneg %f0, %f0
-	return
-
-! * float_of_int
-min_caml_float_of_int:
-	jlt %g0, %g3, ITOF_MAIN		! if (%g0 <= %g3) goto ITOF_MAIN
-	jeq %g0, %g3, ITOF_MAIN
-	sub %g3, %g0, %g3
-	call ITOF_MAIN
-	fneg %f0, %f0
-	return
-ITOF_MAIN:
-
-	! %f1 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	! %g5 <= FLOAT_MAGICI
-
-	setL %g5, FLOAT_MAGICF
-	fldi %f1, %g5, 0
-	setL %g5, FLOAT_MAGICFHX
-	ldi %g4, %g5, 0
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	jlt %g5, %g3, ITOF_BIG
-	jeq %g5, %g3, ITOF_BIG
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	return
-ITOF_BIG:
-	setL %g4, FLOAT_ZERO
-	fldi %f2, %g4, 0
-ITOF_LOOP:
-	sub %g3, %g3, %g5
-	fadd %f2, %f2, %f1
-	jlt %g5, %g3, ITOF_LOOP
-	jeq %g5, %g3, ITOF_LOOP
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	fadd %f0, %f0, %f2
-	return
-
-! * int_of_float
-min_caml_int_of_float:
-	! %f1 <= 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f1, %g3, 0
-	fjlt %f1, %f0, FTOI_MAIN			! if (0.0 <= %f0) goto FTOI_MAIN
-	fjeq %f1, %f0, FTOI_MAIN
-	fneg %f0, %f0
-	call FTOI_MAIN
-	sub %g3, %g0, %g3
-	return
-FTOI_MAIN:
-	call min_caml_floor
-	! %f2 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	setL %g4, FLOAT_MAGICF
-	fldi %f2, %g4, 0
-	setL %g4, FLOAT_MAGICFHX
-	ldi %g4, %g4, 0
-	fjlt %f2, %f0, FTOI_BIG		! if (MAGICF <= %f0) goto FTOI_BIG
-	fjeq %f2, %f0, FTOI_BIG
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g3, %g1, 0
-	sub %g3, %g3, %g4
-	return
-FTOI_BIG:
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	mov %g3, %g0
-FTOI_LOOP:
-	fsub %f0, %f0, %f2
-	add %g3, %g3, %g5
-	fjlt %f2, %f0, FTOI_LOOP
-	fjeq %f2, %f0, FTOI_LOOP
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g5, %g1, 0
-	sub %g5, %g5, %g4
-	add %g3, %g5, %g3
-	return
-	
-! * truncate
-min_caml_truncate:
-	jmp min_caml_int_of_float
-
-
-!#####################################################################
-!
-! 		↑　ここまで lib_asm.s
-!
-!#####################################################################
-min_caml_start:
-	mov	%g31, %g1
-	subi	%g1, %g1, 32
-	addi	%g28, %g0, 1
-	addi	%g29, %g0, -1
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 4
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 16
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 1
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 20
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 24
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g5, %g0, 10
-	addi	%g4, %g0, 3
-	call	ack.346
-	mov	%g8, %g3
-	call	print_int.344
-	addi	%g1, %g1, 4
-	halt
-
-!==============================
-! args = [%g8, %g7, %g5, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %f15]
-! ret type = Int
-!================================
-div_binary_search.339:
-	add	%g3, %g5, %g6
-	srli	%g4, %g3, 1
-	mul	%g9, %g4, %g7
-	sub	%g3, %g6, %g5
-	jlt	%g28, %g3, jle_else.697
-	mov	%g3, %g5
-	return
-jle_else.697:
-	jlt	%g9, %g8, jle_else.698
-	jne	%g9, %g8, jeq_else.699
-	mov	%g3, %g4
-	return
-jeq_else.699:
-	mov	%g6, %g4
-	jmp	div_binary_search.339
-jle_else.698:
-	mov	%g5, %g4
-	jmp	div_binary_search.339
-
-!==============================
-! args = [%g8]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f15, %dummy]
-! ret type = Unit
-!================================
-print_int.344:
-	jlt	%g8, %g0, jge_else.700
-	mvhi	%g7, 1525
-	mvlo	%g7, 57600
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 3
-	sti	%g8, %g1, 0
-	subi	%g1, %g1, 8
-	call	div_binary_search.339
-	addi	%g1, %g1, 8
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 0
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.701
-	addi	%g10, %g0, 0
-	jmp	jle_cont.702
-jle_else.701:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.702:
-	mvhi	%g7, 152
-	mvlo	%g7, 38528
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 4
-	subi	%g1, %g1, 12
-	call	div_binary_search.339
-	addi	%g1, %g1, 12
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 4
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.703
-	jne	%g10, %g0, jeq_else.705
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.706
-jeq_else.705:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.706:
-	jmp	jle_cont.704
-jle_else.703:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.704:
-	mvhi	%g7, 15
-	mvlo	%g7, 16960
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 8
-	subi	%g1, %g1, 16
-	call	div_binary_search.339
-	addi	%g1, %g1, 16
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 8
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.707
-	jne	%g11, %g0, jeq_else.709
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.710
-jeq_else.709:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.710:
-	jmp	jle_cont.708
-jle_else.707:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.708:
-	mvhi	%g7, 1
-	mvlo	%g7, 34464
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 12
-	subi	%g1, %g1, 20
-	call	div_binary_search.339
-	addi	%g1, %g1, 20
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 12
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.711
-	jne	%g10, %g0, jeq_else.713
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.714
-jeq_else.713:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.714:
-	jmp	jle_cont.712
-jle_else.711:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.712:
-	addi	%g7, %g0, 10000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 16
-	subi	%g1, %g1, 24
-	call	div_binary_search.339
-	addi	%g1, %g1, 24
-	addi	%g4, %g0, 10000
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 16
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.715
-	jne	%g11, %g0, jeq_else.717
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.718
-jeq_else.717:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.718:
-	jmp	jle_cont.716
-jle_else.715:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.716:
-	addi	%g7, %g0, 1000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 20
-	subi	%g1, %g1, 28
-	call	div_binary_search.339
-	addi	%g1, %g1, 28
-	muli	%g4, %g3, 1000
-	ldi	%g8, %g1, 20
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.719
-	jne	%g10, %g0, jeq_else.721
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.722
-jeq_else.721:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.722:
-	jmp	jle_cont.720
-jle_else.719:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.720:
-	addi	%g7, %g0, 100
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 24
-	subi	%g1, %g1, 32
-	call	div_binary_search.339
-	addi	%g1, %g1, 32
-	muli	%g4, %g3, 100
-	ldi	%g8, %g1, 24
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.723
-	jne	%g11, %g0, jeq_else.725
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.726
-jeq_else.725:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.726:
-	jmp	jle_cont.724
-jle_else.723:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.724:
-	addi	%g7, %g0, 10
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 28
-	subi	%g1, %g1, 36
-	call	div_binary_search.339
-	addi	%g1, %g1, 36
-	muli	%g4, %g3, 10
-	ldi	%g8, %g1, 28
-	sub	%g4, %g8, %g4
-	jlt	%g0, %g3, jle_else.727
-	jne	%g10, %g0, jeq_else.729
-	addi	%g5, %g0, 0
-	jmp	jeq_cont.730
-jeq_else.729:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jeq_cont.730:
-	jmp	jle_cont.728
-jle_else.727:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jle_cont.728:
-	addi	%g3, %g0, 48
-	add	%g3, %g3, %g4
-	output	%g3
-	return
-jge_else.700:
-	addi	%g3, %g0, 45
-	output	%g3
-	sub	%g8, %g0, %g8
-	jmp	print_int.344
-
-!==============================
-! args = [%g5, %g4]
-! fargs = []
-! use_regs = [%g5, %g4, %g3, %g27, %f15]
-! ret type = Int
-!================================
-ack.346:
-	jlt	%g0, %g5, jle_else.731
-	addi	%g3, %g4, 1
-	return
-jle_else.731:
-	jlt	%g0, %g4, jle_else.732
-	subi	%g5, %g5, 1
-	addi	%g4, %g0, 1
-	jmp	ack.346
-jle_else.732:
-	subi	%g3, %g5, 1
-	subi	%g4, %g4, 1
-	sti	%g3, %g1, 0
-	subi	%g1, %g1, 8
-	call	ack.346
-	addi	%g1, %g1, 8
-	mov	%g4, %g3
-	ldi	%g3, %g1, 0
-	mov	%g5, %g3
-	jmp	ack.346
diff --git a/ocore/tmpl/as/fib.s b/ocore/tmpl/as/fib.s
deleted file mode 100644
index a4063ac..0000000
--- a/ocore/tmpl/as/fib.s
+++ /dev/null
@@ -1,546 +0,0 @@
-.init_heap_size	192
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-	jmp	min_caml_start
-
-!#####################################################################
-!
-! 		↓　ここから lib_asm.s
-!
-!#####################################################################
-
-! * create_array
-min_caml_create_array:
-	slli %g3, %g3, 2
-	add %g5, %g3, %g2
-	mov %g3, %g2
-CREATE_ARRAY_LOOP:
-	jlt %g5, %g2, CREATE_ARRAY_END
-	jeq %g5, %g2, CREATE_ARRAY_END
-	sti %g4, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_ARRAY_LOOP
-CREATE_ARRAY_END:
-	return
-
-! * create_float_array
-min_caml_create_float_array:
-	slli %g3, %g3, 2
-	add %g4, %g3, %g2
-	mov %g3, %g2
-CREATE_FLOAT_ARRAY_LOOP:
-	jlt %g4, %g2, CREATE_FLOAT_ARRAY_END
-	jeq %g4, %g2, CREATE_FLOAT_ARRAY_END
-	fsti %f0, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_FLOAT_ARRAY_LOOP
-CREATE_FLOAT_ARRAY_END:
-	return
-
-! * floor		%f0 + MAGICF - MAGICF
-min_caml_floor:
-	fmov %f1, %f0
-	! %f4 = 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f4, %g3, 0
-	fjlt %f4, %f0, FLOOR_POSITIVE	! if (%f4 <= %f0) goto FLOOR_PISITIVE
-	fjeq %f4, %f0, FLOOR_POSITIVE
-FLOOR_NEGATIVE:
-	fneg %f0, %f0
-	setL %g3, FLOAT_MAGICF
-	! %f2 = FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fjeq %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fneg %f0, %f0
-	return
-FLOOR_NEGATIVE_MAIN:
-	fadd %f0, %f0, %f2
-	fsub %f0, %f0, %f2
-	fneg %f1, %f1
-	fjlt %f1, %f0, FLOOR_RET2
-	fjeq %f1, %f0, FLOOR_RET2
-	fadd %f0, %f0, %f2
-	! %f3 = 1.0
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fadd %f0, %f0, %f3
-	fsub %f0, %f0, %f2
-	fneg %f0, %f0
-	return
-FLOOR_POSITIVE:
-	setL %g3, FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_POSITIVE_MAIN
-	fjeq %f0, %f2, FLOOR_POSITIVE_MAIN
-	return
-FLOOR_POSITIVE_MAIN:
-	fmov %f1, %f0
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fsub %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fjlt %f0, %f1, FLOOR_RET
-	fjeq %f0, %f1, FLOOR_RET
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fsub %f0, %f0, %f3
-FLOOR_RET:
-	return
-FLOOR_RET2:
-	fneg %f0, %f0
-	return
-	
-min_caml_ceil:
-	fneg %f0, %f0
-	call min_caml_floor
-	fneg %f0, %f0
-	return
-
-! * float_of_int
-min_caml_float_of_int:
-	jlt %g0, %g3, ITOF_MAIN		! if (%g0 <= %g3) goto ITOF_MAIN
-	jeq %g0, %g3, ITOF_MAIN
-	sub %g3, %g0, %g3
-	call ITOF_MAIN
-	fneg %f0, %f0
-	return
-ITOF_MAIN:
-
-	! %f1 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	! %g5 <= FLOAT_MAGICI
-
-	setL %g5, FLOAT_MAGICF
-	fldi %f1, %g5, 0
-	setL %g5, FLOAT_MAGICFHX
-	ldi %g4, %g5, 0
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	jlt %g5, %g3, ITOF_BIG
-	jeq %g5, %g3, ITOF_BIG
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	return
-ITOF_BIG:
-	setL %g4, FLOAT_ZERO
-	fldi %f2, %g4, 0
-ITOF_LOOP:
-	sub %g3, %g3, %g5
-	fadd %f2, %f2, %f1
-	jlt %g5, %g3, ITOF_LOOP
-	jeq %g5, %g3, ITOF_LOOP
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	fadd %f0, %f0, %f2
-	return
-
-! * int_of_float
-min_caml_int_of_float:
-	! %f1 <= 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f1, %g3, 0
-	fjlt %f1, %f0, FTOI_MAIN			! if (0.0 <= %f0) goto FTOI_MAIN
-	fjeq %f1, %f0, FTOI_MAIN
-	fneg %f0, %f0
-	call FTOI_MAIN
-	sub %g3, %g0, %g3
-	return
-FTOI_MAIN:
-	call min_caml_floor
-	! %f2 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	setL %g4, FLOAT_MAGICF
-	fldi %f2, %g4, 0
-	setL %g4, FLOAT_MAGICFHX
-	ldi %g4, %g4, 0
-	fjlt %f2, %f0, FTOI_BIG		! if (MAGICF <= %f0) goto FTOI_BIG
-	fjeq %f2, %f0, FTOI_BIG
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g3, %g1, 0
-	sub %g3, %g3, %g4
-	return
-FTOI_BIG:
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	mov %g3, %g0
-FTOI_LOOP:
-	fsub %f0, %f0, %f2
-	add %g3, %g3, %g5
-	fjlt %f2, %f0, FTOI_LOOP
-	fjeq %f2, %f0, FTOI_LOOP
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g5, %g1, 0
-	sub %g5, %g5, %g4
-	add %g3, %g5, %g3
-	return
-	
-! * truncate
-min_caml_truncate:
-	jmp min_caml_int_of_float
-
-
-!#####################################################################
-!
-! 		↑　ここまで lib_asm.s
-!
-!#####################################################################
-min_caml_start:
-	mov	%g31, %g1
-	subi	%g1, %g1, 32
-	addi	%g28, %g0, 1
-	addi	%g29, %g0, -1
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 4
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 16
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 1
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 20
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 24
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g4, %g0, 30
-	call	fib.342
-	mov	%g8, %g3
-	call	print_int.340
-	addi	%g1, %g1, 4
-	halt
-
-!==============================
-! args = [%g8, %g7, %g5, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %f15]
-! ret type = Int
-!================================
-div_binary_search.335:
-	add	%g3, %g5, %g6
-	srli	%g4, %g3, 1
-	mul	%g9, %g4, %g7
-	sub	%g3, %g6, %g5
-	jlt	%g28, %g3, jle_else.689
-	mov	%g3, %g5
-	return
-jle_else.689:
-	jlt	%g9, %g8, jle_else.690
-	jne	%g9, %g8, jeq_else.691
-	mov	%g3, %g4
-	return
-jeq_else.691:
-	mov	%g6, %g4
-	jmp	div_binary_search.335
-jle_else.690:
-	mov	%g5, %g4
-	jmp	div_binary_search.335
-
-!==============================
-! args = [%g8]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f15, %dummy]
-! ret type = Unit
-!================================
-print_int.340:
-	jlt	%g8, %g0, jge_else.692
-	mvhi	%g7, 1525
-	mvlo	%g7, 57600
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 3
-	sti	%g8, %g1, 0
-	subi	%g1, %g1, 8
-	call	div_binary_search.335
-	addi	%g1, %g1, 8
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 0
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.693
-	addi	%g10, %g0, 0
-	jmp	jle_cont.694
-jle_else.693:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.694:
-	mvhi	%g7, 152
-	mvlo	%g7, 38528
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 4
-	subi	%g1, %g1, 12
-	call	div_binary_search.335
-	addi	%g1, %g1, 12
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 4
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.695
-	jne	%g10, %g0, jeq_else.697
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.698
-jeq_else.697:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.698:
-	jmp	jle_cont.696
-jle_else.695:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.696:
-	mvhi	%g7, 15
-	mvlo	%g7, 16960
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 8
-	subi	%g1, %g1, 16
-	call	div_binary_search.335
-	addi	%g1, %g1, 16
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 8
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.699
-	jne	%g11, %g0, jeq_else.701
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.702
-jeq_else.701:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.702:
-	jmp	jle_cont.700
-jle_else.699:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.700:
-	mvhi	%g7, 1
-	mvlo	%g7, 34464
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 12
-	subi	%g1, %g1, 20
-	call	div_binary_search.335
-	addi	%g1, %g1, 20
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 12
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.703
-	jne	%g10, %g0, jeq_else.705
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.706
-jeq_else.705:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.706:
-	jmp	jle_cont.704
-jle_else.703:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.704:
-	addi	%g7, %g0, 10000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 16
-	subi	%g1, %g1, 24
-	call	div_binary_search.335
-	addi	%g1, %g1, 24
-	addi	%g4, %g0, 10000
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 16
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.707
-	jne	%g11, %g0, jeq_else.709
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.710
-jeq_else.709:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.710:
-	jmp	jle_cont.708
-jle_else.707:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.708:
-	addi	%g7, %g0, 1000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 20
-	subi	%g1, %g1, 28
-	call	div_binary_search.335
-	addi	%g1, %g1, 28
-	muli	%g4, %g3, 1000
-	ldi	%g8, %g1, 20
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.711
-	jne	%g10, %g0, jeq_else.713
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.714
-jeq_else.713:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.714:
-	jmp	jle_cont.712
-jle_else.711:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.712:
-	addi	%g7, %g0, 100
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 24
-	subi	%g1, %g1, 32
-	call	div_binary_search.335
-	addi	%g1, %g1, 32
-	muli	%g4, %g3, 100
-	ldi	%g8, %g1, 24
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.715
-	jne	%g11, %g0, jeq_else.717
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.718
-jeq_else.717:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.718:
-	jmp	jle_cont.716
-jle_else.715:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.716:
-	addi	%g7, %g0, 10
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 28
-	subi	%g1, %g1, 36
-	call	div_binary_search.335
-	addi	%g1, %g1, 36
-	muli	%g4, %g3, 10
-	ldi	%g8, %g1, 28
-	sub	%g4, %g8, %g4
-	jlt	%g0, %g3, jle_else.719
-	jne	%g10, %g0, jeq_else.721
-	addi	%g5, %g0, 0
-	jmp	jeq_cont.722
-jeq_else.721:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jeq_cont.722:
-	jmp	jle_cont.720
-jle_else.719:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jle_cont.720:
-	addi	%g3, %g0, 48
-	add	%g3, %g3, %g4
-	output	%g3
-	return
-jge_else.692:
-	addi	%g3, %g0, 45
-	output	%g3
-	sub	%g8, %g0, %g8
-	jmp	print_int.340
-
-!==============================
-! args = [%g4]
-! fargs = []
-! use_regs = [%g5, %g4, %g3, %g27, %f15]
-! ret type = Int
-!================================
-fib.342:
-	jlt	%g28, %g4, jle_else.723
-	mov	%g3, %g4
-	return
-jle_else.723:
-	subi	%g3, %g4, 1
-	sti	%g4, %g1, 0
-	mov	%g4, %g3
-	subi	%g1, %g1, 8
-	call	fib.342
-	addi	%g1, %g1, 8
-	mov	%g5, %g3
-	ldi	%g4, %g1, 0
-	subi	%g4, %g4, 2
-	sti	%g5, %g1, 4
-	subi	%g1, %g1, 12
-	call	fib.342
-	addi	%g1, %g1, 12
-	ldi	%g5, %g1, 4
-	add	%g3, %g5, %g3
-	return
diff --git a/ocore/tmpl/as/float.s b/ocore/tmpl/as/float.s
deleted file mode 100644
index ef66f04..0000000
--- a/ocore/tmpl/as/float.s
+++ /dev/null
@@ -1,838 +0,0 @@
-.init_heap_size	608
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-l.735:	! 1.570796
-	.long	0x3fc90fda
-l.731:	! 0.500000
-	.long	0x3f000000
-l.726:	! 9.000000
-	.long	0x41100000
-l.724:	! 1.000000
-	.long	0x3f800000
-l.722:	! 2.000000
-	.long	0x40000000
-l.720:	! 2.500000
-	.long	0x40200000
-l.718:	! 0.000000
-	.long	0x0
-l.698:	! 48.300300
-	.long	0x42413381
-l.696:	! 4.500000
-	.long	0x40900000
-l.694:	! -12.300000
-	.long	0xc144ccc4
-l.692:	! 1.570796
-	.long	0x3fc90fda
-l.690:	! 6.283185
-	.long	0x40c90fda
-l.688:	! 3.141593
-	.long	0x40490fda
-	jmp	min_caml_start
-
-!#####################################################################
-!
-! 		↓　ここから lib_asm.s
-!
-!#####################################################################
-
-! * create_array
-min_caml_create_array:
-	slli %g3, %g3, 2
-	add %g5, %g3, %g2
-	mov %g3, %g2
-CREATE_ARRAY_LOOP:
-	jlt %g5, %g2, CREATE_ARRAY_END
-	jeq %g5, %g2, CREATE_ARRAY_END
-	sti %g4, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_ARRAY_LOOP
-CREATE_ARRAY_END:
-	return
-
-! * create_float_array
-min_caml_create_float_array:
-	slli %g3, %g3, 2
-	add %g4, %g3, %g2
-	mov %g3, %g2
-CREATE_FLOAT_ARRAY_LOOP:
-	jlt %g4, %g2, CREATE_FLOAT_ARRAY_END
-	jeq %g4, %g2, CREATE_FLOAT_ARRAY_END
-	fsti %f0, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_FLOAT_ARRAY_LOOP
-CREATE_FLOAT_ARRAY_END:
-	return
-
-! * floor		%f0 + MAGICF - MAGICF
-min_caml_floor:
-	fmov %f1, %f0
-	! %f4 = 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f4, %g3, 0
-	fjlt %f4, %f0, FLOOR_POSITIVE	! if (%f4 <= %f0) goto FLOOR_PISITIVE
-	fjeq %f4, %f0, FLOOR_POSITIVE
-FLOOR_NEGATIVE:
-	fneg %f0, %f0
-	setL %g3, FLOAT_MAGICF
-	! %f2 = FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fjeq %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fneg %f0, %f0
-	return
-FLOOR_NEGATIVE_MAIN:
-	fadd %f0, %f0, %f2
-	fsub %f0, %f0, %f2
-	fneg %f1, %f1
-	fjlt %f1, %f0, FLOOR_RET2
-	fjeq %f1, %f0, FLOOR_RET2
-	fadd %f0, %f0, %f2
-	! %f3 = 1.0
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fadd %f0, %f0, %f3
-	fsub %f0, %f0, %f2
-	fneg %f0, %f0
-	return
-FLOOR_POSITIVE:
-	setL %g3, FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_POSITIVE_MAIN
-	fjeq %f0, %f2, FLOOR_POSITIVE_MAIN
-	return
-FLOOR_POSITIVE_MAIN:
-	fmov %f1, %f0
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fsub %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fjlt %f0, %f1, FLOOR_RET
-	fjeq %f0, %f1, FLOOR_RET
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fsub %f0, %f0, %f3
-FLOOR_RET:
-	return
-FLOOR_RET2:
-	fneg %f0, %f0
-	return
-	
-min_caml_ceil:
-	fneg %f0, %f0
-	call min_caml_floor
-	fneg %f0, %f0
-	return
-
-! * float_of_int
-min_caml_float_of_int:
-	jlt %g0, %g3, ITOF_MAIN		! if (%g0 <= %g3) goto ITOF_MAIN
-	jeq %g0, %g3, ITOF_MAIN
-	sub %g3, %g0, %g3
-	call ITOF_MAIN
-	fneg %f0, %f0
-	return
-ITOF_MAIN:
-
-	! %f1 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	! %g5 <= FLOAT_MAGICI
-
-	setL %g5, FLOAT_MAGICF
-	fldi %f1, %g5, 0
-	setL %g5, FLOAT_MAGICFHX
-	ldi %g4, %g5, 0
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	jlt %g5, %g3, ITOF_BIG
-	jeq %g5, %g3, ITOF_BIG
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	return
-ITOF_BIG:
-	setL %g4, FLOAT_ZERO
-	fldi %f2, %g4, 0
-ITOF_LOOP:
-	sub %g3, %g3, %g5
-	fadd %f2, %f2, %f1
-	jlt %g5, %g3, ITOF_LOOP
-	jeq %g5, %g3, ITOF_LOOP
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	fadd %f0, %f0, %f2
-	return
-
-! * int_of_float
-min_caml_int_of_float:
-	! %f1 <= 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f1, %g3, 0
-	fjlt %f1, %f0, FTOI_MAIN			! if (0.0 <= %f0) goto FTOI_MAIN
-	fjeq %f1, %f0, FTOI_MAIN
-	fneg %f0, %f0
-	call FTOI_MAIN
-	sub %g3, %g0, %g3
-	return
-FTOI_MAIN:
-	call min_caml_floor
-	! %f2 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	setL %g4, FLOAT_MAGICF
-	fldi %f2, %g4, 0
-	setL %g4, FLOAT_MAGICFHX
-	ldi %g4, %g4, 0
-	fjlt %f2, %f0, FTOI_BIG		! if (MAGICF <= %f0) goto FTOI_BIG
-	fjeq %f2, %f0, FTOI_BIG
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g3, %g1, 0
-	sub %g3, %g3, %g4
-	return
-FTOI_BIG:
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	mov %g3, %g0
-FTOI_LOOP:
-	fsub %f0, %f0, %f2
-	add %g3, %g3, %g5
-	fjlt %f2, %f0, FTOI_LOOP
-	fjeq %f2, %f0, FTOI_LOOP
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g5, %g1, 0
-	sub %g5, %g5, %g4
-	add %g3, %g5, %g3
-	return
-	
-! * truncate
-min_caml_truncate:
-	jmp min_caml_int_of_float
-
-
-!#####################################################################
-!
-! 		↑　ここまで lib_asm.s
-!
-!#####################################################################
-min_caml_start:
-	mov	%g31, %g1
-	subi	%g1, %g1, 32
-	addi	%g28, %g0, 1
-	addi	%g29, %g0, -1
-	setL %g27, l.718
-	fldi	%f16, %g27, 0
-	setL %g27, l.724
-	fldi	%f17, %g27, 0
-	setL %g27, l.722
-	fldi	%f18, %g27, 0
-	setL %g27, l.735
-	fldi	%f19, %g27, 0
-	setL %g27, l.731
-	fldi	%f20, %g27, 0
-	setL %g27, l.726
-	fldi	%f21, %g27, 0
-	setL %g27, l.720
-	fldi	%f22, %g27, 0
-	setL %g27, l.698
-	fldi	%f23, %g27, 0
-	setL %g27, l.696
-	fldi	%f24, %g27, 0
-	setL %g27, l.694
-	fldi	%f25, %g27, 0
-	setL %g27, l.692
-	fldi	%f26, %g27, 0
-	setL %g27, l.690
-	fldi	%f27, %g27, 0
-	setL %g27, l.688
-	fldi	%f28, %g27, 0
-	fmov	%f0, %f28
-	fmov	%f1, %f27
-	fmov	%f2, %f26
-	mov	%g3, %g2
-	addi	%g2, %g2, 8
-	setL %g4, sin_sub.318
-	sti	%g4, %g3, 0
-	fsti	%f1, %g3, -4
-	mov	%g4, %g2
-	addi	%g2, %g2, 20
-	setL %g5, sin.320
-	sti	%g5, %g4, 0
-	sti	%g3, %g4, -16
-	fsti	%f2, %g4, -12
-	fsti	%f1, %g4, -8
-	fsti	%f0, %g4, -4
-	mov	%g3, %g2
-	addi	%g2, %g2, 8
-	setL %g5, cos.322
-	sti	%g5, %g3, 0
-	sti	%g4, %g3, -4
-	addi	%g5, %g0, 1
-	addi	%g6, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 4
-	sti	%g4, %g1, 0
-	sti	%g3, %g1, 4
-	mov	%g4, %g6
-	mov	%g3, %g5
-	subi	%g1, %g1, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 16
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 1
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 20
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 24
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	fmov	%f0, %f25
-	call	abs_float.299
-	addi	%g1, %g1, 12
-	fsqrt	%f0, %f0
-	ldi	%g30, %g1, 4
-	ldi	%g27, %g30, 0
-	subi	%g1, %g1, 12
-	callR	%g27
-	addi	%g1, %g1, 12
-	ldi	%g30, %g1, 0
-	ldi	%g27, %g30, 0
-	subi	%g1, %g1, 12
-	callR	%g27
-	addi	%g1, %g1, 12
-	fmov	%f1, %f24
-	fadd	%f0, %f0, %f1
-	fmov	%f1, %f23
-	fsub	%f0, %f0, %f1
-	mvhi	%g3, 15
-	mvlo	%g3, 16960
-	fsti	%f0, %g1, 8
-	subi	%g1, %g1, 16
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 16
-	fldi	%f1, %g1, 8
-	fmul	%f0, %f1, %f0
-	subi	%g1, %g1, 16
-	call	min_caml_int_of_float
-	call	print_int.349
-	addi	%g1, %g1, 16
-	halt
-
-!==============================
-! args = []
-! fargs = [%f0]
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Float
-!================================
-fabs.297:
-	fmov	%f1, %f16
-	fjlt	%f0, %f1, fjge_else.804
-	return
-fjge_else.804:
-	fneg	%f0, %f0
-	return
-
-!==============================
-! args = []
-! fargs = [%f0]
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Float
-!================================
-abs_float.299:
-	jmp	fabs.297
-
-!==============================
-! args = []
-! fargs = [%f0]
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Float
-!================================
-fneg.301:
-	fneg	%f0, %f0
-	return
-
-!==============================
-! args = []
-! fargs = [%f0, %f1, %f2]
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Float
-!================================
-tan_sub.636:
-	fmov	%f3, %f22
-	fjlt	%f0, %f3, fjge_else.805
-	fmov	%f3, %f18
-	fsub	%f3, %f0, %f3
-	fsub	%f0, %f0, %f2
-	fdiv	%f2, %f1, %f0
-	fmov	%f0, %f3
-	jmp	tan_sub.636
-fjge_else.805:
-	fmov	%f0, %f2
-	return
-
-!==============================
-! args = []
-! fargs = [%f0]
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Float
-!================================
-tan.316:
-	fmov	%f1, %f17
-	fmov	%f2, %f21
-	fmul	%f3, %f0, %f0
-	fmov	%f4, %f16
-	fsti	%f0, %g1, 0
-	fsti	%f1, %g1, 4
-	fmov	%f1, %f3
-	fmov	%f0, %f2
-	fmov	%f2, %f4
-	subi	%g1, %g1, 12
-	call	tan_sub.636
-	addi	%g1, %g1, 12
-	fldi	%f1, %g1, 4
-	fsub	%f0, %f1, %f0
-	fldi	%f1, %g1, 0
-	fdiv	%f0, %f1, %f0
-	return
-
-!==============================
-! args = []
-! fargs = [%f0]
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Float
-!================================
-sin_sub.318:
-	fldi	%f1, %g30, -4
-	fjlt	%f1, %f0, fjge_else.806
-	fmov	%f2, %f16
-	fjlt	%f0, %f2, fjge_else.807
-	return
-fjge_else.807:
-	fadd	%f0, %f0, %f1
-	ldi	%g27, %g30, 0
-	b	%g27
-fjge_else.806:
-	fsub	%f0, %f0, %f1
-	ldi	%g27, %g30, 0
-	b	%g27
-
-!==============================
-! args = []
-! fargs = [%f0]
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Float
-!================================
-sin.320:
-	ldi	%g3, %g30, -16
-	fldi	%f1, %g30, -12
-	fldi	%f2, %g30, -8
-	fldi	%f3, %g30, -4
-	fmov	%f4, %f16
-	fsti	%f1, %g1, 0
-	fsti	%f2, %g1, 4
-	fsti	%f4, %g1, 8
-	fsti	%f0, %g1, 12
-	fsti	%f3, %g1, 16
-	sti	%g3, %g1, 20
-	call	fabs.297
-	ldi	%g30, %g1, 20
-	ldi	%g27, %g30, 0
-	subi	%g1, %g1, 28
-	callR	%g27
-	addi	%g1, %g1, 28
-	fldi	%f1, %g1, 16
-	fjlt	%f1, %f0, fjge_else.808
-	fldi	%f2, %g1, 8
-	fldi	%f3, %g1, 12
-	fjlt	%f2, %f3, fjge_else.810
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.811
-fjge_else.810:
-	addi	%g3, %g0, 1
-fjge_cont.811:
-	jmp	fjge_cont.809
-fjge_else.808:
-	fldi	%f2, %g1, 8
-	fldi	%f3, %g1, 12
-	fjlt	%f2, %f3, fjge_else.812
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.813
-fjge_else.812:
-	addi	%g3, %g0, 0
-fjge_cont.813:
-fjge_cont.809:
-	fjlt	%f1, %f0, fjge_else.814
-	jmp	fjge_cont.815
-fjge_else.814:
-	fldi	%f2, %g1, 4
-	fsub	%f0, %f2, %f0
-fjge_cont.815:
-	fldi	%f2, %g1, 0
-	fjlt	%f2, %f0, fjge_else.816
-	jmp	fjge_cont.817
-fjge_else.816:
-	fsub	%f0, %f1, %f0
-fjge_cont.817:
-	fmov	%f1, %f20
-	fmul	%f0, %f0, %f1
-	sti	%g3, %g1, 24
-	subi	%g1, %g1, 32
-	call	tan.316
-	addi	%g1, %g1, 32
-	fmov	%f1, %f18
-	fmul	%f1, %f1, %f0
-	fmov	%f2, %f17
-	fmul	%f0, %f0, %f0
-	fadd	%f0, %f2, %f0
-	fdiv	%f0, %f1, %f0
-	ldi	%g3, %g1, 24
-	jne	%g3, %g0, jeq_else.818
-	jmp	fneg.301
-jeq_else.818:
-	return
-
-!==============================
-! args = []
-! fargs = [%f0]
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Float
-!================================
-cos.322:
-	ldi	%g30, %g30, -4
-	fmov	%f1, %f19
-	fsub	%f0, %f1, %f0
-	ldi	%g27, %g30, 0
-	b	%g27
-
-!==============================
-! args = [%g3, %g4, %g5, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Int
-!================================
-div_binary_search.344:
-	add	%g7, %g5, %g6
-	srli	%g7, %g7, 1
-	mul	%g8, %g7, %g4
-	sub	%g9, %g6, %g5
-	jlt	%g28, %g9, jle_else.819
-	mov	%g3, %g5
-	return
-jle_else.819:
-	jlt	%g8, %g3, jle_else.820
-	jne	%g8, %g3, jeq_else.821
-	mov	%g3, %g7
-	return
-jeq_else.821:
-	mov	%g6, %g7
-	jmp	div_binary_search.344
-jle_else.820:
-	mov	%g5, %g7
-	jmp	div_binary_search.344
-
-!==============================
-! args = [%g3]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Unit
-!================================
-print_int.349:
-	jlt	%g3, %g0, jge_else.822
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 3
-	sti	%g3, %g1, 0
-	subi	%g1, %g1, 8
-	call	div_binary_search.344
-	addi	%g1, %g1, 8
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	mul	%g4, %g3, %g4
-	ldi	%g5, %g1, 0
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 4
-	jlt	%g0, %g3, jle_else.823
-	addi	%g3, %g0, 0
-	jmp	jle_cont.824
-jle_else.823:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.824:
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 4
-	sti	%g3, %g1, 8
-	mov	%g3, %g7
-	subi	%g1, %g1, 16
-	call	div_binary_search.344
-	addi	%g1, %g1, 16
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	mul	%g4, %g3, %g4
-	ldi	%g5, %g1, 4
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 12
-	jlt	%g0, %g3, jle_else.825
-	ldi	%g5, %g1, 8
-	jne	%g5, %g0, jeq_else.827
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.828
-jeq_else.827:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.828:
-	jmp	jle_cont.826
-jle_else.825:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.826:
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 12
-	sti	%g3, %g1, 16
-	mov	%g3, %g7
-	subi	%g1, %g1, 24
-	call	div_binary_search.344
-	addi	%g1, %g1, 24
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	mul	%g4, %g3, %g4
-	ldi	%g5, %g1, 12
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 20
-	jlt	%g0, %g3, jle_else.829
-	ldi	%g5, %g1, 16
-	jne	%g5, %g0, jeq_else.831
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.832
-jeq_else.831:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.832:
-	jmp	jle_cont.830
-jle_else.829:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.830:
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 20
-	sti	%g3, %g1, 24
-	mov	%g3, %g7
-	subi	%g1, %g1, 32
-	call	div_binary_search.344
-	addi	%g1, %g1, 32
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	mul	%g4, %g3, %g4
-	ldi	%g5, %g1, 20
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 28
-	jlt	%g0, %g3, jle_else.833
-	ldi	%g5, %g1, 24
-	jne	%g5, %g0, jeq_else.835
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.836
-jeq_else.835:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.836:
-	jmp	jle_cont.834
-jle_else.833:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.834:
-	addi	%g4, %g0, 10000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 28
-	sti	%g3, %g1, 32
-	mov	%g3, %g7
-	subi	%g1, %g1, 40
-	call	div_binary_search.344
-	addi	%g1, %g1, 40
-	addi	%g4, %g0, 10000
-	mul	%g4, %g3, %g4
-	ldi	%g5, %g1, 28
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 36
-	jlt	%g0, %g3, jle_else.837
-	ldi	%g5, %g1, 32
-	jne	%g5, %g0, jeq_else.839
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.840
-jeq_else.839:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.840:
-	jmp	jle_cont.838
-jle_else.837:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.838:
-	addi	%g4, %g0, 1000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 36
-	sti	%g3, %g1, 40
-	mov	%g3, %g7
-	subi	%g1, %g1, 48
-	call	div_binary_search.344
-	addi	%g1, %g1, 48
-	muli	%g4, %g3, 1000
-	ldi	%g5, %g1, 36
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 44
-	jlt	%g0, %g3, jle_else.841
-	ldi	%g5, %g1, 40
-	jne	%g5, %g0, jeq_else.843
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.844
-jeq_else.843:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.844:
-	jmp	jle_cont.842
-jle_else.841:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.842:
-	addi	%g4, %g0, 100
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 44
-	sti	%g3, %g1, 48
-	mov	%g3, %g7
-	subi	%g1, %g1, 56
-	call	div_binary_search.344
-	addi	%g1, %g1, 56
-	muli	%g4, %g3, 100
-	ldi	%g5, %g1, 44
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 52
-	jlt	%g0, %g3, jle_else.845
-	ldi	%g5, %g1, 48
-	jne	%g5, %g0, jeq_else.847
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.848
-jeq_else.847:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.848:
-	jmp	jle_cont.846
-jle_else.845:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.846:
-	addi	%g4, %g0, 10
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 52
-	sti	%g3, %g1, 56
-	mov	%g3, %g7
-	subi	%g1, %g1, 64
-	call	div_binary_search.344
-	addi	%g1, %g1, 64
-	muli	%g4, %g3, 10
-	ldi	%g5, %g1, 52
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 60
-	jlt	%g0, %g3, jle_else.849
-	ldi	%g5, %g1, 56
-	jne	%g5, %g0, jeq_else.851
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.852
-jeq_else.851:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.852:
-	jmp	jle_cont.850
-jle_else.849:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.850:
-	addi	%g3, %g0, 48
-	ldi	%g4, %g1, 60
-	add	%g3, %g3, %g4
-	output	%g3
-	return
-jge_else.822:
-	addi	%g4, %g0, 45
-	sti	%g3, %g1, 0
-	output	%g4
-	ldi	%g3, %g1, 0
-	sub	%g3, %g0, %g3
-	jmp	print_int.349
diff --git a/ocore/tmpl/as/fmul.s b/ocore/tmpl/as/fmul.s
deleted file mode 100644
index a0f7f82..0000000
--- a/ocore/tmpl/as/fmul.s
+++ /dev/null
@@ -1,522 +0,0 @@
-.init_heap_size	224
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-l.667:	! 16826400.000000
-	.long	0x4b806010
-	jmp	min_caml_start
-
-!#####################################################################
-!
-! 		↓　ここから lib_asm.s
-!
-!#####################################################################
-
-! * create_array
-min_caml_create_array:
-	slli %g3, %g3, 2
-	add %g5, %g3, %g2
-	mov %g3, %g2
-CREATE_ARRAY_LOOP:
-	jlt %g5, %g2, CREATE_ARRAY_END
-	jeq %g5, %g2, CREATE_ARRAY_END
-	sti %g4, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_ARRAY_LOOP
-CREATE_ARRAY_END:
-	return
-
-! * create_float_array
-min_caml_create_float_array:
-	slli %g3, %g3, 2
-	add %g4, %g3, %g2
-	mov %g3, %g2
-CREATE_FLOAT_ARRAY_LOOP:
-	jlt %g4, %g2, CREATE_FLOAT_ARRAY_END
-	jeq %g4, %g2, CREATE_FLOAT_ARRAY_END
-	fsti %f0, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_FLOAT_ARRAY_LOOP
-CREATE_FLOAT_ARRAY_END:
-	return
-
-! * floor		%f0 + MAGICF - MAGICF
-min_caml_floor:
-	fmov %f1, %f0
-	! %f4 = 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f4, %g3, 0
-	fjlt %f4, %f0, FLOOR_POSITIVE	! if (%f4 <= %f0) goto FLOOR_PISITIVE
-	fjeq %f4, %f0, FLOOR_POSITIVE
-FLOOR_NEGATIVE:
-	fneg %f0, %f0
-	setL %g3, FLOAT_MAGICF
-	! %f2 = FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fjeq %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fneg %f0, %f0
-	return
-FLOOR_NEGATIVE_MAIN:
-	fadd %f0, %f0, %f2
-	fsub %f0, %f0, %f2
-	fneg %f1, %f1
-	fjlt %f1, %f0, FLOOR_RET2
-	fjeq %f1, %f0, FLOOR_RET2
-	fadd %f0, %f0, %f2
-	! %f3 = 1.0
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fadd %f0, %f0, %f3
-	fsub %f0, %f0, %f2
-	fneg %f0, %f0
-	return
-FLOOR_POSITIVE:
-	setL %g3, FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_POSITIVE_MAIN
-	fjeq %f0, %f2, FLOOR_POSITIVE_MAIN
-	return
-FLOOR_POSITIVE_MAIN:
-	fmov %f1, %f0
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fsub %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fjlt %f0, %f1, FLOOR_RET
-	fjeq %f0, %f1, FLOOR_RET
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fsub %f0, %f0, %f3
-FLOOR_RET:
-	return
-FLOOR_RET2:
-	fneg %f0, %f0
-	return
-	
-min_caml_ceil:
-	fneg %f0, %f0
-	call min_caml_floor
-	fneg %f0, %f0
-	return
-
-! * float_of_int
-min_caml_float_of_int:
-	jlt %g0, %g3, ITOF_MAIN		! if (%g0 <= %g3) goto ITOF_MAIN
-	jeq %g0, %g3, ITOF_MAIN
-	sub %g3, %g0, %g3
-	call ITOF_MAIN
-	fneg %f0, %f0
-	return
-ITOF_MAIN:
-
-	! %f1 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	! %g5 <= FLOAT_MAGICI
-
-	setL %g5, FLOAT_MAGICF
-	fldi %f1, %g5, 0
-	setL %g5, FLOAT_MAGICFHX
-	ldi %g4, %g5, 0
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	jlt %g5, %g3, ITOF_BIG
-	jeq %g5, %g3, ITOF_BIG
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	return
-ITOF_BIG:
-	setL %g4, FLOAT_ZERO
-	fldi %f2, %g4, 0
-ITOF_LOOP:
-	sub %g3, %g3, %g5
-	fadd %f2, %f2, %f1
-	jlt %g5, %g3, ITOF_LOOP
-	jeq %g5, %g3, ITOF_LOOP
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	fadd %f0, %f0, %f2
-	return
-
-! * int_of_float
-min_caml_int_of_float:
-	! %f1 <= 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f1, %g3, 0
-	fjlt %f1, %f0, FTOI_MAIN			! if (0.0 <= %f0) goto FTOI_MAIN
-	fjeq %f1, %f0, FTOI_MAIN
-	fneg %f0, %f0
-	call FTOI_MAIN
-	sub %g3, %g0, %g3
-	return
-FTOI_MAIN:
-	call min_caml_floor
-	! %f2 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	setL %g4, FLOAT_MAGICF
-	fldi %f2, %g4, 0
-	setL %g4, FLOAT_MAGICFHX
-	ldi %g4, %g4, 0
-	fjlt %f2, %f0, FTOI_BIG		! if (MAGICF <= %f0) goto FTOI_BIG
-	fjeq %f2, %f0, FTOI_BIG
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g3, %g1, 0
-	sub %g3, %g3, %g4
-	return
-FTOI_BIG:
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	mov %g3, %g0
-FTOI_LOOP:
-	fsub %f0, %f0, %f2
-	add %g3, %g3, %g5
-	fjlt %f2, %f0, FTOI_LOOP
-	fjeq %f2, %f0, FTOI_LOOP
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g5, %g1, 0
-	sub %g5, %g5, %g4
-	add %g3, %g5, %g3
-	return
-	
-! * truncate
-min_caml_truncate:
-	jmp min_caml_int_of_float
-
-
-!#####################################################################
-!
-! 		↑　ここまで lib_asm.s
-!
-!#####################################################################
-min_caml_start:
-	mov	%g31, %g1
-	subi	%g1, %g1, 32
-	addi	%g28, %g0, 1
-	addi	%g29, %g0, -1
-	setL %g27, l.667
-	fldi	%f16, %g27, 0
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 4
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 16
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 1
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 20
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 24
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	fmov	%f0, %f16
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.337
-	addi	%g1, %g1, 4
-	halt
-
-!==============================
-! args = [%g8, %g7, %g5, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %f15]
-! ret type = Int
-!================================
-div_binary_search.332:
-	add	%g3, %g5, %g6
-	srli	%g4, %g3, 1
-	mul	%g9, %g4, %g7
-	sub	%g3, %g6, %g5
-	jlt	%g28, %g3, jle_else.684
-	mov	%g3, %g5
-	return
-jle_else.684:
-	jlt	%g9, %g8, jle_else.685
-	jne	%g9, %g8, jeq_else.686
-	mov	%g3, %g4
-	return
-jeq_else.686:
-	mov	%g6, %g4
-	jmp	div_binary_search.332
-jle_else.685:
-	mov	%g5, %g4
-	jmp	div_binary_search.332
-
-!==============================
-! args = [%g8]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f15, %dummy]
-! ret type = Unit
-!================================
-print_int.337:
-	jlt	%g8, %g0, jge_else.687
-	mvhi	%g7, 1525
-	mvlo	%g7, 57600
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 3
-	sti	%g8, %g1, 0
-	subi	%g1, %g1, 8
-	call	div_binary_search.332
-	addi	%g1, %g1, 8
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 0
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.688
-	addi	%g10, %g0, 0
-	jmp	jle_cont.689
-jle_else.688:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.689:
-	mvhi	%g7, 152
-	mvlo	%g7, 38528
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 4
-	subi	%g1, %g1, 12
-	call	div_binary_search.332
-	addi	%g1, %g1, 12
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 4
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.690
-	jne	%g10, %g0, jeq_else.692
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.693
-jeq_else.692:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.693:
-	jmp	jle_cont.691
-jle_else.690:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.691:
-	mvhi	%g7, 15
-	mvlo	%g7, 16960
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 8
-	subi	%g1, %g1, 16
-	call	div_binary_search.332
-	addi	%g1, %g1, 16
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 8
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.694
-	jne	%g11, %g0, jeq_else.696
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.697
-jeq_else.696:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.697:
-	jmp	jle_cont.695
-jle_else.694:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.695:
-	mvhi	%g7, 1
-	mvlo	%g7, 34464
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 12
-	subi	%g1, %g1, 20
-	call	div_binary_search.332
-	addi	%g1, %g1, 20
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 12
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.698
-	jne	%g10, %g0, jeq_else.700
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.701
-jeq_else.700:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.701:
-	jmp	jle_cont.699
-jle_else.698:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.699:
-	addi	%g7, %g0, 10000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 16
-	subi	%g1, %g1, 24
-	call	div_binary_search.332
-	addi	%g1, %g1, 24
-	addi	%g4, %g0, 10000
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 16
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.702
-	jne	%g11, %g0, jeq_else.704
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.705
-jeq_else.704:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.705:
-	jmp	jle_cont.703
-jle_else.702:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.703:
-	addi	%g7, %g0, 1000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 20
-	subi	%g1, %g1, 28
-	call	div_binary_search.332
-	addi	%g1, %g1, 28
-	muli	%g4, %g3, 1000
-	ldi	%g8, %g1, 20
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.706
-	jne	%g10, %g0, jeq_else.708
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.709
-jeq_else.708:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.709:
-	jmp	jle_cont.707
-jle_else.706:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.707:
-	addi	%g7, %g0, 100
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 24
-	subi	%g1, %g1, 32
-	call	div_binary_search.332
-	addi	%g1, %g1, 32
-	muli	%g4, %g3, 100
-	ldi	%g8, %g1, 24
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.710
-	jne	%g11, %g0, jeq_else.712
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.713
-jeq_else.712:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.713:
-	jmp	jle_cont.711
-jle_else.710:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.711:
-	addi	%g7, %g0, 10
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 28
-	subi	%g1, %g1, 36
-	call	div_binary_search.332
-	addi	%g1, %g1, 36
-	muli	%g4, %g3, 10
-	ldi	%g8, %g1, 28
-	sub	%g4, %g8, %g4
-	jlt	%g0, %g3, jle_else.714
-	jne	%g10, %g0, jeq_else.716
-	addi	%g5, %g0, 0
-	jmp	jeq_cont.717
-jeq_else.716:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jeq_cont.717:
-	jmp	jle_cont.715
-jle_else.714:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jle_cont.715:
-	addi	%g3, %g0, 48
-	add	%g3, %g3, %g4
-	output	%g3
-	return
-jge_else.687:
-	addi	%g3, %g0, 45
-	output	%g3
-	sub	%g8, %g0, %g8
-	jmp	print_int.337
diff --git a/ocore/tmpl/as/fpadd_test.s b/ocore/tmpl/as/fpadd_test.s
deleted file mode 100644
index f8c1d72..0000000
--- a/ocore/tmpl/as/fpadd_test.s
+++ /dev/null
@@ -1,29 +0,0 @@
-.init_heap_size	224
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-l.667:	! 16826400.000000
-	.long	0x4b806010
-
-	setL %g3, FLOAT_ONE
-	fld %f4, %g3, %g0
-	fmov %f5, %f4
-	fsti %f4, %g1, 8
-	fldi %f6, %g1, 8
-	fadd %f3, %f3, %f3
-	addi %g4, %g0, 48
-	fneg %f6, %f6
-	fjlt %f5, %f6, llll
-	output %g4
-llll:
-	halt
-
diff --git a/ocore/tmpl/as/inprod-loop.s b/ocore/tmpl/as/inprod-loop.s
deleted file mode 100644
index b6bb04b..0000000
--- a/ocore/tmpl/as/inprod-loop.s
+++ /dev/null
@@ -1,622 +0,0 @@
-.init_heap_size	352
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-l.763:	! 10000.000000
-	.long	0x461c4000
-l.751:	! 0.000000
-	.long	0x0
-l.749:	! 1000000.000000
-	.long	0x49742400
-l.747:	! 4.560000
-	.long	0x4091eb7d
-l.745:	! 1.230000
-	.long	0x3f9d70a3
-	jmp	min_caml_start
-
-!#####################################################################
-!
-! 		↓　ここから lib_asm.s
-!
-!#####################################################################
-
-! * create_array
-min_caml_create_array:
-	slli %g3, %g3, 2
-	add %g5, %g3, %g2
-	mov %g3, %g2
-CREATE_ARRAY_LOOP:
-	jlt %g5, %g2, CREATE_ARRAY_END
-	jeq %g5, %g2, CREATE_ARRAY_END
-	sti %g4, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_ARRAY_LOOP
-CREATE_ARRAY_END:
-	return
-
-! * create_float_array
-min_caml_create_float_array:
-	slli %g3, %g3, 2
-	add %g4, %g3, %g2
-	mov %g3, %g2
-CREATE_FLOAT_ARRAY_LOOP:
-	jlt %g4, %g2, CREATE_FLOAT_ARRAY_END
-	jeq %g4, %g2, CREATE_FLOAT_ARRAY_END
-	fsti %f0, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_FLOAT_ARRAY_LOOP
-CREATE_FLOAT_ARRAY_END:
-	return
-
-! * floor		%f0 + MAGICF - MAGICF
-min_caml_floor:
-	fmov %f1, %f0
-	! %f4 = 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f4, %g3, 0
-	fjlt %f4, %f0, FLOOR_POSITIVE	! if (%f4 <= %f0) goto FLOOR_PISITIVE
-	fjeq %f4, %f0, FLOOR_POSITIVE
-FLOOR_NEGATIVE:
-	fneg %f0, %f0
-	setL %g3, FLOAT_MAGICF
-	! %f2 = FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fjeq %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fneg %f0, %f0
-	return
-FLOOR_NEGATIVE_MAIN:
-	fadd %f0, %f0, %f2
-	fsub %f0, %f0, %f2
-	fneg %f1, %f1
-	fjlt %f1, %f0, FLOOR_RET2
-	fjeq %f1, %f0, FLOOR_RET2
-	fadd %f0, %f0, %f2
-	! %f3 = 1.0
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fadd %f0, %f0, %f3
-	fsub %f0, %f0, %f2
-	fneg %f0, %f0
-	return
-FLOOR_POSITIVE:
-	setL %g3, FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_POSITIVE_MAIN
-	fjeq %f0, %f2, FLOOR_POSITIVE_MAIN
-	return
-FLOOR_POSITIVE_MAIN:
-	fmov %f1, %f0
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fsub %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fjlt %f0, %f1, FLOOR_RET
-	fjeq %f0, %f1, FLOOR_RET
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fsub %f0, %f0, %f3
-FLOOR_RET:
-	return
-FLOOR_RET2:
-	fneg %f0, %f0
-	return
-	
-min_caml_ceil:
-	fneg %f0, %f0
-	call min_caml_floor
-	fneg %f0, %f0
-	return
-
-! * float_of_int
-min_caml_float_of_int:
-	jlt %g0, %g3, ITOF_MAIN		! if (%g0 <= %g3) goto ITOF_MAIN
-	jeq %g0, %g3, ITOF_MAIN
-	sub %g3, %g0, %g3
-	call ITOF_MAIN
-	fneg %f0, %f0
-	return
-ITOF_MAIN:
-
-	! %f1 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	! %g5 <= FLOAT_MAGICI
-
-	setL %g5, FLOAT_MAGICF
-	fldi %f1, %g5, 0
-	setL %g5, FLOAT_MAGICFHX
-	ldi %g4, %g5, 0
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	jlt %g5, %g3, ITOF_BIG
-	jeq %g5, %g3, ITOF_BIG
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	return
-ITOF_BIG:
-	setL %g4, FLOAT_ZERO
-	fldi %f2, %g4, 0
-ITOF_LOOP:
-	sub %g3, %g3, %g5
-	fadd %f2, %f2, %f1
-	jlt %g5, %g3, ITOF_LOOP
-	jeq %g5, %g3, ITOF_LOOP
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	fadd %f0, %f0, %f2
-	return
-
-! * int_of_float
-min_caml_int_of_float:
-	! %f1 <= 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f1, %g3, 0
-	fjlt %f1, %f0, FTOI_MAIN			! if (0.0 <= %f0) goto FTOI_MAIN
-	fjeq %f1, %f0, FTOI_MAIN
-	fneg %f0, %f0
-	call FTOI_MAIN
-	sub %g3, %g0, %g3
-	return
-FTOI_MAIN:
-	call min_caml_floor
-	! %f2 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	setL %g4, FLOAT_MAGICF
-	fldi %f2, %g4, 0
-	setL %g4, FLOAT_MAGICFHX
-	ldi %g4, %g4, 0
-	fjlt %f2, %f0, FTOI_BIG		! if (MAGICF <= %f0) goto FTOI_BIG
-	fjeq %f2, %f0, FTOI_BIG
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g3, %g1, 0
-	sub %g3, %g3, %g4
-	return
-FTOI_BIG:
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	mov %g3, %g0
-FTOI_LOOP:
-	fsub %f0, %f0, %f2
-	add %g3, %g3, %g5
-	fjlt %f2, %f0, FTOI_LOOP
-	fjeq %f2, %f0, FTOI_LOOP
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g5, %g1, 0
-	sub %g5, %g5, %g4
-	add %g3, %g5, %g3
-	return
-	
-! * truncate
-min_caml_truncate:
-	jmp min_caml_int_of_float
-
-
-!#####################################################################
-!
-! 		↑　ここまで lib_asm.s
-!
-!#####################################################################
-min_caml_start:
-	mov	%g31, %g1
-	subi	%g1, %g1, 56
-	addi	%g28, %g0, 1
-	addi	%g29, %g0, -1
-	setL %g27, l.763
-	fldi	%f16, %g27, 0
-	setL %g27, l.751
-	fldi	%f17, %g27, 0
-	setL %g27, l.749
-	fldi	%f18, %g27, 0
-	setL %g27, l.747
-	fldi	%f19, %g27, 0
-	setL %g27, l.745
-	fldi	%f20, %g27, 0
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 52
-	subi	%g2, %g31, 4
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	ldi	%g2, %g31, 52
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 52
-	subi	%g2, %g31, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 52
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 52
-	subi	%g2, %g31, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 52
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 52
-	subi	%g2, %g31, 16
-	call	min_caml_create_array
-	ldi	%g2, %g31, 52
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 1
-	sti	%g2, %g31, 52
-	subi	%g2, %g31, 20
-	call	min_caml_create_array
-	ldi	%g2, %g31, 52
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 52
-	subi	%g2, %g31, 24
-	call	min_caml_create_array
-	ldi	%g2, %g31, 52
-	addi	%g3, %g0, 3
-	sti	%g2, %g31, 52
-	subi	%g2, %g31, 36
-	fmov	%f0, %f20
-	call	min_caml_create_float_array
-	ldi	%g2, %g31, 52
-	addi	%g3, %g0, 3
-	sti	%g2, %g31, 52
-	subi	%g2, %g31, 48
-	fmov	%f0, %f19
-	call	min_caml_create_float_array
-	ldi	%g2, %g31, 52
-	addi	%g14, %g0, 2
-	subi	%g12, %g31, 48
-	subi	%g13, %g31, 36
-	fmov	%f5, %f17
-	call	inprod.376
-	fmul	%f0, %f18, %f0
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.374
-	addi	%g1, %g1, 4
-	halt
-
-!==============================
-! args = [%g8, %g7, %g5, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %f15]
-! ret type = Int
-!================================
-div_binary_search.369:
-	add	%g3, %g5, %g6
-	srli	%g4, %g3, 1
-	mul	%g9, %g4, %g7
-	sub	%g3, %g6, %g5
-	jlt	%g28, %g3, jle_else.787
-	mov	%g3, %g5
-	return
-jle_else.787:
-	jlt	%g9, %g8, jle_else.788
-	jne	%g9, %g8, jeq_else.789
-	mov	%g3, %g4
-	return
-jeq_else.789:
-	mov	%g6, %g4
-	jmp	div_binary_search.369
-jle_else.788:
-	mov	%g5, %g4
-	jmp	div_binary_search.369
-
-!==============================
-! args = [%g8]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f15, %dummy]
-! ret type = Unit
-!================================
-print_int.374:
-	jlt	%g8, %g0, jge_else.790
-	mvhi	%g7, 1525
-	mvlo	%g7, 57600
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 3
-	sti	%g8, %g1, 0
-	subi	%g1, %g1, 8
-	call	div_binary_search.369
-	addi	%g1, %g1, 8
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 0
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.791
-	addi	%g10, %g0, 0
-	jmp	jle_cont.792
-jle_else.791:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.792:
-	mvhi	%g7, 152
-	mvlo	%g7, 38528
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 4
-	subi	%g1, %g1, 12
-	call	div_binary_search.369
-	addi	%g1, %g1, 12
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 4
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.793
-	jne	%g10, %g0, jeq_else.795
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.796
-jeq_else.795:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.796:
-	jmp	jle_cont.794
-jle_else.793:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.794:
-	mvhi	%g7, 15
-	mvlo	%g7, 16960
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 8
-	subi	%g1, %g1, 16
-	call	div_binary_search.369
-	addi	%g1, %g1, 16
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 8
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.797
-	jne	%g11, %g0, jeq_else.799
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.800
-jeq_else.799:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.800:
-	jmp	jle_cont.798
-jle_else.797:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.798:
-	mvhi	%g7, 1
-	mvlo	%g7, 34464
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 12
-	subi	%g1, %g1, 20
-	call	div_binary_search.369
-	addi	%g1, %g1, 20
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 12
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.801
-	jne	%g10, %g0, jeq_else.803
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.804
-jeq_else.803:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.804:
-	jmp	jle_cont.802
-jle_else.801:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.802:
-	addi	%g7, %g0, 10000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 16
-	subi	%g1, %g1, 24
-	call	div_binary_search.369
-	addi	%g1, %g1, 24
-	addi	%g4, %g0, 10000
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 16
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.805
-	jne	%g11, %g0, jeq_else.807
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.808
-jeq_else.807:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.808:
-	jmp	jle_cont.806
-jle_else.805:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.806:
-	addi	%g7, %g0, 1000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 20
-	subi	%g1, %g1, 28
-	call	div_binary_search.369
-	addi	%g1, %g1, 28
-	muli	%g4, %g3, 1000
-	ldi	%g8, %g1, 20
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.809
-	jne	%g10, %g0, jeq_else.811
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.812
-jeq_else.811:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.812:
-	jmp	jle_cont.810
-jle_else.809:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.810:
-	addi	%g7, %g0, 100
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 24
-	subi	%g1, %g1, 32
-	call	div_binary_search.369
-	addi	%g1, %g1, 32
-	muli	%g4, %g3, 100
-	ldi	%g8, %g1, 24
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.813
-	jne	%g11, %g0, jeq_else.815
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.816
-jeq_else.815:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.816:
-	jmp	jle_cont.814
-jle_else.813:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.814:
-	addi	%g7, %g0, 10
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 28
-	subi	%g1, %g1, 36
-	call	div_binary_search.369
-	addi	%g1, %g1, 36
-	muli	%g4, %g3, 10
-	ldi	%g8, %g1, 28
-	sub	%g4, %g8, %g4
-	jlt	%g0, %g3, jle_else.817
-	jne	%g10, %g0, jeq_else.819
-	addi	%g5, %g0, 0
-	jmp	jeq_cont.820
-jeq_else.819:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jeq_cont.820:
-	jmp	jle_cont.818
-jle_else.817:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jle_cont.818:
-	addi	%g3, %g0, 48
-	add	%g3, %g3, %g4
-	output	%g3
-	return
-jge_else.790:
-	addi	%g3, %g0, 45
-	output	%g3
-	sub	%g8, %g0, %g8
-	jmp	print_int.374
-
-!==============================
-! args = [%g13, %g12, %g14]
-! fargs = [%f5]
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g14, %g13, %g12, %g11, %g10, %f5, %f4, %f3, %f2, %f16, %f15, %f1, %f0, %dummy]
-! ret type = Float
-!================================
-inprod.376:
-	jlt	%g14, %g0, jge_else.821
-	mov	%g8, %g14
-	subi	%g1, %g1, 4
-	call	print_int.374
-	addi	%g1, %g1, 4
-	sti	%g3, %g1, 4
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 4
-	slli	%g3, %g14, 2
-	fld	%f0, %g13, %g3
-	fmul	%f0, %f16, %f0
-	subi	%g1, %g1, 4
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.374
-	addi	%g1, %g1, 4
-	sti	%g3, %g1, 4
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 4
-	slli	%g3, %g14, 2
-	fld	%f0, %g12, %g3
-	fmul	%f0, %f16, %f0
-	subi	%g1, %g1, 4
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.374
-	addi	%g1, %g1, 4
-	sti	%g3, %g1, 4
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 4
-	slli	%g3, %g14, 2
-	fld	%f0, %g13, %g3
-	fmul	%f1, %f16, %f0
-	slli	%g3, %g14, 2
-	fld	%f0, %g12, %g3
-	fmul	%f0, %f1, %f0
-	subi	%g1, %g1, 4
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.374
-	addi	%g1, %g1, 4
-	sti	%g3, %g1, 4
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 4
-	slli	%g3, %g14, 2
-	fld	%f1, %g13, %g3
-	slli	%g3, %g14, 2
-	fld	%f0, %g12, %g3
-	fmul	%f0, %f1, %f0
-	fadd	%f5, %f5, %f0
-	subi	%g14, %g14, 1
-	jmp	inprod.376
-jge_else.821:
-	fmov	%f0, %f5
-	return
diff --git a/ocore/tmpl/as/inprod.s b/ocore/tmpl/as/inprod.s
deleted file mode 100644
index 68475b3..0000000
--- a/ocore/tmpl/as/inprod.s
+++ /dev/null
@@ -1,618 +0,0 @@
-.init_heap_size	416
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-l.732:	! 6.000000
-	.long	0x40c00000
-l.730:	! 5.000000
-	.long	0x40a00000
-l.728:	! 4.000000
-	.long	0x40800000
-l.722:	! 3.000000
-	.long	0x40400000
-l.720:	! 1.000000
-	.long	0x3f800000
-l.718:	! 1000000.000000
-	.long	0x49742400
-l.716:	! 2.000000
-	.long	0x40000000
-	jmp	min_caml_start
-
-!#####################################################################
-!
-! 		↓　ここから lib_asm.s
-!
-!#####################################################################
-
-! * create_array
-min_caml_create_array:
-	slli %g3, %g3, 2
-	add %g5, %g3, %g2
-	mov %g3, %g2
-CREATE_ARRAY_LOOP:
-	jlt %g5, %g2, CREATE_ARRAY_END
-	jeq %g5, %g2, CREATE_ARRAY_END
-	sti %g4, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_ARRAY_LOOP
-CREATE_ARRAY_END:
-	return
-
-! * create_float_array
-min_caml_create_float_array:
-	slli %g3, %g3, 2
-	add %g4, %g3, %g2
-	mov %g3, %g2
-CREATE_FLOAT_ARRAY_LOOP:
-	jlt %g4, %g2, CREATE_FLOAT_ARRAY_END
-	jeq %g4, %g2, CREATE_FLOAT_ARRAY_END
-	fsti %f0, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_FLOAT_ARRAY_LOOP
-CREATE_FLOAT_ARRAY_END:
-	return
-
-! * floor		%f0 + MAGICF - MAGICF
-min_caml_floor:
-	fmov %f1, %f0
-	! %f4 = 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f4, %g3, 0
-	fjlt %f4, %f0, FLOOR_POSITIVE	! if (%f4 <= %f0) goto FLOOR_PISITIVE
-	fjeq %f4, %f0, FLOOR_POSITIVE
-FLOOR_NEGATIVE:
-	fneg %f0, %f0
-	setL %g3, FLOAT_MAGICF
-	! %f2 = FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fjeq %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fneg %f0, %f0
-	return
-FLOOR_NEGATIVE_MAIN:
-	fadd %f0, %f0, %f2
-	fsub %f0, %f0, %f2
-	fneg %f1, %f1
-	fjlt %f1, %f0, FLOOR_RET2
-	fjeq %f1, %f0, FLOOR_RET2
-	fadd %f0, %f0, %f2
-	! %f3 = 1.0
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fadd %f0, %f0, %f3
-	fsub %f0, %f0, %f2
-	fneg %f0, %f0
-	return
-FLOOR_POSITIVE:
-	setL %g3, FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_POSITIVE_MAIN
-	fjeq %f0, %f2, FLOOR_POSITIVE_MAIN
-	return
-FLOOR_POSITIVE_MAIN:
-	fmov %f1, %f0
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fsub %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fjlt %f0, %f1, FLOOR_RET
-	fjeq %f0, %f1, FLOOR_RET
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fsub %f0, %f0, %f3
-FLOOR_RET:
-	return
-FLOOR_RET2:
-	fneg %f0, %f0
-	return
-	
-min_caml_ceil:
-	fneg %f0, %f0
-	call min_caml_floor
-	fneg %f0, %f0
-	return
-
-! * float_of_int
-min_caml_float_of_int:
-	jlt %g0, %g3, ITOF_MAIN		! if (%g0 <= %g3) goto ITOF_MAIN
-	jeq %g0, %g3, ITOF_MAIN
-	sub %g3, %g0, %g3
-	call ITOF_MAIN
-	fneg %f0, %f0
-	return
-ITOF_MAIN:
-
-	! %f1 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	! %g5 <= FLOAT_MAGICI
-
-	setL %g5, FLOAT_MAGICF
-	fldi %f1, %g5, 0
-	setL %g5, FLOAT_MAGICFHX
-	ldi %g4, %g5, 0
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	jlt %g5, %g3, ITOF_BIG
-	jeq %g5, %g3, ITOF_BIG
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	return
-ITOF_BIG:
-	setL %g4, FLOAT_ZERO
-	fldi %f2, %g4, 0
-ITOF_LOOP:
-	sub %g3, %g3, %g5
-	fadd %f2, %f2, %f1
-	jlt %g5, %g3, ITOF_LOOP
-	jeq %g5, %g3, ITOF_LOOP
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	fadd %f0, %f0, %f2
-	return
-
-! * int_of_float
-min_caml_int_of_float:
-	! %f1 <= 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f1, %g3, 0
-	fjlt %f1, %f0, FTOI_MAIN			! if (0.0 <= %f0) goto FTOI_MAIN
-	fjeq %f1, %f0, FTOI_MAIN
-	fneg %f0, %f0
-	call FTOI_MAIN
-	sub %g3, %g0, %g3
-	return
-FTOI_MAIN:
-	call min_caml_floor
-	! %f2 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	setL %g4, FLOAT_MAGICF
-	fldi %f2, %g4, 0
-	setL %g4, FLOAT_MAGICFHX
-	ldi %g4, %g4, 0
-	fjlt %f2, %f0, FTOI_BIG		! if (MAGICF <= %f0) goto FTOI_BIG
-	fjeq %f2, %f0, FTOI_BIG
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g3, %g1, 0
-	sub %g3, %g3, %g4
-	return
-FTOI_BIG:
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	mov %g3, %g0
-FTOI_LOOP:
-	fsub %f0, %f0, %f2
-	add %g3, %g3, %g5
-	fjlt %f2, %f0, FTOI_LOOP
-	fjeq %f2, %f0, FTOI_LOOP
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g5, %g1, 0
-	sub %g5, %g5, %g4
-	add %g3, %g5, %g3
-	return
-	
-! * truncate
-min_caml_truncate:
-	jmp min_caml_int_of_float
-
-
-!#####################################################################
-!
-! 		↑　ここまで lib_asm.s
-!
-!#####################################################################
-min_caml_start:
-	mov	%g31, %g1
-	subi	%g1, %g1, 32
-	addi	%g28, %g0, 1
-	addi	%g29, %g0, -1
-	setL %g27, l.732
-	fldi	%f16, %g27, 0
-	setL %g27, l.730
-	fldi	%f17, %g27, 0
-	setL %g27, l.728
-	fldi	%f18, %g27, 0
-	setL %g27, l.722
-	fldi	%f19, %g27, 0
-	setL %g27, l.720
-	fldi	%f20, %g27, 0
-	setL %g27, l.718
-	fldi	%f21, %g27, 0
-	setL %g27, l.716
-	fldi	%f22, %g27, 0
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 4
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 16
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 1
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 20
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 24
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	mov	%g4, %g2
-	addi	%g2, %g2, 12
-	fsti	%f19, %g4, -8
-	fsti	%f22, %g4, -4
-	fsti	%f20, %g4, 0
-	mov	%g3, %g2
-	addi	%g2, %g2, 12
-	fsti	%f16, %g3, -8
-	fsti	%f17, %g3, -4
-	fsti	%f18, %g3, 0
-	mov	%g5, %g4
-	mov	%g4, %g3
-	call	inprod.362
-	fmul	%f0, %f21, %f0
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.354
-	addi	%g1, %g1, 4
-	halt
-
-!==============================
-! args = [%g8, %g7, %g5, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %f15]
-! ret type = Int
-!================================
-div_binary_search.349:
-	add	%g3, %g5, %g6
-	srli	%g4, %g3, 1
-	mul	%g9, %g4, %g7
-	sub	%g3, %g6, %g5
-	jlt	%g28, %g3, jle_else.754
-	mov	%g3, %g5
-	return
-jle_else.754:
-	jlt	%g9, %g8, jle_else.755
-	jne	%g9, %g8, jeq_else.756
-	mov	%g3, %g4
-	return
-jeq_else.756:
-	mov	%g6, %g4
-	jmp	div_binary_search.349
-jle_else.755:
-	mov	%g5, %g4
-	jmp	div_binary_search.349
-
-!==============================
-! args = [%g8]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f15, %dummy]
-! ret type = Unit
-!================================
-print_int.354:
-	jlt	%g8, %g0, jge_else.757
-	mvhi	%g7, 1525
-	mvlo	%g7, 57600
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 3
-	sti	%g8, %g1, 0
-	subi	%g1, %g1, 8
-	call	div_binary_search.349
-	addi	%g1, %g1, 8
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 0
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.758
-	addi	%g10, %g0, 0
-	jmp	jle_cont.759
-jle_else.758:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.759:
-	mvhi	%g7, 152
-	mvlo	%g7, 38528
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 4
-	subi	%g1, %g1, 12
-	call	div_binary_search.349
-	addi	%g1, %g1, 12
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 4
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.760
-	jne	%g10, %g0, jeq_else.762
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.763
-jeq_else.762:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.763:
-	jmp	jle_cont.761
-jle_else.760:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.761:
-	mvhi	%g7, 15
-	mvlo	%g7, 16960
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 8
-	subi	%g1, %g1, 16
-	call	div_binary_search.349
-	addi	%g1, %g1, 16
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 8
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.764
-	jne	%g11, %g0, jeq_else.766
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.767
-jeq_else.766:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.767:
-	jmp	jle_cont.765
-jle_else.764:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.765:
-	mvhi	%g7, 1
-	mvlo	%g7, 34464
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 12
-	subi	%g1, %g1, 20
-	call	div_binary_search.349
-	addi	%g1, %g1, 20
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 12
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.768
-	jne	%g10, %g0, jeq_else.770
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.771
-jeq_else.770:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.771:
-	jmp	jle_cont.769
-jle_else.768:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.769:
-	addi	%g7, %g0, 10000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 16
-	subi	%g1, %g1, 24
-	call	div_binary_search.349
-	addi	%g1, %g1, 24
-	addi	%g4, %g0, 10000
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 16
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.772
-	jne	%g11, %g0, jeq_else.774
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.775
-jeq_else.774:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.775:
-	jmp	jle_cont.773
-jle_else.772:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.773:
-	addi	%g7, %g0, 1000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 20
-	subi	%g1, %g1, 28
-	call	div_binary_search.349
-	addi	%g1, %g1, 28
-	muli	%g4, %g3, 1000
-	ldi	%g8, %g1, 20
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.776
-	jne	%g10, %g0, jeq_else.778
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.779
-jeq_else.778:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.779:
-	jmp	jle_cont.777
-jle_else.776:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.777:
-	addi	%g7, %g0, 100
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 24
-	subi	%g1, %g1, 32
-	call	div_binary_search.349
-	addi	%g1, %g1, 32
-	muli	%g4, %g3, 100
-	ldi	%g8, %g1, 24
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.780
-	jne	%g11, %g0, jeq_else.782
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.783
-jeq_else.782:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.783:
-	jmp	jle_cont.781
-jle_else.780:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.781:
-	addi	%g7, %g0, 10
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 28
-	subi	%g1, %g1, 36
-	call	div_binary_search.349
-	addi	%g1, %g1, 36
-	muli	%g4, %g3, 10
-	ldi	%g8, %g1, 28
-	sub	%g4, %g8, %g4
-	jlt	%g0, %g3, jle_else.784
-	jne	%g10, %g0, jeq_else.786
-	addi	%g5, %g0, 0
-	jmp	jeq_cont.787
-jeq_else.786:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jeq_cont.787:
-	jmp	jle_cont.785
-jle_else.784:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jle_cont.785:
-	addi	%g3, %g0, 48
-	add	%g3, %g3, %g4
-	output	%g3
-	return
-jge_else.757:
-	addi	%g3, %g0, 45
-	output	%g3
-	sub	%g8, %g0, %g8
-	jmp	print_int.354
-
-!==============================
-! args = [%g3]
-! fargs = []
-! use_regs = [%g3, %g27, %f15, %f0]
-! ret type = Float
-!================================
-getx.356:
-	fldi	%f0, %g3, 0
-	return
-
-!==============================
-! args = [%g3]
-! fargs = []
-! use_regs = [%g3, %g27, %f15, %f0]
-! ret type = Float
-!================================
-gety.358:
-	fldi	%f0, %g3, -4
-	return
-
-!==============================
-! args = [%g3]
-! fargs = []
-! use_regs = [%g3, %g27, %f15, %f0]
-! ret type = Float
-!================================
-getz.360:
-	fldi	%f0, %g3, -8
-	return
-
-!==============================
-! args = [%g5, %g4]
-! fargs = []
-! use_regs = [%g5, %g4, %g3, %g27, %f2, %f15, %f1, %f0]
-! ret type = Float
-!================================
-inprod.362:
-	mov	%g3, %g5
-	call	getx.356
-	fmov	%f1, %f0
-	mov	%g3, %g4
-	call	getx.356
-	fmul	%f2, %f1, %f0
-	mov	%g3, %g5
-	call	gety.358
-	fmov	%f1, %f0
-	mov	%g3, %g4
-	call	gety.358
-	fmul	%f0, %f1, %f0
-	fadd	%f2, %f2, %f0
-	mov	%g3, %g5
-	call	getz.360
-	fmov	%f1, %f0
-	mov	%g3, %g4
-	call	getz.360
-	fmul	%f0, %f1, %f0
-	fadd	%f0, %f2, %f0
-	return
diff --git a/ocore/tmpl/as/input.s b/ocore/tmpl/as/input.s
deleted file mode 100644
index 290802b..0000000
--- a/ocore/tmpl/as/input.s
+++ /dev/null
@@ -1,23 +0,0 @@
-.init_heap_size	0
-
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	halt
diff --git a/ocore/tmpl/as/loopback.s b/ocore/tmpl/as/loopback.s
index 790e888..30361ee 100644
--- a/ocore/tmpl/as/loopback.s
+++ b/ocore/tmpl/as/loopback.s
@@ -1,9 +1,11 @@
 .init_heap_size	0
 
-	add	%g3,%g3,%g3
-	add	%g3,%g3,%g3
-	add	%g3,%g3,%g3
+	addi	%g3, %g0, 48
+	addi	%g3, %g0, 48
+	addi	%g3, %g0, 48
 Loop:
-	input %g3
-	output %g3
+	input	%g4
+	output %g4
+	addi	%g3, %g3, 1
 	jmp Loop
+
diff --git a/ocore/tmpl/as/matmul-flat.s b/ocore/tmpl/as/matmul-flat.s
deleted file mode 100644
index 98238b6..0000000
--- a/ocore/tmpl/as/matmul-flat.s
+++ /dev/null
@@ -1,808 +0,0 @@
-.init_heap_size	608
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-l.1027:	! 12.000000
-	.long	0x41400000
-l.1022:	! 11.000000
-	.long	0x41300000
-l.1017:	! 10.000000
-	.long	0x41200000
-l.1012:	! 9.000000
-	.long	0x41100000
-l.1007:	! 8.000000
-	.long	0x41000000
-l.1002:	! 7.000000
-	.long	0x40e00000
-l.997:	! 6.000000
-	.long	0x40c00000
-l.992:	! 5.000000
-	.long	0x40a00000
-l.987:	! 4.000000
-	.long	0x40800000
-l.982:	! 3.000000
-	.long	0x40400000
-l.974:	! 1.000000
-	.long	0x3f800000
-l.967:	! 0.000000
-	.long	0x0
-l.965:	! 2.000000
-	.long	0x40000000
-	jmp	min_caml_start
-
-!#####################################################################
-!
-! 		↓　ここから lib_asm.s
-!
-!#####################################################################
-
-! * create_array
-min_caml_create_array:
-	slli %g3, %g3, 2
-	add %g5, %g3, %g2
-	mov %g3, %g2
-CREATE_ARRAY_LOOP:
-	jlt %g5, %g2, CREATE_ARRAY_END
-	jeq %g5, %g2, CREATE_ARRAY_END
-	sti %g4, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_ARRAY_LOOP
-CREATE_ARRAY_END:
-	return
-
-! * create_float_array
-min_caml_create_float_array:
-	slli %g3, %g3, 2
-	add %g4, %g3, %g2
-	mov %g3, %g2
-CREATE_FLOAT_ARRAY_LOOP:
-	jlt %g4, %g2, CREATE_FLOAT_ARRAY_END
-	jeq %g4, %g2, CREATE_FLOAT_ARRAY_END
-	fsti %f0, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_FLOAT_ARRAY_LOOP
-CREATE_FLOAT_ARRAY_END:
-	return
-
-! * floor		%f0 + MAGICF - MAGICF
-min_caml_floor:
-	fmov %f1, %f0
-	! %f4 = 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f4, %g3, 0
-	fjlt %f4, %f0, FLOOR_POSITIVE	! if (%f4 <= %f0) goto FLOOR_PISITIVE
-	fjeq %f4, %f0, FLOOR_POSITIVE
-FLOOR_NEGATIVE:
-	fneg %f0, %f0
-	setL %g3, FLOAT_MAGICF
-	! %f2 = FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fjeq %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fneg %f0, %f0
-	return
-FLOOR_NEGATIVE_MAIN:
-	fadd %f0, %f0, %f2
-	fsub %f0, %f0, %f2
-	fneg %f1, %f1
-	fjlt %f1, %f0, FLOOR_RET2
-	fjeq %f1, %f0, FLOOR_RET2
-	fadd %f0, %f0, %f2
-	! %f3 = 1.0
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fadd %f0, %f0, %f3
-	fsub %f0, %f0, %f2
-	fneg %f0, %f0
-	return
-FLOOR_POSITIVE:
-	setL %g3, FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_POSITIVE_MAIN
-	fjeq %f0, %f2, FLOOR_POSITIVE_MAIN
-	return
-FLOOR_POSITIVE_MAIN:
-	fmov %f1, %f0
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fsub %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fjlt %f0, %f1, FLOOR_RET
-	fjeq %f0, %f1, FLOOR_RET
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fsub %f0, %f0, %f3
-FLOOR_RET:
-	return
-FLOOR_RET2:
-	fneg %f0, %f0
-	return
-	
-min_caml_ceil:
-	fneg %f0, %f0
-	call min_caml_floor
-	fneg %f0, %f0
-	return
-
-! * float_of_int
-min_caml_float_of_int:
-	jlt %g0, %g3, ITOF_MAIN		! if (%g0 <= %g3) goto ITOF_MAIN
-	jeq %g0, %g3, ITOF_MAIN
-	sub %g3, %g0, %g3
-	call ITOF_MAIN
-	fneg %f0, %f0
-	return
-ITOF_MAIN:
-
-	! %f1 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	! %g5 <= FLOAT_MAGICI
-
-	setL %g5, FLOAT_MAGICF
-	fldi %f1, %g5, 0
-	setL %g5, FLOAT_MAGICFHX
-	ldi %g4, %g5, 0
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	jlt %g5, %g3, ITOF_BIG
-	jeq %g5, %g3, ITOF_BIG
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	return
-ITOF_BIG:
-	setL %g4, FLOAT_ZERO
-	fldi %f2, %g4, 0
-ITOF_LOOP:
-	sub %g3, %g3, %g5
-	fadd %f2, %f2, %f1
-	jlt %g5, %g3, ITOF_LOOP
-	jeq %g5, %g3, ITOF_LOOP
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	fadd %f0, %f0, %f2
-	return
-
-! * int_of_float
-min_caml_int_of_float:
-	! %f1 <= 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f1, %g3, 0
-	fjlt %f1, %f0, FTOI_MAIN			! if (0.0 <= %f0) goto FTOI_MAIN
-	fjeq %f1, %f0, FTOI_MAIN
-	fneg %f0, %f0
-	call FTOI_MAIN
-	sub %g3, %g0, %g3
-	return
-FTOI_MAIN:
-	call min_caml_floor
-	! %f2 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	setL %g4, FLOAT_MAGICF
-	fldi %f2, %g4, 0
-	setL %g4, FLOAT_MAGICFHX
-	ldi %g4, %g4, 0
-	fjlt %f2, %f0, FTOI_BIG		! if (MAGICF <= %f0) goto FTOI_BIG
-	fjeq %f2, %f0, FTOI_BIG
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g3, %g1, 0
-	sub %g3, %g3, %g4
-	return
-FTOI_BIG:
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	mov %g3, %g0
-FTOI_LOOP:
-	fsub %f0, %f0, %f2
-	add %g3, %g3, %g5
-	fjlt %f2, %f0, FTOI_LOOP
-	fjeq %f2, %f0, FTOI_LOOP
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g5, %g1, 0
-	sub %g5, %g5, %g4
-	add %g3, %g5, %g3
-	return
-	
-! * truncate
-min_caml_truncate:
-	jmp min_caml_int_of_float
-
-
-!#####################################################################
-!
-! 		↑　ここまで lib_asm.s
-!
-!#####################################################################
-min_caml_start:
-	mov	%g31, %g1
-	subi	%g1, %g1, 48
-	addi	%g28, %g0, 1
-	addi	%g29, %g0, -1
-	setL %g27, l.967
-	fldi	%f16, %g27, 0
-	setL %g27, l.997
-	fldi	%f17, %g27, 0
-	setL %g27, l.992
-	fldi	%f18, %g27, 0
-	setL %g27, l.987
-	fldi	%f19, %g27, 0
-	setL %g27, l.982
-	fldi	%f20, %g27, 0
-	setL %g27, l.974
-	fldi	%f21, %g27, 0
-	setL %g27, l.965
-	fldi	%f22, %g27, 0
-	setL %g27, l.1027
-	fldi	%f23, %g27, 0
-	setL %g27, l.1022
-	fldi	%f24, %g27, 0
-	setL %g27, l.1017
-	fldi	%f25, %g27, 0
-	setL %g27, l.1012
-	fldi	%f26, %g27, 0
-	setL %g27, l.1007
-	fldi	%f27, %g27, 0
-	setL %g27, l.1002
-	fldi	%f28, %g27, 0
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 4
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 16
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 1
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 20
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 24
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 28
-	fmov	%f0, %f16
-	call	min_caml_create_float_array
-	ldi	%g2, %g31, 44
-	addi	%g6, %g0, 2
-	addi	%g8, %g0, 3
-	subi	%g4, %g31, 28
-	call	make.502
-	addi	%g1, %g1, 4
-	mov	%g15, %g3
-	sti	%g15, %g31, 32
-	addi	%g6, %g0, 3
-	addi	%g8, %g0, 2
-	subi	%g4, %g31, 28
-	sti	%g15, %g1, 0
-	subi	%g1, %g1, 8
-	call	make.502
-	addi	%g1, %g1, 8
-	mov	%g7, %g3
-	sti	%g7, %g31, 36
-	addi	%g6, %g0, 2
-	addi	%g8, %g0, 2
-	subi	%g4, %g31, 28
-	sti	%g7, %g1, 4
-	subi	%g1, %g1, 12
-	call	make.502
-	addi	%g1, %g1, 12
-	mov	%g14, %g3
-	sti	%g14, %g31, 40
-	ldi	%g15, %g1, 0
-	ldi	%g3, %g15, 0
-	fsti	%f21, %g3, 0
-	ldi	%g3, %g15, 0
-	fsti	%f22, %g3, -4
-	ldi	%g3, %g15, 0
-	fsti	%f20, %g3, -8
-	ldi	%g3, %g15, -4
-	fsti	%f19, %g3, 0
-	ldi	%g3, %g15, -4
-	fsti	%f18, %g3, -4
-	ldi	%g3, %g15, -4
-	fsti	%f17, %g3, -8
-	ldi	%g7, %g1, 4
-	ldi	%g3, %g7, 0
-	fsti	%f28, %g3, 0
-	ldi	%g3, %g7, 0
-	fsti	%f27, %g3, -4
-	ldi	%g3, %g7, -4
-	fsti	%f26, %g3, 0
-	ldi	%g3, %g7, -4
-	fsti	%f25, %g3, -4
-	ldi	%g3, %g7, -8
-	fsti	%f24, %g3, 0
-	ldi	%g3, %g7, -8
-	fsti	%f23, %g3, -4
-	addi	%g3, %g0, 2
-	addi	%g12, %g0, 3
-	addi	%g13, %g0, 2
-	mov	%g6, %g14
-	mov	%g8, %g15
-	subi	%g1, %g1, 12
-	call	mul.490
-	ldi	%g3, %g14, 0
-	fldi	%f0, %g3, 0
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.467
-	addi	%g1, %g1, 12
-	sti	%g3, %g1, 12
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 12
-	ldi	%g3, %g14, 0
-	fldi	%f0, %g3, -4
-	subi	%g1, %g1, 12
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.467
-	addi	%g1, %g1, 12
-	sti	%g3, %g1, 12
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 12
-	ldi	%g3, %g14, -4
-	fldi	%f0, %g3, 0
-	subi	%g1, %g1, 12
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.467
-	addi	%g1, %g1, 12
-	sti	%g3, %g1, 12
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 12
-	ldi	%g3, %g14, -4
-	fldi	%f0, %g3, -4
-	subi	%g1, %g1, 12
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.467
-	addi	%g1, %g1, 12
-	sti	%g3, %g1, 12
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 12
-	halt
-
-!==============================
-! args = [%g8, %g7, %g5, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %f15]
-! ret type = Int
-!================================
-div_binary_search.462:
-	add	%g3, %g5, %g6
-	srli	%g4, %g3, 1
-	mul	%g9, %g4, %g7
-	sub	%g3, %g6, %g5
-	jlt	%g28, %g3, jle_else.1095
-	mov	%g3, %g5
-	return
-jle_else.1095:
-	jlt	%g9, %g8, jle_else.1096
-	jne	%g9, %g8, jeq_else.1097
-	mov	%g3, %g4
-	return
-jeq_else.1097:
-	mov	%g6, %g4
-	jmp	div_binary_search.462
-jle_else.1096:
-	mov	%g5, %g4
-	jmp	div_binary_search.462
-
-!==============================
-! args = [%g8]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f15, %dummy]
-! ret type = Unit
-!================================
-print_int.467:
-	jlt	%g8, %g0, jge_else.1098
-	mvhi	%g7, 1525
-	mvlo	%g7, 57600
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 3
-	sti	%g8, %g1, 0
-	subi	%g1, %g1, 8
-	call	div_binary_search.462
-	addi	%g1, %g1, 8
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 0
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.1099
-	addi	%g10, %g0, 0
-	jmp	jle_cont.1100
-jle_else.1099:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.1100:
-	mvhi	%g7, 152
-	mvlo	%g7, 38528
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 4
-	subi	%g1, %g1, 12
-	call	div_binary_search.462
-	addi	%g1, %g1, 12
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 4
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.1101
-	jne	%g10, %g0, jeq_else.1103
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.1104
-jeq_else.1103:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.1104:
-	jmp	jle_cont.1102
-jle_else.1101:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.1102:
-	mvhi	%g7, 15
-	mvlo	%g7, 16960
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 8
-	subi	%g1, %g1, 16
-	call	div_binary_search.462
-	addi	%g1, %g1, 16
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 8
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.1105
-	jne	%g11, %g0, jeq_else.1107
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.1108
-jeq_else.1107:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.1108:
-	jmp	jle_cont.1106
-jle_else.1105:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.1106:
-	mvhi	%g7, 1
-	mvlo	%g7, 34464
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 12
-	subi	%g1, %g1, 20
-	call	div_binary_search.462
-	addi	%g1, %g1, 20
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 12
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.1109
-	jne	%g10, %g0, jeq_else.1111
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.1112
-jeq_else.1111:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.1112:
-	jmp	jle_cont.1110
-jle_else.1109:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.1110:
-	addi	%g7, %g0, 10000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 16
-	subi	%g1, %g1, 24
-	call	div_binary_search.462
-	addi	%g1, %g1, 24
-	addi	%g4, %g0, 10000
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 16
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.1113
-	jne	%g11, %g0, jeq_else.1115
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.1116
-jeq_else.1115:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.1116:
-	jmp	jle_cont.1114
-jle_else.1113:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.1114:
-	addi	%g7, %g0, 1000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 20
-	subi	%g1, %g1, 28
-	call	div_binary_search.462
-	addi	%g1, %g1, 28
-	muli	%g4, %g3, 1000
-	ldi	%g8, %g1, 20
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.1117
-	jne	%g10, %g0, jeq_else.1119
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.1120
-jeq_else.1119:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.1120:
-	jmp	jle_cont.1118
-jle_else.1117:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.1118:
-	addi	%g7, %g0, 100
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 24
-	subi	%g1, %g1, 32
-	call	div_binary_search.462
-	addi	%g1, %g1, 32
-	muli	%g4, %g3, 100
-	ldi	%g8, %g1, 24
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.1121
-	jne	%g11, %g0, jeq_else.1123
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.1124
-jeq_else.1123:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.1124:
-	jmp	jle_cont.1122
-jle_else.1121:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.1122:
-	addi	%g7, %g0, 10
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 28
-	subi	%g1, %g1, 36
-	call	div_binary_search.462
-	addi	%g1, %g1, 36
-	muli	%g4, %g3, 10
-	ldi	%g8, %g1, 28
-	sub	%g4, %g8, %g4
-	jlt	%g0, %g3, jle_else.1125
-	jne	%g10, %g0, jeq_else.1127
-	addi	%g5, %g0, 0
-	jmp	jeq_cont.1128
-jeq_else.1127:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jeq_cont.1128:
-	jmp	jle_cont.1126
-jle_else.1125:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jle_cont.1126:
-	addi	%g3, %g0, 48
-	add	%g3, %g3, %g4
-	output	%g3
-	return
-jge_else.1098:
-	addi	%g3, %g0, 45
-	output	%g3
-	sub	%g8, %g0, %g8
-	jmp	print_int.467
-
-!==============================
-! args = [%g5, %g3, %g4, %g8, %g7, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f2, %f15, %f1, %f0, %dummy]
-! ret type = Unit
-!================================
-loop3.469:
-	jlt	%g3, %g0, jge_else.1129
-	slli	%g9, %g5, 2
-	ld	%g11, %g6, %g9
-	slli	%g9, %g4, 2
-	fld	%f2, %g11, %g9
-	slli	%g9, %g5, 2
-	ld	%g10, %g8, %g9
-	slli	%g9, %g3, 2
-	fld	%f1, %g10, %g9
-	slli	%g9, %g3, 2
-	ld	%g10, %g7, %g9
-	slli	%g9, %g4, 2
-	fld	%f0, %g10, %g9
-	fmul	%f0, %f1, %f0
-	fadd	%f0, %f2, %f0
-	slli	%g9, %g4, 2
-	fst	%f0, %g11, %g9
-	subi	%g3, %g3, 1
-	jmp	loop3.469
-jge_else.1129:
-	return
-
-!==============================
-! args = [%g5, %g12, %g4, %g8, %g7, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g12, %g11, %g10, %f2, %f15, %f1, %f0, %dummy]
-! ret type = Unit
-!================================
-loop2.476:
-	jlt	%g4, %g0, jge_else.1131
-	subi	%g3, %g12, 1
-	sti	%g6, %g1, 0
-	sti	%g7, %g1, 4
-	sti	%g8, %g1, 8
-	sti	%g5, %g1, 12
-	sti	%g4, %g1, 16
-	subi	%g1, %g1, 24
-	call	loop3.469
-	addi	%g1, %g1, 24
-	ldi	%g4, %g1, 16
-	subi	%g4, %g4, 1
-	ldi	%g5, %g1, 12
-	ldi	%g8, %g1, 8
-	ldi	%g7, %g1, 4
-	ldi	%g6, %g1, 0
-	jmp	loop2.476
-jge_else.1131:
-	return
-
-!==============================
-! args = [%g5, %g12, %g13, %g8, %g7, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g13, %g12, %g11, %g10, %f2, %f15, %f1, %f0, %dummy]
-! ret type = Unit
-!================================
-loop1.483:
-	jlt	%g5, %g0, jge_else.1133
-	subi	%g4, %g13, 1
-	sti	%g6, %g1, 0
-	sti	%g7, %g1, 4
-	sti	%g8, %g1, 8
-	sti	%g12, %g1, 12
-	sti	%g5, %g1, 16
-	subi	%g1, %g1, 24
-	call	loop2.476
-	addi	%g1, %g1, 24
-	ldi	%g5, %g1, 16
-	subi	%g5, %g5, 1
-	ldi	%g12, %g1, 12
-	ldi	%g8, %g1, 8
-	ldi	%g7, %g1, 4
-	ldi	%g6, %g1, 0
-	jmp	loop1.483
-jge_else.1133:
-	return
-
-!==============================
-! args = [%g3, %g12, %g13, %g8, %g7, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g13, %g12, %g11, %g10, %f2, %f15, %f1, %f0, %dummy]
-! ret type = Unit
-!================================
-mul.490:
-	subi	%g5, %g3, 1
-	jmp	loop1.483
-
-!==============================
-! args = [%g5, %g3, %g6]
-! fargs = []
-! use_regs = [%g7, %g6, %g5, %g4, %g3, %g27, %f16, %f15, %f0, %dummy]
-! ret type = Unit
-!================================
-init.498:
-	jlt	%g5, %g0, jge_else.1135
-	sti	%g3, %g1, 0
-	fmov	%f0, %f16
-	subi	%g1, %g1, 8
-	call	min_caml_create_float_array
-	addi	%g1, %g1, 8
-	mov	%g4, %g3
-	slli	%g7, %g5, 2
-	st	%g4, %g6, %g7
-	subi	%g5, %g5, 1
-	ldi	%g3, %g1, 0
-	jmp	init.498
-jge_else.1135:
-	return
-
-!==============================
-! args = [%g6, %g8, %g4]
-! fargs = []
-! use_regs = [%g8, %g7, %g6, %g5, %g4, %g3, %g27, %f16, %f15, %f0, %dummy]
-! ret type = Array(Array(Float))
-!================================
-make.502:
-	mov	%g3, %g6
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	addi	%g1, %g1, 4
-	subi	%g5, %g6, 1
-	sti	%g3, %g1, 0
-	mov	%g6, %g3
-	mov	%g3, %g8
-	subi	%g1, %g1, 8
-	call	init.498
-	addi	%g1, %g1, 8
-	ldi	%g3, %g1, 0
-	return
diff --git a/ocore/tmpl/as/matmul.s b/ocore/tmpl/as/matmul.s
deleted file mode 100644
index 0acf4bb..0000000
--- a/ocore/tmpl/as/matmul.s
+++ /dev/null
@@ -1,912 +0,0 @@
-.init_heap_size	608
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-l.1006:	! 12.000000
-	.long	0x41400000
-l.1001:	! 11.000000
-	.long	0x41300000
-l.996:	! 10.000000
-	.long	0x41200000
-l.991:	! 9.000000
-	.long	0x41100000
-l.986:	! 8.000000
-	.long	0x41000000
-l.981:	! 7.000000
-	.long	0x40e00000
-l.976:	! 6.000000
-	.long	0x40c00000
-l.971:	! 5.000000
-	.long	0x40a00000
-l.966:	! 4.000000
-	.long	0x40800000
-l.961:	! 3.000000
-	.long	0x40400000
-l.953:	! 1.000000
-	.long	0x3f800000
-l.949:	! 0.000000
-	.long	0x0
-l.947:	! 2.000000
-	.long	0x40000000
-	jmp	min_caml_start
-
-!#####################################################################
-!
-! 		↓　ここから lib_asm.s
-!
-!#####################################################################
-
-! * create_array
-min_caml_create_array:
-	slli %g3, %g3, 2
-	add %g5, %g3, %g2
-	mov %g3, %g2
-CREATE_ARRAY_LOOP:
-	jlt %g5, %g2, CREATE_ARRAY_END
-	jeq %g5, %g2, CREATE_ARRAY_END
-	sti %g4, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_ARRAY_LOOP
-CREATE_ARRAY_END:
-	return
-
-! * create_float_array
-min_caml_create_float_array:
-	slli %g3, %g3, 2
-	add %g4, %g3, %g2
-	mov %g3, %g2
-CREATE_FLOAT_ARRAY_LOOP:
-	jlt %g4, %g2, CREATE_FLOAT_ARRAY_END
-	jeq %g4, %g2, CREATE_FLOAT_ARRAY_END
-	fsti %f0, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_FLOAT_ARRAY_LOOP
-CREATE_FLOAT_ARRAY_END:
-	return
-
-! * floor		%f0 + MAGICF - MAGICF
-min_caml_floor:
-	fmov %f1, %f0
-	! %f4 = 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f4, %g3, 0
-	fjlt %f4, %f0, FLOOR_POSITIVE	! if (%f4 <= %f0) goto FLOOR_PISITIVE
-	fjeq %f4, %f0, FLOOR_POSITIVE
-FLOOR_NEGATIVE:
-	fneg %f0, %f0
-	setL %g3, FLOAT_MAGICF
-	! %f2 = FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fjeq %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fneg %f0, %f0
-	return
-FLOOR_NEGATIVE_MAIN:
-	fadd %f0, %f0, %f2
-	fsub %f0, %f0, %f2
-	fneg %f1, %f1
-	fjlt %f1, %f0, FLOOR_RET2
-	fjeq %f1, %f0, FLOOR_RET2
-	fadd %f0, %f0, %f2
-	! %f3 = 1.0
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fadd %f0, %f0, %f3
-	fsub %f0, %f0, %f2
-	fneg %f0, %f0
-	return
-FLOOR_POSITIVE:
-	setL %g3, FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_POSITIVE_MAIN
-	fjeq %f0, %f2, FLOOR_POSITIVE_MAIN
-	return
-FLOOR_POSITIVE_MAIN:
-	fmov %f1, %f0
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fsub %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fjlt %f0, %f1, FLOOR_RET
-	fjeq %f0, %f1, FLOOR_RET
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fsub %f0, %f0, %f3
-FLOOR_RET:
-	return
-FLOOR_RET2:
-	fneg %f0, %f0
-	return
-	
-min_caml_ceil:
-	fneg %f0, %f0
-	call min_caml_floor
-	fneg %f0, %f0
-	return
-
-! * float_of_int
-min_caml_float_of_int:
-	jlt %g0, %g3, ITOF_MAIN		! if (%g0 <= %g3) goto ITOF_MAIN
-	jeq %g0, %g3, ITOF_MAIN
-	sub %g3, %g0, %g3
-	call ITOF_MAIN
-	fneg %f0, %f0
-	return
-ITOF_MAIN:
-
-	! %f1 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	! %g5 <= FLOAT_MAGICI
-
-	setL %g5, FLOAT_MAGICF
-	fldi %f1, %g5, 0
-	setL %g5, FLOAT_MAGICFHX
-	ldi %g4, %g5, 0
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	jlt %g5, %g3, ITOF_BIG
-	jeq %g5, %g3, ITOF_BIG
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	return
-ITOF_BIG:
-	setL %g4, FLOAT_ZERO
-	fldi %f2, %g4, 0
-ITOF_LOOP:
-	sub %g3, %g3, %g5
-	fadd %f2, %f2, %f1
-	jlt %g5, %g3, ITOF_LOOP
-	jeq %g5, %g3, ITOF_LOOP
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	fadd %f0, %f0, %f2
-	return
-
-! * int_of_float
-min_caml_int_of_float:
-	! %f1 <= 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f1, %g3, 0
-	fjlt %f1, %f0, FTOI_MAIN			! if (0.0 <= %f0) goto FTOI_MAIN
-	fjeq %f1, %f0, FTOI_MAIN
-	fneg %f0, %f0
-	call FTOI_MAIN
-	sub %g3, %g0, %g3
-	return
-FTOI_MAIN:
-	call min_caml_floor
-	! %f2 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	setL %g4, FLOAT_MAGICF
-	fldi %f2, %g4, 0
-	setL %g4, FLOAT_MAGICFHX
-	ldi %g4, %g4, 0
-	fjlt %f2, %f0, FTOI_BIG		! if (MAGICF <= %f0) goto FTOI_BIG
-	fjeq %f2, %f0, FTOI_BIG
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g3, %g1, 0
-	sub %g3, %g3, %g4
-	return
-FTOI_BIG:
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	mov %g3, %g0
-FTOI_LOOP:
-	fsub %f0, %f0, %f2
-	add %g3, %g3, %g5
-	fjlt %f2, %f0, FTOI_LOOP
-	fjeq %f2, %f0, FTOI_LOOP
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g5, %g1, 0
-	sub %g5, %g5, %g4
-	add %g3, %g5, %g3
-	return
-	
-! * truncate
-min_caml_truncate:
-	jmp min_caml_int_of_float
-
-
-!#####################################################################
-!
-! 		↑　ここまで lib_asm.s
-!
-!#####################################################################
-min_caml_start:
-	mov	%g31, %g1
-	subi	%g1, %g1, 48
-	addi	%g28, %g0, 1
-	addi	%g29, %g0, -1
-	setL %g27, l.949
-	fldi	%f16, %g27, 0
-	setL %g27, l.996
-	fldi	%f17, %g27, 0
-	setL %g27, l.991
-	fldi	%f18, %g27, 0
-	setL %g27, l.986
-	fldi	%f19, %g27, 0
-	setL %g27, l.981
-	fldi	%f20, %g27, 0
-	setL %g27, l.976
-	fldi	%f21, %g27, 0
-	setL %g27, l.971
-	fldi	%f22, %g27, 0
-	setL %g27, l.966
-	fldi	%f23, %g27, 0
-	setL %g27, l.961
-	fldi	%f24, %g27, 0
-	setL %g27, l.953
-	fldi	%f25, %g27, 0
-	setL %g27, l.947
-	fldi	%f26, %g27, 0
-	setL %g27, l.1006
-	fldi	%f27, %g27, 0
-	setL %g27, l.1001
-	fldi	%f28, %g27, 0
-	fmov	%f0, %f26
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 4
-	fsti	%f0, %g1, 0
-	subi	%g1, %g1, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 16
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 1
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 20
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 24
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 0
-	fmov	%f0, %f16
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 28
-	call	min_caml_create_float_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 2
-	addi	%g4, %g0, 3
-	call	make.477
-	addi	%g1, %g1, 8
-	sti	%g3, %g31, 32
-	addi	%g4, %g0, 3
-	addi	%g5, %g0, 2
-	sti	%g3, %g1, 4
-	mov	%g3, %g4
-	mov	%g4, %g5
-	subi	%g1, %g1, 12
-	call	make.477
-	addi	%g1, %g1, 12
-	sti	%g3, %g31, 36
-	addi	%g4, %g0, 2
-	addi	%g5, %g0, 2
-	sti	%g3, %g1, 8
-	mov	%g3, %g4
-	mov	%g4, %g5
-	subi	%g1, %g1, 16
-	call	make.477
-	addi	%g1, %g1, 16
-	mov	%g8, %g3
-	sti	%g8, %g31, 40
-	ldi	%g6, %g1, 4
-	ldi	%g3, %g6, 0
-	fmov	%f0, %f25
-	fsti	%f0, %g3, 0
-	ldi	%g3, %g6, 0
-	fldi	%f0, %g1, 0
-	fsti	%f0, %g3, -4
-	ldi	%g3, %g6, 0
-	fmov	%f0, %f24
-	fsti	%f0, %g3, -8
-	ldi	%g3, %g6, -4
-	fmov	%f0, %f23
-	fsti	%f0, %g3, 0
-	ldi	%g3, %g6, -4
-	fmov	%f0, %f22
-	fsti	%f0, %g3, -4
-	ldi	%g3, %g6, -4
-	fmov	%f0, %f21
-	fsti	%f0, %g3, -8
-	ldi	%g7, %g1, 8
-	ldi	%g3, %g7, 0
-	fmov	%f0, %f20
-	fsti	%f0, %g3, 0
-	ldi	%g3, %g7, 0
-	fmov	%f0, %f19
-	fsti	%f0, %g3, -4
-	ldi	%g3, %g7, -4
-	fmov	%f0, %f18
-	fsti	%f0, %g3, 0
-	ldi	%g3, %g7, -4
-	fmov	%f0, %f17
-	fsti	%f0, %g3, -4
-	ldi	%g3, %g7, -8
-	fmov	%f0, %f28
-	fsti	%f0, %g3, 0
-	ldi	%g3, %g7, -8
-	fmov	%f0, %f27
-	fsti	%f0, %g3, -4
-	addi	%g3, %g0, 2
-	addi	%g4, %g0, 3
-	addi	%g5, %g0, 2
-	sti	%g8, %g1, 12
-	subi	%g1, %g1, 20
-	call	mul.469
-	addi	%g1, %g1, 20
-	ldi	%g3, %g1, 12
-	ldi	%g4, %g3, 0
-	fldi	%f0, %g4, 0
-	subi	%g1, %g1, 20
-	call	min_caml_truncate
-	call	print_int.467
-	addi	%g1, %g1, 20
-	sti	%g3, %g1, 20
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 20
-	ldi	%g3, %g1, 12
-	ldi	%g4, %g3, 0
-	fldi	%f0, %g4, -4
-	subi	%g1, %g1, 20
-	call	min_caml_truncate
-	call	print_int.467
-	addi	%g1, %g1, 20
-	sti	%g3, %g1, 20
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 20
-	ldi	%g3, %g1, 12
-	ldi	%g4, %g3, -4
-	fldi	%f0, %g4, 0
-	subi	%g1, %g1, 20
-	call	min_caml_truncate
-	call	print_int.467
-	addi	%g1, %g1, 20
-	sti	%g3, %g1, 20
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 20
-	ldi	%g3, %g1, 12
-	ldi	%g3, %g3, -4
-	fldi	%f0, %g3, -4
-	subi	%g1, %g1, 20
-	call	min_caml_truncate
-	call	print_int.467
-	addi	%g1, %g1, 20
-	sti	%g3, %g1, 20
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 20
-	halt
-
-!==============================
-! args = [%g3, %g4, %g5, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Int
-!================================
-div_binary_search.462:
-	add	%g7, %g5, %g6
-	srli	%g7, %g7, 1
-	mul	%g8, %g7, %g4
-	sub	%g9, %g6, %g5
-	jlt	%g28, %g9, jle_else.1153
-	mov	%g3, %g5
-	return
-jle_else.1153:
-	jlt	%g8, %g3, jle_else.1154
-	jne	%g8, %g3, jeq_else.1155
-	mov	%g3, %g7
-	return
-jeq_else.1155:
-	mov	%g6, %g7
-	jmp	div_binary_search.462
-jle_else.1154:
-	mov	%g5, %g7
-	jmp	div_binary_search.462
-
-!==============================
-! args = [%g3]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Unit
-!================================
-print_int.467:
-	jlt	%g3, %g0, jge_else.1156
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 3
-	sti	%g3, %g1, 0
-	subi	%g1, %g1, 8
-	call	div_binary_search.462
-	addi	%g1, %g1, 8
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	mul	%g4, %g3, %g4
-	ldi	%g5, %g1, 0
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 4
-	jlt	%g0, %g3, jle_else.1157
-	addi	%g3, %g0, 0
-	jmp	jle_cont.1158
-jle_else.1157:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.1158:
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 4
-	sti	%g3, %g1, 8
-	mov	%g3, %g7
-	subi	%g1, %g1, 16
-	call	div_binary_search.462
-	addi	%g1, %g1, 16
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	mul	%g4, %g3, %g4
-	ldi	%g5, %g1, 4
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 12
-	jlt	%g0, %g3, jle_else.1159
-	ldi	%g5, %g1, 8
-	jne	%g5, %g0, jeq_else.1161
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.1162
-jeq_else.1161:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.1162:
-	jmp	jle_cont.1160
-jle_else.1159:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.1160:
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 12
-	sti	%g3, %g1, 16
-	mov	%g3, %g7
-	subi	%g1, %g1, 24
-	call	div_binary_search.462
-	addi	%g1, %g1, 24
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	mul	%g4, %g3, %g4
-	ldi	%g5, %g1, 12
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 20
-	jlt	%g0, %g3, jle_else.1163
-	ldi	%g5, %g1, 16
-	jne	%g5, %g0, jeq_else.1165
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.1166
-jeq_else.1165:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.1166:
-	jmp	jle_cont.1164
-jle_else.1163:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.1164:
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 20
-	sti	%g3, %g1, 24
-	mov	%g3, %g7
-	subi	%g1, %g1, 32
-	call	div_binary_search.462
-	addi	%g1, %g1, 32
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	mul	%g4, %g3, %g4
-	ldi	%g5, %g1, 20
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 28
-	jlt	%g0, %g3, jle_else.1167
-	ldi	%g5, %g1, 24
-	jne	%g5, %g0, jeq_else.1169
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.1170
-jeq_else.1169:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.1170:
-	jmp	jle_cont.1168
-jle_else.1167:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.1168:
-	addi	%g4, %g0, 10000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 28
-	sti	%g3, %g1, 32
-	mov	%g3, %g7
-	subi	%g1, %g1, 40
-	call	div_binary_search.462
-	addi	%g1, %g1, 40
-	addi	%g4, %g0, 10000
-	mul	%g4, %g3, %g4
-	ldi	%g5, %g1, 28
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 36
-	jlt	%g0, %g3, jle_else.1171
-	ldi	%g5, %g1, 32
-	jne	%g5, %g0, jeq_else.1173
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.1174
-jeq_else.1173:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.1174:
-	jmp	jle_cont.1172
-jle_else.1171:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.1172:
-	addi	%g4, %g0, 1000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 36
-	sti	%g3, %g1, 40
-	mov	%g3, %g7
-	subi	%g1, %g1, 48
-	call	div_binary_search.462
-	addi	%g1, %g1, 48
-	muli	%g4, %g3, 1000
-	ldi	%g5, %g1, 36
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 44
-	jlt	%g0, %g3, jle_else.1175
-	ldi	%g5, %g1, 40
-	jne	%g5, %g0, jeq_else.1177
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.1178
-jeq_else.1177:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.1178:
-	jmp	jle_cont.1176
-jle_else.1175:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.1176:
-	addi	%g4, %g0, 100
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 44
-	sti	%g3, %g1, 48
-	mov	%g3, %g7
-	subi	%g1, %g1, 56
-	call	div_binary_search.462
-	addi	%g1, %g1, 56
-	muli	%g4, %g3, 100
-	ldi	%g5, %g1, 44
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 52
-	jlt	%g0, %g3, jle_else.1179
-	ldi	%g5, %g1, 48
-	jne	%g5, %g0, jeq_else.1181
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.1182
-jeq_else.1181:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.1182:
-	jmp	jle_cont.1180
-jle_else.1179:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.1180:
-	addi	%g4, %g0, 10
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 52
-	sti	%g3, %g1, 56
-	mov	%g3, %g7
-	subi	%g1, %g1, 64
-	call	div_binary_search.462
-	addi	%g1, %g1, 64
-	muli	%g4, %g3, 10
-	ldi	%g5, %g1, 52
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 60
-	jlt	%g0, %g3, jle_else.1183
-	ldi	%g5, %g1, 56
-	jne	%g5, %g0, jeq_else.1185
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.1186
-jeq_else.1185:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.1186:
-	jmp	jle_cont.1184
-jle_else.1183:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.1184:
-	addi	%g3, %g0, 48
-	ldi	%g4, %g1, 60
-	add	%g3, %g3, %g4
-	output	%g3
-	return
-jge_else.1156:
-	addi	%g4, %g0, 45
-	sti	%g3, %g1, 0
-	output	%g4
-	ldi	%g3, %g1, 0
-	sub	%g3, %g0, %g3
-	jmp	print_int.467
-
-!==============================
-! args = [%g3]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Unit
-!================================
-loop3.608:
-	ldi	%g4, %g30, -20
-	ldi	%g5, %g30, -16
-	ldi	%g6, %g30, -12
-	ldi	%g7, %g30, -8
-	ldi	%g8, %g30, -4
-	jlt	%g3, %g0, jge_else.1187
-	slli	%g9, %g5, 2
-	ld	%g6, %g6, %g9
-	slli	%g9, %g4, 2
-	fld	%f0, %g6, %g9
-	slli	%g5, %g5, 2
-	ld	%g5, %g8, %g5
-	slli	%g8, %g3, 2
-	fld	%f1, %g5, %g8
-	slli	%g5, %g3, 2
-	ld	%g5, %g7, %g5
-	slli	%g7, %g4, 2
-	fld	%f2, %g5, %g7
-	fmul	%f1, %f1, %f2
-	fadd	%f0, %f0, %f1
-	slli	%g4, %g4, 2
-	fst	%f0, %g6, %g4
-	subi	%g3, %g3, 1
-	ldi	%g27, %g30, 0
-	b	%g27
-jge_else.1187:
-	return
-
-!==============================
-! args = [%g3]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Unit
-!================================
-loop2.601:
-	ldi	%g4, %g30, -20
-	ldi	%g5, %g30, -16
-	ldi	%g6, %g30, -12
-	ldi	%g7, %g30, -8
-	ldi	%g8, %g30, -4
-	jlt	%g3, %g0, jge_else.1189
-	mov	%g9, %g2
-	addi	%g2, %g2, 24
-	setL %g10, loop3.608
-	sti	%g10, %g9, 0
-	sti	%g3, %g9, -20
-	sti	%g5, %g9, -16
-	sti	%g6, %g9, -12
-	sti	%g7, %g9, -8
-	sti	%g8, %g9, -4
-	subi	%g4, %g4, 1
-	sti	%g30, %g1, 0
-	sti	%g3, %g1, 4
-	mov	%g3, %g4
-	mov	%g30, %g9
-	ldi	%g27, %g30, 0
-	subi	%g1, %g1, 12
-	callR	%g27
-	addi	%g1, %g1, 12
-	ldi	%g3, %g1, 4
-	subi	%g3, %g3, 1
-	ldi	%g30, %g1, 0
-	ldi	%g27, %g30, 0
-	b	%g27
-jge_else.1189:
-	return
-
-!==============================
-! args = [%g3]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Unit
-!================================
-loop1.597:
-	ldi	%g4, %g30, -20
-	ldi	%g5, %g30, -16
-	ldi	%g6, %g30, -12
-	ldi	%g7, %g30, -8
-	ldi	%g8, %g30, -4
-	jlt	%g3, %g0, jge_else.1191
-	mov	%g9, %g2
-	addi	%g2, %g2, 24
-	setL %g10, loop2.601
-	sti	%g10, %g9, 0
-	sti	%g5, %g9, -20
-	sti	%g3, %g9, -16
-	sti	%g6, %g9, -12
-	sti	%g7, %g9, -8
-	sti	%g8, %g9, -4
-	subi	%g4, %g4, 1
-	sti	%g30, %g1, 0
-	sti	%g3, %g1, 4
-	mov	%g3, %g4
-	mov	%g30, %g9
-	ldi	%g27, %g30, 0
-	subi	%g1, %g1, 12
-	callR	%g27
-	addi	%g1, %g1, 12
-	ldi	%g3, %g1, 4
-	subi	%g3, %g3, 1
-	ldi	%g30, %g1, 0
-	ldi	%g27, %g30, 0
-	b	%g27
-jge_else.1191:
-	return
-
-!==============================
-! args = [%g3, %g4, %g5, %g6, %g7, %g8]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Unit
-!================================
-mul.469:
-	mov	%g30, %g2
-	addi	%g2, %g2, 24
-	setL %g9, loop1.597
-	sti	%g9, %g30, 0
-	sti	%g5, %g30, -20
-	sti	%g4, %g30, -16
-	sti	%g8, %g30, -12
-	sti	%g7, %g30, -8
-	sti	%g6, %g30, -4
-	subi	%g3, %g3, 1
-	ldi	%g27, %g30, 0
-	b	%g27
-
-!==============================
-! args = [%g3]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Unit
-!================================
-init.585:
-	ldi	%g4, %g30, -8
-	ldi	%g5, %g30, -4
-	jlt	%g3, %g0, jge_else.1193
-	fmov	%f0, %f16
-	sti	%g30, %g1, 0
-	sti	%g5, %g1, 4
-	sti	%g3, %g1, 8
-	mov	%g3, %g4
-	subi	%g1, %g1, 16
-	call	min_caml_create_float_array
-	addi	%g1, %g1, 16
-	ldi	%g4, %g1, 8
-	slli	%g5, %g4, 2
-	ldi	%g6, %g1, 4
-	st	%g3, %g6, %g5
-	subi	%g3, %g4, 1
-	ldi	%g30, %g1, 0
-	ldi	%g27, %g30, 0
-	b	%g27
-jge_else.1193:
-	return
-
-!==============================
-! args = [%g3, %g4]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Array(Array(Float))
-!================================
-make.477:
-	subi	%g5, %g31, 28
-	sti	%g3, %g1, 0
-	sti	%g4, %g1, 4
-	mov	%g4, %g5
-	subi	%g1, %g1, 12
-	call	min_caml_create_array
-	addi	%g1, %g1, 12
-	mov	%g30, %g2
-	addi	%g2, %g2, 12
-	setL %g4, init.585
-	sti	%g4, %g30, 0
-	ldi	%g4, %g1, 4
-	sti	%g4, %g30, -8
-	sti	%g3, %g30, -4
-	ldi	%g4, %g1, 0
-	subi	%g4, %g4, 1
-	sti	%g3, %g1, 8
-	mov	%g3, %g4
-	ldi	%g27, %g30, 0
-	subi	%g1, %g1, 16
-	callR	%g27
-	addi	%g1, %g1, 16
-	ldi	%g3, %g1, 8
-	return
diff --git a/ocore/tmpl/as/min-rt.s b/ocore/tmpl/as/min-rt.s
index 8f29d38..7dde3a0 100644
--- a/ocore/tmpl/as/min-rt.s
+++ b/ocore/tmpl/as/min-rt.s
@@ -11,115 +11,115 @@ FLOAT_MAGICF:	! 8388608.0
 	.long 0x4b000000
 FLOAT_MAGICFHX:	! 1258291200
 	.long 0x4b000000
-l.45841:	! 150.000000
+l.38551:	! 150.000000
 	.long	0x43160000
-l.45837:	! -150.000000
+l.38547:	! -150.000000
 	.long	0xc3160000
-l.45389:	! -2.000000
+l.38099:	! -2.000000
 	.long	0xc0000000
-l.45367:	! 0.003906
+l.38077:	! 0.003906
 	.long	0x3b800000
-l.45323:	! 20.000000
+l.38033:	! 20.000000
 	.long	0x41a00000
-l.45321:	! 0.050000
+l.38031:	! 0.050000
 	.long	0x3d4cccc4
-l.45301:	! 0.250000
+l.38011:	! 0.250000
 	.long	0x3e800000
-l.45282:	! 10.000000
+l.37992:	! 10.000000
 	.long	0x41200000
-l.45271:	! 0.300000
+l.37981:	! 0.300000
 	.long	0x3e999999
-l.45267:	! 0.150000
+l.37977:	! 0.150000
 	.long	0x3e199999
-l.45232:	! 3.141593
+l.37942:	! 3.141593
 	.long	0x40490fda
-l.45230:	! 30.000000
+l.37940:	! 30.000000
 	.long	0x41f00000
-l.45228:	! -1.570796
+l.37938:	! -1.570796
 	.long	0xbfc90fda
-l.45223:	! 4.000000
+l.37933:	! 4.000000
 	.long	0x40800000
-l.45219:	! 16.000000
+l.37929:	! 16.000000
 	.long	0x41800000
-l.45217:	! 11.000000
+l.37927:	! 11.000000
 	.long	0x41300000
-l.45215:	! 25.000000
+l.37925:	! 25.000000
 	.long	0x41c80000
-l.45213:	! 13.000000
+l.37923:	! 13.000000
 	.long	0x41500000
-l.45211:	! 36.000000
+l.37921:	! 36.000000
 	.long	0x42100000
-l.45208:	! 49.000000
+l.37918:	! 49.000000
 	.long	0x42440000
-l.45206:	! 17.000000
+l.37916:	! 17.000000
 	.long	0x41880000
-l.45204:	! 64.000000
+l.37914:	! 64.000000
 	.long	0x42800000
-l.45202:	! 19.000000
+l.37912:	! 19.000000
 	.long	0x41980000
-l.45200:	! 81.000000
+l.37910:	! 81.000000
 	.long	0x42a20000
-l.45198:	! 21.000000
+l.37908:	! 21.000000
 	.long	0x41a80000
-l.45196:	! 100.000000
+l.37906:	! 100.000000
 	.long	0x42c80000
-l.45194:	! 23.000000
+l.37904:	! 23.000000
 	.long	0x41b80000
-l.45192:	! 121.000000
+l.37902:	! 121.000000
 	.long	0x42f20000
-l.45188:	! 15.000000
+l.37898:	! 15.000000
 	.long	0x41700000
-l.45186:	! 0.000100
+l.37896:	! 0.000100
 	.long	0x38d1b70f
-l.45016:	! 100000000.000000
+l.37726:	! 100000000.000000
 	.long	0x4cbebc20
-l.44281:	! -0.100000
+l.36991:	! -0.100000
 	.long	0xbdccccc4
-l.44095:	! 0.010000
+l.36805:	! 0.010000
 	.long	0x3c23d70a
-l.44093:	! -0.200000
+l.36803:	! -0.200000
 	.long	0xbe4cccc4
-l.43536:	! -1.000000
+l.36354:	! -1.000000
 	.long	0xbf800000
-l.42726:	! 0.100000
+l.36040:	! 0.100000
 	.long	0x3dccccc4
-l.42724:	! 0.900000
+l.36038:	! 0.900000
 	.long	0x3f66665e
-l.42722:	! 0.200000
+l.36036:	! 0.200000
 	.long	0x3e4cccc4
-l.42548:	! -200.000000
+l.35972:	! -200.000000
 	.long	0xc3480000
-l.42545:	! 200.000000
+l.35969:	! 200.000000
 	.long	0x43480000
-l.42517:	! 3.000000
+l.35967:	! 3.000000
 	.long	0x40400000
-l.42515:	! 5.000000
+l.35965:	! 5.000000
 	.long	0x40a00000
-l.42513:	! 9.000000
+l.35963:	! 9.000000
 	.long	0x41100000
-l.42511:	! 7.000000
+l.35961:	! 7.000000
 	.long	0x40e00000
-l.42509:	! 1.000000
+l.35959:	! 1.000000
 	.long	0x3f800000
-l.42507:	! 0.017453
+l.35957:	! 0.017453
 	.long	0x3c8efa2d
-l.42298:	! 128.000000
+l.35852:	! 128.000000
 	.long	0x43000000
-l.42275:	! 1000000000.000000
+l.35829:	! 1000000000.000000
 	.long	0x4e6e6b28
-l.42271:	! 255.000000
+l.35825:	! 255.000000
 	.long	0x437f0000
-l.42257:	! 0.000000
+l.35811:	! 0.000000
 	.long	0x0
-l.42255:	! 1.570796
+l.35809:	! 1.570796
 	.long	0x3fc90fda
-l.42253:	! 0.500000
+l.35807:	! 0.500000
 	.long	0x3f000000
-l.42251:	! 6.283185
+l.35805:	! 6.283185
 	.long	0x40c90fda
-l.42249:	! 2.000000
+l.35803:	! 2.000000
 	.long	0x40000000
-l.42247:	! 3.141593
+l.35801:	! 3.141593
 	.long	0x40490fda
 	jmp	min_caml_start
 
@@ -306,7 +306,31 @@ FTOI_LOOP:
 ! * truncate
 min_caml_truncate:
 	jmp min_caml_int_of_float
+	
+min_caml_read_int:
+	addi %g3, %g0, 0
+	! 24 - 31
+	input %g4
+	add %g3, %g3, %g4
+	slli %g3, %g3, 8
+	! 16 - 23
+	input %g4
+	add %g3, %g3, %g4
+	slli %g3, %g3, 8
+	! 8 - 15
+	input %g4
+	add %g3, %g3, %g4
+	slli %g3, %g3, 8
+	! 0 - 7
+	input %g4
+	add %g3, %g3, %g4
+	return
 
+min_caml_read_float:
+	call min_caml_read_int
+	sti %g3, %g1, 0
+	fldi %f0, %g1, 0
+	return
 
 !#####################################################################
 !
@@ -315,95 +339,95 @@ min_caml_truncate:
 !#####################################################################
 min_caml_start:
 	mov	%g31, %g1
-	subi	%g1, %g1, 2376
+	subi	%g1, %g1, 2368
 	addi	%g28, %g0, 1
 	addi	%g29, %g0, -1
-	setL %g27, l.42257
+	setL %g27, l.35811
 	fldi	%f16, %g27, 0
-	setL %g27, l.42509
+	setL %g27, l.35959
 	fldi	%f17, %g27, 0
-	setL %g27, l.45841
+	setL %g27, l.38551
 	fldi	%f18, %g27, 0
-	setL %g27, l.45837
+	setL %g27, l.38547
 	fldi	%f19, %g27, 0
-	setL %g27, l.43536
+	setL %g27, l.36354
 	fldi	%f20, %g27, 0
-	setL %g27, l.42253
+	setL %g27, l.35807
 	fldi	%f21, %g27, 0
-	setL %g27, l.42255
+	setL %g27, l.35809
 	fldi	%f22, %g27, 0
-	setL %g27, l.42517
+	setL %g27, l.35967
 	fldi	%f23, %g27, 0
-	setL %g27, l.42515
+	setL %g27, l.35965
 	fldi	%f24, %g27, 0
-	setL %g27, l.42513
+	setL %g27, l.35963
 	fldi	%f25, %g27, 0
-	setL %g27, l.42511
+	setL %g27, l.35961
 	fldi	%f26, %g27, 0
-	setL %g27, l.42271
+	setL %g27, l.35825
 	fldi	%f27, %g27, 0
-	setL %g27, l.45188
+	setL %g27, l.37898
 	fldi	%f28, %g27, 0
-	setL %g27, l.42251
+	setL %g27, l.35805
 	fldi	%f29, %g27, 0
-	setL %g27, l.45232
+	setL %g27, l.37942
 	fldi	%f30, %g27, 0
-	setL %g27, l.45228
+	setL %g27, l.37938
 	fldi	%f31, %g27, 0
-	setL %g3, l.42247
-	fldi	%f5, %g3, 0
-	setL %g3, l.42249
+	setL %g3, l.35801
+	fldi	%f4, %g3, 0
+	setL %g3, l.35803
 	fldi	%f10, %g3, 0
 	addi	%g3, %g0, 1
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 4
 	subi	%g1, %g1, 4
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 1
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 8
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 1
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 12
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 1
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 16
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 1
 	addi	%g4, %g0, 1
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 20
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 1
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 24
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 1
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 28
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 32
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
 	mov	%g4, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g6, %g0, 60
 	addi	%g10, %g0, 0
 	addi	%g9, %g0, 0
@@ -423,243 +447,243 @@ min_caml_start:
 	sti	%g8, %g3, -8
 	sti	%g9, %g3, -4
 	sti	%g10, %g3, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 272
 	mov	%g4, %g3
 	mov	%g3, %g6
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 284
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 296
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 308
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 1
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 312
 	fmov	%f0, %f27
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g6, %g0, 50
 	addi	%g3, %g0, 1
 	addi	%g4, %g0, -1
 	call	min_caml_create_array
 	mov	%g4, %g3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 512
 	mov	%g3, %g6
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g6, %g0, 1
 	addi	%g3, %g0, 1
 	ldi	%g4, %g31, 512
 	call	min_caml_create_array
 	mov	%g4, %g3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 516
 	mov	%g3, %g6
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 1
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 520
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 1
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 524
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 1
-	setL %g4, l.42275
+	setL %g4, l.35829
 	fldi	%f0, %g4, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 528
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 540
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 1
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 544
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 556
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 568
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 580
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 592
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 2
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 600
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 2
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 608
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 1
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 612
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 624
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 636
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 648
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 660
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 672
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 684
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 688
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
 	mov	%g7, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 692
 	subi	%g4, %g31, 688
 	call	min_caml_create_array
 	mov	%g4, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g6, %g0, 0
 	mov	%g3, %g2
 	addi	%g2, %g2, 8
 	sti	%g4, %g3, -4
 	sti	%g7, %g3, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 696
 	mov	%g4, %g3
 	mov	%g3, %g6
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 5
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 716
 	subi	%g4, %g31, 696
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 720
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 732
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
 	mov	%g6, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 60
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 972
 	subi	%g4, %g31, 720
 	call	min_caml_create_array
 	mov	%g4, %g3
-	ldi	%g2, %g31, 2372
-	sti	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 980
 	mov	%g3, %g2
 	addi	%g2, %g2, 8
 	sti	%g4, %g3, -4
 	sti	%g6, %g3, 0
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 984
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
 	mov	%g6, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 988
 	subi	%g4, %g31, 984
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
-	sti	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 996
 	mov	%g4, %g2
 	addi	%g2, %g2, 8
 	sti	%g3, %g4, -4
 	sti	%g6, %g4, 0
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g6, %g0, 180
 	addi	%g5, %g0, 0
 	mov	%g3, %g2
@@ -667,18 +691,18 @@ min_caml_start:
 	fsti	%f16, %g3, -8
 	sti	%g4, %g3, -4
 	sti	%g5, %g3, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1716
 	mov	%g4, %g3
 	mov	%g3, %g6
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 1
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1720
 	call	min_caml_create_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 128
 	addi	%g4, %g0, 128
 	sti	%g3, %g31, 600
@@ -687,32 +711,32 @@ min_caml_start:
 	sti	%g4, %g31, 608
 	addi	%g4, %g0, 64
 	sti	%g4, %g31, 604
-	setL %g4, l.42298
+	setL %g4, l.35852
 	fldi	%f3, %g4, 0
 	call	min_caml_float_of_int
 	fdiv	%f0, %f3, %f0
 	fsti	%f0, %g31, 612
 	ldi	%g12, %g31, 600
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1732
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
 	mov	%g11, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1744
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 5
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1764
 	subi	%g4, %g31, 1744
 	call	min_caml_create_array
 	mov	%g10, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
@@ -731,31 +755,31 @@ min_caml_start:
 	sti	%g3, %g31, 1748
 	addi	%g3, %g0, 5
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1784
 	call	min_caml_create_array
 	mov	%g9, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 5
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1804
 	call	min_caml_create_array
 	mov	%g8, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1816
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 5
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1836
 	subi	%g4, %g31, 1816
 	call	min_caml_create_array
 	mov	%g7, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
@@ -773,18 +797,18 @@ min_caml_start:
 	call	min_caml_create_float_array
 	sti	%g3, %g31, 1820
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1848
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 5
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1868
 	subi	%g4, %g31, 1848
 	call	min_caml_create_array
 	mov	%g6, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
@@ -803,24 +827,24 @@ min_caml_start:
 	sti	%g3, %g31, 1852
 	addi	%g3, %g0, 1
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1872
 	call	min_caml_create_array
 	mov	%g13, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1884
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 5
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1904
 	subi	%g4, %g31, 1884
 	call	min_caml_create_array
 	mov	%g5, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
@@ -854,30 +878,30 @@ min_caml_start:
 	sti	%g10, %g31, 1908
 	ldi	%g3, %g31, 600
 	subi	%g9, %g3, 2
-	call	init_line_elements.2985
-	mov	%g18, %g3
-	sti	%g18, %g31, 1912
+	call	init_line_elements.3002
+	mov	%g17, %g3
+	sti	%g17, %g31, 1912
 	ldi	%g12, %g31, 600
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1924
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
 	mov	%g11, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1936
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 5
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1956
 	subi	%g4, %g31, 1936
 	call	min_caml_create_array
 	mov	%g10, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
@@ -896,31 +920,31 @@ min_caml_start:
 	sti	%g3, %g31, 1940
 	addi	%g3, %g0, 5
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1976
 	call	min_caml_create_array
 	mov	%g9, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 5
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 1996
 	call	min_caml_create_array
 	mov	%g8, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2008
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 5
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2028
 	subi	%g4, %g31, 2008
 	call	min_caml_create_array
 	mov	%g7, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
@@ -938,18 +962,18 @@ min_caml_start:
 	call	min_caml_create_float_array
 	sti	%g3, %g31, 2012
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2040
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 5
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2060
 	subi	%g4, %g31, 2040
 	call	min_caml_create_array
 	mov	%g6, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
@@ -968,24 +992,24 @@ min_caml_start:
 	sti	%g3, %g31, 2044
 	addi	%g3, %g0, 1
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2064
 	call	min_caml_create_array
 	mov	%g13, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2076
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 5
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2096
 	subi	%g4, %g31, 2076
 	call	min_caml_create_array
 	mov	%g5, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
@@ -1019,30 +1043,30 @@ min_caml_start:
 	sti	%g10, %g31, 2100
 	ldi	%g3, %g31, 600
 	subi	%g9, %g3, 2
-	call	init_line_elements.2985
+	call	init_line_elements.3002
 	mov	%g16, %g3
 	sti	%g16, %g31, 2104
 	ldi	%g12, %g31, 600
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2116
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
 	mov	%g11, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2128
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 5
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2148
 	subi	%g4, %g31, 2128
 	call	min_caml_create_array
 	mov	%g10, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
@@ -1061,31 +1085,31 @@ min_caml_start:
 	sti	%g3, %g31, 2132
 	addi	%g3, %g0, 5
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2168
 	call	min_caml_create_array
 	mov	%g9, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 5
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2188
 	call	min_caml_create_array
 	mov	%g8, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2200
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 5
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2220
 	subi	%g4, %g31, 2200
 	call	min_caml_create_array
 	mov	%g7, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
@@ -1103,18 +1127,18 @@ min_caml_start:
 	call	min_caml_create_float_array
 	sti	%g3, %g31, 2204
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2232
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 5
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2252
 	subi	%g4, %g31, 2232
 	call	min_caml_create_array
 	mov	%g6, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
@@ -1133,24 +1157,24 @@ min_caml_start:
 	sti	%g3, %g31, 2236
 	addi	%g3, %g0, 1
 	addi	%g4, %g0, 0
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2256
 	call	min_caml_create_array
 	mov	%g13, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2268
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 5
-	sti	%g2, %g31, 2372
+	sti	%g2, %g31, 2364
 	subi	%g2, %g31, 2288
 	subi	%g4, %g31, 2268
 	call	min_caml_create_array
 	mov	%g5, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
@@ -1184,608 +1208,164 @@ min_caml_start:
 	sti	%g10, %g31, 2292
 	ldi	%g3, %g31, 600
 	subi	%g9, %g3, 2
-	call	init_line_elements.2985
-	addi	%g1, %g1, 4
-	mov	%g17, %g3
-	sti	%g17, %g31, 2296
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.49182
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.49184
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49185
-jle_else.49184:
-	addi	%g3, %g0, 1
-jle_cont.49185:
-	jmp	jle_cont.49183
-jle_else.49182:
-	addi	%g3, %g0, 1
-jle_cont.49183:
-	jne	%g3, %g0, jeq_else.49186
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.49188
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.49189
-jeq_else.49188:
-jeq_cont.49189:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49187
-jeq_else.49186:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.49187:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.49190
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.49192
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.49194
-	addi	%g4, %g0, 0
-	jmp	jle_cont.49195
-jle_else.49194:
-	addi	%g4, %g0, 1
-jle_cont.49195:
-	jmp	jle_cont.49193
-jle_else.49192:
-	addi	%g4, %g0, 1
-jle_cont.49193:
-	jne	%g4, %g0, jeq_else.49196
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49197
-jeq_else.49196:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.49197:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f4, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f4, %f0
-	jmp	jeq_cont.49191
-jeq_else.49190:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.49191:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.49198
-	fmov	%f1, %f0
-	jmp	jeq_cont.49199
-jeq_else.49198:
-	fneg	%f1, %f0
-jeq_cont.49199:
-	fsti	%f1, %g31, 284
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.49200
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.49202
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49203
-jle_else.49202:
-	addi	%g3, %g0, 1
-jle_cont.49203:
-	jmp	jle_cont.49201
-jle_else.49200:
-	addi	%g3, %g0, 1
-jle_cont.49201:
-	jne	%g3, %g0, jeq_else.49204
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.49206
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.49207
-jeq_else.49206:
-jeq_cont.49207:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49205
-jeq_else.49204:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.49205:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.49208
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.49210
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.49212
-	addi	%g4, %g0, 0
-	jmp	jle_cont.49213
-jle_else.49212:
-	addi	%g4, %g0, 1
-jle_cont.49213:
-	jmp	jle_cont.49211
-jle_else.49210:
-	addi	%g4, %g0, 1
-jle_cont.49211:
-	jne	%g4, %g0, jeq_else.49214
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49215
-jeq_else.49214:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.49215:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f4, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f4, %f0
-	jmp	jeq_cont.49209
-jeq_else.49208:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.49209:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.49216
-	fmov	%f1, %f0
-	jmp	jeq_cont.49217
-jeq_else.49216:
-	fneg	%f1, %f0
-jeq_cont.49217:
-	fsti	%f1, %g31, 280
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.49218
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.49220
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49221
-jle_else.49220:
-	addi	%g3, %g0, 1
-jle_cont.49221:
-	jmp	jle_cont.49219
-jle_else.49218:
-	addi	%g3, %g0, 1
-jle_cont.49219:
-	jne	%g3, %g0, jeq_else.49222
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.49224
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.49225
-jeq_else.49224:
-jeq_cont.49225:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49223
-jeq_else.49222:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.49223:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.49226
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.49228
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.49230
-	addi	%g4, %g0, 0
-	jmp	jle_cont.49231
-jle_else.49230:
-	addi	%g4, %g0, 1
-jle_cont.49231:
-	jmp	jle_cont.49229
-jle_else.49228:
-	addi	%g4, %g0, 1
-jle_cont.49229:
-	jne	%g4, %g0, jeq_else.49232
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49233
-jeq_else.49232:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.49233:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f4, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f4, %f0
-	jmp	jeq_cont.49227
-jeq_else.49226:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.49227:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.49234
-	fmov	%f1, %f0
-	jmp	jeq_cont.49235
-jeq_else.49234:
-	fneg	%f1, %f0
-jeq_cont.49235:
-	fsti	%f1, %g31, 276
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.49236
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.49238
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49239
-jle_else.49238:
-	addi	%g3, %g0, 1
-jle_cont.49239:
-	jmp	jle_cont.49237
-jle_else.49236:
-	addi	%g3, %g0, 1
-jle_cont.49237:
-	jne	%g3, %g0, jeq_else.49240
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.49242
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.49243
-jeq_else.49242:
-jeq_cont.49243:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49241
-jeq_else.49240:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.49241:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.49244
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.49246
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.49248
-	addi	%g4, %g0, 0
-	jmp	jle_cont.49249
-jle_else.49248:
-	addi	%g4, %g0, 1
-jle_cont.49249:
-	jmp	jle_cont.49247
-jle_else.49246:
-	addi	%g4, %g0, 1
-jle_cont.49247:
-	jne	%g4, %g0, jeq_else.49250
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49251
-jeq_else.49250:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.49251:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f4, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f4, %f0
-	jmp	jeq_cont.49245
-jeq_else.49244:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
+	call	init_line_elements.3002
 	addi	%g1, %g1, 4
-jeq_cont.49245:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.49252
-	fmov	%f1, %f0
-	jmp	jeq_cont.49253
-jeq_else.49252:
-	fneg	%f1, %f0
-jeq_cont.49253:
-	setL %g3, l.42507
-	fldi	%f8, %g3, 0
-	fmul	%f3, %f1, %f8
+	mov	%g15, %g3
+	sti	%g15, %g31, 2296
+	sti	%g17, %g1, 0
+	sti	%g15, %g1, 4
+	sti	%g16, %g1, 8
+	fsti	%f10, %g1, 12
+	fsti	%f4, %g1, 16
+	subi	%g1, %g1, 24
+	call	min_caml_read_float
+	fsti	%f0, %g31, 284
+	call	min_caml_read_float
+	fsti	%f0, %g31, 280
+	call	min_caml_read_float
+	fsti	%f0, %g31, 276
+	call	min_caml_read_float
+	addi	%g1, %g1, 24
+	setL %g3, l.35957
+	fldi	%f7, %g3, 0
+	fmul	%f3, %f0, %f7
 	fsub	%f2, %f22, %f3
-	fjlt	%f2, %f16, fjge_else.49254
+	fjlt	%f2, %f16, fjge_else.42042
 	fmov	%f1, %f2
-	jmp	fjge_cont.49255
-fjge_else.49254:
+	jmp	fjge_cont.42043
+fjge_else.42042:
 	fneg	%f1, %f2
-fjge_cont.49255:
-	fjlt	%f29, %f1, fjge_else.49256
-	fjlt	%f1, %f16, fjge_else.49258
+fjge_cont.42043:
+	fjlt	%f29, %f1, fjge_else.42044
+	fjlt	%f1, %f16, fjge_else.42046
 	fmov	%f0, %f1
-	jmp	fjge_cont.49259
-fjge_else.49258:
+	jmp	fjge_cont.42047
+fjge_else.42046:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49260
-	fjlt	%f1, %f16, fjge_else.49262
+	fjlt	%f29, %f1, fjge_else.42048
+	fjlt	%f1, %f16, fjge_else.42050
 	fmov	%f0, %f1
-	jmp	fjge_cont.49263
-fjge_else.49262:
+	jmp	fjge_cont.42051
+fjge_else.42050:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49264
-	fjlt	%f1, %f16, fjge_else.49266
+	fjlt	%f29, %f1, fjge_else.42052
+	fjlt	%f1, %f16, fjge_else.42054
 	fmov	%f0, %f1
-	jmp	fjge_cont.49267
-fjge_else.49266:
+	jmp	fjge_cont.42055
+fjge_else.42054:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49267:
-	jmp	fjge_cont.49265
-fjge_else.49264:
+	subi	%g1, %g1, 24
+	call	sin_sub.2518
+	addi	%g1, %g1, 24
+fjge_cont.42055:
+	jmp	fjge_cont.42053
+fjge_else.42052:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49265:
-fjge_cont.49263:
-	jmp	fjge_cont.49261
-fjge_else.49260:
+	subi	%g1, %g1, 24
+	call	sin_sub.2518
+	addi	%g1, %g1, 24
+fjge_cont.42053:
+fjge_cont.42051:
+	jmp	fjge_cont.42049
+fjge_else.42048:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49268
-	fjlt	%f1, %f16, fjge_else.49270
+	fjlt	%f29, %f1, fjge_else.42056
+	fjlt	%f1, %f16, fjge_else.42058
 	fmov	%f0, %f1
-	jmp	fjge_cont.49271
-fjge_else.49270:
+	jmp	fjge_cont.42059
+fjge_else.42058:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49271:
-	jmp	fjge_cont.49269
-fjge_else.49268:
+	subi	%g1, %g1, 24
+	call	sin_sub.2518
+	addi	%g1, %g1, 24
+fjge_cont.42059:
+	jmp	fjge_cont.42057
+fjge_else.42056:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49269:
-fjge_cont.49261:
-fjge_cont.49259:
-	jmp	fjge_cont.49257
-fjge_else.49256:
+	subi	%g1, %g1, 24
+	call	sin_sub.2518
+	addi	%g1, %g1, 24
+fjge_cont.42057:
+fjge_cont.42049:
+fjge_cont.42047:
+	jmp	fjge_cont.42045
+fjge_else.42044:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49272
-	fjlt	%f1, %f16, fjge_else.49274
+	fjlt	%f29, %f1, fjge_else.42060
+	fjlt	%f1, %f16, fjge_else.42062
 	fmov	%f0, %f1
-	jmp	fjge_cont.49275
-fjge_else.49274:
+	jmp	fjge_cont.42063
+fjge_else.42062:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49276
-	fjlt	%f1, %f16, fjge_else.49278
+	fjlt	%f29, %f1, fjge_else.42064
+	fjlt	%f1, %f16, fjge_else.42066
 	fmov	%f0, %f1
-	jmp	fjge_cont.49279
-fjge_else.49278:
+	jmp	fjge_cont.42067
+fjge_else.42066:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49279:
-	jmp	fjge_cont.49277
-fjge_else.49276:
+	subi	%g1, %g1, 24
+	call	sin_sub.2518
+	addi	%g1, %g1, 24
+fjge_cont.42067:
+	jmp	fjge_cont.42065
+fjge_else.42064:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49277:
-fjge_cont.49275:
-	jmp	fjge_cont.49273
-fjge_else.49272:
+	subi	%g1, %g1, 24
+	call	sin_sub.2518
+	addi	%g1, %g1, 24
+fjge_cont.42065:
+fjge_cont.42063:
+	jmp	fjge_cont.42061
+fjge_else.42060:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49280
-	fjlt	%f1, %f16, fjge_else.49282
+	fjlt	%f29, %f1, fjge_else.42068
+	fjlt	%f1, %f16, fjge_else.42070
 	fmov	%f0, %f1
-	jmp	fjge_cont.49283
-fjge_else.49282:
+	jmp	fjge_cont.42071
+fjge_else.42070:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49283:
-	jmp	fjge_cont.49281
-fjge_else.49280:
+	subi	%g1, %g1, 24
+	call	sin_sub.2518
+	addi	%g1, %g1, 24
+fjge_cont.42071:
+	jmp	fjge_cont.42069
+fjge_else.42068:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49281:
-fjge_cont.49273:
-fjge_cont.49257:
-	fjlt	%f5, %f0, fjge_else.49284
-	fjlt	%f16, %f2, fjge_else.49286
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.49287
-fjge_else.49286:
-	addi	%g3, %g0, 1
-fjge_cont.49287:
-	jmp	fjge_cont.49285
-fjge_else.49284:
-	fjlt	%f16, %f2, fjge_else.49288
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.49289
-fjge_else.49288:
-	addi	%g3, %g0, 0
-fjge_cont.49289:
-fjge_cont.49285:
-	fjlt	%f5, %f0, fjge_else.49290
+	subi	%g1, %g1, 24
+	call	sin_sub.2518
+	addi	%g1, %g1, 24
+fjge_cont.42069:
+fjge_cont.42061:
+fjge_cont.42045:
+	fldi	%f4, %g1, 16
+	fjlt	%f4, %f0, fjge_else.42072
+	fjlt	%f16, %f2, fjge_else.42074
+	addi	%g3, %g0, 0
+	jmp	fjge_cont.42075
+fjge_else.42074:
+	addi	%g3, %g0, 1
+fjge_cont.42075:
+	jmp	fjge_cont.42073
+fjge_else.42072:
+	fjlt	%f16, %f2, fjge_else.42076
+	addi	%g3, %g0, 1
+	jmp	fjge_cont.42077
+fjge_else.42076:
+	addi	%g3, %g0, 0
+fjge_cont.42077:
+fjge_cont.42073:
+	fjlt	%f4, %f0, fjge_else.42078
 	fmov	%f1, %f0
-	jmp	fjge_cont.49291
-fjge_else.49290:
+	jmp	fjge_cont.42079
+fjge_else.42078:
 	fsub	%f1, %f29, %f0
-fjge_cont.49291:
-	fjlt	%f22, %f1, fjge_else.49292
+fjge_cont.42079:
+	fjlt	%f22, %f1, fjge_else.42080
 	fmov	%f0, %f1
-	jmp	fjge_cont.49293
-fjge_else.49292:
-	fsub	%f0, %f5, %f1
-fjge_cont.49293:
+	jmp	fjge_cont.42081
+fjge_else.42080:
+	fsub	%f0, %f4, %f1
+fjge_cont.42081:
 	fmul	%f1, %f0, %f21
 	fmul	%f0, %f1, %f1
 	fdiv	%f2, %f0, %f25
@@ -1797,151 +1377,152 @@ fjge_cont.49293:
 	fdiv	%f0, %f0, %f2
 	fsub	%f0, %f17, %f0
 	fdiv	%f0, %f1, %f0
+	fldi	%f10, %g1, 12
 	fmul	%f1, %f10, %f0
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f17, %f0
 	fdiv	%f0, %f1, %f0
-	jne	%g3, %g0, jeq_else.49294
-	fneg	%f7, %f0
-	jmp	jeq_cont.49295
-jeq_else.49294:
-	fmov	%f7, %f0
-jeq_cont.49295:
-	fjlt	%f3, %f16, fjge_else.49296
+	jne	%g3, %g0, jeq_else.42082
+	fneg	%f6, %f0
+	jmp	jeq_cont.42083
+jeq_else.42082:
+	fmov	%f6, %f0
+jeq_cont.42083:
+	fjlt	%f3, %f16, fjge_else.42084
 	fmov	%f1, %f3
-	jmp	fjge_cont.49297
-fjge_else.49296:
+	jmp	fjge_cont.42085
+fjge_else.42084:
 	fneg	%f1, %f3
-fjge_cont.49297:
-	fjlt	%f29, %f1, fjge_else.49298
-	fjlt	%f1, %f16, fjge_else.49300
+fjge_cont.42085:
+	fjlt	%f29, %f1, fjge_else.42086
+	fjlt	%f1, %f16, fjge_else.42088
 	fmov	%f0, %f1
-	jmp	fjge_cont.49301
-fjge_else.49300:
+	jmp	fjge_cont.42089
+fjge_else.42088:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49302
-	fjlt	%f1, %f16, fjge_else.49304
+	fjlt	%f29, %f1, fjge_else.42090
+	fjlt	%f1, %f16, fjge_else.42092
 	fmov	%f0, %f1
-	jmp	fjge_cont.49305
-fjge_else.49304:
+	jmp	fjge_cont.42093
+fjge_else.42092:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49306
-	fjlt	%f1, %f16, fjge_else.49308
+	fjlt	%f29, %f1, fjge_else.42094
+	fjlt	%f1, %f16, fjge_else.42096
 	fmov	%f0, %f1
-	jmp	fjge_cont.49309
-fjge_else.49308:
+	jmp	fjge_cont.42097
+fjge_else.42096:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49309:
-	jmp	fjge_cont.49307
-fjge_else.49306:
+	subi	%g1, %g1, 24
+	call	sin_sub.2518
+	addi	%g1, %g1, 24
+fjge_cont.42097:
+	jmp	fjge_cont.42095
+fjge_else.42094:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49307:
-fjge_cont.49305:
-	jmp	fjge_cont.49303
-fjge_else.49302:
+	subi	%g1, %g1, 24
+	call	sin_sub.2518
+	addi	%g1, %g1, 24
+fjge_cont.42095:
+fjge_cont.42093:
+	jmp	fjge_cont.42091
+fjge_else.42090:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49310
-	fjlt	%f1, %f16, fjge_else.49312
+	fjlt	%f29, %f1, fjge_else.42098
+	fjlt	%f1, %f16, fjge_else.42100
 	fmov	%f0, %f1
-	jmp	fjge_cont.49313
-fjge_else.49312:
+	jmp	fjge_cont.42101
+fjge_else.42100:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49313:
-	jmp	fjge_cont.49311
-fjge_else.49310:
+	subi	%g1, %g1, 24
+	call	sin_sub.2518
+	addi	%g1, %g1, 24
+fjge_cont.42101:
+	jmp	fjge_cont.42099
+fjge_else.42098:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49311:
-fjge_cont.49303:
-fjge_cont.49301:
-	jmp	fjge_cont.49299
-fjge_else.49298:
+	subi	%g1, %g1, 24
+	call	sin_sub.2518
+	addi	%g1, %g1, 24
+fjge_cont.42099:
+fjge_cont.42091:
+fjge_cont.42089:
+	jmp	fjge_cont.42087
+fjge_else.42086:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49314
-	fjlt	%f1, %f16, fjge_else.49316
+	fjlt	%f29, %f1, fjge_else.42102
+	fjlt	%f1, %f16, fjge_else.42104
 	fmov	%f0, %f1
-	jmp	fjge_cont.49317
-fjge_else.49316:
+	jmp	fjge_cont.42105
+fjge_else.42104:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49318
-	fjlt	%f1, %f16, fjge_else.49320
+	fjlt	%f29, %f1, fjge_else.42106
+	fjlt	%f1, %f16, fjge_else.42108
 	fmov	%f0, %f1
-	jmp	fjge_cont.49321
-fjge_else.49320:
+	jmp	fjge_cont.42109
+fjge_else.42108:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49321:
-	jmp	fjge_cont.49319
-fjge_else.49318:
+	subi	%g1, %g1, 24
+	call	sin_sub.2518
+	addi	%g1, %g1, 24
+fjge_cont.42109:
+	jmp	fjge_cont.42107
+fjge_else.42106:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49319:
-fjge_cont.49317:
-	jmp	fjge_cont.49315
-fjge_else.49314:
+	subi	%g1, %g1, 24
+	call	sin_sub.2518
+	addi	%g1, %g1, 24
+fjge_cont.42107:
+fjge_cont.42105:
+	jmp	fjge_cont.42103
+fjge_else.42102:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49322
-	fjlt	%f1, %f16, fjge_else.49324
+	fjlt	%f29, %f1, fjge_else.42110
+	fjlt	%f1, %f16, fjge_else.42112
 	fmov	%f0, %f1
-	jmp	fjge_cont.49325
-fjge_else.49324:
+	jmp	fjge_cont.42113
+fjge_else.42112:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49325:
-	jmp	fjge_cont.49323
-fjge_else.49322:
+	subi	%g1, %g1, 24
+	call	sin_sub.2518
+	addi	%g1, %g1, 24
+fjge_cont.42113:
+	jmp	fjge_cont.42111
+fjge_else.42110:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49323:
-fjge_cont.49315:
-fjge_cont.49299:
-	fjlt	%f5, %f0, fjge_else.49326
-	fjlt	%f16, %f3, fjge_else.49328
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.49329
-fjge_else.49328:
-	addi	%g3, %g0, 1
-fjge_cont.49329:
-	jmp	fjge_cont.49327
-fjge_else.49326:
-	fjlt	%f16, %f3, fjge_else.49330
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.49331
-fjge_else.49330:
-	addi	%g3, %g0, 0
-fjge_cont.49331:
-fjge_cont.49327:
-	fjlt	%f5, %f0, fjge_else.49332
+	subi	%g1, %g1, 24
+	call	sin_sub.2518
+	addi	%g1, %g1, 24
+fjge_cont.42111:
+fjge_cont.42103:
+fjge_cont.42087:
+	fjlt	%f4, %f0, fjge_else.42114
+	fjlt	%f16, %f3, fjge_else.42116
+	addi	%g3, %g0, 0
+	jmp	fjge_cont.42117
+fjge_else.42116:
+	addi	%g3, %g0, 1
+fjge_cont.42117:
+	jmp	fjge_cont.42115
+fjge_else.42114:
+	fjlt	%f16, %f3, fjge_else.42118
+	addi	%g3, %g0, 1
+	jmp	fjge_cont.42119
+fjge_else.42118:
+	addi	%g3, %g0, 0
+fjge_cont.42119:
+fjge_cont.42115:
+	fjlt	%f4, %f0, fjge_else.42120
 	fmov	%f1, %f0
-	jmp	fjge_cont.49333
-fjge_else.49332:
+	jmp	fjge_cont.42121
+fjge_else.42120:
 	fsub	%f1, %f29, %f0
-fjge_cont.49333:
-	fjlt	%f22, %f1, fjge_else.49334
+fjge_cont.42121:
+	fjlt	%f22, %f1, fjge_else.42122
 	fmov	%f0, %f1
-	jmp	fjge_cont.49335
-fjge_else.49334:
-	fsub	%f0, %f5, %f1
-fjge_cont.49335:
+	jmp	fjge_cont.42123
+fjge_else.42122:
+	fsub	%f0, %f4, %f1
+fjge_cont.42123:
 	fmul	%f1, %f0, %f21
 	fmul	%f0, %f1, %f1
 	fdiv	%f2, %f0, %f25
@@ -1957,263 +1538,157 @@ fjge_cont.49335:
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f17, %f0
 	fdiv	%f0, %f1, %f0
-	jne	%g3, %g0, jeq_else.49336
-	fneg	%f6, %f0
-	jmp	jeq_cont.49337
-jeq_else.49336:
-	fmov	%f6, %f0
-jeq_cont.49337:
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.49338
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.49340
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49341
-jle_else.49340:
-	addi	%g3, %g0, 1
-jle_cont.49341:
-	jmp	jle_cont.49339
-jle_else.49338:
-	addi	%g3, %g0, 1
-jle_cont.49339:
-	jne	%g3, %g0, jeq_else.49342
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.49344
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.49345
-jeq_else.49344:
-jeq_cont.49345:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49343
-jeq_else.49342:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.49343:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.49346
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.49348
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.49350
-	addi	%g4, %g0, 0
-	jmp	jle_cont.49351
-jle_else.49350:
-	addi	%g4, %g0, 1
-jle_cont.49351:
-	jmp	jle_cont.49349
-jle_else.49348:
-	addi	%g4, %g0, 1
-jle_cont.49349:
-	jne	%g4, %g0, jeq_else.49352
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49353
-jeq_else.49352:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.49353:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f4, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f4, %f0
-	jmp	jeq_cont.49347
-jeq_else.49346:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.49347:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.49354
-	fmov	%f1, %f0
-	jmp	jeq_cont.49355
-jeq_else.49354:
-	fneg	%f1, %f0
-jeq_cont.49355:
-	fmul	%f3, %f1, %f8
+	jne	%g3, %g0, jeq_else.42124
+	fneg	%f5, %f0
+	jmp	jeq_cont.42125
+jeq_else.42124:
+	fmov	%f5, %f0
+jeq_cont.42125:
+	fsti	%f5, %g1, 20
+	fsti	%f6, %g1, 24
+	fsti	%f7, %g1, 28
+	subi	%g1, %g1, 36
+	call	min_caml_read_float
+	addi	%g1, %g1, 36
+	fldi	%f7, %g1, 28
+	fmul	%f3, %f0, %f7
 	fsub	%f2, %f22, %f3
-	fjlt	%f2, %f16, fjge_else.49356
+	fjlt	%f2, %f16, fjge_else.42126
 	fmov	%f1, %f2
-	jmp	fjge_cont.49357
-fjge_else.49356:
+	jmp	fjge_cont.42127
+fjge_else.42126:
 	fneg	%f1, %f2
-fjge_cont.49357:
-	fjlt	%f29, %f1, fjge_else.49358
-	fjlt	%f1, %f16, fjge_else.49360
+fjge_cont.42127:
+	fjlt	%f29, %f1, fjge_else.42128
+	fjlt	%f1, %f16, fjge_else.42130
 	fmov	%f0, %f1
-	jmp	fjge_cont.49361
-fjge_else.49360:
+	jmp	fjge_cont.42131
+fjge_else.42130:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49362
-	fjlt	%f1, %f16, fjge_else.49364
+	fjlt	%f29, %f1, fjge_else.42132
+	fjlt	%f1, %f16, fjge_else.42134
 	fmov	%f0, %f1
-	jmp	fjge_cont.49365
-fjge_else.49364:
+	jmp	fjge_cont.42135
+fjge_else.42134:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49366
-	fjlt	%f1, %f16, fjge_else.49368
+	fjlt	%f29, %f1, fjge_else.42136
+	fjlt	%f1, %f16, fjge_else.42138
 	fmov	%f0, %f1
-	jmp	fjge_cont.49369
-fjge_else.49368:
+	jmp	fjge_cont.42139
+fjge_else.42138:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49369:
-	jmp	fjge_cont.49367
-fjge_else.49366:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42139:
+	jmp	fjge_cont.42137
+fjge_else.42136:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49367:
-fjge_cont.49365:
-	jmp	fjge_cont.49363
-fjge_else.49362:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42137:
+fjge_cont.42135:
+	jmp	fjge_cont.42133
+fjge_else.42132:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49370
-	fjlt	%f1, %f16, fjge_else.49372
+	fjlt	%f29, %f1, fjge_else.42140
+	fjlt	%f1, %f16, fjge_else.42142
 	fmov	%f0, %f1
-	jmp	fjge_cont.49373
-fjge_else.49372:
+	jmp	fjge_cont.42143
+fjge_else.42142:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49373:
-	jmp	fjge_cont.49371
-fjge_else.49370:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42143:
+	jmp	fjge_cont.42141
+fjge_else.42140:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49371:
-fjge_cont.49363:
-fjge_cont.49361:
-	jmp	fjge_cont.49359
-fjge_else.49358:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42141:
+fjge_cont.42133:
+fjge_cont.42131:
+	jmp	fjge_cont.42129
+fjge_else.42128:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49374
-	fjlt	%f1, %f16, fjge_else.49376
+	fjlt	%f29, %f1, fjge_else.42144
+	fjlt	%f1, %f16, fjge_else.42146
 	fmov	%f0, %f1
-	jmp	fjge_cont.49377
-fjge_else.49376:
+	jmp	fjge_cont.42147
+fjge_else.42146:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49378
-	fjlt	%f1, %f16, fjge_else.49380
+	fjlt	%f29, %f1, fjge_else.42148
+	fjlt	%f1, %f16, fjge_else.42150
 	fmov	%f0, %f1
-	jmp	fjge_cont.49381
-fjge_else.49380:
+	jmp	fjge_cont.42151
+fjge_else.42150:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49381:
-	jmp	fjge_cont.49379
-fjge_else.49378:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42151:
+	jmp	fjge_cont.42149
+fjge_else.42148:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49379:
-fjge_cont.49377:
-	jmp	fjge_cont.49375
-fjge_else.49374:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42149:
+fjge_cont.42147:
+	jmp	fjge_cont.42145
+fjge_else.42144:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49382
-	fjlt	%f1, %f16, fjge_else.49384
+	fjlt	%f29, %f1, fjge_else.42152
+	fjlt	%f1, %f16, fjge_else.42154
 	fmov	%f0, %f1
-	jmp	fjge_cont.49385
-fjge_else.49384:
+	jmp	fjge_cont.42155
+fjge_else.42154:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49385:
-	jmp	fjge_cont.49383
-fjge_else.49382:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42155:
+	jmp	fjge_cont.42153
+fjge_else.42152:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49383:
-fjge_cont.49375:
-fjge_cont.49359:
-	fjlt	%f5, %f0, fjge_else.49386
-	fjlt	%f16, %f2, fjge_else.49388
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.49389
-fjge_else.49388:
-	addi	%g3, %g0, 1
-fjge_cont.49389:
-	jmp	fjge_cont.49387
-fjge_else.49386:
-	fjlt	%f16, %f2, fjge_else.49390
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.49391
-fjge_else.49390:
-	addi	%g3, %g0, 0
-fjge_cont.49391:
-fjge_cont.49387:
-	fjlt	%f5, %f0, fjge_else.49392
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42153:
+fjge_cont.42145:
+fjge_cont.42129:
+	fldi	%f4, %g1, 16
+	fjlt	%f4, %f0, fjge_else.42156
+	fjlt	%f16, %f2, fjge_else.42158
+	addi	%g3, %g0, 0
+	jmp	fjge_cont.42159
+fjge_else.42158:
+	addi	%g3, %g0, 1
+fjge_cont.42159:
+	jmp	fjge_cont.42157
+fjge_else.42156:
+	fjlt	%f16, %f2, fjge_else.42160
+	addi	%g3, %g0, 1
+	jmp	fjge_cont.42161
+fjge_else.42160:
+	addi	%g3, %g0, 0
+fjge_cont.42161:
+fjge_cont.42157:
+	fjlt	%f4, %f0, fjge_else.42162
 	fmov	%f1, %f0
-	jmp	fjge_cont.49393
-fjge_else.49392:
+	jmp	fjge_cont.42163
+fjge_else.42162:
 	fsub	%f1, %f29, %f0
-fjge_cont.49393:
-	fjlt	%f22, %f1, fjge_else.49394
+fjge_cont.42163:
+	fjlt	%f22, %f1, fjge_else.42164
 	fmov	%f0, %f1
-	jmp	fjge_cont.49395
-fjge_else.49394:
-	fsub	%f0, %f5, %f1
-fjge_cont.49395:
+	jmp	fjge_cont.42165
+fjge_else.42164:
+	fsub	%f0, %f4, %f1
+fjge_cont.42165:
 	fmul	%f1, %f0, %f21
 	fmul	%f0, %f1, %f1
 	fdiv	%f2, %f0, %f25
@@ -2225,151 +1700,152 @@ fjge_cont.49395:
 	fdiv	%f0, %f0, %f2
 	fsub	%f0, %f17, %f0
 	fdiv	%f0, %f1, %f0
+	fldi	%f10, %g1, 12
 	fmul	%f1, %f10, %f0
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f17, %f0
 	fdiv	%f0, %f1, %f0
-	jne	%g3, %g0, jeq_else.49396
+	jne	%g3, %g0, jeq_else.42166
 	fneg	%f2, %f0
-	jmp	jeq_cont.49397
-jeq_else.49396:
+	jmp	jeq_cont.42167
+jeq_else.42166:
 	fmov	%f2, %f0
-jeq_cont.49397:
-	fjlt	%f3, %f16, fjge_else.49398
+jeq_cont.42167:
+	fjlt	%f3, %f16, fjge_else.42168
 	fmov	%f1, %f3
-	jmp	fjge_cont.49399
-fjge_else.49398:
+	jmp	fjge_cont.42169
+fjge_else.42168:
 	fneg	%f1, %f3
-fjge_cont.49399:
-	fjlt	%f29, %f1, fjge_else.49400
-	fjlt	%f1, %f16, fjge_else.49402
+fjge_cont.42169:
+	fjlt	%f29, %f1, fjge_else.42170
+	fjlt	%f1, %f16, fjge_else.42172
 	fmov	%f0, %f1
-	jmp	fjge_cont.49403
-fjge_else.49402:
+	jmp	fjge_cont.42173
+fjge_else.42172:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49404
-	fjlt	%f1, %f16, fjge_else.49406
+	fjlt	%f29, %f1, fjge_else.42174
+	fjlt	%f1, %f16, fjge_else.42176
 	fmov	%f0, %f1
-	jmp	fjge_cont.49407
-fjge_else.49406:
+	jmp	fjge_cont.42177
+fjge_else.42176:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49408
-	fjlt	%f1, %f16, fjge_else.49410
+	fjlt	%f29, %f1, fjge_else.42178
+	fjlt	%f1, %f16, fjge_else.42180
 	fmov	%f0, %f1
-	jmp	fjge_cont.49411
-fjge_else.49410:
+	jmp	fjge_cont.42181
+fjge_else.42180:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49411:
-	jmp	fjge_cont.49409
-fjge_else.49408:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42181:
+	jmp	fjge_cont.42179
+fjge_else.42178:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49409:
-fjge_cont.49407:
-	jmp	fjge_cont.49405
-fjge_else.49404:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42179:
+fjge_cont.42177:
+	jmp	fjge_cont.42175
+fjge_else.42174:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49412
-	fjlt	%f1, %f16, fjge_else.49414
+	fjlt	%f29, %f1, fjge_else.42182
+	fjlt	%f1, %f16, fjge_else.42184
 	fmov	%f0, %f1
-	jmp	fjge_cont.49415
-fjge_else.49414:
+	jmp	fjge_cont.42185
+fjge_else.42184:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49415:
-	jmp	fjge_cont.49413
-fjge_else.49412:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42185:
+	jmp	fjge_cont.42183
+fjge_else.42182:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49413:
-fjge_cont.49405:
-fjge_cont.49403:
-	jmp	fjge_cont.49401
-fjge_else.49400:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42183:
+fjge_cont.42175:
+fjge_cont.42173:
+	jmp	fjge_cont.42171
+fjge_else.42170:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49416
-	fjlt	%f1, %f16, fjge_else.49418
+	fjlt	%f29, %f1, fjge_else.42186
+	fjlt	%f1, %f16, fjge_else.42188
 	fmov	%f0, %f1
-	jmp	fjge_cont.49419
-fjge_else.49418:
+	jmp	fjge_cont.42189
+fjge_else.42188:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49420
-	fjlt	%f1, %f16, fjge_else.49422
+	fjlt	%f29, %f1, fjge_else.42190
+	fjlt	%f1, %f16, fjge_else.42192
 	fmov	%f0, %f1
-	jmp	fjge_cont.49423
-fjge_else.49422:
+	jmp	fjge_cont.42193
+fjge_else.42192:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49423:
-	jmp	fjge_cont.49421
-fjge_else.49420:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42193:
+	jmp	fjge_cont.42191
+fjge_else.42190:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49421:
-fjge_cont.49419:
-	jmp	fjge_cont.49417
-fjge_else.49416:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42191:
+fjge_cont.42189:
+	jmp	fjge_cont.42187
+fjge_else.42186:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49424
-	fjlt	%f1, %f16, fjge_else.49426
+	fjlt	%f29, %f1, fjge_else.42194
+	fjlt	%f1, %f16, fjge_else.42196
 	fmov	%f0, %f1
-	jmp	fjge_cont.49427
-fjge_else.49426:
+	jmp	fjge_cont.42197
+fjge_else.42196:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49427:
-	jmp	fjge_cont.49425
-fjge_else.49424:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42197:
+	jmp	fjge_cont.42195
+fjge_else.42194:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49425:
-fjge_cont.49417:
-fjge_cont.49401:
-	fjlt	%f5, %f0, fjge_else.49428
-	fjlt	%f16, %f3, fjge_else.49430
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.49431
-fjge_else.49430:
-	addi	%g3, %g0, 1
-fjge_cont.49431:
-	jmp	fjge_cont.49429
-fjge_else.49428:
-	fjlt	%f16, %f3, fjge_else.49432
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.49433
-fjge_else.49432:
-	addi	%g3, %g0, 0
-fjge_cont.49433:
-fjge_cont.49429:
-	fjlt	%f5, %f0, fjge_else.49434
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42195:
+fjge_cont.42187:
+fjge_cont.42171:
+	fjlt	%f4, %f0, fjge_else.42198
+	fjlt	%f16, %f3, fjge_else.42200
+	addi	%g3, %g0, 0
+	jmp	fjge_cont.42201
+fjge_else.42200:
+	addi	%g3, %g0, 1
+fjge_cont.42201:
+	jmp	fjge_cont.42199
+fjge_else.42198:
+	fjlt	%f16, %f3, fjge_else.42202
+	addi	%g3, %g0, 1
+	jmp	fjge_cont.42203
+fjge_else.42202:
+	addi	%g3, %g0, 0
+fjge_cont.42203:
+fjge_cont.42199:
+	fjlt	%f4, %f0, fjge_else.42204
 	fmov	%f1, %f0
-	jmp	fjge_cont.49435
-fjge_else.49434:
+	jmp	fjge_cont.42205
+fjge_else.42204:
 	fsub	%f1, %f29, %f0
-fjge_cont.49435:
-	fjlt	%f22, %f1, fjge_else.49436
+fjge_cont.42205:
+	fjlt	%f22, %f1, fjge_else.42206
 	fmov	%f0, %f1
-	jmp	fjge_cont.49437
-fjge_else.49436:
-	fsub	%f0, %f5, %f1
-fjge_cont.49437:
+	jmp	fjge_cont.42207
+fjge_else.42206:
+	fsub	%f0, %f4, %f1
+fjge_cont.42207:
 	fmul	%f1, %f0, %f21
 	fmul	%f0, %f1, %f1
 	fdiv	%f3, %f0, %f25
@@ -2385,33 +1861,35 @@ fjge_cont.49437:
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f17, %f0
 	fdiv	%f1, %f1, %f0
-	jne	%g3, %g0, jeq_else.49438
+	jne	%g3, %g0, jeq_else.42208
 	fneg	%f0, %f1
-	jmp	jeq_cont.49439
-jeq_else.49438:
+	jmp	jeq_cont.42209
+jeq_else.42208:
 	fmov	%f0, %f1
-jeq_cont.49439:
-	fmul	%f3, %f7, %f0
-	setL %g3, l.42545
+jeq_cont.42209:
+	fldi	%f6, %g1, 24
+	fmul	%f3, %f6, %f0
+	setL %g3, l.35969
 	fldi	%f1, %g3, 0
 	fmul	%f3, %f3, %f1
 	fsti	%f3, %g31, 672
-	setL %g3, l.42548
+	setL %g3, l.35972
 	fldi	%f3, %g3, 0
-	fmul	%f3, %f6, %f3
+	fldi	%f5, %g1, 20
+	fmul	%f3, %f5, %f3
 	fsti	%f3, %g31, 668
-	fmul	%f3, %f7, %f2
+	fmul	%f3, %f6, %f2
 	fmul	%f1, %f3, %f1
 	fsti	%f1, %g31, 664
 	fsti	%f2, %g31, 648
 	fsti	%f16, %g31, 644
 	fneg	%f1, %f0
 	fsti	%f1, %g31, 640
-	fneg	%f1, %f6
+	fneg	%f1, %f5
 	fmul	%f0, %f1, %f0
 	fsti	%f0, %g31, 660
-	fneg	%f7, %f7
-	fsti	%f7, %g31, 656
+	fneg	%f6, %f6
+	fsti	%f6, %g31, 656
 	fmul	%f0, %f1, %f2
 	fsti	%f0, %g31, 652
 	fldi	%f1, %g31, 284
@@ -2426,574 +1904,316 @@ jeq_cont.49439:
 	fldi	%f0, %g31, 664
 	fsub	%f0, %f1, %f0
 	fsti	%f0, %g31, 288
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 8
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.49440
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.49442
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49443
-jle_else.49442:
-	addi	%g3, %g0, 1
-jle_cont.49443:
-	jmp	jle_cont.49441
-jle_else.49440:
-	addi	%g3, %g0, 1
-jle_cont.49441:
-	jne	%g3, %g0, jeq_else.49444
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.49446
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.49447
-jeq_else.49446:
-jeq_cont.49447:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49445
-jeq_else.49444:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-jeq_cont.49445:
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.49448
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.49450
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49451
-jle_else.49450:
-	addi	%g3, %g0, 1
-jle_cont.49451:
-	jmp	jle_cont.49449
-jle_else.49448:
-	addi	%g3, %g0, 1
-jle_cont.49449:
-	jne	%g3, %g0, jeq_else.49452
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.49454
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.49455
-jeq_else.49454:
-jeq_cont.49455:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49453
-jeq_else.49452:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.49453:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.49456
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.49458
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.49460
-	addi	%g4, %g0, 0
-	jmp	jle_cont.49461
-jle_else.49460:
-	addi	%g4, %g0, 1
-jle_cont.49461:
-	jmp	jle_cont.49459
-jle_else.49458:
-	addi	%g4, %g0, 1
-jle_cont.49459:
-	jne	%g4, %g0, jeq_else.49462
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49463
-jeq_else.49462:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.49463:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f4, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f4, %f0
-	jmp	jeq_cont.49457
-jeq_else.49456:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.49457:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.49464
-	fmov	%f1, %f0
-	jmp	jeq_cont.49465
-jeq_else.49464:
-	fneg	%f1, %f0
-jeq_cont.49465:
-	fmul	%f3, %f1, %f8
-	fjlt	%f3, %f16, fjge_else.49466
-	fmov	%f1, %f3
-	jmp	fjge_cont.49467
-fjge_else.49466:
-	fneg	%f1, %f3
-fjge_cont.49467:
-	fjlt	%f29, %f1, fjge_else.49468
-	fjlt	%f1, %f16, fjge_else.49470
+	subi	%g1, %g1, 36
+	call	min_caml_read_int
+	call	min_caml_read_float
+	addi	%g1, %g1, 36
+	fldi	%f7, %g1, 28
+	fmul	%f2, %f0, %f7
+	fjlt	%f2, %f16, fjge_else.42210
+	fmov	%f1, %f2
+	jmp	fjge_cont.42211
+fjge_else.42210:
+	fneg	%f1, %f2
+fjge_cont.42211:
+	fjlt	%f29, %f1, fjge_else.42212
+	fjlt	%f1, %f16, fjge_else.42214
 	fmov	%f0, %f1
-	jmp	fjge_cont.49471
-fjge_else.49470:
+	jmp	fjge_cont.42215
+fjge_else.42214:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49472
-	fjlt	%f1, %f16, fjge_else.49474
+	fjlt	%f29, %f1, fjge_else.42216
+	fjlt	%f1, %f16, fjge_else.42218
 	fmov	%f0, %f1
-	jmp	fjge_cont.49475
-fjge_else.49474:
+	jmp	fjge_cont.42219
+fjge_else.42218:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49476
-	fjlt	%f1, %f16, fjge_else.49478
+	fjlt	%f29, %f1, fjge_else.42220
+	fjlt	%f1, %f16, fjge_else.42222
 	fmov	%f0, %f1
-	jmp	fjge_cont.49479
-fjge_else.49478:
+	jmp	fjge_cont.42223
+fjge_else.42222:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49479:
-	jmp	fjge_cont.49477
-fjge_else.49476:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42223:
+	jmp	fjge_cont.42221
+fjge_else.42220:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49477:
-fjge_cont.49475:
-	jmp	fjge_cont.49473
-fjge_else.49472:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42221:
+fjge_cont.42219:
+	jmp	fjge_cont.42217
+fjge_else.42216:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49480
-	fjlt	%f1, %f16, fjge_else.49482
+	fjlt	%f29, %f1, fjge_else.42224
+	fjlt	%f1, %f16, fjge_else.42226
 	fmov	%f0, %f1
-	jmp	fjge_cont.49483
-fjge_else.49482:
+	jmp	fjge_cont.42227
+fjge_else.42226:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49483:
-	jmp	fjge_cont.49481
-fjge_else.49480:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42227:
+	jmp	fjge_cont.42225
+fjge_else.42224:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49481:
-fjge_cont.49473:
-fjge_cont.49471:
-	jmp	fjge_cont.49469
-fjge_else.49468:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42225:
+fjge_cont.42217:
+fjge_cont.42215:
+	jmp	fjge_cont.42213
+fjge_else.42212:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49484
-	fjlt	%f1, %f16, fjge_else.49486
+	fjlt	%f29, %f1, fjge_else.42228
+	fjlt	%f1, %f16, fjge_else.42230
 	fmov	%f0, %f1
-	jmp	fjge_cont.49487
-fjge_else.49486:
+	jmp	fjge_cont.42231
+fjge_else.42230:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49488
-	fjlt	%f1, %f16, fjge_else.49490
+	fjlt	%f29, %f1, fjge_else.42232
+	fjlt	%f1, %f16, fjge_else.42234
 	fmov	%f0, %f1
-	jmp	fjge_cont.49491
-fjge_else.49490:
+	jmp	fjge_cont.42235
+fjge_else.42234:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49491:
-	jmp	fjge_cont.49489
-fjge_else.49488:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42235:
+	jmp	fjge_cont.42233
+fjge_else.42232:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49489:
-fjge_cont.49487:
-	jmp	fjge_cont.49485
-fjge_else.49484:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42233:
+fjge_cont.42231:
+	jmp	fjge_cont.42229
+fjge_else.42228:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49492
-	fjlt	%f1, %f16, fjge_else.49494
+	fjlt	%f29, %f1, fjge_else.42236
+	fjlt	%f1, %f16, fjge_else.42238
 	fmov	%f0, %f1
-	jmp	fjge_cont.49495
-fjge_else.49494:
+	jmp	fjge_cont.42239
+fjge_else.42238:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49495:
-	jmp	fjge_cont.49493
-fjge_else.49492:
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42239:
+	jmp	fjge_cont.42237
+fjge_else.42236:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49493:
-fjge_cont.49485:
-fjge_cont.49469:
-	fjlt	%f5, %f0, fjge_else.49496
-	fjlt	%f16, %f3, fjge_else.49498
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.49499
-fjge_else.49498:
-	addi	%g3, %g0, 1
-fjge_cont.49499:
-	jmp	fjge_cont.49497
-fjge_else.49496:
-	fjlt	%f16, %f3, fjge_else.49500
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.49501
-fjge_else.49500:
-	addi	%g3, %g0, 0
-fjge_cont.49501:
-fjge_cont.49497:
-	fjlt	%f5, %f0, fjge_else.49502
+	subi	%g1, %g1, 36
+	call	sin_sub.2518
+	addi	%g1, %g1, 36
+fjge_cont.42237:
+fjge_cont.42229:
+fjge_cont.42213:
+	fldi	%f4, %g1, 16
+	fjlt	%f4, %f0, fjge_else.42240
+	fjlt	%f16, %f2, fjge_else.42242
+	addi	%g3, %g0, 0
+	jmp	fjge_cont.42243
+fjge_else.42242:
+	addi	%g3, %g0, 1
+fjge_cont.42243:
+	jmp	fjge_cont.42241
+fjge_else.42240:
+	fjlt	%f16, %f2, fjge_else.42244
+	addi	%g3, %g0, 1
+	jmp	fjge_cont.42245
+fjge_else.42244:
+	addi	%g3, %g0, 0
+fjge_cont.42245:
+fjge_cont.42241:
+	fjlt	%f4, %f0, fjge_else.42246
 	fmov	%f1, %f0
-	jmp	fjge_cont.49503
-fjge_else.49502:
+	jmp	fjge_cont.42247
+fjge_else.42246:
 	fsub	%f1, %f29, %f0
-fjge_cont.49503:
-	fjlt	%f22, %f1, fjge_else.49504
+fjge_cont.42247:
+	fjlt	%f22, %f1, fjge_else.42248
 	fmov	%f0, %f1
-	jmp	fjge_cont.49505
-fjge_else.49504:
-	fsub	%f0, %f5, %f1
-fjge_cont.49505:
+	jmp	fjge_cont.42249
+fjge_else.42248:
+	fsub	%f0, %f4, %f1
+fjge_cont.42249:
 	fmul	%f1, %f0, %f21
 	fmul	%f0, %f1, %f1
-	fdiv	%f2, %f0, %f25
-	fsub	%f2, %f26, %f2
-	fdiv	%f2, %f0, %f2
-	fsub	%f2, %f24, %f2
-	fdiv	%f2, %f0, %f2
-	fsub	%f2, %f23, %f2
-	fdiv	%f0, %f0, %f2
+	fdiv	%f3, %f0, %f25
+	fsub	%f3, %f26, %f3
+	fdiv	%f3, %f0, %f3
+	fsub	%f3, %f24, %f3
+	fdiv	%f3, %f0, %f3
+	fsub	%f3, %f23, %f3
+	fdiv	%f0, %f0, %f3
 	fsub	%f0, %f17, %f0
 	fdiv	%f0, %f1, %f0
+	fldi	%f10, %g1, 12
 	fmul	%f1, %f10, %f0
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f17, %f0
 	fdiv	%f1, %f1, %f0
-	jne	%g3, %g0, jeq_else.49506
+	jne	%g3, %g0, jeq_else.42250
 	fneg	%f0, %f1
-	jmp	jeq_cont.49507
-jeq_else.49506:
+	jmp	jeq_cont.42251
+jeq_else.42250:
 	fmov	%f0, %f1
-jeq_cont.49507:
+jeq_cont.42251:
 	fneg	%f0, %f0
 	fsti	%f0, %g31, 304
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.49508
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.49510
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49511
-jle_else.49510:
-	addi	%g3, %g0, 1
-jle_cont.49511:
-	jmp	jle_cont.49509
-jle_else.49508:
-	addi	%g3, %g0, 1
-jle_cont.49509:
-	jne	%g3, %g0, jeq_else.49512
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.49514
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.49515
-jeq_else.49514:
-jeq_cont.49515:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49513
-jeq_else.49512:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.49513:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.49516
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.49518
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.49520
-	addi	%g4, %g0, 0
-	jmp	jle_cont.49521
-jle_else.49520:
-	addi	%g4, %g0, 1
-jle_cont.49521:
-	jmp	jle_cont.49519
-jle_else.49518:
-	addi	%g4, %g0, 1
-jle_cont.49519:
-	jne	%g4, %g0, jeq_else.49522
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49523
-jeq_else.49522:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.49523:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f6, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f4, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f4, %f0
-	fadd	%f0, %f6, %f0
-	jmp	jeq_cont.49517
-jeq_else.49516:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.49517:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.49524
-	fmov	%f1, %f0
-	jmp	jeq_cont.49525
-jeq_else.49524:
-	fneg	%f1, %f0
-jeq_cont.49525:
-	fmul	%f4, %f1, %f8
-	fsub	%f2, %f22, %f3
-	fjlt	%f2, %f16, fjge_else.49526
+	fsti	%f2, %g1, 32
+	subi	%g1, %g1, 40
+	call	min_caml_read_float
+	addi	%g1, %g1, 40
+	fldi	%f7, %g1, 28
+	fmul	%f3, %f0, %f7
+	fldi	%f2, %g1, 32
+	fsub	%f2, %f22, %f2
+	fjlt	%f2, %f16, fjge_else.42252
 	fmov	%f1, %f2
-	jmp	fjge_cont.49527
-fjge_else.49526:
+	jmp	fjge_cont.42253
+fjge_else.42252:
 	fneg	%f1, %f2
-fjge_cont.49527:
-	fjlt	%f29, %f1, fjge_else.49528
-	fjlt	%f1, %f16, fjge_else.49530
+fjge_cont.42253:
+	fjlt	%f29, %f1, fjge_else.42254
+	fjlt	%f1, %f16, fjge_else.42256
 	fmov	%f0, %f1
-	jmp	fjge_cont.49531
-fjge_else.49530:
+	jmp	fjge_cont.42257
+fjge_else.42256:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49532
-	fjlt	%f1, %f16, fjge_else.49534
+	fjlt	%f29, %f1, fjge_else.42258
+	fjlt	%f1, %f16, fjge_else.42260
 	fmov	%f0, %f1
-	jmp	fjge_cont.49535
-fjge_else.49534:
+	jmp	fjge_cont.42261
+fjge_else.42260:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49536
-	fjlt	%f1, %f16, fjge_else.49538
+	fjlt	%f29, %f1, fjge_else.42262
+	fjlt	%f1, %f16, fjge_else.42264
 	fmov	%f0, %f1
-	jmp	fjge_cont.49539
-fjge_else.49538:
+	jmp	fjge_cont.42265
+fjge_else.42264:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49539:
-	jmp	fjge_cont.49537
-fjge_else.49536:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42265:
+	jmp	fjge_cont.42263
+fjge_else.42262:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49537:
-fjge_cont.49535:
-	jmp	fjge_cont.49533
-fjge_else.49532:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42263:
+fjge_cont.42261:
+	jmp	fjge_cont.42259
+fjge_else.42258:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49540
-	fjlt	%f1, %f16, fjge_else.49542
+	fjlt	%f29, %f1, fjge_else.42266
+	fjlt	%f1, %f16, fjge_else.42268
 	fmov	%f0, %f1
-	jmp	fjge_cont.49543
-fjge_else.49542:
+	jmp	fjge_cont.42269
+fjge_else.42268:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49543:
-	jmp	fjge_cont.49541
-fjge_else.49540:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42269:
+	jmp	fjge_cont.42267
+fjge_else.42266:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49541:
-fjge_cont.49533:
-fjge_cont.49531:
-	jmp	fjge_cont.49529
-fjge_else.49528:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42267:
+fjge_cont.42259:
+fjge_cont.42257:
+	jmp	fjge_cont.42255
+fjge_else.42254:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49544
-	fjlt	%f1, %f16, fjge_else.49546
+	fjlt	%f29, %f1, fjge_else.42270
+	fjlt	%f1, %f16, fjge_else.42272
 	fmov	%f0, %f1
-	jmp	fjge_cont.49547
-fjge_else.49546:
+	jmp	fjge_cont.42273
+fjge_else.42272:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49548
-	fjlt	%f1, %f16, fjge_else.49550
+	fjlt	%f29, %f1, fjge_else.42274
+	fjlt	%f1, %f16, fjge_else.42276
 	fmov	%f0, %f1
-	jmp	fjge_cont.49551
-fjge_else.49550:
+	jmp	fjge_cont.42277
+fjge_else.42276:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49551:
-	jmp	fjge_cont.49549
-fjge_else.49548:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42277:
+	jmp	fjge_cont.42275
+fjge_else.42274:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49549:
-fjge_cont.49547:
-	jmp	fjge_cont.49545
-fjge_else.49544:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42275:
+fjge_cont.42273:
+	jmp	fjge_cont.42271
+fjge_else.42270:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49552
-	fjlt	%f1, %f16, fjge_else.49554
+	fjlt	%f29, %f1, fjge_else.42278
+	fjlt	%f1, %f16, fjge_else.42280
 	fmov	%f0, %f1
-	jmp	fjge_cont.49555
-fjge_else.49554:
+	jmp	fjge_cont.42281
+fjge_else.42280:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49555:
-	jmp	fjge_cont.49553
-fjge_else.49552:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42281:
+	jmp	fjge_cont.42279
+fjge_else.42278:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49553:
-fjge_cont.49545:
-fjge_cont.49529:
-	fjlt	%f5, %f0, fjge_else.49556
-	fjlt	%f16, %f2, fjge_else.49558
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.49559
-fjge_else.49558:
-	addi	%g3, %g0, 1
-fjge_cont.49559:
-	jmp	fjge_cont.49557
-fjge_else.49556:
-	fjlt	%f16, %f2, fjge_else.49560
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.49561
-fjge_else.49560:
-	addi	%g3, %g0, 0
-fjge_cont.49561:
-fjge_cont.49557:
-	fjlt	%f5, %f0, fjge_else.49562
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42279:
+fjge_cont.42271:
+fjge_cont.42255:
+	fldi	%f4, %g1, 16
+	fjlt	%f4, %f0, fjge_else.42282
+	fjlt	%f16, %f2, fjge_else.42284
+	addi	%g3, %g0, 0
+	jmp	fjge_cont.42285
+fjge_else.42284:
+	addi	%g3, %g0, 1
+fjge_cont.42285:
+	jmp	fjge_cont.42283
+fjge_else.42282:
+	fjlt	%f16, %f2, fjge_else.42286
+	addi	%g3, %g0, 1
+	jmp	fjge_cont.42287
+fjge_else.42286:
+	addi	%g3, %g0, 0
+fjge_cont.42287:
+fjge_cont.42283:
+	fjlt	%f4, %f0, fjge_else.42288
 	fmov	%f1, %f0
-	jmp	fjge_cont.49563
-fjge_else.49562:
+	jmp	fjge_cont.42289
+fjge_else.42288:
 	fsub	%f1, %f29, %f0
-fjge_cont.49563:
-	fjlt	%f22, %f1, fjge_else.49564
+fjge_cont.42289:
+	fjlt	%f22, %f1, fjge_else.42290
 	fmov	%f0, %f1
-	jmp	fjge_cont.49565
-fjge_else.49564:
-	fsub	%f0, %f5, %f1
-fjge_cont.49565:
+	jmp	fjge_cont.42291
+fjge_else.42290:
+	fsub	%f0, %f4, %f1
+fjge_cont.42291:
 	fmul	%f1, %f0, %f21
 	fmul	%f0, %f1, %f1
 	fdiv	%f2, %f0, %f25
@@ -3005,151 +2225,152 @@ fjge_cont.49565:
 	fdiv	%f0, %f0, %f2
 	fsub	%f0, %f17, %f0
 	fdiv	%f0, %f1, %f0
+	fldi	%f10, %g1, 12
 	fmul	%f1, %f10, %f0
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f17, %f0
 	fdiv	%f0, %f1, %f0
-	jne	%g3, %g0, jeq_else.49566
-	fneg	%f3, %f0
-	jmp	jeq_cont.49567
-jeq_else.49566:
-	fmov	%f3, %f0
-jeq_cont.49567:
-	fjlt	%f4, %f16, fjge_else.49568
-	fmov	%f1, %f4
-	jmp	fjge_cont.49569
-fjge_else.49568:
-	fneg	%f1, %f4
-fjge_cont.49569:
-	fjlt	%f29, %f1, fjge_else.49570
-	fjlt	%f1, %f16, fjge_else.49572
+	jne	%g3, %g0, jeq_else.42292
+	fneg	%f5, %f0
+	jmp	jeq_cont.42293
+jeq_else.42292:
+	fmov	%f5, %f0
+jeq_cont.42293:
+	fjlt	%f3, %f16, fjge_else.42294
+	fmov	%f1, %f3
+	jmp	fjge_cont.42295
+fjge_else.42294:
+	fneg	%f1, %f3
+fjge_cont.42295:
+	fjlt	%f29, %f1, fjge_else.42296
+	fjlt	%f1, %f16, fjge_else.42298
 	fmov	%f0, %f1
-	jmp	fjge_cont.49573
-fjge_else.49572:
+	jmp	fjge_cont.42299
+fjge_else.42298:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49574
-	fjlt	%f1, %f16, fjge_else.49576
+	fjlt	%f29, %f1, fjge_else.42300
+	fjlt	%f1, %f16, fjge_else.42302
 	fmov	%f0, %f1
-	jmp	fjge_cont.49577
-fjge_else.49576:
+	jmp	fjge_cont.42303
+fjge_else.42302:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49578
-	fjlt	%f1, %f16, fjge_else.49580
+	fjlt	%f29, %f1, fjge_else.42304
+	fjlt	%f1, %f16, fjge_else.42306
 	fmov	%f0, %f1
-	jmp	fjge_cont.49581
-fjge_else.49580:
+	jmp	fjge_cont.42307
+fjge_else.42306:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49581:
-	jmp	fjge_cont.49579
-fjge_else.49578:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42307:
+	jmp	fjge_cont.42305
+fjge_else.42304:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49579:
-fjge_cont.49577:
-	jmp	fjge_cont.49575
-fjge_else.49574:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42305:
+fjge_cont.42303:
+	jmp	fjge_cont.42301
+fjge_else.42300:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49582
-	fjlt	%f1, %f16, fjge_else.49584
+	fjlt	%f29, %f1, fjge_else.42308
+	fjlt	%f1, %f16, fjge_else.42310
 	fmov	%f0, %f1
-	jmp	fjge_cont.49585
-fjge_else.49584:
+	jmp	fjge_cont.42311
+fjge_else.42310:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49585:
-	jmp	fjge_cont.49583
-fjge_else.49582:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42311:
+	jmp	fjge_cont.42309
+fjge_else.42308:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49583:
-fjge_cont.49575:
-fjge_cont.49573:
-	jmp	fjge_cont.49571
-fjge_else.49570:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42309:
+fjge_cont.42301:
+fjge_cont.42299:
+	jmp	fjge_cont.42297
+fjge_else.42296:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49586
-	fjlt	%f1, %f16, fjge_else.49588
+	fjlt	%f29, %f1, fjge_else.42312
+	fjlt	%f1, %f16, fjge_else.42314
 	fmov	%f0, %f1
-	jmp	fjge_cont.49589
-fjge_else.49588:
+	jmp	fjge_cont.42315
+fjge_else.42314:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49590
-	fjlt	%f1, %f16, fjge_else.49592
+	fjlt	%f29, %f1, fjge_else.42316
+	fjlt	%f1, %f16, fjge_else.42318
 	fmov	%f0, %f1
-	jmp	fjge_cont.49593
-fjge_else.49592:
+	jmp	fjge_cont.42319
+fjge_else.42318:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49593:
-	jmp	fjge_cont.49591
-fjge_else.49590:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42319:
+	jmp	fjge_cont.42317
+fjge_else.42316:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49591:
-fjge_cont.49589:
-	jmp	fjge_cont.49587
-fjge_else.49586:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42317:
+fjge_cont.42315:
+	jmp	fjge_cont.42313
+fjge_else.42312:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49594
-	fjlt	%f1, %f16, fjge_else.49596
+	fjlt	%f29, %f1, fjge_else.42320
+	fjlt	%f1, %f16, fjge_else.42322
 	fmov	%f0, %f1
-	jmp	fjge_cont.49597
-fjge_else.49596:
+	jmp	fjge_cont.42323
+fjge_else.42322:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49597:
-	jmp	fjge_cont.49595
-fjge_else.49594:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42323:
+	jmp	fjge_cont.42321
+fjge_else.42320:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49595:
-fjge_cont.49587:
-fjge_cont.49571:
-	fjlt	%f5, %f0, fjge_else.49598
-	fjlt	%f16, %f4, fjge_else.49600
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.49601
-fjge_else.49600:
-	addi	%g3, %g0, 1
-fjge_cont.49601:
-	jmp	fjge_cont.49599
-fjge_else.49598:
-	fjlt	%f16, %f4, fjge_else.49602
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.49603
-fjge_else.49602:
-	addi	%g3, %g0, 0
-fjge_cont.49603:
-fjge_cont.49599:
-	fjlt	%f5, %f0, fjge_else.49604
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42321:
+fjge_cont.42313:
+fjge_cont.42297:
+	fjlt	%f4, %f0, fjge_else.42324
+	fjlt	%f16, %f3, fjge_else.42326
+	addi	%g3, %g0, 0
+	jmp	fjge_cont.42327
+fjge_else.42326:
+	addi	%g3, %g0, 1
+fjge_cont.42327:
+	jmp	fjge_cont.42325
+fjge_else.42324:
+	fjlt	%f16, %f3, fjge_else.42328
+	addi	%g3, %g0, 1
+	jmp	fjge_cont.42329
+fjge_else.42328:
+	addi	%g3, %g0, 0
+fjge_cont.42329:
+fjge_cont.42325:
+	fjlt	%f4, %f0, fjge_else.42330
 	fmov	%f1, %f0
-	jmp	fjge_cont.49605
-fjge_else.49604:
+	jmp	fjge_cont.42331
+fjge_else.42330:
 	fsub	%f1, %f29, %f0
-fjge_cont.49605:
-	fjlt	%f22, %f1, fjge_else.49606
+fjge_cont.42331:
+	fjlt	%f22, %f1, fjge_else.42332
 	fmov	%f0, %f1
-	jmp	fjge_cont.49607
-fjge_else.49606:
-	fsub	%f0, %f5, %f1
-fjge_cont.49607:
+	jmp	fjge_cont.42333
+fjge_else.42332:
+	fsub	%f0, %f4, %f1
+fjge_cont.42333:
 	fmul	%f1, %f0, %f21
 	fmul	%f0, %f1, %f1
 	fdiv	%f2, %f0, %f25
@@ -3165,150 +2386,150 @@ fjge_cont.49607:
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f17, %f0
 	fdiv	%f1, %f1, %f0
-	jne	%g3, %g0, jeq_else.49608
+	jne	%g3, %g0, jeq_else.42334
 	fneg	%f0, %f1
-	jmp	jeq_cont.49609
-jeq_else.49608:
+	jmp	jeq_cont.42335
+jeq_else.42334:
 	fmov	%f0, %f1
-jeq_cont.49609:
-	fmul	%f0, %f3, %f0
+jeq_cont.42335:
+	fmul	%f0, %f5, %f0
 	fsti	%f0, %g31, 308
-	fsub	%f2, %f22, %f4
-	fjlt	%f2, %f16, fjge_else.49610
+	fsub	%f2, %f22, %f3
+	fjlt	%f2, %f16, fjge_else.42336
 	fmov	%f1, %f2
-	jmp	fjge_cont.49611
-fjge_else.49610:
+	jmp	fjge_cont.42337
+fjge_else.42336:
 	fneg	%f1, %f2
-fjge_cont.49611:
-	fjlt	%f29, %f1, fjge_else.49612
-	fjlt	%f1, %f16, fjge_else.49614
+fjge_cont.42337:
+	fjlt	%f29, %f1, fjge_else.42338
+	fjlt	%f1, %f16, fjge_else.42340
 	fmov	%f0, %f1
-	jmp	fjge_cont.49615
-fjge_else.49614:
+	jmp	fjge_cont.42341
+fjge_else.42340:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49616
-	fjlt	%f1, %f16, fjge_else.49618
+	fjlt	%f29, %f1, fjge_else.42342
+	fjlt	%f1, %f16, fjge_else.42344
 	fmov	%f0, %f1
-	jmp	fjge_cont.49619
-fjge_else.49618:
+	jmp	fjge_cont.42345
+fjge_else.42344:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49620
-	fjlt	%f1, %f16, fjge_else.49622
+	fjlt	%f29, %f1, fjge_else.42346
+	fjlt	%f1, %f16, fjge_else.42348
 	fmov	%f0, %f1
-	jmp	fjge_cont.49623
-fjge_else.49622:
+	jmp	fjge_cont.42349
+fjge_else.42348:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49623:
-	jmp	fjge_cont.49621
-fjge_else.49620:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42349:
+	jmp	fjge_cont.42347
+fjge_else.42346:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49621:
-fjge_cont.49619:
-	jmp	fjge_cont.49617
-fjge_else.49616:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42347:
+fjge_cont.42345:
+	jmp	fjge_cont.42343
+fjge_else.42342:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49624
-	fjlt	%f1, %f16, fjge_else.49626
+	fjlt	%f29, %f1, fjge_else.42350
+	fjlt	%f1, %f16, fjge_else.42352
 	fmov	%f0, %f1
-	jmp	fjge_cont.49627
-fjge_else.49626:
+	jmp	fjge_cont.42353
+fjge_else.42352:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49627:
-	jmp	fjge_cont.49625
-fjge_else.49624:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42353:
+	jmp	fjge_cont.42351
+fjge_else.42350:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49625:
-fjge_cont.49617:
-fjge_cont.49615:
-	jmp	fjge_cont.49613
-fjge_else.49612:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42351:
+fjge_cont.42343:
+fjge_cont.42341:
+	jmp	fjge_cont.42339
+fjge_else.42338:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49628
-	fjlt	%f1, %f16, fjge_else.49630
+	fjlt	%f29, %f1, fjge_else.42354
+	fjlt	%f1, %f16, fjge_else.42356
 	fmov	%f0, %f1
-	jmp	fjge_cont.49631
-fjge_else.49630:
+	jmp	fjge_cont.42357
+fjge_else.42356:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49632
-	fjlt	%f1, %f16, fjge_else.49634
+	fjlt	%f29, %f1, fjge_else.42358
+	fjlt	%f1, %f16, fjge_else.42360
 	fmov	%f0, %f1
-	jmp	fjge_cont.49635
-fjge_else.49634:
+	jmp	fjge_cont.42361
+fjge_else.42360:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49635:
-	jmp	fjge_cont.49633
-fjge_else.49632:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42361:
+	jmp	fjge_cont.42359
+fjge_else.42358:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49633:
-fjge_cont.49631:
-	jmp	fjge_cont.49629
-fjge_else.49628:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42359:
+fjge_cont.42357:
+	jmp	fjge_cont.42355
+fjge_else.42354:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49636
-	fjlt	%f1, %f16, fjge_else.49638
+	fjlt	%f29, %f1, fjge_else.42362
+	fjlt	%f1, %f16, fjge_else.42364
 	fmov	%f0, %f1
-	jmp	fjge_cont.49639
-fjge_else.49638:
+	jmp	fjge_cont.42365
+fjge_else.42364:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49639:
-	jmp	fjge_cont.49637
-fjge_else.49636:
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42365:
+	jmp	fjge_cont.42363
+fjge_else.42362:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.49637:
-fjge_cont.49629:
-fjge_cont.49613:
-	fjlt	%f5, %f0, fjge_else.49640
-	fjlt	%f16, %f2, fjge_else.49642
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.49643
-fjge_else.49642:
-	addi	%g3, %g0, 1
-fjge_cont.49643:
-	jmp	fjge_cont.49641
-fjge_else.49640:
-	fjlt	%f16, %f2, fjge_else.49644
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.49645
-fjge_else.49644:
-	addi	%g3, %g0, 0
-fjge_cont.49645:
-fjge_cont.49641:
-	fjlt	%f5, %f0, fjge_else.49646
+	subi	%g1, %g1, 40
+	call	sin_sub.2518
+	addi	%g1, %g1, 40
+fjge_cont.42363:
+fjge_cont.42355:
+fjge_cont.42339:
+	fjlt	%f4, %f0, fjge_else.42366
+	fjlt	%f16, %f2, fjge_else.42368
+	addi	%g3, %g0, 0
+	jmp	fjge_cont.42369
+fjge_else.42368:
+	addi	%g3, %g0, 1
+fjge_cont.42369:
+	jmp	fjge_cont.42367
+fjge_else.42366:
+	fjlt	%f16, %f2, fjge_else.42370
+	addi	%g3, %g0, 1
+	jmp	fjge_cont.42371
+fjge_else.42370:
+	addi	%g3, %g0, 0
+fjge_cont.42371:
+fjge_cont.42367:
+	fjlt	%f4, %f0, fjge_else.42372
 	fmov	%f1, %f0
-	jmp	fjge_cont.49647
-fjge_else.49646:
+	jmp	fjge_cont.42373
+fjge_else.42372:
 	fsub	%f1, %f29, %f0
-fjge_cont.49647:
-	fjlt	%f22, %f1, fjge_else.49648
+fjge_cont.42373:
+	fjlt	%f22, %f1, fjge_else.42374
 	fmov	%f0, %f1
-	jmp	fjge_cont.49649
-fjge_else.49648:
-	fsub	%f0, %f5, %f1
-fjge_cont.49649:
+	jmp	fjge_cont.42375
+fjge_else.42374:
+	fsub	%f0, %f4, %f1
+fjge_cont.42375:
 	fmul	%f0, %f0, %f21
 	fmul	%f2, %f0, %f0
 	fdiv	%f1, %f2, %f25
@@ -3324,319 +2545,55 @@ fjge_cont.49649:
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f17, %f0
 	fdiv	%f1, %f1, %f0
-	jne	%g3, %g0, jeq_else.49650
+	jne	%g3, %g0, jeq_else.42376
 	fneg	%f0, %f1
-	jmp	jeq_cont.49651
-jeq_else.49650:
+	jmp	jeq_cont.42377
+jeq_else.42376:
 	fmov	%f0, %f1
-jeq_cont.49651:
-	fmul	%f0, %f3, %f0
+jeq_cont.42377:
+	fmul	%f0, %f5, %f0
 	fsti	%f0, %g31, 300
+	subi	%g1, %g1, 40
+	call	min_caml_read_float
+	fsti	%f0, %g31, 312
+	addi	%g8, %g0, 0
+	call	read_object.2713
 	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.49652
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.49654
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49655
-jle_else.49654:
-	addi	%g3, %g0, 1
-jle_cont.49655:
-	jmp	jle_cont.49653
-jle_else.49652:
-	addi	%g3, %g0, 1
-jle_cont.49653:
-	jne	%g3, %g0, jeq_else.49656
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.49658
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.49659
-jeq_else.49658:
-jeq_cont.49659:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49657
-jeq_else.49656:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.49657:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.49660
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.49662
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.49664
-	addi	%g4, %g0, 0
-	jmp	jle_cont.49665
-jle_else.49664:
-	addi	%g4, %g0, 1
-jle_cont.49665:
-	jmp	jle_cont.49663
-jle_else.49662:
-	addi	%g4, %g0, 1
-jle_cont.49663:
-	jne	%g4, %g0, jeq_else.49666
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49667
-jeq_else.49666:
+	call	read_and_network.2721
 	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.49667:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f4, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f4, %f0
-	jmp	jeq_cont.49661
-jeq_else.49660:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.49661:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.49668
-	fmov	%f1, %f0
-	jmp	jeq_cont.49669
-jeq_else.49668:
-	fneg	%f1, %f0
-jeq_cont.49669:
-	fsti	%f1, %g31, 312
-	addi	%g19, %g0, 0
-	sti	%g16, %g1, 0
-	fsti	%f10, %g1, 4
-	mov	%g16, %g19
-	subi	%g1, %g1, 12
-	call	read_object.2696
-	addi	%g1, %g1, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 8
-	input	%g5
-	addi	%g10, %g0, 48
-	jlt	%g5, %g10, jle_else.49670
-	addi	%g10, %g0, 57
-	jlt	%g10, %g5, jle_else.49672
-	addi	%g10, %g0, 0
-	jmp	jle_cont.49673
-jle_else.49672:
-	addi	%g10, %g0, 1
-jle_cont.49673:
-	jmp	jle_cont.49671
-jle_else.49670:
-	addi	%g10, %g0, 1
-jle_cont.49671:
-	jne	%g10, %g0, jeq_else.49674
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.49676
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.49677
-jeq_else.49676:
-jeq_cont.49677:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 12
-	call	read_int_token.2507
-	addi	%g1, %g1, 12
-	mov	%g10, %g3
-	jmp	jeq_cont.49675
-jeq_else.49674:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 12
-	call	read_int_token.2507
-	addi	%g1, %g1, 12
-	mov	%g10, %g3
-jeq_cont.49675:
-	jne	%g10, %g29, jeq_else.49678
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, -1
-	subi	%g1, %g1, 12
-	call	min_caml_create_array
-	addi	%g1, %g1, 12
-	jmp	jeq_cont.49679
-jeq_else.49678:
-	addi	%g8, %g0, 1
-	subi	%g1, %g1, 12
-	call	read_net_item.2700
-	addi	%g1, %g1, 12
-	sti	%g10, %g3, 0
-jeq_cont.49679:
-	sti	%g3, %g31, 2300
-	ldi	%g4, %g3, 0
-	jne	%g4, %g29, jeq_else.49680
-	jmp	jeq_cont.49681
-jeq_else.49680:
-	sti	%g3, %g31, 512
-	addi	%g11, %g0, 1
-	subi	%g1, %g1, 12
-	call	read_and_network.2704
-	addi	%g1, %g1, 12
-jeq_cont.49681:
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 8
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.49682
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.49684
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49685
-jle_else.49684:
-	addi	%g3, %g0, 1
-jle_cont.49685:
-	jmp	jle_cont.49683
-jle_else.49682:
-	addi	%g3, %g0, 1
-jle_cont.49683:
-	jne	%g3, %g0, jeq_else.49686
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.49688
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.49689
-jeq_else.49688:
-jeq_cont.49689:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 12
-	call	read_int_token.2507
-	addi	%g1, %g1, 12
-	jmp	jeq_cont.49687
-jeq_else.49686:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 12
-	call	read_int_token.2507
-	addi	%g1, %g1, 12
-jeq_cont.49687:
-	jne	%g3, %g29, jeq_else.49690
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, -1
-	subi	%g1, %g1, 12
-	call	min_caml_create_array
-	addi	%g1, %g1, 12
-	mov	%g4, %g3
-	jmp	jeq_cont.49691
-jeq_else.49690:
-	addi	%g8, %g0, 1
-	sti	%g3, %g1, 8
-	subi	%g1, %g1, 16
-	call	read_net_item.2700
-	addi	%g1, %g1, 16
-	mov	%g4, %g3
-	ldi	%g3, %g1, 8
-	sti	%g3, %g4, 0
-jeq_cont.49691:
-	sti	%g4, %g31, 2304
-	ldi	%g3, %g4, 0
-	jne	%g3, %g29, jeq_else.49692
-	addi	%g3, %g0, 1
-	subi	%g1, %g1, 16
-	call	min_caml_create_array
-	addi	%g1, %g1, 16
-	jmp	jeq_cont.49693
-jeq_else.49692:
-	addi	%g11, %g0, 1
-	sti	%g4, %g1, 12
-	subi	%g1, %g1, 20
-	call	read_or_network.2702
-	addi	%g1, %g1, 20
-	ldi	%g4, %g1, 12
-	sti	%g4, %g3, 0
-jeq_cont.49693:
-	sti	%g3, %g31, 516
-	addi	%g3, %g0, 80
-	output	%g3
-	addi	%g3, %g0, 51
-	output	%g3
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g4, %g31, 600
-	subi	%g1, %g1, 20
-	call	print_int.2528
-	addi	%g3, %g0, 32
-	output	%g3
-	ldi	%g4, %g31, 596
-	call	print_int.2528
-	addi	%g3, %g0, 32
-	output	%g3
-	addi	%g4, %g0, 255
-	call	print_int.2528
-	addi	%g3, %g0, 10
-	output	%g3
-	addi	%g6, %g0, 120
-	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
-	subi	%g2, %g31, 2316
-	fmov	%f0, %f16
-	call	min_caml_create_float_array
-	mov	%g7, %g3
-	ldi	%g2, %g31, 2372
-	ldi	%g3, %g31, 28
-	subi	%g4, %g31, 2316
+	call	read_or_network.2719
+	sti	%g3, %g31, 516
+	addi	%g3, %g0, 80
+	output	%g3
+	addi	%g3, %g0, 54
+	output	%g3
+	addi	%g3, %g0, 10
+	output	%g3
+	ldi	%g4, %g31, 600
+	call	print_int.2545
+	addi	%g3, %g0, 32
+	output	%g3
+	ldi	%g4, %g31, 596
+	call	print_int.2545
+	addi	%g3, %g0, 32
+	output	%g3
+	addi	%g4, %g0, 255
+	call	print_int.2545
+	addi	%g3, %g0, 10
+	output	%g3
+	addi	%g6, %g0, 120
+	addi	%g3, %g0, 3
+	sti	%g2, %g31, 2364
+	subi	%g2, %g31, 2308
+	fmov	%f0, %f16
+	call	min_caml_create_float_array
+	mov	%g7, %g3
+	ldi	%g2, %g31, 2364
+	ldi	%g3, %g31, 28
+	subi	%g4, %g31, 2308
 	call	min_caml_create_array
 	mov	%g4, %g3
-	sti	%g4, %g31, 2320
+	sti	%g4, %g31, 2312
 	mov	%g3, %g2
 	addi	%g2, %g2, 8
 	sti	%g4, %g3, -4
@@ -3647,233 +2604,229 @@ jeq_cont.49693:
 	sti	%g3, %g31, 700
 	ldi	%g6, %g31, 700
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
-	subi	%g2, %g31, 2332
+	sti	%g2, %g31, 2364
+	subi	%g2, %g31, 2324
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
 	mov	%g7, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	ldi	%g3, %g31, 28
-	subi	%g4, %g31, 2332
+	subi	%g4, %g31, 2324
 	call	min_caml_create_array
 	mov	%g4, %g3
-	sti	%g4, %g31, 2336
+	sti	%g4, %g31, 2328
 	mov	%g3, %g2
 	addi	%g2, %g2, 8
 	sti	%g4, %g3, -4
 	sti	%g7, %g3, 0
 	sti	%g3, %g6, -472
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
-	subi	%g2, %g31, 2348
+	sti	%g2, %g31, 2364
+	subi	%g2, %g31, 2340
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
 	mov	%g7, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	ldi	%g3, %g31, 28
-	subi	%g4, %g31, 2348
+	subi	%g4, %g31, 2340
 	call	min_caml_create_array
 	mov	%g4, %g3
-	sti	%g4, %g31, 2352
+	sti	%g4, %g31, 2344
 	mov	%g3, %g2
 	addi	%g2, %g2, 8
 	sti	%g4, %g3, -4
 	sti	%g7, %g3, 0
 	sti	%g3, %g6, -468
 	addi	%g3, %g0, 3
-	sti	%g2, %g31, 2372
-	subi	%g2, %g31, 2364
+	sti	%g2, %g31, 2364
+	subi	%g2, %g31, 2356
 	fmov	%f0, %f16
 	call	min_caml_create_float_array
 	mov	%g7, %g3
-	ldi	%g2, %g31, 2372
+	ldi	%g2, %g31, 2364
 	ldi	%g3, %g31, 28
-	subi	%g4, %g31, 2364
+	subi	%g4, %g31, 2356
 	call	min_caml_create_array
 	mov	%g4, %g3
-	sti	%g4, %g31, 2368
+	sti	%g4, %g31, 2360
 	mov	%g3, %g2
 	addi	%g2, %g2, 8
 	sti	%g4, %g3, -4
 	sti	%g7, %g3, 0
 	sti	%g3, %g6, -464
 	addi	%g7, %g0, 115
-	call	create_dirvec_elements.3012
+	call	create_dirvec_elements.3029
 	addi	%g8, %g0, 3
-	call	create_dirvecs.3015
+	call	create_dirvecs.3032
 	addi	%g3, %g0, 9
 	addi	%g8, %g0, 0
 	addi	%g12, %g0, 0
 	call	min_caml_float_of_int
-	addi	%g1, %g1, 20
-	setL %g3, l.42722
+	addi	%g1, %g1, 40
+	setL %g3, l.36036
 	fldi	%f4, %g3, 0
 	fmul	%f0, %f0, %f4
-	setL %g3, l.42724
+	setL %g3, l.36038
 	fldi	%f3, %g3, 0
 	fsub	%f0, %f0, %f3
 	addi	%g3, %g0, 4
-	fsti	%f0, %g1, 16
-	subi	%g1, %g1, 24
+	fsti	%f0, %g1, 36
+	subi	%g1, %g1, 44
 	call	min_caml_float_of_int
-	addi	%g1, %g1, 24
+	addi	%g1, %g1, 44
 	fmov	%f1, %f0
 	fmul	%f1, %f1, %f4
 	fsub	%f2, %f1, %f3
 	addi	%g4, %g0, 0
-	fldi	%f0, %g1, 16
-	fsti	%f3, %g1, 20
-	fsti	%f4, %g1, 24
-	fsti	%f1, %g1, 28
+	fldi	%f0, %g1, 36
+	fsti	%f3, %g1, 40
+	fsti	%f4, %g1, 44
+	fsti	%f1, %g1, 48
 	mov	%g3, %g12
 	mov	%g5, %g8
 	fmov	%f1, %f16
 	fmov	%f5, %f16
-	subi	%g1, %g1, 36
-	call	calc_dirvec.2993
-	addi	%g1, %g1, 36
-	setL %g3, l.42726
+	subi	%g1, %g1, 56
+	call	calc_dirvec.3010
+	addi	%g1, %g1, 56
+	setL %g3, l.36040
 	fldi	%f5, %g3, 0
-	fldi	%f1, %g1, 28
+	fldi	%f1, %g1, 48
 	fadd	%f2, %f1, %f5
 	addi	%g4, %g0, 0
 	addi	%g3, %g0, 2
-	fldi	%f0, %g1, 16
-	fsti	%f5, %g1, 32
+	fldi	%f0, %g1, 36
+	fsti	%f5, %g1, 52
 	mov	%g5, %g8
 	fmov	%f1, %f16
 	fmov	%f5, %f16
-	subi	%g1, %g1, 40
-	call	calc_dirvec.2993
-	addi	%g1, %g1, 40
+	subi	%g1, %g1, 60
+	call	calc_dirvec.3010
+	addi	%g1, %g1, 60
 	addi	%g3, %g0, 3
 	addi	%g5, %g0, 1
-	sti	%g5, %g1, 36
-	subi	%g1, %g1, 44
+	sti	%g5, %g1, 56
+	subi	%g1, %g1, 64
 	call	min_caml_float_of_int
-	addi	%g1, %g1, 44
+	addi	%g1, %g1, 64
 	fmov	%f1, %f0
-	fldi	%f4, %g1, 24
+	fldi	%f4, %g1, 44
 	fmul	%f1, %f1, %f4
-	fldi	%f3, %g1, 20
+	fldi	%f3, %g1, 40
 	fsub	%f2, %f1, %f3
 	addi	%g4, %g0, 0
-	fldi	%f0, %g1, 16
-	ldi	%g5, %g1, 36
-	fsti	%f1, %g1, 40
+	fldi	%f0, %g1, 36
+	ldi	%g5, %g1, 56
+	fsti	%f1, %g1, 60
 	mov	%g3, %g12
 	fmov	%f1, %f16
 	fmov	%f5, %f16
-	subi	%g1, %g1, 48
-	call	calc_dirvec.2993
-	addi	%g1, %g1, 48
-	fldi	%f5, %g1, 32
-	fldi	%f1, %g1, 40
+	subi	%g1, %g1, 68
+	call	calc_dirvec.3010
+	addi	%g1, %g1, 68
+	fldi	%f5, %g1, 52
+	fldi	%f1, %g1, 60
 	fadd	%f2, %f1, %f5
 	addi	%g4, %g0, 0
 	addi	%g8, %g0, 2
-	fldi	%f0, %g1, 16
-	ldi	%g5, %g1, 36
+	fldi	%f0, %g1, 36
+	ldi	%g5, %g1, 56
 	mov	%g3, %g8
 	fmov	%f1, %f16
 	fmov	%f5, %f16
-	subi	%g1, %g1, 48
-	call	calc_dirvec.2993
-	addi	%g1, %g1, 48
+	subi	%g1, %g1, 68
+	call	calc_dirvec.3010
+	addi	%g1, %g1, 68
 	addi	%g3, %g0, 2
 	addi	%g5, %g0, 2
-	sti	%g5, %g1, 44
-	subi	%g1, %g1, 52
+	sti	%g5, %g1, 64
+	subi	%g1, %g1, 72
 	call	min_caml_float_of_int
-	addi	%g1, %g1, 52
+	addi	%g1, %g1, 72
 	fmov	%f1, %f0
-	fldi	%f4, %g1, 24
+	fldi	%f4, %g1, 44
 	fmul	%f1, %f1, %f4
-	fldi	%f3, %g1, 20
+	fldi	%f3, %g1, 40
 	fsub	%f2, %f1, %f3
 	addi	%g4, %g0, 0
-	fldi	%f0, %g1, 16
-	ldi	%g5, %g1, 44
-	fsti	%f1, %g1, 48
+	fldi	%f0, %g1, 36
+	ldi	%g5, %g1, 64
+	fsti	%f1, %g1, 68
 	mov	%g3, %g12
 	fmov	%f1, %f16
 	fmov	%f5, %f16
-	subi	%g1, %g1, 56
-	call	calc_dirvec.2993
-	addi	%g1, %g1, 56
-	fldi	%f5, %g1, 32
-	fldi	%f1, %g1, 48
+	subi	%g1, %g1, 76
+	call	calc_dirvec.3010
+	addi	%g1, %g1, 76
+	fldi	%f5, %g1, 52
+	fldi	%f1, %g1, 68
 	fadd	%f2, %f1, %f5
 	addi	%g4, %g0, 0
-	fldi	%f0, %g1, 16
-	ldi	%g5, %g1, 44
+	fldi	%f0, %g1, 36
+	ldi	%g5, %g1, 64
 	mov	%g3, %g8
 	fmov	%f1, %f16
 	fmov	%f5, %f16
-	subi	%g1, %g1, 56
-	call	calc_dirvec.2993
-	addi	%g1, %g1, 56
+	subi	%g1, %g1, 76
+	call	calc_dirvec.3010
+	addi	%g1, %g1, 76
 	addi	%g10, %g0, 1
 	addi	%g9, %g0, 3
-	fldi	%f0, %g1, 16
+	fldi	%f0, %g1, 36
 	mov	%g8, %g12
-	subi	%g1, %g1, 56
-	call	calc_dirvecs.3001
+	subi	%g1, %g1, 76
+	call	calc_dirvecs.3018
 	addi	%g13, %g0, 8
 	addi	%g12, %g0, 2
 	addi	%g8, %g0, 4
-	call	calc_dirvec_rows.3006
+	call	calc_dirvec_rows.3023
 	ldi	%g11, %g31, 700
 	ldi	%g3, %g11, -476
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -472
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -468
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -464
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -460
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -456
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -452
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	addi	%g12, %g0, 112
-	call	init_dirvec_constants.3017
-	addi	%g1, %g1, 56
+	call	init_dirvec_constants.3034
 	addi	%g13, %g0, 3
-	sti	%g18, %g1, 52
-	sti	%g17, %g1, 56
-	subi	%g1, %g1, 64
-	call	init_vecset_constants.3020
+	call	init_vecset_constants.3037
 	fldi	%f0, %g31, 308
 	fsti	%f0, %g31, 732
 	fldi	%f0, %g31, 304
@@ -3884,24 +2837,24 @@ jeq_cont.49693:
 	subi	%g5, %g3, 1
 	subi	%g7, %g31, 732
 	subi	%g6, %g31, 972
-	call	iter_setup_dirvec_constants.2801
-	addi	%g1, %g1, 64
+	call	iter_setup_dirvec_constants.2818
+	addi	%g1, %g1, 76
 	ldi	%g3, %g31, 28
 	subi	%g6, %g3, 1
-	jlt	%g6, %g0, jge_else.49694
+	jlt	%g6, %g0, jge_else.42378
 	slli	%g3, %g6, 2
 	add	%g3, %g31, %g3
 	ldi	%g3, %g3, 272
 	ldi	%g4, %g3, -8
 	addi	%g5, %g0, 2
-	jne	%g4, %g5, jeq_else.49696
+	jne	%g4, %g5, jeq_else.42380
 	ldi	%g4, %g3, -28
 	fldi	%f0, %g4, 0
-	fjlt	%f0, %f17, fjge_else.49698
-	jmp	fjge_cont.49699
-fjge_else.49698:
+	fjlt	%f0, %f17, fjge_else.42382
+	jmp	fjge_cont.42383
+fjge_else.42382:
 	ldi	%g5, %g3, -4
-	jne	%g5, %g28, jeq_else.49700
+	jne	%g5, %g28, jeq_else.42384
 	slli	%g11, %g6, 2
 	ldi	%g12, %g31, 1720
 	fldi	%f0, %g4, 0
@@ -3915,79 +2868,79 @@ fjge_else.49698:
 	addi	%g14, %g11, 1
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
-	subi	%g1, %g1, 64
+	subi	%g1, %g1, 76
 	call	min_caml_create_float_array
-	addi	%g1, %g1, 64
+	addi	%g1, %g1, 76
 	mov	%g4, %g3
 	ldi	%g3, %g31, 28
-	sti	%g4, %g1, 60
-	subi	%g1, %g1, 68
+	sti	%g4, %g1, 72
+	subi	%g1, %g1, 80
 	call	min_caml_create_array
-	addi	%g1, %g1, 68
+	addi	%g1, %g1, 80
 	mov	%g5, %g2
 	addi	%g2, %g2, 8
 	sti	%g3, %g5, -4
-	ldi	%g4, %g1, 60
+	ldi	%g4, %g1, 72
 	sti	%g4, %g5, 0
 	fsti	%f1, %g4, 0
 	fsti	%f10, %g4, -4
 	fsti	%f9, %g4, -8
 	ldi	%g6, %g31, 28
 	subi	%g13, %g6, 1
-	sti	%g5, %g1, 64
+	sti	%g5, %g1, 76
 	mov	%g5, %g13
 	mov	%g6, %g3
 	mov	%g7, %g4
-	subi	%g1, %g1, 72
-	call	iter_setup_dirvec_constants.2801
-	addi	%g1, %g1, 72
+	subi	%g1, %g1, 84
+	call	iter_setup_dirvec_constants.2818
+	addi	%g1, %g1, 84
 	mov	%g3, %g2
 	addi	%g2, %g2, 12
 	fsti	%f12, %g3, -8
-	ldi	%g5, %g1, 64
+	ldi	%g5, %g1, 76
 	sti	%g5, %g3, -4
 	sti	%g14, %g3, 0
 	slli	%g4, %g12, 2
 	add	%g4, %g31, %g4
 	sti	%g3, %g4, 1716
-	addi	%g15, %g12, 1
+	addi	%g18, %g12, 1
 	addi	%g14, %g11, 2
 	fldi	%f1, %g31, 304
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
-	subi	%g1, %g1, 72
+	subi	%g1, %g1, 84
 	call	min_caml_create_float_array
-	addi	%g1, %g1, 72
+	addi	%g1, %g1, 84
 	mov	%g4, %g3
 	ldi	%g3, %g31, 28
-	sti	%g4, %g1, 68
-	subi	%g1, %g1, 76
+	sti	%g4, %g1, 80
+	subi	%g1, %g1, 88
 	call	min_caml_create_array
-	addi	%g1, %g1, 76
+	addi	%g1, %g1, 88
 	mov	%g5, %g2
 	addi	%g2, %g2, 8
 	sti	%g3, %g5, -4
-	ldi	%g4, %g1, 68
+	ldi	%g4, %g1, 80
 	sti	%g4, %g5, 0
 	fsti	%f11, %g4, 0
 	fsti	%f1, %g4, -4
 	fsti	%f9, %g4, -8
 	ldi	%g6, %g31, 28
 	subi	%g13, %g6, 1
-	sti	%g5, %g1, 72
+	sti	%g5, %g1, 84
 	mov	%g5, %g13
 	mov	%g6, %g3
 	mov	%g7, %g4
-	subi	%g1, %g1, 80
-	call	iter_setup_dirvec_constants.2801
-	addi	%g1, %g1, 80
+	subi	%g1, %g1, 92
+	call	iter_setup_dirvec_constants.2818
+	addi	%g1, %g1, 92
 	mov	%g3, %g2
 	addi	%g2, %g2, 12
 	fsti	%f12, %g3, -8
-	ldi	%g5, %g1, 72
+	ldi	%g5, %g1, 84
 	sti	%g5, %g3, -4
 	sti	%g14, %g3, 0
-	slli	%g4, %g15, 2
+	slli	%g4, %g18, 2
 	add	%g4, %g31, %g4
 	sti	%g3, %g4, 1716
 	addi	%g14, %g12, 2
@@ -3995,36 +2948,36 @@ fjge_else.49698:
 	fldi	%f1, %g31, 300
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
-	subi	%g1, %g1, 80
+	subi	%g1, %g1, 92
 	call	min_caml_create_float_array
-	addi	%g1, %g1, 80
+	addi	%g1, %g1, 92
 	mov	%g4, %g3
 	ldi	%g3, %g31, 28
-	sti	%g4, %g1, 76
-	subi	%g1, %g1, 84
+	sti	%g4, %g1, 88
+	subi	%g1, %g1, 96
 	call	min_caml_create_array
-	addi	%g1, %g1, 84
+	addi	%g1, %g1, 96
 	mov	%g5, %g2
 	addi	%g2, %g2, 8
 	sti	%g3, %g5, -4
-	ldi	%g4, %g1, 76
+	ldi	%g4, %g1, 88
 	sti	%g4, %g5, 0
 	fsti	%f11, %g4, 0
 	fsti	%f10, %g4, -4
 	fsti	%f1, %g4, -8
 	ldi	%g6, %g31, 28
 	subi	%g11, %g6, 1
-	sti	%g5, %g1, 80
+	sti	%g5, %g1, 92
 	mov	%g5, %g11
 	mov	%g6, %g3
 	mov	%g7, %g4
-	subi	%g1, %g1, 88
-	call	iter_setup_dirvec_constants.2801
-	addi	%g1, %g1, 88
+	subi	%g1, %g1, 100
+	call	iter_setup_dirvec_constants.2818
+	addi	%g1, %g1, 100
 	mov	%g3, %g2
 	addi	%g2, %g2, 12
 	fsti	%f12, %g3, -8
-	ldi	%g5, %g1, 80
+	ldi	%g5, %g1, 92
 	sti	%g5, %g3, -4
 	sti	%g13, %g3, 0
 	slli	%g4, %g14, 2
@@ -4032,10 +2985,10 @@ fjge_else.49698:
 	sti	%g3, %g4, 1716
 	addi	%g3, %g12, 3
 	sti	%g3, %g31, 1720
-	jmp	jeq_cont.49701
-jeq_else.49700:
+	jmp	jeq_cont.42385
+jeq_else.42384:
 	addi	%g4, %g0, 2
-	jne	%g5, %g4, jeq_else.49702
+	jne	%g5, %g4, jeq_else.42386
 	slli	%g4, %g6, 2
 	addi	%g12, %g4, 1
 	ldi	%g13, %g31, 1720
@@ -4052,7 +3005,7 @@ jeq_else.49700:
 	fldi	%f0, %g3, -8
 	fmul	%f3, %f2, %f0
 	fadd	%f3, %f4, %f3
-	fldi	%f10, %g1, 4
+	fldi	%f10, %g1, 12
 	fmul	%f4, %f10, %f5
 	fmul	%f4, %f4, %f3
 	fsub	%f5, %f4, %f7
@@ -4064,36 +3017,36 @@ jeq_else.49700:
 	fsub	%f1, %f0, %f2
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
-	subi	%g1, %g1, 88
+	subi	%g1, %g1, 100
 	call	min_caml_create_float_array
-	addi	%g1, %g1, 88
+	addi	%g1, %g1, 100
 	mov	%g4, %g3
 	ldi	%g3, %g31, 28
-	sti	%g4, %g1, 84
-	subi	%g1, %g1, 92
+	sti	%g4, %g1, 96
+	subi	%g1, %g1, 104
 	call	min_caml_create_array
-	addi	%g1, %g1, 92
+	addi	%g1, %g1, 104
 	mov	%g5, %g2
 	addi	%g2, %g2, 8
 	sti	%g3, %g5, -4
-	ldi	%g4, %g1, 84
+	ldi	%g4, %g1, 96
 	sti	%g4, %g5, 0
 	fsti	%f5, %g4, 0
 	fsti	%f4, %g4, -4
 	fsti	%f1, %g4, -8
 	ldi	%g6, %g31, 28
 	subi	%g11, %g6, 1
-	sti	%g5, %g1, 88
+	sti	%g5, %g1, 100
 	mov	%g5, %g11
 	mov	%g6, %g3
 	mov	%g7, %g4
-	subi	%g1, %g1, 96
-	call	iter_setup_dirvec_constants.2801
-	addi	%g1, %g1, 96
+	subi	%g1, %g1, 108
+	call	iter_setup_dirvec_constants.2818
+	addi	%g1, %g1, 108
 	mov	%g3, %g2
 	addi	%g2, %g2, 12
 	fsti	%f9, %g3, -8
-	ldi	%g5, %g1, 88
+	ldi	%g5, %g1, 100
 	sti	%g5, %g3, -4
 	sti	%g12, %g3, 0
 	slli	%g4, %g13, 2
@@ -4101,24 +3054,24 @@ jeq_else.49700:
 	sti	%g3, %g4, 1716
 	addi	%g3, %g13, 1
 	sti	%g3, %g31, 1720
-	jmp	jeq_cont.49703
-jeq_else.49702:
-jeq_cont.49703:
-jeq_cont.49701:
-fjge_cont.49699:
-	jmp	jeq_cont.49697
-jeq_else.49696:
-jeq_cont.49697:
-	jmp	jge_cont.49695
-jge_else.49694:
-jge_cont.49695:
+	jmp	jeq_cont.42387
+jeq_else.42386:
+jeq_cont.42387:
+jeq_cont.42385:
+fjge_cont.42383:
+	jmp	jeq_cont.42381
+jeq_else.42380:
+jeq_cont.42381:
+	jmp	jge_cont.42379
+jge_else.42378:
+jge_cont.42379:
 	addi	%g8, %g0, 0
 	fldi	%f3, %g31, 612
 	ldi	%g3, %g31, 604
 	sub	%g3, %g0, %g3
-	subi	%g1, %g1, 96
+	subi	%g1, %g1, 108
 	call	min_caml_float_of_int
-	addi	%g1, %g1, 96
+	addi	%g1, %g1, 108
 	fmul	%f0, %f3, %f0
 	fldi	%f1, %g31, 660
 	fmul	%f2, %f0, %f1
@@ -4134,29 +3087,29 @@ jge_cont.49695:
 	fadd	%f11, %f1, %f0
 	ldi	%g3, %g31, 600
 	subi	%g6, %g3, 1
-	ldi	%g16, %g1, 0
+	ldi	%g16, %g1, 8
 	mov	%g7, %g16
-	subi	%g1, %g1, 96
-	call	pretrace_pixels.2958
-	addi	%g1, %g1, 96
-	addi	%g15, %g0, 0
+	subi	%g1, %g1, 108
+	call	pretrace_pixels.2975
+	addi	%g1, %g1, 108
+	addi	%g10, %g0, 0
 	addi	%g8, %g0, 2
 	ldi	%g3, %g31, 596
-	jlt	%g15, %g3, jle_else.49704
-	jmp	jle_cont.49705
-jle_else.49704:
+	jlt	%g10, %g3, jle_else.42388
+	jmp	jle_cont.42389
+jle_else.42388:
 	subi	%g3, %g3, 1
-	sti	%g15, %g1, 92
-	jlt	%g15, %g3, jle_else.49706
-	jmp	jle_cont.49707
-jle_else.49706:
+	sti	%g10, %g1, 104
+	jlt	%g10, %g3, jle_else.42390
+	jmp	jle_cont.42391
+jle_else.42390:
 	addi	%g4, %g0, 1
 	fldi	%f3, %g31, 612
 	ldi	%g3, %g31, 604
 	sub	%g3, %g4, %g3
-	subi	%g1, %g1, 100
+	subi	%g1, %g1, 112
 	call	min_caml_float_of_int
-	addi	%g1, %g1, 100
+	addi	%g1, %g1, 112
 	fmul	%f0, %f3, %f0
 	fldi	%f1, %g31, 660
 	fmul	%f2, %f0, %f1
@@ -4172,34 +3125,35 @@ jle_else.49706:
 	fadd	%f11, %f1, %f0
 	ldi	%g3, %g31, 600
 	subi	%g6, %g3, 1
-	ldi	%g17, %g1, 56
-	mov	%g7, %g17
-	subi	%g1, %g1, 100
-	call	pretrace_pixels.2958
-	addi	%g1, %g1, 100
-jle_cont.49707:
-	addi	%g14, %g0, 0
-	ldi	%g15, %g1, 92
-	ldi	%g18, %g1, 52
-	ldi	%g16, %g1, 0
-	ldi	%g17, %g1, 56
-	mov	%g27, %g18
-	mov	%g18, %g17
-	mov	%g17, %g27
-	subi	%g1, %g1, 100
-	call	scan_pixel.2969
-	addi	%g1, %g1, 100
-	addi	%g15, %g0, 1
-	addi	%g8, %g0, 4
-	ldi	%g16, %g1, 0
-	ldi	%g17, %g1, 56
-	ldi	%g18, %g1, 52
+	ldi	%g15, %g1, 4
+	mov	%g7, %g15
+	subi	%g1, %g1, 112
+	call	pretrace_pixels.2975
+	addi	%g1, %g1, 112
+jle_cont.42391:
+	addi	%g6, %g0, 0
+	ldi	%g10, %g1, 104
+	ldi	%g17, %g1, 0
+	ldi	%g16, %g1, 8
+	ldi	%g15, %g1, 4
+	mov	%g8, %g15
 	mov	%g7, %g16
-	mov	%g16, %g18
-	subi	%g1, %g1, 100
-	call	scan_line.2975
-	addi	%g1, %g1, 100
-jle_cont.49705:
+	mov	%g9, %g17
+	subi	%g1, %g1, 112
+	call	scan_pixel.2986
+	addi	%g1, %g1, 112
+	addi	%g10, %g0, 1
+	addi	%g3, %g0, 4
+	ldi	%g16, %g1, 8
+	ldi	%g15, %g1, 4
+	ldi	%g17, %g1, 0
+	mov	%g8, %g17
+	mov	%g9, %g15
+	mov	%g7, %g16
+	subi	%g1, %g1, 112
+	call	scan_line.2992
+	addi	%g1, %g1, 112
+jle_cont.42389:
 	addi	%g0, %g0, 0
 	halt
 
@@ -4209,3315 +3163,1902 @@ jle_cont.49705:
 ! use_regs = [%g27, %f29, %f16, %f15, %f1, %f0]
 ! ret type = Float
 !================================
-sin_sub.2497:
-	fjlt	%f29, %f1, fjge_else.49708
-	fjlt	%f1, %f16, fjge_else.49709
+sin_sub.2518:
+	fjlt	%f29, %f1, fjge_else.42392
+	fjlt	%f1, %f16, fjge_else.42393
 	fmov	%f0, %f1
 	return
-fjge_else.49709:
+fjge_else.42393:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49710
-	fjlt	%f1, %f16, fjge_else.49711
+	fjlt	%f29, %f1, fjge_else.42394
+	fjlt	%f1, %f16, fjge_else.42395
 	fmov	%f0, %f1
 	return
-fjge_else.49711:
+fjge_else.42395:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49712
-	fjlt	%f1, %f16, fjge_else.49713
+	fjlt	%f29, %f1, fjge_else.42396
+	fjlt	%f1, %f16, fjge_else.42397
 	fmov	%f0, %f1
 	return
-fjge_else.49713:
+fjge_else.42397:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49714
-	fjlt	%f1, %f16, fjge_else.49715
+	fjlt	%f29, %f1, fjge_else.42398
+	fjlt	%f1, %f16, fjge_else.42399
 	fmov	%f0, %f1
 	return
-fjge_else.49715:
+fjge_else.42399:
 	fadd	%f1, %f1, %f29
-	jmp	sin_sub.2497
-fjge_else.49714:
+	jmp	sin_sub.2518
+fjge_else.42398:
 	fsub	%f1, %f1, %f29
-	jmp	sin_sub.2497
-fjge_else.49712:
+	jmp	sin_sub.2518
+fjge_else.42396:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49716
-	fjlt	%f1, %f16, fjge_else.49717
+	fjlt	%f29, %f1, fjge_else.42400
+	fjlt	%f1, %f16, fjge_else.42401
 	fmov	%f0, %f1
 	return
-fjge_else.49717:
+fjge_else.42401:
 	fadd	%f1, %f1, %f29
-	jmp	sin_sub.2497
-fjge_else.49716:
+	jmp	sin_sub.2518
+fjge_else.42400:
 	fsub	%f1, %f1, %f29
-	jmp	sin_sub.2497
-fjge_else.49710:
+	jmp	sin_sub.2518
+fjge_else.42394:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49718
-	fjlt	%f1, %f16, fjge_else.49719
+	fjlt	%f29, %f1, fjge_else.42402
+	fjlt	%f1, %f16, fjge_else.42403
 	fmov	%f0, %f1
 	return
-fjge_else.49719:
+fjge_else.42403:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49720
-	fjlt	%f1, %f16, fjge_else.49721
+	fjlt	%f29, %f1, fjge_else.42404
+	fjlt	%f1, %f16, fjge_else.42405
 	fmov	%f0, %f1
 	return
-fjge_else.49721:
+fjge_else.42405:
 	fadd	%f1, %f1, %f29
-	jmp	sin_sub.2497
-fjge_else.49720:
+	jmp	sin_sub.2518
+fjge_else.42404:
 	fsub	%f1, %f1, %f29
-	jmp	sin_sub.2497
-fjge_else.49718:
+	jmp	sin_sub.2518
+fjge_else.42402:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49722
-	fjlt	%f1, %f16, fjge_else.49723
+	fjlt	%f29, %f1, fjge_else.42406
+	fjlt	%f1, %f16, fjge_else.42407
 	fmov	%f0, %f1
 	return
-fjge_else.49723:
+fjge_else.42407:
 	fadd	%f1, %f1, %f29
-	jmp	sin_sub.2497
-fjge_else.49722:
+	jmp	sin_sub.2518
+fjge_else.42406:
 	fsub	%f1, %f1, %f29
-	jmp	sin_sub.2497
-fjge_else.49708:
+	jmp	sin_sub.2518
+fjge_else.42392:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49724
-	fjlt	%f1, %f16, fjge_else.49725
+	fjlt	%f29, %f1, fjge_else.42408
+	fjlt	%f1, %f16, fjge_else.42409
 	fmov	%f0, %f1
 	return
-fjge_else.49725:
+fjge_else.42409:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49726
-	fjlt	%f1, %f16, fjge_else.49727
+	fjlt	%f29, %f1, fjge_else.42410
+	fjlt	%f1, %f16, fjge_else.42411
 	fmov	%f0, %f1
 	return
-fjge_else.49727:
+fjge_else.42411:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49728
-	fjlt	%f1, %f16, fjge_else.49729
+	fjlt	%f29, %f1, fjge_else.42412
+	fjlt	%f1, %f16, fjge_else.42413
 	fmov	%f0, %f1
 	return
-fjge_else.49729:
+fjge_else.42413:
 	fadd	%f1, %f1, %f29
-	jmp	sin_sub.2497
-fjge_else.49728:
+	jmp	sin_sub.2518
+fjge_else.42412:
 	fsub	%f1, %f1, %f29
-	jmp	sin_sub.2497
-fjge_else.49726:
+	jmp	sin_sub.2518
+fjge_else.42410:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49730
-	fjlt	%f1, %f16, fjge_else.49731
+	fjlt	%f29, %f1, fjge_else.42414
+	fjlt	%f1, %f16, fjge_else.42415
 	fmov	%f0, %f1
 	return
-fjge_else.49731:
+fjge_else.42415:
 	fadd	%f1, %f1, %f29
-	jmp	sin_sub.2497
-fjge_else.49730:
+	jmp	sin_sub.2518
+fjge_else.42414:
 	fsub	%f1, %f1, %f29
-	jmp	sin_sub.2497
-fjge_else.49724:
+	jmp	sin_sub.2518
+fjge_else.42408:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49732
-	fjlt	%f1, %f16, fjge_else.49733
+	fjlt	%f29, %f1, fjge_else.42416
+	fjlt	%f1, %f16, fjge_else.42417
 	fmov	%f0, %f1
 	return
-fjge_else.49733:
+fjge_else.42417:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49734
-	fjlt	%f1, %f16, fjge_else.49735
+	fjlt	%f29, %f1, fjge_else.42418
+	fjlt	%f1, %f16, fjge_else.42419
 	fmov	%f0, %f1
 	return
-fjge_else.49735:
+fjge_else.42419:
 	fadd	%f1, %f1, %f29
-	jmp	sin_sub.2497
-fjge_else.49734:
+	jmp	sin_sub.2518
+fjge_else.42418:
 	fsub	%f1, %f1, %f29
-	jmp	sin_sub.2497
-fjge_else.49732:
+	jmp	sin_sub.2518
+fjge_else.42416:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.49736
-	fjlt	%f1, %f16, fjge_else.49737
+	fjlt	%f29, %f1, fjge_else.42420
+	fjlt	%f1, %f16, fjge_else.42421
 	fmov	%f0, %f1
 	return
-fjge_else.49737:
+fjge_else.42421:
 	fadd	%f1, %f1, %f29
-	jmp	sin_sub.2497
-fjge_else.49736:
+	jmp	sin_sub.2518
+fjge_else.42420:
 	fsub	%f1, %f1, %f29
-	jmp	sin_sub.2497
+	jmp	sin_sub.2518
 
 !==============================
-! args = [%g6, %g5]
+! args = [%g4, %g6, %g9, %g10]
 ! fargs = []
-! use_regs = [%g6, %g5, %g4, %g3, %g27, %f15, %dummy]
+! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g10, %f15]
 ! ret type = Int
 !================================
-read_int_token.2507:
-	input	%g4
-	addi	%g3, %g0, 48
-	jlt	%g4, %g3, jle_else.49738
-	addi	%g3, %g0, 57
-	jlt	%g3, %g4, jle_else.49740
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49741
-jle_else.49740:
-	addi	%g3, %g0, 1
-jle_cont.49741:
-	jmp	jle_cont.49739
-jle_else.49738:
-	addi	%g3, %g0, 1
-jle_cont.49739:
-	jne	%g3, %g0, jeq_else.49742
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.49743
-	addi	%g3, %g0, 45
-	jne	%g5, %g3, jeq_else.49745
-	addi	%g3, %g0, -1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.49746
-jeq_else.49745:
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-jeq_cont.49746:
-	jmp	jeq_cont.49744
-jeq_else.49743:
-jeq_cont.49744:
-	ldi	%g3, %g31, 4
-	slli	%g5, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g5, %g5, %g3
-	subi	%g3, %g4, 48
-	add	%g3, %g5, %g3
-	sti	%g3, %g31, 4
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.49747
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.49749
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49750
-jle_else.49749:
-	addi	%g3, %g0, 1
-jle_cont.49750:
-	jmp	jle_cont.49748
-jle_else.49747:
-	addi	%g3, %g0, 1
-jle_cont.49748:
-	jne	%g3, %g0, jeq_else.49751
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.49752
-	addi	%g3, %g0, 45
-	jne	%g4, %g3, jeq_else.49754
-	addi	%g3, %g0, -1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.49755
-jeq_else.49754:
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-jeq_cont.49755:
-	jmp	jeq_cont.49753
-jeq_else.49752:
-jeq_cont.49753:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	jmp	read_int_token.2507
-jeq_else.49751:
-	ldi	%g3, %g31, 8
-	jne	%g3, %g28, jeq_else.49756
-	ldi	%g3, %g31, 4
+div_binary_search.2540:
+	add	%g3, %g9, %g10
+	srli	%g5, %g3, 1
+	mul	%g7, %g5, %g6
+	sub	%g3, %g10, %g9
+	jlt	%g28, %g3, jle_else.42422
+	mov	%g3, %g9
 	return
-jeq_else.49756:
-	ldi	%g3, %g31, 4
-	sub	%g3, %g0, %g3
+jle_else.42422:
+	jlt	%g7, %g4, jle_else.42423
+	jne	%g7, %g4, jeq_else.42424
+	mov	%g3, %g5
 	return
-jeq_else.49742:
-	jne	%g6, %g0, jeq_else.49757
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.49758
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.49760
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49761
-jle_else.49760:
-	addi	%g3, %g0, 1
-jle_cont.49761:
-	jmp	jle_cont.49759
-jle_else.49758:
-	addi	%g3, %g0, 1
-jle_cont.49759:
-	jne	%g3, %g0, jeq_else.49762
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.49763
-	addi	%g3, %g0, 45
-	jne	%g4, %g3, jeq_else.49765
-	addi	%g3, %g0, -1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.49766
-jeq_else.49765:
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-jeq_cont.49766:
-	jmp	jeq_cont.49764
-jeq_else.49763:
-jeq_cont.49764:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	jmp	read_int_token.2507
-jeq_else.49762:
-	addi	%g6, %g0, 0
-	jmp	read_int_token.2507
-jeq_else.49757:
-	ldi	%g3, %g31, 8
-	jne	%g3, %g28, jeq_else.49767
-	ldi	%g3, %g31, 4
+jeq_else.42424:
+	add	%g3, %g9, %g5
+	srli	%g7, %g3, 1
+	mul	%g8, %g7, %g6
+	sub	%g3, %g5, %g9
+	jlt	%g28, %g3, jle_else.42425
+	mov	%g3, %g9
 	return
-jeq_else.49767:
-	ldi	%g3, %g31, 4
-	sub	%g3, %g0, %g3
+jle_else.42425:
+	jlt	%g8, %g4, jle_else.42426
+	jne	%g8, %g4, jeq_else.42427
+	mov	%g3, %g7
 	return
-
-!==============================
-! args = [%g6, %g5]
-! fargs = []
-! use_regs = [%g6, %g5, %g4, %g3, %g27, %f15, %dummy]
-! ret type = Int
-!================================
-read_float_token1.2516:
-	input	%g4
-	addi	%g3, %g0, 48
-	jlt	%g4, %g3, jle_else.49768
-	addi	%g3, %g0, 57
-	jlt	%g3, %g4, jle_else.49770
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49771
-jle_else.49770:
-	addi	%g3, %g0, 1
-jle_cont.49771:
-	jmp	jle_cont.49769
-jle_else.49768:
-	addi	%g3, %g0, 1
-jle_cont.49769:
-	jne	%g3, %g0, jeq_else.49772
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.49773
-	addi	%g3, %g0, 45
-	jne	%g5, %g3, jeq_else.49775
-	addi	%g3, %g0, -1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.49776
-jeq_else.49775:
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-jeq_cont.49776:
-	jmp	jeq_cont.49774
-jeq_else.49773:
-jeq_cont.49774:
-	ldi	%g3, %g31, 12
-	slli	%g5, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g5, %g5, %g3
-	subi	%g3, %g4, 48
-	add	%g3, %g5, %g3
-	sti	%g3, %g31, 12
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.49777
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.49779
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49780
-jle_else.49779:
-	addi	%g3, %g0, 1
-jle_cont.49780:
-	jmp	jle_cont.49778
-jle_else.49777:
-	addi	%g3, %g0, 1
-jle_cont.49778:
-	jne	%g3, %g0, jeq_else.49781
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.49782
-	addi	%g3, %g0, 45
-	jne	%g4, %g3, jeq_else.49784
-	addi	%g3, %g0, -1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.49785
-jeq_else.49784:
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-jeq_cont.49785:
-	jmp	jeq_cont.49783
-jeq_else.49782:
-jeq_cont.49783:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	jmp	read_float_token1.2516
-jeq_else.49781:
+jeq_else.42427:
+	add	%g3, %g9, %g7
+	srli	%g8, %g3, 1
+	mul	%g5, %g8, %g6
+	sub	%g3, %g7, %g9
+	jlt	%g28, %g3, jle_else.42428
+	mov	%g3, %g9
+	return
+jle_else.42428:
+	jlt	%g5, %g4, jle_else.42429
+	jne	%g5, %g4, jeq_else.42430
+	mov	%g3, %g8
+	return
+jeq_else.42430:
+	add	%g3, %g9, %g8
+	srli	%g5, %g3, 1
+	mul	%g7, %g5, %g6
+	sub	%g3, %g8, %g9
+	jlt	%g28, %g3, jle_else.42431
+	mov	%g3, %g9
+	return
+jle_else.42431:
+	jlt	%g7, %g4, jle_else.42432
+	jne	%g7, %g4, jeq_else.42433
 	mov	%g3, %g5
 	return
-jeq_else.49772:
-	jne	%g6, %g0, jeq_else.49786
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.49787
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.49789
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49790
-jle_else.49789:
-	addi	%g3, %g0, 1
-jle_cont.49790:
-	jmp	jle_cont.49788
-jle_else.49787:
-	addi	%g3, %g0, 1
-jle_cont.49788:
-	jne	%g3, %g0, jeq_else.49791
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.49792
-	addi	%g3, %g0, 45
-	jne	%g4, %g3, jeq_else.49794
-	addi	%g3, %g0, -1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.49795
-jeq_else.49794:
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-jeq_cont.49795:
-	jmp	jeq_cont.49793
-jeq_else.49792:
-jeq_cont.49793:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	jmp	read_float_token1.2516
-jeq_else.49791:
-	addi	%g6, %g0, 0
-	jmp	read_float_token1.2516
-jeq_else.49786:
-	mov	%g3, %g4
-	return
-
-!==============================
-! args = [%g4]
-! fargs = []
-! use_regs = [%g5, %g4, %g3, %g27, %f15, %dummy]
-! ret type = Unit
-!================================
-read_float_token2.2519:
-	input	%g3
-	addi	%g5, %g0, 48
-	jlt	%g3, %g5, jle_else.49796
-	addi	%g5, %g0, 57
-	jlt	%g5, %g3, jle_else.49798
-	addi	%g5, %g0, 0
-	jmp	jle_cont.49799
-jle_else.49798:
-	addi	%g5, %g0, 1
-jle_cont.49799:
-	jmp	jle_cont.49797
-jle_else.49796:
-	addi	%g5, %g0, 1
-jle_cont.49797:
-	jne	%g5, %g0, jeq_else.49800
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.49801
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.49803
-	addi	%g4, %g0, 0
-	jmp	jle_cont.49804
-jle_else.49803:
-	addi	%g4, %g0, 1
-jle_cont.49804:
-	jmp	jle_cont.49802
-jle_else.49801:
-	addi	%g4, %g0, 1
-jle_cont.49802:
-	jne	%g4, %g0, jeq_else.49805
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	jmp	read_float_token2.2519
-jeq_else.49805:
-	return
-jeq_else.49800:
-	jne	%g4, %g0, jeq_else.49807
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.49808
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.49810
-	addi	%g4, %g0, 0
-	jmp	jle_cont.49811
-jle_else.49810:
-	addi	%g4, %g0, 1
-jle_cont.49811:
-	jmp	jle_cont.49809
-jle_else.49808:
-	addi	%g4, %g0, 1
-jle_cont.49809:
-	jne	%g4, %g0, jeq_else.49812
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	jmp	read_float_token2.2519
-jeq_else.49812:
-	addi	%g4, %g0, 0
-	jmp	read_float_token2.2519
-jeq_else.49807:
-	return
-
-!==============================
-! args = [%g4, %g6, %g9, %g10]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g10, %f15]
-! ret type = Int
-!================================
-div_binary_search.2523:
-	add	%g3, %g9, %g10
-	srli	%g5, %g3, 1
-	mul	%g7, %g5, %g6
-	sub	%g3, %g10, %g9
-	jlt	%g28, %g3, jle_else.49814
-	mov	%g3, %g9
-	return
-jle_else.49814:
-	jlt	%g7, %g4, jle_else.49815
-	jne	%g7, %g4, jeq_else.49816
-	mov	%g3, %g5
-	return
-jeq_else.49816:
-	add	%g3, %g9, %g5
-	srli	%g7, %g3, 1
-	mul	%g8, %g7, %g6
-	sub	%g3, %g5, %g9
-	jlt	%g28, %g3, jle_else.49817
-	mov	%g3, %g9
-	return
-jle_else.49817:
-	jlt	%g8, %g4, jle_else.49818
-	jne	%g8, %g4, jeq_else.49819
-	mov	%g3, %g7
-	return
-jeq_else.49819:
-	add	%g3, %g9, %g7
-	srli	%g8, %g3, 1
-	mul	%g5, %g8, %g6
-	sub	%g3, %g7, %g9
-	jlt	%g28, %g3, jle_else.49820
-	mov	%g3, %g9
-	return
-jle_else.49820:
-	jlt	%g5, %g4, jle_else.49821
-	jne	%g5, %g4, jeq_else.49822
-	mov	%g3, %g8
-	return
-jeq_else.49822:
-	add	%g3, %g9, %g8
-	srli	%g5, %g3, 1
-	mul	%g7, %g5, %g6
-	sub	%g3, %g8, %g9
-	jlt	%g28, %g3, jle_else.49823
-	mov	%g3, %g9
-	return
-jle_else.49823:
-	jlt	%g7, %g4, jle_else.49824
-	jne	%g7, %g4, jeq_else.49825
-	mov	%g3, %g5
-	return
-jeq_else.49825:
+jeq_else.42433:
 	mov	%g10, %g5
-	jmp	div_binary_search.2523
-jle_else.49824:
+	jmp	div_binary_search.2540
+jle_else.42432:
 	mov	%g10, %g8
 	mov	%g9, %g5
-	jmp	div_binary_search.2523
-jle_else.49821:
+	jmp	div_binary_search.2540
+jle_else.42429:
 	add	%g3, %g8, %g7
 	srli	%g5, %g3, 1
 	mul	%g9, %g5, %g6
 	sub	%g3, %g7, %g8
-	jlt	%g28, %g3, jle_else.49826
+	jlt	%g28, %g3, jle_else.42434
 	mov	%g3, %g8
 	return
-jle_else.49826:
-	jlt	%g9, %g4, jle_else.49827
-	jne	%g9, %g4, jeq_else.49828
+jle_else.42434:
+	jlt	%g9, %g4, jle_else.42435
+	jne	%g9, %g4, jeq_else.42436
 	mov	%g3, %g5
 	return
-jeq_else.49828:
+jeq_else.42436:
 	mov	%g10, %g5
 	mov	%g9, %g8
-	jmp	div_binary_search.2523
-jle_else.49827:
+	jmp	div_binary_search.2540
+jle_else.42435:
 	mov	%g10, %g7
 	mov	%g9, %g5
-	jmp	div_binary_search.2523
-jle_else.49818:
+	jmp	div_binary_search.2540
+jle_else.42426:
 	add	%g3, %g7, %g5
 	srli	%g8, %g3, 1
 	mul	%g9, %g8, %g6
 	sub	%g3, %g5, %g7
-	jlt	%g28, %g3, jle_else.49829
+	jlt	%g28, %g3, jle_else.42437
 	mov	%g3, %g7
 	return
-jle_else.49829:
-	jlt	%g9, %g4, jle_else.49830
-	jne	%g9, %g4, jeq_else.49831
+jle_else.42437:
+	jlt	%g9, %g4, jle_else.42438
+	jne	%g9, %g4, jeq_else.42439
 	mov	%g3, %g8
 	return
-jeq_else.49831:
+jeq_else.42439:
 	add	%g3, %g7, %g8
 	srli	%g5, %g3, 1
 	mul	%g9, %g5, %g6
 	sub	%g3, %g8, %g7
-	jlt	%g28, %g3, jle_else.49832
+	jlt	%g28, %g3, jle_else.42440
 	mov	%g3, %g7
 	return
-jle_else.49832:
-	jlt	%g9, %g4, jle_else.49833
-	jne	%g9, %g4, jeq_else.49834
+jle_else.42440:
+	jlt	%g9, %g4, jle_else.42441
+	jne	%g9, %g4, jeq_else.42442
 	mov	%g3, %g5
 	return
-jeq_else.49834:
+jeq_else.42442:
 	mov	%g10, %g5
 	mov	%g9, %g7
-	jmp	div_binary_search.2523
-jle_else.49833:
+	jmp	div_binary_search.2540
+jle_else.42441:
 	mov	%g10, %g8
 	mov	%g9, %g5
-	jmp	div_binary_search.2523
-jle_else.49830:
+	jmp	div_binary_search.2540
+jle_else.42438:
 	add	%g3, %g8, %g5
 	srli	%g7, %g3, 1
 	mul	%g9, %g7, %g6
 	sub	%g3, %g5, %g8
-	jlt	%g28, %g3, jle_else.49835
+	jlt	%g28, %g3, jle_else.42443
 	mov	%g3, %g8
 	return
-jle_else.49835:
-	jlt	%g9, %g4, jle_else.49836
-	jne	%g9, %g4, jeq_else.49837
+jle_else.42443:
+	jlt	%g9, %g4, jle_else.42444
+	jne	%g9, %g4, jeq_else.42445
 	mov	%g3, %g7
 	return
-jeq_else.49837:
+jeq_else.42445:
 	mov	%g10, %g7
 	mov	%g9, %g8
-	jmp	div_binary_search.2523
-jle_else.49836:
+	jmp	div_binary_search.2540
+jle_else.42444:
 	mov	%g10, %g5
 	mov	%g9, %g7
-	jmp	div_binary_search.2523
-jle_else.49815:
+	jmp	div_binary_search.2540
+jle_else.42423:
 	add	%g3, %g5, %g10
 	srli	%g8, %g3, 1
 	mul	%g7, %g8, %g6
 	sub	%g3, %g10, %g5
-	jlt	%g28, %g3, jle_else.49838
+	jlt	%g28, %g3, jle_else.42446
 	mov	%g3, %g5
 	return
-jle_else.49838:
-	jlt	%g7, %g4, jle_else.49839
-	jne	%g7, %g4, jeq_else.49840
+jle_else.42446:
+	jlt	%g7, %g4, jle_else.42447
+	jne	%g7, %g4, jeq_else.42448
 	mov	%g3, %g8
 	return
-jeq_else.49840:
+jeq_else.42448:
 	add	%g3, %g5, %g8
 	srli	%g7, %g3, 1
 	mul	%g9, %g7, %g6
 	sub	%g3, %g8, %g5
-	jlt	%g28, %g3, jle_else.49841
+	jlt	%g28, %g3, jle_else.42449
 	mov	%g3, %g5
 	return
-jle_else.49841:
-	jlt	%g9, %g4, jle_else.49842
-	jne	%g9, %g4, jeq_else.49843
+jle_else.42449:
+	jlt	%g9, %g4, jle_else.42450
+	jne	%g9, %g4, jeq_else.42451
 	mov	%g3, %g7
 	return
-jeq_else.49843:
+jeq_else.42451:
 	add	%g3, %g5, %g7
 	srli	%g8, %g3, 1
 	mul	%g9, %g8, %g6
 	sub	%g3, %g7, %g5
-	jlt	%g28, %g3, jle_else.49844
+	jlt	%g28, %g3, jle_else.42452
 	mov	%g3, %g5
 	return
-jle_else.49844:
-	jlt	%g9, %g4, jle_else.49845
-	jne	%g9, %g4, jeq_else.49846
+jle_else.42452:
+	jlt	%g9, %g4, jle_else.42453
+	jne	%g9, %g4, jeq_else.42454
 	mov	%g3, %g8
 	return
-jeq_else.49846:
+jeq_else.42454:
 	mov	%g10, %g8
 	mov	%g9, %g5
-	jmp	div_binary_search.2523
-jle_else.49845:
+	jmp	div_binary_search.2540
+jle_else.42453:
 	mov	%g10, %g7
 	mov	%g9, %g8
-	jmp	div_binary_search.2523
-jle_else.49842:
+	jmp	div_binary_search.2540
+jle_else.42450:
 	add	%g3, %g7, %g8
 	srli	%g5, %g3, 1
 	mul	%g9, %g5, %g6
 	sub	%g3, %g8, %g7
-	jlt	%g28, %g3, jle_else.49847
+	jlt	%g28, %g3, jle_else.42455
 	mov	%g3, %g7
 	return
-jle_else.49847:
-	jlt	%g9, %g4, jle_else.49848
-	jne	%g9, %g4, jeq_else.49849
+jle_else.42455:
+	jlt	%g9, %g4, jle_else.42456
+	jne	%g9, %g4, jeq_else.42457
 	mov	%g3, %g5
 	return
-jeq_else.49849:
+jeq_else.42457:
 	mov	%g10, %g5
 	mov	%g9, %g7
-	jmp	div_binary_search.2523
-jle_else.49848:
+	jmp	div_binary_search.2540
+jle_else.42456:
 	mov	%g10, %g8
 	mov	%g9, %g5
-	jmp	div_binary_search.2523
-jle_else.49839:
+	jmp	div_binary_search.2540
+jle_else.42447:
 	add	%g3, %g8, %g10
 	srli	%g7, %g3, 1
 	mul	%g5, %g7, %g6
 	sub	%g3, %g10, %g8
-	jlt	%g28, %g3, jle_else.49850
+	jlt	%g28, %g3, jle_else.42458
 	mov	%g3, %g8
 	return
-jle_else.49850:
-	jlt	%g5, %g4, jle_else.49851
-	jne	%g5, %g4, jeq_else.49852
+jle_else.42458:
+	jlt	%g5, %g4, jle_else.42459
+	jne	%g5, %g4, jeq_else.42460
 	mov	%g3, %g7
 	return
-jeq_else.49852:
+jeq_else.42460:
 	add	%g3, %g8, %g7
 	srli	%g5, %g3, 1
 	mul	%g9, %g5, %g6
 	sub	%g3, %g7, %g8
-	jlt	%g28, %g3, jle_else.49853
+	jlt	%g28, %g3, jle_else.42461
 	mov	%g3, %g8
 	return
-jle_else.49853:
-	jlt	%g9, %g4, jle_else.49854
-	jne	%g9, %g4, jeq_else.49855
+jle_else.42461:
+	jlt	%g9, %g4, jle_else.42462
+	jne	%g9, %g4, jeq_else.42463
 	mov	%g3, %g5
 	return
-jeq_else.49855:
+jeq_else.42463:
 	mov	%g10, %g5
 	mov	%g9, %g8
-	jmp	div_binary_search.2523
-jle_else.49854:
+	jmp	div_binary_search.2540
+jle_else.42462:
 	mov	%g10, %g7
 	mov	%g9, %g5
-	jmp	div_binary_search.2523
-jle_else.49851:
+	jmp	div_binary_search.2540
+jle_else.42459:
 	add	%g3, %g7, %g10
 	srli	%g5, %g3, 1
 	mul	%g8, %g5, %g6
 	sub	%g3, %g10, %g7
-	jlt	%g28, %g3, jle_else.49856
+	jlt	%g28, %g3, jle_else.42464
 	mov	%g3, %g7
 	return
-jle_else.49856:
-	jlt	%g8, %g4, jle_else.49857
-	jne	%g8, %g4, jeq_else.49858
+jle_else.42464:
+	jlt	%g8, %g4, jle_else.42465
+	jne	%g8, %g4, jeq_else.42466
 	mov	%g3, %g5
 	return
-jeq_else.49858:
+jeq_else.42466:
 	mov	%g10, %g5
 	mov	%g9, %g7
-	jmp	div_binary_search.2523
-jle_else.49857:
+	jmp	div_binary_search.2540
+jle_else.42465:
 	mov	%g9, %g5
-	jmp	div_binary_search.2523
+	jmp	div_binary_search.2540
 
 !==============================
 ! args = [%g4]
 ! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g13, %g12, %g11, %g10, %f15, %dummy]
+! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g14, %g13, %g12, %g11, %g10, %f15, %dummy]
 ! ret type = Unit
 !================================
-print_int.2528:
-	addi	%g3, %g0, 1000
-	jlt	%g4, %g3, jle_else.49859
-	return
-jle_else.49859:
-	jlt	%g4, %g0, jge_else.49861
-	addi	%g6, %g0, 100
+print_int.2545:
+	jlt	%g4, %g0, jge_else.42467
+	mvhi	%g3, 1525
+	mvlo	%g3, 57600
+	jlt	%g3, %g4, jle_else.42468
+	jne	%g3, %g4, jeq_else.42470
+	addi	%g5, %g0, 1
+	jmp	jeq_cont.42471
+jeq_else.42470:
+	addi	%g5, %g0, 0
+jeq_cont.42471:
+	jmp	jle_cont.42469
+jle_else.42468:
+	mvhi	%g3, 3051
+	mvlo	%g3, 49664
+	jlt	%g3, %g4, jle_else.42472
+	jne	%g3, %g4, jeq_else.42474
+	addi	%g5, %g0, 2
+	jmp	jeq_cont.42475
+jeq_else.42474:
+	addi	%g5, %g0, 1
+jeq_cont.42475:
+	jmp	jle_cont.42473
+jle_else.42472:
+	addi	%g5, %g0, 2
+jle_cont.42473:
+jle_cont.42469:
+	mvhi	%g3, 1525
+	mvlo	%g3, 57600
+	mul	%g3, %g5, %g3
+	sub	%g4, %g4, %g3
+	jlt	%g0, %g5, jle_else.42476
+	addi	%g13, %g0, 0
+	jmp	jle_cont.42477
+jle_else.42476:
+	addi	%g3, %g0, 48
+	add	%g3, %g3, %g5
+	output	%g3
+	addi	%g13, %g0, 1
+jle_cont.42477:
+	mvhi	%g6, 152
+	mvlo	%g6, 38528
 	addi	%g12, %g0, 0
 	addi	%g10, %g0, 10
 	addi	%g9, %g0, 5
-	addi	%g5, %g0, 500
+	mvhi	%g5, 762
+	mvlo	%g5, 61568
 	sti	%g4, %g1, 0
-	jlt	%g5, %g4, jle_else.49862
-	jne	%g5, %g4, jeq_else.49864
+	jlt	%g5, %g4, jle_else.42478
+	jne	%g5, %g4, jeq_else.42480
 	addi	%g3, %g0, 5
-	jmp	jeq_cont.49865
-jeq_else.49864:
+	jmp	jeq_cont.42481
+jeq_else.42480:
 	addi	%g11, %g0, 2
-	addi	%g5, %g0, 200
-	jlt	%g5, %g4, jle_else.49866
-	jne	%g5, %g4, jeq_else.49868
+	mvhi	%g5, 305
+	mvlo	%g5, 11520
+	jlt	%g5, %g4, jle_else.42482
+	jne	%g5, %g4, jeq_else.42484
 	addi	%g3, %g0, 2
-	jmp	jeq_cont.49869
-jeq_else.49868:
+	jmp	jeq_cont.42485
+jeq_else.42484:
 	addi	%g9, %g0, 1
-	addi	%g5, %g0, 100
-	jlt	%g5, %g4, jle_else.49870
-	jne	%g5, %g4, jeq_else.49872
+	mvhi	%g5, 152
+	mvlo	%g5, 38528
+	jlt	%g5, %g4, jle_else.42486
+	jne	%g5, %g4, jeq_else.42488
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.49873
-jeq_else.49872:
+	jmp	jeq_cont.42489
+jeq_else.42488:
 	mov	%g10, %g9
 	mov	%g9, %g12
 	subi	%g1, %g1, 8
-	call	div_binary_search.2523
+	call	div_binary_search.2540
 	addi	%g1, %g1, 8
-jeq_cont.49873:
-	jmp	jle_cont.49871
-jle_else.49870:
+jeq_cont.42489:
+	jmp	jle_cont.42487
+jle_else.42486:
 	mov	%g10, %g11
 	subi	%g1, %g1, 8
-	call	div_binary_search.2523
+	call	div_binary_search.2540
 	addi	%g1, %g1, 8
-jle_cont.49871:
-jeq_cont.49869:
-	jmp	jle_cont.49867
-jle_else.49866:
+jle_cont.42487:
+jeq_cont.42485:
+	jmp	jle_cont.42483
+jle_else.42482:
 	addi	%g10, %g0, 3
-	addi	%g5, %g0, 300
-	jlt	%g5, %g4, jle_else.49874
-	jne	%g5, %g4, jeq_else.49876
+	mvhi	%g5, 457
+	mvlo	%g5, 50048
+	jlt	%g5, %g4, jle_else.42490
+	jne	%g5, %g4, jeq_else.42492
 	addi	%g3, %g0, 3
-	jmp	jeq_cont.49877
-jeq_else.49876:
+	jmp	jeq_cont.42493
+jeq_else.42492:
 	mov	%g9, %g11
 	subi	%g1, %g1, 8
-	call	div_binary_search.2523
+	call	div_binary_search.2540
 	addi	%g1, %g1, 8
-jeq_cont.49877:
-	jmp	jle_cont.49875
-jle_else.49874:
+jeq_cont.42493:
+	jmp	jle_cont.42491
+jle_else.42490:
 	mov	%g27, %g10
 	mov	%g10, %g9
 	mov	%g9, %g27
 	subi	%g1, %g1, 8
-	call	div_binary_search.2523
+	call	div_binary_search.2540
 	addi	%g1, %g1, 8
-jle_cont.49875:
-jle_cont.49867:
-jeq_cont.49865:
-	jmp	jle_cont.49863
-jle_else.49862:
+jle_cont.42491:
+jle_cont.42483:
+jeq_cont.42481:
+	jmp	jle_cont.42479
+jle_else.42478:
 	addi	%g11, %g0, 7
-	addi	%g5, %g0, 700
-	jlt	%g5, %g4, jle_else.49878
-	jne	%g5, %g4, jeq_else.49880
+	mvhi	%g5, 1068
+	mvlo	%g5, 7552
+	jlt	%g5, %g4, jle_else.42494
+	jne	%g5, %g4, jeq_else.42496
 	addi	%g3, %g0, 7
-	jmp	jeq_cont.49881
-jeq_else.49880:
+	jmp	jeq_cont.42497
+jeq_else.42496:
 	addi	%g10, %g0, 6
-	addi	%g5, %g0, 600
-	jlt	%g5, %g4, jle_else.49882
-	jne	%g5, %g4, jeq_else.49884
+	mvhi	%g5, 915
+	mvlo	%g5, 34560
+	jlt	%g5, %g4, jle_else.42498
+	jne	%g5, %g4, jeq_else.42500
 	addi	%g3, %g0, 6
-	jmp	jeq_cont.49885
-jeq_else.49884:
+	jmp	jeq_cont.42501
+jeq_else.42500:
 	subi	%g1, %g1, 8
-	call	div_binary_search.2523
+	call	div_binary_search.2540
 	addi	%g1, %g1, 8
-jeq_cont.49885:
-	jmp	jle_cont.49883
-jle_else.49882:
+jeq_cont.42501:
+	jmp	jle_cont.42499
+jle_else.42498:
 	mov	%g9, %g10
 	mov	%g10, %g11
 	subi	%g1, %g1, 8
-	call	div_binary_search.2523
+	call	div_binary_search.2540
 	addi	%g1, %g1, 8
-jle_cont.49883:
-jeq_cont.49881:
-	jmp	jle_cont.49879
-jle_else.49878:
+jle_cont.42499:
+jeq_cont.42497:
+	jmp	jle_cont.42495
+jle_else.42494:
 	addi	%g9, %g0, 8
-	addi	%g5, %g0, 800
-	jlt	%g5, %g4, jle_else.49886
-	jne	%g5, %g4, jeq_else.49888
+	mvhi	%g5, 1220
+	mvlo	%g5, 46080
+	jlt	%g5, %g4, jle_else.42502
+	jne	%g5, %g4, jeq_else.42504
 	addi	%g3, %g0, 8
-	jmp	jeq_cont.49889
-jeq_else.49888:
+	jmp	jeq_cont.42505
+jeq_else.42504:
 	mov	%g10, %g9
 	mov	%g9, %g11
 	subi	%g1, %g1, 8
-	call	div_binary_search.2523
+	call	div_binary_search.2540
 	addi	%g1, %g1, 8
-jeq_cont.49889:
-	jmp	jle_cont.49887
-jle_else.49886:
+jeq_cont.42505:
+	jmp	jle_cont.42503
+jle_else.42502:
 	subi	%g1, %g1, 8
-	call	div_binary_search.2523
+	call	div_binary_search.2540
 	addi	%g1, %g1, 8
-jle_cont.49887:
-jle_cont.49879:
-jle_cont.49863:
-	muli	%g5, %g3, 100
+jle_cont.42503:
+jle_cont.42495:
+jle_cont.42479:
+	mvhi	%g5, 152
+	mvlo	%g5, 38528
+	mul	%g5, %g3, %g5
 	ldi	%g4, %g1, 0
 	sub	%g4, %g4, %g5
-	jlt	%g0, %g3, jle_else.49890
-	addi	%g13, %g0, 0
-	jmp	jle_cont.49891
-jle_else.49890:
+	jlt	%g0, %g3, jle_else.42506
+	jne	%g13, %g0, jeq_else.42508
+	addi	%g14, %g0, 0
+	jmp	jeq_cont.42509
+jeq_else.42508:
 	addi	%g5, %g0, 48
 	add	%g3, %g5, %g3
 	output	%g3
-	addi	%g13, %g0, 1
-jle_cont.49891:
-	addi	%g6, %g0, 10
+	addi	%g14, %g0, 1
+jeq_cont.42509:
+	jmp	jle_cont.42507
+jle_else.42506:
+	addi	%g5, %g0, 48
+	add	%g3, %g5, %g3
+	output	%g3
+	addi	%g14, %g0, 1
+jle_cont.42507:
+	mvhi	%g6, 15
+	mvlo	%g6, 16960
 	addi	%g12, %g0, 0
 	addi	%g10, %g0, 10
 	addi	%g9, %g0, 5
-	addi	%g5, %g0, 50
+	mvhi	%g5, 76
+	mvlo	%g5, 19264
 	sti	%g4, %g1, 4
-	jlt	%g5, %g4, jle_else.49892
-	jne	%g5, %g4, jeq_else.49894
+	jlt	%g5, %g4, jle_else.42510
+	jne	%g5, %g4, jeq_else.42512
 	addi	%g3, %g0, 5
-	jmp	jeq_cont.49895
-jeq_else.49894:
+	jmp	jeq_cont.42513
+jeq_else.42512:
 	addi	%g11, %g0, 2
-	addi	%g5, %g0, 20
-	jlt	%g5, %g4, jle_else.49896
-	jne	%g5, %g4, jeq_else.49898
+	mvhi	%g5, 30
+	mvlo	%g5, 33920
+	jlt	%g5, %g4, jle_else.42514
+	jne	%g5, %g4, jeq_else.42516
 	addi	%g3, %g0, 2
-	jmp	jeq_cont.49899
-jeq_else.49898:
+	jmp	jeq_cont.42517
+jeq_else.42516:
 	addi	%g9, %g0, 1
-	addi	%g5, %g0, 10
-	jlt	%g5, %g4, jle_else.49900
-	jne	%g5, %g4, jeq_else.49902
+	mvhi	%g5, 15
+	mvlo	%g5, 16960
+	jlt	%g5, %g4, jle_else.42518
+	jne	%g5, %g4, jeq_else.42520
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.49903
-jeq_else.49902:
+	jmp	jeq_cont.42521
+jeq_else.42520:
 	mov	%g10, %g9
 	mov	%g9, %g12
 	subi	%g1, %g1, 12
-	call	div_binary_search.2523
+	call	div_binary_search.2540
 	addi	%g1, %g1, 12
-jeq_cont.49903:
-	jmp	jle_cont.49901
-jle_else.49900:
+jeq_cont.42521:
+	jmp	jle_cont.42519
+jle_else.42518:
 	mov	%g10, %g11
 	subi	%g1, %g1, 12
-	call	div_binary_search.2523
+	call	div_binary_search.2540
 	addi	%g1, %g1, 12
-jle_cont.49901:
-jeq_cont.49899:
-	jmp	jle_cont.49897
-jle_else.49896:
+jle_cont.42519:
+jeq_cont.42517:
+	jmp	jle_cont.42515
+jle_else.42514:
 	addi	%g10, %g0, 3
-	addi	%g5, %g0, 30
-	jlt	%g5, %g4, jle_else.49904
-	jne	%g5, %g4, jeq_else.49906
+	mvhi	%g5, 45
+	mvlo	%g5, 50880
+	jlt	%g5, %g4, jle_else.42522
+	jne	%g5, %g4, jeq_else.42524
 	addi	%g3, %g0, 3
-	jmp	jeq_cont.49907
-jeq_else.49906:
+	jmp	jeq_cont.42525
+jeq_else.42524:
 	mov	%g9, %g11
 	subi	%g1, %g1, 12
-	call	div_binary_search.2523
+	call	div_binary_search.2540
 	addi	%g1, %g1, 12
-jeq_cont.49907:
-	jmp	jle_cont.49905
-jle_else.49904:
+jeq_cont.42525:
+	jmp	jle_cont.42523
+jle_else.42522:
 	mov	%g27, %g10
 	mov	%g10, %g9
 	mov	%g9, %g27
 	subi	%g1, %g1, 12
-	call	div_binary_search.2523
+	call	div_binary_search.2540
 	addi	%g1, %g1, 12
-jle_cont.49905:
-jle_cont.49897:
-jeq_cont.49895:
-	jmp	jle_cont.49893
-jle_else.49892:
+jle_cont.42523:
+jle_cont.42515:
+jeq_cont.42513:
+	jmp	jle_cont.42511
+jle_else.42510:
 	addi	%g11, %g0, 7
-	addi	%g5, %g0, 70
-	jlt	%g5, %g4, jle_else.49908
-	jne	%g5, %g4, jeq_else.49910
+	mvhi	%g5, 106
+	mvlo	%g5, 53184
+	jlt	%g5, %g4, jle_else.42526
+	jne	%g5, %g4, jeq_else.42528
 	addi	%g3, %g0, 7
-	jmp	jeq_cont.49911
-jeq_else.49910:
+	jmp	jeq_cont.42529
+jeq_else.42528:
 	addi	%g10, %g0, 6
-	addi	%g5, %g0, 60
-	jlt	%g5, %g4, jle_else.49912
-	jne	%g5, %g4, jeq_else.49914
+	mvhi	%g5, 91
+	mvlo	%g5, 36224
+	jlt	%g5, %g4, jle_else.42530
+	jne	%g5, %g4, jeq_else.42532
 	addi	%g3, %g0, 6
-	jmp	jeq_cont.49915
-jeq_else.49914:
+	jmp	jeq_cont.42533
+jeq_else.42532:
 	subi	%g1, %g1, 12
-	call	div_binary_search.2523
+	call	div_binary_search.2540
 	addi	%g1, %g1, 12
-jeq_cont.49915:
-	jmp	jle_cont.49913
-jle_else.49912:
+jeq_cont.42533:
+	jmp	jle_cont.42531
+jle_else.42530:
 	mov	%g9, %g10
 	mov	%g10, %g11
 	subi	%g1, %g1, 12
-	call	div_binary_search.2523
+	call	div_binary_search.2540
 	addi	%g1, %g1, 12
-jle_cont.49913:
-jeq_cont.49911:
-	jmp	jle_cont.49909
-jle_else.49908:
+jle_cont.42531:
+jeq_cont.42529:
+	jmp	jle_cont.42527
+jle_else.42526:
 	addi	%g9, %g0, 8
-	addi	%g5, %g0, 80
-	jlt	%g5, %g4, jle_else.49916
-	jne	%g5, %g4, jeq_else.49918
+	mvhi	%g5, 122
+	mvlo	%g5, 4608
+	jlt	%g5, %g4, jle_else.42534
+	jne	%g5, %g4, jeq_else.42536
 	addi	%g3, %g0, 8
-	jmp	jeq_cont.49919
-jeq_else.49918:
+	jmp	jeq_cont.42537
+jeq_else.42536:
 	mov	%g10, %g9
 	mov	%g9, %g11
 	subi	%g1, %g1, 12
-	call	div_binary_search.2523
+	call	div_binary_search.2540
 	addi	%g1, %g1, 12
-jeq_cont.49919:
-	jmp	jle_cont.49917
-jle_else.49916:
+jeq_cont.42537:
+	jmp	jle_cont.42535
+jle_else.42534:
 	subi	%g1, %g1, 12
-	call	div_binary_search.2523
+	call	div_binary_search.2540
 	addi	%g1, %g1, 12
-jle_cont.49917:
-jle_cont.49909:
-jle_cont.49893:
-	muli	%g5, %g3, 10
+jle_cont.42535:
+jle_cont.42527:
+jle_cont.42511:
+	mvhi	%g5, 15
+	mvlo	%g5, 16960
+	mul	%g5, %g3, %g5
 	ldi	%g4, %g1, 4
 	sub	%g4, %g4, %g5
-	jlt	%g0, %g3, jle_else.49920
-	jne	%g13, %g0, jeq_else.49922
-	addi	%g5, %g0, 0
-	jmp	jeq_cont.49923
-jeq_else.49922:
+	jlt	%g0, %g3, jle_else.42538
+	jne	%g14, %g0, jeq_else.42540
+	addi	%g13, %g0, 0
+	jmp	jeq_cont.42541
+jeq_else.42540:
 	addi	%g5, %g0, 48
 	add	%g3, %g5, %g3
 	output	%g3
-	addi	%g5, %g0, 1
-jeq_cont.49923:
-	jmp	jle_cont.49921
-jle_else.49920:
+	addi	%g13, %g0, 1
+jeq_cont.42541:
+	jmp	jle_cont.42539
+jle_else.42538:
 	addi	%g5, %g0, 48
 	add	%g3, %g5, %g3
 	output	%g3
-	addi	%g5, %g0, 1
-jle_cont.49921:
-	addi	%g3, %g0, 48
-	add	%g3, %g3, %g4
-	output	%g3
-	return
-jge_else.49861:
-	addi	%g3, %g0, 45
-	output	%g3
-	sub	%g4, %g0, %g4
-	jmp	print_int.2528
-
-!==============================
-! args = [%g16]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g2, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f29, %f26, %f25, %f24, %f23, %f22, %f21, %f20, %f2, %f17, %f16, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0, %dummy]
-! ret type = Unit
-!================================
-read_object.2696:
-	addi	%g3, %g0, 60
-	jlt	%g16, %g3, jle_else.49924
-	return
-jle_else.49924:
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 8
-	input	%g5
-	addi	%g14, %g0, 48
-	jlt	%g5, %g14, jle_else.49926
-	addi	%g14, %g0, 57
-	jlt	%g14, %g5, jle_else.49928
+	addi	%g13, %g0, 1
+jle_cont.42539:
+	mvhi	%g6, 1
+	mvlo	%g6, 34464
+	addi	%g12, %g0, 0
+	addi	%g10, %g0, 10
+	addi	%g9, %g0, 5
+	mvhi	%g5, 7
+	mvlo	%g5, 41248
+	sti	%g4, %g1, 8
+	jlt	%g5, %g4, jle_else.42542
+	jne	%g5, %g4, jeq_else.42544
+	addi	%g3, %g0, 5
+	jmp	jeq_cont.42545
+jeq_else.42544:
+	addi	%g11, %g0, 2
+	mvhi	%g5, 3
+	mvlo	%g5, 3392
+	jlt	%g5, %g4, jle_else.42546
+	jne	%g5, %g4, jeq_else.42548
+	addi	%g3, %g0, 2
+	jmp	jeq_cont.42549
+jeq_else.42548:
+	addi	%g9, %g0, 1
+	mvhi	%g5, 1
+	mvlo	%g5, 34464
+	jlt	%g5, %g4, jle_else.42550
+	jne	%g5, %g4, jeq_else.42552
+	addi	%g3, %g0, 1
+	jmp	jeq_cont.42553
+jeq_else.42552:
+	mov	%g10, %g9
+	mov	%g9, %g12
+	subi	%g1, %g1, 16
+	call	div_binary_search.2540
+	addi	%g1, %g1, 16
+jeq_cont.42553:
+	jmp	jle_cont.42551
+jle_else.42550:
+	mov	%g10, %g11
+	subi	%g1, %g1, 16
+	call	div_binary_search.2540
+	addi	%g1, %g1, 16
+jle_cont.42551:
+jeq_cont.42549:
+	jmp	jle_cont.42547
+jle_else.42546:
+	addi	%g10, %g0, 3
+	mvhi	%g5, 4
+	mvlo	%g5, 37856
+	jlt	%g5, %g4, jle_else.42554
+	jne	%g5, %g4, jeq_else.42556
+	addi	%g3, %g0, 3
+	jmp	jeq_cont.42557
+jeq_else.42556:
+	mov	%g9, %g11
+	subi	%g1, %g1, 16
+	call	div_binary_search.2540
+	addi	%g1, %g1, 16
+jeq_cont.42557:
+	jmp	jle_cont.42555
+jle_else.42554:
+	mov	%g27, %g10
+	mov	%g10, %g9
+	mov	%g9, %g27
+	subi	%g1, %g1, 16
+	call	div_binary_search.2540
+	addi	%g1, %g1, 16
+jle_cont.42555:
+jle_cont.42547:
+jeq_cont.42545:
+	jmp	jle_cont.42543
+jle_else.42542:
+	addi	%g11, %g0, 7
+	mvhi	%g5, 10
+	mvlo	%g5, 44640
+	jlt	%g5, %g4, jle_else.42558
+	jne	%g5, %g4, jeq_else.42560
+	addi	%g3, %g0, 7
+	jmp	jeq_cont.42561
+jeq_else.42560:
+	addi	%g10, %g0, 6
+	mvhi	%g5, 9
+	mvlo	%g5, 10176
+	jlt	%g5, %g4, jle_else.42562
+	jne	%g5, %g4, jeq_else.42564
+	addi	%g3, %g0, 6
+	jmp	jeq_cont.42565
+jeq_else.42564:
+	subi	%g1, %g1, 16
+	call	div_binary_search.2540
+	addi	%g1, %g1, 16
+jeq_cont.42565:
+	jmp	jle_cont.42563
+jle_else.42562:
+	mov	%g9, %g10
+	mov	%g10, %g11
+	subi	%g1, %g1, 16
+	call	div_binary_search.2540
+	addi	%g1, %g1, 16
+jle_cont.42563:
+jeq_cont.42561:
+	jmp	jle_cont.42559
+jle_else.42558:
+	addi	%g9, %g0, 8
+	mvhi	%g5, 12
+	mvlo	%g5, 13568
+	jlt	%g5, %g4, jle_else.42566
+	jne	%g5, %g4, jeq_else.42568
+	addi	%g3, %g0, 8
+	jmp	jeq_cont.42569
+jeq_else.42568:
+	mov	%g10, %g9
+	mov	%g9, %g11
+	subi	%g1, %g1, 16
+	call	div_binary_search.2540
+	addi	%g1, %g1, 16
+jeq_cont.42569:
+	jmp	jle_cont.42567
+jle_else.42566:
+	subi	%g1, %g1, 16
+	call	div_binary_search.2540
+	addi	%g1, %g1, 16
+jle_cont.42567:
+jle_cont.42559:
+jle_cont.42543:
+	mvhi	%g5, 1
+	mvlo	%g5, 34464
+	mul	%g5, %g3, %g5
+	ldi	%g4, %g1, 8
+	sub	%g4, %g4, %g5
+	jlt	%g0, %g3, jle_else.42570
+	jne	%g13, %g0, jeq_else.42572
 	addi	%g14, %g0, 0
-	jmp	jle_cont.49929
-jle_else.49928:
+	jmp	jeq_cont.42573
+jeq_else.42572:
+	addi	%g5, %g0, 48
+	add	%g3, %g5, %g3
+	output	%g3
 	addi	%g14, %g0, 1
-jle_cont.49929:
-	jmp	jle_cont.49927
-jle_else.49926:
+jeq_cont.42573:
+	jmp	jle_cont.42571
+jle_else.42570:
+	addi	%g5, %g0, 48
+	add	%g3, %g5, %g3
+	output	%g3
 	addi	%g14, %g0, 1
-jle_cont.49927:
-	jne	%g14, %g0, jeq_else.49930
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.49932
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.49933
-jeq_else.49932:
-jeq_cont.49933:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g14, %g3
-	jmp	jeq_cont.49931
-jeq_else.49930:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g14, %g3
-jeq_cont.49931:
-	jne	%g14, %g29, jeq_else.49934
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.49935
-jeq_else.49934:
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 8
-	input	%g5
-	addi	%g11, %g0, 48
-	jlt	%g5, %g11, jle_else.49936
-	addi	%g11, %g0, 57
-	jlt	%g11, %g5, jle_else.49938
-	addi	%g11, %g0, 0
-	jmp	jle_cont.49939
-jle_else.49938:
-	addi	%g11, %g0, 1
-jle_cont.49939:
-	jmp	jle_cont.49937
-jle_else.49936:
-	addi	%g11, %g0, 1
-jle_cont.49937:
-	jne	%g11, %g0, jeq_else.49940
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.49942
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.49943
-jeq_else.49942:
-jeq_cont.49943:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g11, %g3
-	jmp	jeq_cont.49941
-jeq_else.49940:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g11, %g3
-jeq_cont.49941:
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 8
-	input	%g5
-	addi	%g15, %g0, 48
-	jlt	%g5, %g15, jle_else.49944
-	addi	%g15, %g0, 57
-	jlt	%g15, %g5, jle_else.49946
-	addi	%g15, %g0, 0
-	jmp	jle_cont.49947
-jle_else.49946:
-	addi	%g15, %g0, 1
-jle_cont.49947:
-	jmp	jle_cont.49945
-jle_else.49944:
-	addi	%g15, %g0, 1
-jle_cont.49945:
-	jne	%g15, %g0, jeq_else.49948
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.49950
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.49951
-jeq_else.49950:
-jeq_cont.49951:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g15, %g3
-	jmp	jeq_cont.49949
-jeq_else.49948:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g15, %g3
-jeq_cont.49949:
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 8
-	input	%g5
-	addi	%g13, %g0, 48
-	jlt	%g5, %g13, jle_else.49952
-	addi	%g13, %g0, 57
-	jlt	%g13, %g5, jle_else.49954
-	addi	%g13, %g0, 0
-	jmp	jle_cont.49955
-jle_else.49954:
-	addi	%g13, %g0, 1
-jle_cont.49955:
-	jmp	jle_cont.49953
-jle_else.49952:
-	addi	%g13, %g0, 1
-jle_cont.49953:
-	jne	%g13, %g0, jeq_else.49956
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.49958
+jle_cont.42571:
+	addi	%g6, %g0, 10000
+	addi	%g12, %g0, 0
+	addi	%g10, %g0, 10
+	addi	%g9, %g0, 5
+	mvhi	%g5, 0
+	mvlo	%g5, 50000
+	sti	%g4, %g1, 12
+	jlt	%g5, %g4, jle_else.42574
+	jne	%g5, %g4, jeq_else.42576
+	addi	%g3, %g0, 5
+	jmp	jeq_cont.42577
+jeq_else.42576:
+	addi	%g11, %g0, 2
+	addi	%g5, %g0, 20000
+	jlt	%g5, %g4, jle_else.42578
+	jne	%g5, %g4, jeq_else.42580
+	addi	%g3, %g0, 2
+	jmp	jeq_cont.42581
+jeq_else.42580:
+	addi	%g9, %g0, 1
+	addi	%g5, %g0, 10000
+	jlt	%g5, %g4, jle_else.42582
+	jne	%g5, %g4, jeq_else.42584
 	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.49959
-jeq_else.49958:
-jeq_cont.49959:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g13, %g3
-	jmp	jeq_cont.49957
-jeq_else.49956:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g13, %g3
-jeq_cont.49957:
-	addi	%g3, %g0, 3
-	fmov	%f0, %f16
-	subi	%g1, %g1, 4
-	call	min_caml_create_float_array
-	addi	%g1, %g1, 4
-	mov	%g8, %g3
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.49960
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.49962
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49963
-jle_else.49962:
-	addi	%g3, %g0, 1
-jle_cont.49963:
-	jmp	jle_cont.49961
-jle_else.49960:
-	addi	%g3, %g0, 1
-jle_cont.49961:
-	jne	%g3, %g0, jeq_else.49964
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.49966
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.49967
-jeq_else.49966:
-jeq_cont.49967:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49965
-jeq_else.49964:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.49965:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.49968
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.49970
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.49972
-	addi	%g4, %g0, 0
-	jmp	jle_cont.49973
-jle_else.49972:
-	addi	%g4, %g0, 1
-jle_cont.49973:
-	jmp	jle_cont.49971
-jle_else.49970:
-	addi	%g4, %g0, 1
-jle_cont.49971:
-	jne	%g4, %g0, jeq_else.49974
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49975
-jeq_else.49974:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.49975:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f4, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f4, %f0
-	jmp	jeq_cont.49969
-jeq_else.49968:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.49969:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.49976
-	fmov	%f1, %f0
-	jmp	jeq_cont.49977
-jeq_else.49976:
-	fneg	%f1, %f0
-jeq_cont.49977:
-	fsti	%f1, %g8, 0
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.49978
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.49980
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49981
-jle_else.49980:
-	addi	%g3, %g0, 1
-jle_cont.49981:
-	jmp	jle_cont.49979
-jle_else.49978:
-	addi	%g3, %g0, 1
-jle_cont.49979:
-	jne	%g3, %g0, jeq_else.49982
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.49984
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.49985
-jeq_else.49984:
-jeq_cont.49985:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49983
-jeq_else.49982:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.49983:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.49986
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.49988
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.49990
-	addi	%g4, %g0, 0
-	jmp	jle_cont.49991
-jle_else.49990:
-	addi	%g4, %g0, 1
-jle_cont.49991:
-	jmp	jle_cont.49989
-jle_else.49988:
-	addi	%g4, %g0, 1
-jle_cont.49989:
-	jne	%g4, %g0, jeq_else.49992
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.49993
-jeq_else.49992:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.49993:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f4, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f4, %f0
-	jmp	jeq_cont.49987
-jeq_else.49986:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.49987:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.49994
-	fmov	%f1, %f0
-	jmp	jeq_cont.49995
-jeq_else.49994:
-	fneg	%f1, %f0
-jeq_cont.49995:
-	fsti	%f1, %g8, -4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.49996
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.49998
-	addi	%g3, %g0, 0
-	jmp	jle_cont.49999
-jle_else.49998:
-	addi	%g3, %g0, 1
-jle_cont.49999:
-	jmp	jle_cont.49997
-jle_else.49996:
-	addi	%g3, %g0, 1
-jle_cont.49997:
-	jne	%g3, %g0, jeq_else.50000
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.50002
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.50003
-jeq_else.50002:
-jeq_cont.50003:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50001
-jeq_else.50000:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.50001:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.50004
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.50006
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.50008
-	addi	%g4, %g0, 0
-	jmp	jle_cont.50009
-jle_else.50008:
-	addi	%g4, %g0, 1
-jle_cont.50009:
-	jmp	jle_cont.50007
-jle_else.50006:
-	addi	%g4, %g0, 1
-jle_cont.50007:
-	jne	%g4, %g0, jeq_else.50010
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50011
-jeq_else.50010:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.50011:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f4, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f4, %f0
-	jmp	jeq_cont.50005
-jeq_else.50004:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.50005:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.50012
-	fmov	%f1, %f0
-	jmp	jeq_cont.50013
-jeq_else.50012:
-	fneg	%f1, %f0
-jeq_cont.50013:
-	fsti	%f1, %g8, -8
-	addi	%g3, %g0, 3
-	fmov	%f0, %f16
-	subi	%g1, %g1, 4
-	call	min_caml_create_float_array
-	addi	%g1, %g1, 4
-	mov	%g12, %g3
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.50014
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.50016
-	addi	%g3, %g0, 0
-	jmp	jle_cont.50017
-jle_else.50016:
-	addi	%g3, %g0, 1
-jle_cont.50017:
-	jmp	jle_cont.50015
-jle_else.50014:
-	addi	%g3, %g0, 1
-jle_cont.50015:
-	jne	%g3, %g0, jeq_else.50018
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.50020
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.50021
-jeq_else.50020:
-jeq_cont.50021:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50019
-jeq_else.50018:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.50019:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.50022
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.50024
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.50026
-	addi	%g4, %g0, 0
-	jmp	jle_cont.50027
-jle_else.50026:
-	addi	%g4, %g0, 1
-jle_cont.50027:
-	jmp	jle_cont.50025
-jle_else.50024:
-	addi	%g4, %g0, 1
-jle_cont.50025:
-	jne	%g4, %g0, jeq_else.50028
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50029
-jeq_else.50028:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.50029:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f4, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f4, %f0
-	jmp	jeq_cont.50023
-jeq_else.50022:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.50023:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.50030
-	fmov	%f1, %f0
-	jmp	jeq_cont.50031
-jeq_else.50030:
-	fneg	%f1, %f0
-jeq_cont.50031:
-	fsti	%f1, %g12, 0
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.50032
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.50034
-	addi	%g3, %g0, 0
-	jmp	jle_cont.50035
-jle_else.50034:
-	addi	%g3, %g0, 1
-jle_cont.50035:
-	jmp	jle_cont.50033
-jle_else.50032:
-	addi	%g3, %g0, 1
-jle_cont.50033:
-	jne	%g3, %g0, jeq_else.50036
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.50038
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.50039
-jeq_else.50038:
-jeq_cont.50039:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50037
-jeq_else.50036:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.50037:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.50040
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.50042
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.50044
-	addi	%g4, %g0, 0
-	jmp	jle_cont.50045
-jle_else.50044:
-	addi	%g4, %g0, 1
-jle_cont.50045:
-	jmp	jle_cont.50043
-jle_else.50042:
-	addi	%g4, %g0, 1
-jle_cont.50043:
-	jne	%g4, %g0, jeq_else.50046
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50047
-jeq_else.50046:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.50047:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f4, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f4, %f0
-	jmp	jeq_cont.50041
-jeq_else.50040:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.50041:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.50048
-	fmov	%f1, %f0
-	jmp	jeq_cont.50049
-jeq_else.50048:
-	fneg	%f1, %f0
-jeq_cont.50049:
-	fsti	%f1, %g12, -4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.50050
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.50052
-	addi	%g3, %g0, 0
-	jmp	jle_cont.50053
-jle_else.50052:
-	addi	%g3, %g0, 1
-jle_cont.50053:
-	jmp	jle_cont.50051
-jle_else.50050:
-	addi	%g3, %g0, 1
-jle_cont.50051:
-	jne	%g3, %g0, jeq_else.50054
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.50056
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.50057
-jeq_else.50056:
-jeq_cont.50057:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50055
-jeq_else.50054:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.50055:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.50058
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.50060
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.50062
-	addi	%g4, %g0, 0
-	jmp	jle_cont.50063
-jle_else.50062:
-	addi	%g4, %g0, 1
-jle_cont.50063:
-	jmp	jle_cont.50061
-jle_else.50060:
-	addi	%g4, %g0, 1
-jle_cont.50061:
-	jne	%g4, %g0, jeq_else.50064
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50065
-jeq_else.50064:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.50065:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f4, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f4, %f0
-	jmp	jeq_cont.50059
-jeq_else.50058:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.50059:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.50066
-	fmov	%f1, %f0
-	jmp	jeq_cont.50067
-jeq_else.50066:
-	fneg	%f1, %f0
-jeq_cont.50067:
-	fsti	%f1, %g12, -8
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.50068
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.50070
-	addi	%g3, %g0, 0
-	jmp	jle_cont.50071
-jle_else.50070:
-	addi	%g3, %g0, 1
-jle_cont.50071:
-	jmp	jle_cont.50069
-jle_else.50068:
-	addi	%g3, %g0, 1
-jle_cont.50069:
-	jne	%g3, %g0, jeq_else.50072
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.50074
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.50075
-jeq_else.50074:
-jeq_cont.50075:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50073
-jeq_else.50072:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.50073:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.50076
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.50078
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.50080
-	addi	%g4, %g0, 0
-	jmp	jle_cont.50081
-jle_else.50080:
-	addi	%g4, %g0, 1
-jle_cont.50081:
-	jmp	jle_cont.50079
-jle_else.50078:
-	addi	%g4, %g0, 1
-jle_cont.50079:
-	jne	%g4, %g0, jeq_else.50082
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50083
-jeq_else.50082:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.50083:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f4, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f4, %f0
-	jmp	jeq_cont.50077
-jeq_else.50076:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.50077:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.50084
-	fmov	%f4, %f0
-	jmp	jeq_cont.50085
-jeq_else.50084:
-	fneg	%f4, %f0
-jeq_cont.50085:
-	addi	%g3, %g0, 2
-	fmov	%f0, %f16
-	subi	%g1, %g1, 4
-	call	min_caml_create_float_array
-	addi	%g1, %g1, 4
-	mov	%g10, %g3
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.50086
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.50088
-	addi	%g3, %g0, 0
-	jmp	jle_cont.50089
-jle_else.50088:
-	addi	%g3, %g0, 1
-jle_cont.50089:
-	jmp	jle_cont.50087
-jle_else.50086:
-	addi	%g3, %g0, 1
-jle_cont.50087:
-	jne	%g3, %g0, jeq_else.50090
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.50092
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.50093
-jeq_else.50092:
-jeq_cont.50093:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50091
-jeq_else.50090:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.50091:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.50094
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.50096
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.50098
-	addi	%g4, %g0, 0
-	jmp	jle_cont.50099
-jle_else.50098:
-	addi	%g4, %g0, 1
-jle_cont.50099:
-	jmp	jle_cont.50097
-jle_else.50096:
-	addi	%g4, %g0, 1
-jle_cont.50097:
-	jne	%g4, %g0, jeq_else.50100
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50101
-jeq_else.50100:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.50101:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f5, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f5, %f0
-	jmp	jeq_cont.50095
-jeq_else.50094:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.50095:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.50102
-	fmov	%f1, %f0
-	jmp	jeq_cont.50103
-jeq_else.50102:
-	fneg	%f1, %f0
-jeq_cont.50103:
-	fsti	%f1, %g10, 0
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.50104
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.50106
-	addi	%g3, %g0, 0
-	jmp	jle_cont.50107
-jle_else.50106:
-	addi	%g3, %g0, 1
-jle_cont.50107:
-	jmp	jle_cont.50105
-jle_else.50104:
-	addi	%g3, %g0, 1
-jle_cont.50105:
-	jne	%g3, %g0, jeq_else.50108
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.50110
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.50111
-jeq_else.50110:
-jeq_cont.50111:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50109
-jeq_else.50108:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.50109:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.50112
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.50114
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.50116
-	addi	%g4, %g0, 0
-	jmp	jle_cont.50117
-jle_else.50116:
-	addi	%g4, %g0, 1
-jle_cont.50117:
-	jmp	jle_cont.50115
-jle_else.50114:
-	addi	%g4, %g0, 1
-jle_cont.50115:
-	jne	%g4, %g0, jeq_else.50118
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50119
-jeq_else.50118:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.50119:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f5, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f5, %f0
-	jmp	jeq_cont.50113
-jeq_else.50112:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.50113:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.50120
-	fmov	%f1, %f0
-	jmp	jeq_cont.50121
-jeq_else.50120:
-	fneg	%f1, %f0
-jeq_cont.50121:
-	fsti	%f1, %g10, -4
-	addi	%g3, %g0, 3
-	fmov	%f0, %f16
-	subi	%g1, %g1, 4
-	call	min_caml_create_float_array
-	addi	%g1, %g1, 4
-	mov	%g9, %g3
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.50122
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.50124
-	addi	%g3, %g0, 0
-	jmp	jle_cont.50125
-jle_else.50124:
-	addi	%g3, %g0, 1
-jle_cont.50125:
-	jmp	jle_cont.50123
-jle_else.50122:
-	addi	%g3, %g0, 1
-jle_cont.50123:
-	jne	%g3, %g0, jeq_else.50126
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.50128
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.50129
-jeq_else.50128:
-jeq_cont.50129:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50127
-jeq_else.50126:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.50127:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.50130
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.50132
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.50134
-	addi	%g4, %g0, 0
-	jmp	jle_cont.50135
-jle_else.50134:
-	addi	%g4, %g0, 1
-jle_cont.50135:
-	jmp	jle_cont.50133
-jle_else.50132:
-	addi	%g4, %g0, 1
-jle_cont.50133:
-	jne	%g4, %g0, jeq_else.50136
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50137
-jeq_else.50136:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.50137:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f5, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f5, %f0
-	jmp	jeq_cont.50131
-jeq_else.50130:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.50131:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.50138
-	fmov	%f1, %f0
-	jmp	jeq_cont.50139
-jeq_else.50138:
-	fneg	%f1, %f0
-jeq_cont.50139:
-	fsti	%f1, %g9, 0
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.50140
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.50142
-	addi	%g3, %g0, 0
-	jmp	jle_cont.50143
-jle_else.50142:
-	addi	%g3, %g0, 1
-jle_cont.50143:
-	jmp	jle_cont.50141
-jle_else.50140:
-	addi	%g3, %g0, 1
-jle_cont.50141:
-	jne	%g3, %g0, jeq_else.50144
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.50146
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.50147
-jeq_else.50146:
-jeq_cont.50147:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50145
-jeq_else.50144:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.50145:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.50148
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.50150
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.50152
-	addi	%g4, %g0, 0
-	jmp	jle_cont.50153
-jle_else.50152:
-	addi	%g4, %g0, 1
-jle_cont.50153:
-	jmp	jle_cont.50151
-jle_else.50150:
-	addi	%g4, %g0, 1
-jle_cont.50151:
-	jne	%g4, %g0, jeq_else.50154
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50155
-jeq_else.50154:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.50155:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f5, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f5, %f0
-	jmp	jeq_cont.50149
-jeq_else.50148:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.50149:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.50156
-	fmov	%f1, %f0
-	jmp	jeq_cont.50157
-jeq_else.50156:
-	fneg	%f1, %f0
-jeq_cont.50157:
-	fsti	%f1, %g9, -4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.50158
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.50160
-	addi	%g3, %g0, 0
-	jmp	jle_cont.50161
-jle_else.50160:
-	addi	%g3, %g0, 1
-jle_cont.50161:
-	jmp	jle_cont.50159
-jle_else.50158:
-	addi	%g3, %g0, 1
-jle_cont.50159:
-	jne	%g3, %g0, jeq_else.50162
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.50164
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.50165
-jeq_else.50164:
-jeq_cont.50165:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50163
-jeq_else.50162:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.50163:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.50166
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.50168
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.50170
-	addi	%g4, %g0, 0
-	jmp	jle_cont.50171
-jle_else.50170:
-	addi	%g4, %g0, 1
-jle_cont.50171:
-	jmp	jle_cont.50169
-jle_else.50168:
-	addi	%g4, %g0, 1
-jle_cont.50169:
-	jne	%g4, %g0, jeq_else.50172
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50173
-jeq_else.50172:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.50173:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f5, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f5, %f0
-	jmp	jeq_cont.50167
-jeq_else.50166:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.50167:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.50174
-	fmov	%f1, %f0
-	jmp	jeq_cont.50175
-jeq_else.50174:
-	fneg	%f1, %f0
-jeq_cont.50175:
-	fsti	%f1, %g9, -8
+	jmp	jeq_cont.42585
+jeq_else.42584:
+	mov	%g10, %g9
+	mov	%g9, %g12
+	subi	%g1, %g1, 20
+	call	div_binary_search.2540
+	addi	%g1, %g1, 20
+jeq_cont.42585:
+	jmp	jle_cont.42583
+jle_else.42582:
+	mov	%g10, %g11
+	subi	%g1, %g1, 20
+	call	div_binary_search.2540
+	addi	%g1, %g1, 20
+jle_cont.42583:
+jeq_cont.42581:
+	jmp	jle_cont.42579
+jle_else.42578:
+	addi	%g10, %g0, 3
+	addi	%g5, %g0, 30000
+	jlt	%g5, %g4, jle_else.42586
+	jne	%g5, %g4, jeq_else.42588
 	addi	%g3, %g0, 3
-	fmov	%f0, %f16
-	subi	%g1, %g1, 4
-	call	min_caml_create_float_array
-	addi	%g1, %g1, 4
-	mov	%g7, %g3
-	jne	%g13, %g0, jeq_else.50176
-	jmp	jeq_cont.50177
-jeq_else.50176:
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.50178
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.50180
-	addi	%g3, %g0, 0
-	jmp	jle_cont.50181
-jle_else.50180:
-	addi	%g3, %g0, 1
-jle_cont.50181:
-	jmp	jle_cont.50179
-jle_else.50178:
-	addi	%g3, %g0, 1
-jle_cont.50179:
-	jne	%g3, %g0, jeq_else.50182
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.50184
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.50185
-jeq_else.50184:
-jeq_cont.50185:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50183
-jeq_else.50182:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.50183:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.50186
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.50188
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.50190
-	addi	%g4, %g0, 0
-	jmp	jle_cont.50191
-jle_else.50190:
-	addi	%g4, %g0, 1
-jle_cont.50191:
-	jmp	jle_cont.50189
-jle_else.50188:
-	addi	%g4, %g0, 1
-jle_cont.50189:
-	jne	%g4, %g0, jeq_else.50192
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50193
-jeq_else.50192:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.50193:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f5, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f3, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f3, %f0
-	fadd	%f0, %f5, %f0
-	jmp	jeq_cont.50187
-jeq_else.50186:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.50187:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.50194
-	fmov	%f1, %f0
-	jmp	jeq_cont.50195
-jeq_else.50194:
-	fneg	%f1, %f0
-jeq_cont.50195:
-	setL %g3, l.42507
-	fldi	%f3, %g3, 0
-	fmul	%f0, %f1, %f3
-	fsti	%f0, %g7, 0
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.50196
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.50198
-	addi	%g3, %g0, 0
-	jmp	jle_cont.50199
-jle_else.50198:
-	addi	%g3, %g0, 1
-jle_cont.50199:
-	jmp	jle_cont.50197
-jle_else.50196:
-	addi	%g3, %g0, 1
-jle_cont.50197:
-	jne	%g3, %g0, jeq_else.50200
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.50202
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.50203
-jeq_else.50202:
-jeq_cont.50203:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50201
-jeq_else.50200:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.50201:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.50204
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.50206
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.50208
-	addi	%g4, %g0, 0
-	jmp	jle_cont.50209
-jle_else.50208:
-	addi	%g4, %g0, 1
-jle_cont.50209:
-	jmp	jle_cont.50207
-jle_else.50206:
-	addi	%g4, %g0, 1
-jle_cont.50207:
-	jne	%g4, %g0, jeq_else.50210
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50211
-jeq_else.50210:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.50211:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f6, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f5, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f5, %f0
-	fadd	%f0, %f6, %f0
-	jmp	jeq_cont.50205
-jeq_else.50204:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.50205:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.50212
-	fmov	%f1, %f0
-	jmp	jeq_cont.50213
-jeq_else.50212:
-	fneg	%f1, %f0
-jeq_cont.50213:
-	fmul	%f0, %f1, %f3
-	fsti	%f0, %g7, -4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 12
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 16
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 20
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 24
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.50214
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.50216
-	addi	%g3, %g0, 0
-	jmp	jle_cont.50217
-jle_else.50216:
+	jmp	jeq_cont.42589
+jeq_else.42588:
+	mov	%g9, %g11
+	subi	%g1, %g1, 20
+	call	div_binary_search.2540
+	addi	%g1, %g1, 20
+jeq_cont.42589:
+	jmp	jle_cont.42587
+jle_else.42586:
+	mov	%g27, %g10
+	mov	%g10, %g9
+	mov	%g9, %g27
+	subi	%g1, %g1, 20
+	call	div_binary_search.2540
+	addi	%g1, %g1, 20
+jle_cont.42587:
+jle_cont.42579:
+jeq_cont.42577:
+	jmp	jle_cont.42575
+jle_else.42574:
+	addi	%g11, %g0, 7
+	mvhi	%g5, 1
+	mvlo	%g5, 4464
+	jlt	%g5, %g4, jle_else.42590
+	jne	%g5, %g4, jeq_else.42592
+	addi	%g3, %g0, 7
+	jmp	jeq_cont.42593
+jeq_else.42592:
+	addi	%g10, %g0, 6
+	mvhi	%g5, 0
+	mvlo	%g5, 60000
+	jlt	%g5, %g4, jle_else.42594
+	jne	%g5, %g4, jeq_else.42596
+	addi	%g3, %g0, 6
+	jmp	jeq_cont.42597
+jeq_else.42596:
+	subi	%g1, %g1, 20
+	call	div_binary_search.2540
+	addi	%g1, %g1, 20
+jeq_cont.42597:
+	jmp	jle_cont.42595
+jle_else.42594:
+	mov	%g9, %g10
+	mov	%g10, %g11
+	subi	%g1, %g1, 20
+	call	div_binary_search.2540
+	addi	%g1, %g1, 20
+jle_cont.42595:
+jeq_cont.42593:
+	jmp	jle_cont.42591
+jle_else.42590:
+	addi	%g9, %g0, 8
+	mvhi	%g5, 1
+	mvlo	%g5, 14464
+	jlt	%g5, %g4, jle_else.42598
+	jne	%g5, %g4, jeq_else.42600
+	addi	%g3, %g0, 8
+	jmp	jeq_cont.42601
+jeq_else.42600:
+	mov	%g10, %g9
+	mov	%g9, %g11
+	subi	%g1, %g1, 20
+	call	div_binary_search.2540
+	addi	%g1, %g1, 20
+jeq_cont.42601:
+	jmp	jle_cont.42599
+jle_else.42598:
+	subi	%g1, %g1, 20
+	call	div_binary_search.2540
+	addi	%g1, %g1, 20
+jle_cont.42599:
+jle_cont.42591:
+jle_cont.42575:
+	addi	%g5, %g0, 10000
+	mul	%g5, %g3, %g5
+	ldi	%g4, %g1, 12
+	sub	%g4, %g4, %g5
+	jlt	%g0, %g3, jle_else.42602
+	jne	%g14, %g0, jeq_else.42604
+	addi	%g13, %g0, 0
+	jmp	jeq_cont.42605
+jeq_else.42604:
+	addi	%g5, %g0, 48
+	add	%g3, %g5, %g3
+	output	%g3
+	addi	%g13, %g0, 1
+jeq_cont.42605:
+	jmp	jle_cont.42603
+jle_else.42602:
+	addi	%g5, %g0, 48
+	add	%g3, %g5, %g3
+	output	%g3
+	addi	%g13, %g0, 1
+jle_cont.42603:
+	addi	%g6, %g0, 1000
+	addi	%g12, %g0, 0
+	addi	%g10, %g0, 10
+	addi	%g9, %g0, 5
+	addi	%g5, %g0, 5000
+	sti	%g4, %g1, 16
+	jlt	%g5, %g4, jle_else.42606
+	jne	%g5, %g4, jeq_else.42608
+	addi	%g3, %g0, 5
+	jmp	jeq_cont.42609
+jeq_else.42608:
+	addi	%g11, %g0, 2
+	addi	%g5, %g0, 2000
+	jlt	%g5, %g4, jle_else.42610
+	jne	%g5, %g4, jeq_else.42612
+	addi	%g3, %g0, 2
+	jmp	jeq_cont.42613
+jeq_else.42612:
+	addi	%g9, %g0, 1
+	addi	%g5, %g0, 1000
+	jlt	%g5, %g4, jle_else.42614
+	jne	%g5, %g4, jeq_else.42616
 	addi	%g3, %g0, 1
-jle_cont.50217:
-	jmp	jle_cont.50215
-jle_else.50214:
+	jmp	jeq_cont.42617
+jeq_else.42616:
+	mov	%g10, %g9
+	mov	%g9, %g12
+	subi	%g1, %g1, 24
+	call	div_binary_search.2540
+	addi	%g1, %g1, 24
+jeq_cont.42617:
+	jmp	jle_cont.42615
+jle_else.42614:
+	mov	%g10, %g11
+	subi	%g1, %g1, 24
+	call	div_binary_search.2540
+	addi	%g1, %g1, 24
+jle_cont.42615:
+jeq_cont.42613:
+	jmp	jle_cont.42611
+jle_else.42610:
+	addi	%g10, %g0, 3
+	addi	%g5, %g0, 3000
+	jlt	%g5, %g4, jle_else.42618
+	jne	%g5, %g4, jeq_else.42620
+	addi	%g3, %g0, 3
+	jmp	jeq_cont.42621
+jeq_else.42620:
+	mov	%g9, %g11
+	subi	%g1, %g1, 24
+	call	div_binary_search.2540
+	addi	%g1, %g1, 24
+jeq_cont.42621:
+	jmp	jle_cont.42619
+jle_else.42618:
+	mov	%g27, %g10
+	mov	%g10, %g9
+	mov	%g9, %g27
+	subi	%g1, %g1, 24
+	call	div_binary_search.2540
+	addi	%g1, %g1, 24
+jle_cont.42619:
+jle_cont.42611:
+jeq_cont.42609:
+	jmp	jle_cont.42607
+jle_else.42606:
+	addi	%g11, %g0, 7
+	addi	%g5, %g0, 7000
+	jlt	%g5, %g4, jle_else.42622
+	jne	%g5, %g4, jeq_else.42624
+	addi	%g3, %g0, 7
+	jmp	jeq_cont.42625
+jeq_else.42624:
+	addi	%g10, %g0, 6
+	addi	%g5, %g0, 6000
+	jlt	%g5, %g4, jle_else.42626
+	jne	%g5, %g4, jeq_else.42628
+	addi	%g3, %g0, 6
+	jmp	jeq_cont.42629
+jeq_else.42628:
+	subi	%g1, %g1, 24
+	call	div_binary_search.2540
+	addi	%g1, %g1, 24
+jeq_cont.42629:
+	jmp	jle_cont.42627
+jle_else.42626:
+	mov	%g9, %g10
+	mov	%g10, %g11
+	subi	%g1, %g1, 24
+	call	div_binary_search.2540
+	addi	%g1, %g1, 24
+jle_cont.42627:
+jeq_cont.42625:
+	jmp	jle_cont.42623
+jle_else.42622:
+	addi	%g9, %g0, 8
+	addi	%g5, %g0, 8000
+	jlt	%g5, %g4, jle_else.42630
+	jne	%g5, %g4, jeq_else.42632
+	addi	%g3, %g0, 8
+	jmp	jeq_cont.42633
+jeq_else.42632:
+	mov	%g10, %g9
+	mov	%g9, %g11
+	subi	%g1, %g1, 24
+	call	div_binary_search.2540
+	addi	%g1, %g1, 24
+jeq_cont.42633:
+	jmp	jle_cont.42631
+jle_else.42630:
+	subi	%g1, %g1, 24
+	call	div_binary_search.2540
+	addi	%g1, %g1, 24
+jle_cont.42631:
+jle_cont.42623:
+jle_cont.42607:
+	muli	%g5, %g3, 1000
+	ldi	%g4, %g1, 16
+	sub	%g4, %g4, %g5
+	jlt	%g0, %g3, jle_else.42634
+	jne	%g13, %g0, jeq_else.42636
+	addi	%g14, %g0, 0
+	jmp	jeq_cont.42637
+jeq_else.42636:
+	addi	%g5, %g0, 48
+	add	%g3, %g5, %g3
+	output	%g3
+	addi	%g14, %g0, 1
+jeq_cont.42637:
+	jmp	jle_cont.42635
+jle_else.42634:
+	addi	%g5, %g0, 48
+	add	%g3, %g5, %g3
+	output	%g3
+	addi	%g14, %g0, 1
+jle_cont.42635:
+	addi	%g6, %g0, 100
+	addi	%g12, %g0, 0
+	addi	%g10, %g0, 10
+	addi	%g9, %g0, 5
+	addi	%g5, %g0, 500
+	sti	%g4, %g1, 20
+	jlt	%g5, %g4, jle_else.42638
+	jne	%g5, %g4, jeq_else.42640
+	addi	%g3, %g0, 5
+	jmp	jeq_cont.42641
+jeq_else.42640:
+	addi	%g11, %g0, 2
+	addi	%g5, %g0, 200
+	jlt	%g5, %g4, jle_else.42642
+	jne	%g5, %g4, jeq_else.42644
+	addi	%g3, %g0, 2
+	jmp	jeq_cont.42645
+jeq_else.42644:
+	addi	%g9, %g0, 1
+	addi	%g5, %g0, 100
+	jlt	%g5, %g4, jle_else.42646
+	jne	%g5, %g4, jeq_else.42648
 	addi	%g3, %g0, 1
-jle_cont.50215:
-	jne	%g3, %g0, jeq_else.50218
-	ldi	%g3, %g31, 24
-	jne	%g3, %g0, jeq_else.50220
+	jmp	jeq_cont.42649
+jeq_else.42648:
+	mov	%g10, %g9
+	mov	%g9, %g12
+	subi	%g1, %g1, 28
+	call	div_binary_search.2540
+	addi	%g1, %g1, 28
+jeq_cont.42649:
+	jmp	jle_cont.42647
+jle_else.42646:
+	mov	%g10, %g11
+	subi	%g1, %g1, 28
+	call	div_binary_search.2540
+	addi	%g1, %g1, 28
+jle_cont.42647:
+jeq_cont.42645:
+	jmp	jle_cont.42643
+jle_else.42642:
+	addi	%g10, %g0, 3
+	addi	%g5, %g0, 300
+	jlt	%g5, %g4, jle_else.42650
+	jne	%g5, %g4, jeq_else.42652
+	addi	%g3, %g0, 3
+	jmp	jeq_cont.42653
+jeq_else.42652:
+	mov	%g9, %g11
+	subi	%g1, %g1, 28
+	call	div_binary_search.2540
+	addi	%g1, %g1, 28
+jeq_cont.42653:
+	jmp	jle_cont.42651
+jle_else.42650:
+	mov	%g27, %g10
+	mov	%g10, %g9
+	mov	%g9, %g27
+	subi	%g1, %g1, 28
+	call	div_binary_search.2540
+	addi	%g1, %g1, 28
+jle_cont.42651:
+jle_cont.42643:
+jeq_cont.42641:
+	jmp	jle_cont.42639
+jle_else.42638:
+	addi	%g11, %g0, 7
+	addi	%g5, %g0, 700
+	jlt	%g5, %g4, jle_else.42654
+	jne	%g5, %g4, jeq_else.42656
+	addi	%g3, %g0, 7
+	jmp	jeq_cont.42657
+jeq_else.42656:
+	addi	%g10, %g0, 6
+	addi	%g5, %g0, 600
+	jlt	%g5, %g4, jle_else.42658
+	jne	%g5, %g4, jeq_else.42660
+	addi	%g3, %g0, 6
+	jmp	jeq_cont.42661
+jeq_else.42660:
+	subi	%g1, %g1, 28
+	call	div_binary_search.2540
+	addi	%g1, %g1, 28
+jeq_cont.42661:
+	jmp	jle_cont.42659
+jle_else.42658:
+	mov	%g9, %g10
+	mov	%g10, %g11
+	subi	%g1, %g1, 28
+	call	div_binary_search.2540
+	addi	%g1, %g1, 28
+jle_cont.42659:
+jeq_cont.42657:
+	jmp	jle_cont.42655
+jle_else.42654:
+	addi	%g9, %g0, 8
+	addi	%g5, %g0, 800
+	jlt	%g5, %g4, jle_else.42662
+	jne	%g5, %g4, jeq_else.42664
+	addi	%g3, %g0, 8
+	jmp	jeq_cont.42665
+jeq_else.42664:
+	mov	%g10, %g9
+	mov	%g9, %g11
+	subi	%g1, %g1, 28
+	call	div_binary_search.2540
+	addi	%g1, %g1, 28
+jeq_cont.42665:
+	jmp	jle_cont.42663
+jle_else.42662:
+	subi	%g1, %g1, 28
+	call	div_binary_search.2540
+	addi	%g1, %g1, 28
+jle_cont.42663:
+jle_cont.42655:
+jle_cont.42639:
+	muli	%g5, %g3, 100
+	ldi	%g4, %g1, 20
+	sub	%g4, %g4, %g5
+	jlt	%g0, %g3, jle_else.42666
+	jne	%g14, %g0, jeq_else.42668
+	addi	%g13, %g0, 0
+	jmp	jeq_cont.42669
+jeq_else.42668:
+	addi	%g5, %g0, 48
+	add	%g3, %g5, %g3
+	output	%g3
+	addi	%g13, %g0, 1
+jeq_cont.42669:
+	jmp	jle_cont.42667
+jle_else.42666:
+	addi	%g5, %g0, 48
+	add	%g3, %g5, %g3
+	output	%g3
+	addi	%g13, %g0, 1
+jle_cont.42667:
+	addi	%g6, %g0, 10
+	addi	%g12, %g0, 0
+	addi	%g10, %g0, 10
+	addi	%g9, %g0, 5
+	addi	%g5, %g0, 50
+	sti	%g4, %g1, 24
+	jlt	%g5, %g4, jle_else.42670
+	jne	%g5, %g4, jeq_else.42672
+	addi	%g3, %g0, 5
+	jmp	jeq_cont.42673
+jeq_else.42672:
+	addi	%g11, %g0, 2
+	addi	%g5, %g0, 20
+	jlt	%g5, %g4, jle_else.42674
+	jne	%g5, %g4, jeq_else.42676
+	addi	%g3, %g0, 2
+	jmp	jeq_cont.42677
+jeq_else.42676:
+	addi	%g9, %g0, 1
+	addi	%g5, %g0, 10
+	jlt	%g5, %g4, jle_else.42678
+	jne	%g5, %g4, jeq_else.42680
 	addi	%g3, %g0, 1
-	sti	%g3, %g31, 24
-	jmp	jeq_cont.50221
-jeq_else.50220:
-jeq_cont.50221:
-	ldi	%g3, %g31, 12
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 12
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50219
-jeq_else.50218:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token1.2516
-	addi	%g1, %g1, 4
-jeq_cont.50219:
-	addi	%g4, %g0, 46
-	jne	%g3, %g4, jeq_else.50222
-	input	%g3
-	addi	%g4, %g0, 48
-	jlt	%g3, %g4, jle_else.50224
-	addi	%g4, %g0, 57
-	jlt	%g4, %g3, jle_else.50226
-	addi	%g4, %g0, 0
-	jmp	jle_cont.50227
-jle_else.50226:
-	addi	%g4, %g0, 1
-jle_cont.50227:
-	jmp	jle_cont.50225
-jle_else.50224:
-	addi	%g4, %g0, 1
-jle_cont.50225:
-	jne	%g4, %g0, jeq_else.50228
-	ldi	%g4, %g31, 16
-	slli	%g5, %g4, 3
-	slli	%g4, %g4, 1
-	add	%g4, %g5, %g4
-	subi	%g3, %g3, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 16
-	ldi	%g3, %g31, 20
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 20
-	addi	%g4, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50229
-jeq_else.50228:
-	addi	%g4, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_float_token2.2519
-	addi	%g1, %g1, 4
-jeq_cont.50229:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	fmov	%f6, %f0
-	ldi	%g3, %g31, 16
-	call	min_caml_float_of_int
-	fmov	%f5, %f0
-	ldi	%g3, %g31, 20
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-	fdiv	%f0, %f5, %f0
-	fadd	%f0, %f6, %f0
-	jmp	jeq_cont.50223
-jeq_else.50222:
-	ldi	%g3, %g31, 12
-	subi	%g1, %g1, 4
-	call	min_caml_float_of_int
-	addi	%g1, %g1, 4
-jeq_cont.50223:
-	ldi	%g3, %g31, 24
-	jne	%g3, %g28, jeq_else.50230
-	fmov	%f1, %f0
-	jmp	jeq_cont.50231
-jeq_else.50230:
-	fneg	%f1, %f0
-jeq_cont.50231:
-	fmul	%f0, %f1, %f3
-	fsti	%f0, %g7, -8
-jeq_cont.50177:
-	addi	%g5, %g0, 2
-	jne	%g11, %g5, jeq_else.50232
-	addi	%g5, %g0, 1
-	jmp	jeq_cont.50233
-jeq_else.50232:
-	fjlt	%f4, %f16, fjge_else.50234
+	jmp	jeq_cont.42681
+jeq_else.42680:
+	mov	%g10, %g9
+	mov	%g9, %g12
+	subi	%g1, %g1, 32
+	call	div_binary_search.2540
+	addi	%g1, %g1, 32
+jeq_cont.42681:
+	jmp	jle_cont.42679
+jle_else.42678:
+	mov	%g10, %g11
+	subi	%g1, %g1, 32
+	call	div_binary_search.2540
+	addi	%g1, %g1, 32
+jle_cont.42679:
+jeq_cont.42677:
+	jmp	jle_cont.42675
+jle_else.42674:
+	addi	%g10, %g0, 3
+	addi	%g5, %g0, 30
+	jlt	%g5, %g4, jle_else.42682
+	jne	%g5, %g4, jeq_else.42684
+	addi	%g3, %g0, 3
+	jmp	jeq_cont.42685
+jeq_else.42684:
+	mov	%g9, %g11
+	subi	%g1, %g1, 32
+	call	div_binary_search.2540
+	addi	%g1, %g1, 32
+jeq_cont.42685:
+	jmp	jle_cont.42683
+jle_else.42682:
+	mov	%g27, %g10
+	mov	%g10, %g9
+	mov	%g9, %g27
+	subi	%g1, %g1, 32
+	call	div_binary_search.2540
+	addi	%g1, %g1, 32
+jle_cont.42683:
+jle_cont.42675:
+jeq_cont.42673:
+	jmp	jle_cont.42671
+jle_else.42670:
+	addi	%g11, %g0, 7
+	addi	%g5, %g0, 70
+	jlt	%g5, %g4, jle_else.42686
+	jne	%g5, %g4, jeq_else.42688
+	addi	%g3, %g0, 7
+	jmp	jeq_cont.42689
+jeq_else.42688:
+	addi	%g10, %g0, 6
+	addi	%g5, %g0, 60
+	jlt	%g5, %g4, jle_else.42690
+	jne	%g5, %g4, jeq_else.42692
+	addi	%g3, %g0, 6
+	jmp	jeq_cont.42693
+jeq_else.42692:
+	subi	%g1, %g1, 32
+	call	div_binary_search.2540
+	addi	%g1, %g1, 32
+jeq_cont.42693:
+	jmp	jle_cont.42691
+jle_else.42690:
+	mov	%g9, %g10
+	mov	%g10, %g11
+	subi	%g1, %g1, 32
+	call	div_binary_search.2540
+	addi	%g1, %g1, 32
+jle_cont.42691:
+jeq_cont.42689:
+	jmp	jle_cont.42687
+jle_else.42686:
+	addi	%g9, %g0, 8
+	addi	%g5, %g0, 80
+	jlt	%g5, %g4, jle_else.42694
+	jne	%g5, %g4, jeq_else.42696
+	addi	%g3, %g0, 8
+	jmp	jeq_cont.42697
+jeq_else.42696:
+	mov	%g10, %g9
+	mov	%g9, %g11
+	subi	%g1, %g1, 32
+	call	div_binary_search.2540
+	addi	%g1, %g1, 32
+jeq_cont.42697:
+	jmp	jle_cont.42695
+jle_else.42694:
+	subi	%g1, %g1, 32
+	call	div_binary_search.2540
+	addi	%g1, %g1, 32
+jle_cont.42695:
+jle_cont.42687:
+jle_cont.42671:
+	muli	%g5, %g3, 10
+	ldi	%g4, %g1, 24
+	sub	%g4, %g4, %g5
+	jlt	%g0, %g3, jle_else.42698
+	jne	%g13, %g0, jeq_else.42700
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.50235
-fjge_else.50234:
+	jmp	jeq_cont.42701
+jeq_else.42700:
+	addi	%g5, %g0, 48
+	add	%g3, %g5, %g3
+	output	%g3
 	addi	%g5, %g0, 1
-fjge_cont.50235:
-jeq_cont.50233:
-	addi	%g3, %g0, 4
+jeq_cont.42701:
+	jmp	jle_cont.42699
+jle_else.42698:
+	addi	%g5, %g0, 48
+	add	%g3, %g5, %g3
+	output	%g3
+	addi	%g5, %g0, 1
+jle_cont.42699:
+	addi	%g3, %g0, 48
+	add	%g3, %g3, %g4
+	output	%g3
+	return
+jge_else.42467:
+	addi	%g3, %g0, 45
+	output	%g3
+	sub	%g4, %g0, %g4
+	jmp	print_int.2545
+
+!==============================
+! args = [%g8]
+! fargs = []
+! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g2, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f29, %f26, %f25, %f24, %f23, %f22, %f21, %f20, %f2, %f17, %f16, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0, %dummy]
+! ret type = Unit
+!================================
+read_object.2713:
+	addi	%g3, %g0, 60
+	jlt	%g8, %g3, jle_else.42702
+	return
+jle_else.42702:
+	sti	%g8, %g1, 0
+	subi	%g1, %g1, 8
+	call	min_caml_read_int
+	addi	%g1, %g1, 8
+	mov	%g11, %g3
+	jne	%g11, %g29, jeq_else.42704
+	addi	%g3, %g0, 0
+	jmp	jeq_cont.42705
+jeq_else.42704:
+	sti	%g11, %g1, 4
+	subi	%g1, %g1, 12
+	call	min_caml_read_int
+	addi	%g1, %g1, 12
+	mov	%g6, %g3
+	sti	%g6, %g1, 8
+	subi	%g1, %g1, 16
+	call	min_caml_read_int
+	addi	%g1, %g1, 16
+	mov	%g12, %g3
+	sti	%g12, %g1, 12
+	subi	%g1, %g1, 20
+	call	min_caml_read_int
+	mov	%g7, %g3
+	addi	%g3, %g0, 3
 	fmov	%f0, %f16
-	subi	%g1, %g1, 4
 	call	min_caml_create_float_array
-	addi	%g1, %g1, 4
-	mov	%g4, %g3
-	mov	%g3, %g2
-	addi	%g2, %g2, 44
-	sti	%g4, %g3, -40
-	sti	%g7, %g3, -36
-	sti	%g9, %g3, -32
-	sti	%g10, %g3, -28
-	sti	%g5, %g3, -24
-	sti	%g12, %g3, -20
-	sti	%g8, %g3, -16
-	sti	%g13, %g3, -12
-	sti	%g15, %g3, -8
-	sti	%g11, %g3, -4
-	sti	%g14, %g3, 0
-	slli	%g4, %g16, 2
-	add	%g4, %g31, %g4
-	sti	%g3, %g4, 272
+	addi	%g1, %g1, 20
+	mov	%g5, %g3
+	sti	%g7, %g1, 16
+	sti	%g5, %g1, 20
+	subi	%g1, %g1, 28
+	call	min_caml_read_float
+	addi	%g1, %g1, 28
+	ldi	%g5, %g1, 20
+	fsti	%f0, %g5, 0
+	subi	%g1, %g1, 28
+	call	min_caml_read_float
+	addi	%g1, %g1, 28
+	ldi	%g5, %g1, 20
+	fsti	%f0, %g5, -4
+	subi	%g1, %g1, 28
+	call	min_caml_read_float
+	addi	%g1, %g1, 28
+	ldi	%g5, %g1, 20
+	fsti	%f0, %g5, -8
 	addi	%g3, %g0, 3
-	jne	%g11, %g3, jeq_else.50236
-	fldi	%f1, %g8, 0
-	fjeq	%f1, %f16, fjne_else.50238
-	fjeq	%f1, %f16, fjne_else.50240
-	fjlt	%f16, %f1, fjge_else.50242
-	setL %g3, l.43536
-	fldi	%f0, %g3, 0
-	jmp	fjge_cont.50243
-fjge_else.50242:
-	setL %g3, l.42509
-	fldi	%f0, %g3, 0
-fjge_cont.50243:
-	jmp	fjne_cont.50241
-fjne_else.50240:
 	fmov	%f0, %f16
-fjne_cont.50241:
+	subi	%g1, %g1, 28
+	call	min_caml_create_float_array
+	addi	%g1, %g1, 28
+	mov	%g10, %g3
+	sti	%g10, %g1, 24
+	subi	%g1, %g1, 32
+	call	min_caml_read_float
+	addi	%g1, %g1, 32
+	ldi	%g10, %g1, 24
+	fsti	%f0, %g10, 0
+	subi	%g1, %g1, 32
+	call	min_caml_read_float
+	addi	%g1, %g1, 32
+	ldi	%g10, %g1, 24
+	fsti	%f0, %g10, -4
+	subi	%g1, %g1, 32
+	call	min_caml_read_float
+	addi	%g1, %g1, 32
+	ldi	%g10, %g1, 24
+	fsti	%f0, %g10, -8
+	subi	%g1, %g1, 32
+	call	min_caml_read_float
+	fmov	%f2, %f0
+	addi	%g3, %g0, 2
+	fmov	%f0, %f16
+	call	min_caml_create_float_array
+	addi	%g1, %g1, 32
+	mov	%g13, %g3
+	fsti	%f2, %g1, 28
+	sti	%g13, %g1, 32
+	subi	%g1, %g1, 40
+	call	min_caml_read_float
+	addi	%g1, %g1, 40
+	ldi	%g13, %g1, 32
+	fsti	%f0, %g13, 0
+	subi	%g1, %g1, 40
+	call	min_caml_read_float
+	addi	%g1, %g1, 40
+	ldi	%g13, %g1, 32
+	fsti	%f0, %g13, -4
+	addi	%g3, %g0, 3
+	fmov	%f0, %f16
+	subi	%g1, %g1, 40
+	call	min_caml_create_float_array
+	addi	%g1, %g1, 40
+	mov	%g14, %g3
+	sti	%g14, %g1, 36
+	subi	%g1, %g1, 44
+	call	min_caml_read_float
+	addi	%g1, %g1, 44
+	ldi	%g14, %g1, 36
+	fsti	%f0, %g14, 0
+	subi	%g1, %g1, 44
+	call	min_caml_read_float
+	addi	%g1, %g1, 44
+	ldi	%g14, %g1, 36
+	fsti	%f0, %g14, -4
+	subi	%g1, %g1, 44
+	call	min_caml_read_float
+	addi	%g1, %g1, 44
+	ldi	%g14, %g1, 36
+	fsti	%f0, %g14, -8
+	addi	%g3, %g0, 3
+	fmov	%f0, %f16
+	subi	%g1, %g1, 44
+	call	min_caml_create_float_array
+	addi	%g1, %g1, 44
+	ldi	%g7, %g1, 16
+	jne	%g7, %g0, jeq_else.42706
+	jmp	jeq_cont.42707
+jeq_else.42706:
+	sti	%g3, %g1, 40
+	subi	%g1, %g1, 48
+	call	min_caml_read_float
+	addi	%g1, %g1, 48
+	setL %g4, l.35957
+	fldi	%f1, %g4, 0
+	fmul	%f0, %f0, %f1
+	ldi	%g3, %g1, 40
+	fsti	%f0, %g3, 0
+	fsti	%f1, %g1, 44
+	subi	%g1, %g1, 52
+	call	min_caml_read_float
+	addi	%g1, %g1, 52
+	fldi	%f1, %g1, 44
+	fmul	%f0, %f0, %f1
+	ldi	%g3, %g1, 40
+	fsti	%f0, %g3, -4
+	subi	%g1, %g1, 52
+	call	min_caml_read_float
+	addi	%g1, %g1, 52
+	fldi	%f1, %g1, 44
+	fmul	%f0, %f0, %f1
+	ldi	%g3, %g1, 40
+	fsti	%f0, %g3, -8
+jeq_cont.42707:
+	addi	%g15, %g0, 2
+	ldi	%g6, %g1, 8
+	jne	%g6, %g15, jeq_else.42708
+	addi	%g15, %g0, 1
+	jmp	jeq_cont.42709
+jeq_else.42708:
+	fldi	%f2, %g1, 28
+	fjlt	%f2, %f16, fjge_else.42710
+	addi	%g15, %g0, 0
+	jmp	fjge_cont.42711
+fjge_else.42710:
+	addi	%g15, %g0, 1
+fjge_cont.42711:
+jeq_cont.42709:
+	addi	%g9, %g0, 4
+	sti	%g3, %g1, 40
+	mov	%g3, %g9
+	fmov	%f0, %f16
+	subi	%g1, %g1, 52
+	call	min_caml_create_float_array
+	addi	%g1, %g1, 52
+	mov	%g9, %g3
+	mov	%g4, %g2
+	addi	%g2, %g2, 44
+	sti	%g9, %g4, -40
+	ldi	%g3, %g1, 40
+	sti	%g3, %g4, -36
+	ldi	%g14, %g1, 36
+	sti	%g14, %g4, -32
+	ldi	%g13, %g1, 32
+	sti	%g13, %g4, -28
+	sti	%g15, %g4, -24
+	ldi	%g10, %g1, 24
+	sti	%g10, %g4, -20
+	ldi	%g5, %g1, 20
+	sti	%g5, %g4, -16
+	ldi	%g7, %g1, 16
+	sti	%g7, %g4, -12
+	ldi	%g12, %g1, 12
+	sti	%g12, %g4, -8
+	sti	%g6, %g4, -4
+	ldi	%g11, %g1, 4
+	sti	%g11, %g4, 0
+	ldi	%g8, %g1, 0
+	slli	%g9, %g8, 2
+	add	%g9, %g31, %g9
+	sti	%g4, %g9, 272
+	addi	%g4, %g0, 3
+	jne	%g6, %g4, jeq_else.42712
+	fldi	%f1, %g5, 0
+	fjeq	%f1, %f16, fjne_else.42714
+	fjeq	%f1, %f16, fjne_else.42716
+	fjlt	%f16, %f1, fjge_else.42718
+	setL %g4, l.36354
+	fldi	%f0, %g4, 0
+	jmp	fjge_cont.42719
+fjge_else.42718:
+	setL %g4, l.35959
+	fldi	%f0, %g4, 0
+fjge_cont.42719:
+	jmp	fjne_cont.42717
+fjne_else.42716:
+	fmov	%f0, %f16
+fjne_cont.42717:
 	fmul	%f1, %f1, %f1
 	fdiv	%f0, %f0, %f1
-	jmp	fjne_cont.50239
-fjne_else.50238:
+	jmp	fjne_cont.42715
+fjne_else.42714:
 	fmov	%f0, %f16
-fjne_cont.50239:
-	fsti	%f0, %g8, 0
-	fldi	%f1, %g8, -4
-	fjeq	%f1, %f16, fjne_else.50244
-	fjeq	%f1, %f16, fjne_else.50246
-	fjlt	%f16, %f1, fjge_else.50248
-	setL %g3, l.43536
-	fldi	%f0, %g3, 0
-	jmp	fjge_cont.50249
-fjge_else.50248:
-	setL %g3, l.42509
-	fldi	%f0, %g3, 0
-fjge_cont.50249:
-	jmp	fjne_cont.50247
-fjne_else.50246:
+fjne_cont.42715:
+	fsti	%f0, %g5, 0
+	fldi	%f1, %g5, -4
+	fjeq	%f1, %f16, fjne_else.42720
+	fjeq	%f1, %f16, fjne_else.42722
+	fjlt	%f16, %f1, fjge_else.42724
+	setL %g4, l.36354
+	fldi	%f0, %g4, 0
+	jmp	fjge_cont.42725
+fjge_else.42724:
+	setL %g4, l.35959
+	fldi	%f0, %g4, 0
+fjge_cont.42725:
+	jmp	fjne_cont.42723
+fjne_else.42722:
 	fmov	%f0, %f16
-fjne_cont.50247:
+fjne_cont.42723:
 	fmul	%f1, %f1, %f1
 	fdiv	%f0, %f0, %f1
-	jmp	fjne_cont.50245
-fjne_else.50244:
+	jmp	fjne_cont.42721
+fjne_else.42720:
 	fmov	%f0, %f16
-fjne_cont.50245:
-	fsti	%f0, %g8, -4
-	fldi	%f1, %g8, -8
-	fjeq	%f1, %f16, fjne_else.50250
-	fjeq	%f1, %f16, fjne_else.50252
-	fjlt	%f16, %f1, fjge_else.50254
-	setL %g3, l.43536
-	fldi	%f0, %g3, 0
-	jmp	fjge_cont.50255
-fjge_else.50254:
-	setL %g3, l.42509
-	fldi	%f0, %g3, 0
-fjge_cont.50255:
-	jmp	fjne_cont.50253
-fjne_else.50252:
+fjne_cont.42721:
+	fsti	%f0, %g5, -4
+	fldi	%f1, %g5, -8
+	fjeq	%f1, %f16, fjne_else.42726
+	fjeq	%f1, %f16, fjne_else.42728
+	fjlt	%f16, %f1, fjge_else.42730
+	setL %g4, l.36354
+	fldi	%f0, %g4, 0
+	jmp	fjge_cont.42731
+fjge_else.42730:
+	setL %g4, l.35959
+	fldi	%f0, %g4, 0
+fjge_cont.42731:
+	jmp	fjne_cont.42729
+fjne_else.42728:
 	fmov	%f0, %f16
-fjne_cont.50253:
+fjne_cont.42729:
 	fmul	%f1, %f1, %f1
 	fdiv	%f0, %f0, %f1
-	jmp	fjne_cont.50251
-fjne_else.50250:
+	jmp	fjne_cont.42727
+fjne_else.42726:
 	fmov	%f0, %f16
-fjne_cont.50251:
-	fsti	%f0, %g8, -8
-	jmp	jeq_cont.50237
-jeq_else.50236:
-	addi	%g3, %g0, 2
-	jne	%g11, %g3, jeq_else.50256
-	fldi	%f1, %g8, 0
-	fmul	%f2, %f1, %f1
-	fldi	%f0, %g8, -4
+fjne_cont.42727:
+	fsti	%f0, %g5, -8
+	jmp	jeq_cont.42713
+jeq_else.42712:
+	addi	%g4, %g0, 2
+	jne	%g6, %g4, jeq_else.42732
+	fldi	%f1, %g5, 0
+	fmul	%f3, %f1, %f1
+	fldi	%f0, %g5, -4
 	fmul	%f0, %f0, %f0
-	fadd	%f2, %f2, %f0
-	fldi	%f0, %g8, -8
+	fadd	%f3, %f3, %f0
+	fldi	%f0, %g5, -8
 	fmul	%f0, %f0, %f0
-	fadd	%f0, %f2, %f0
-	fsqrt	%f2, %f0
-	fjeq	%f2, %f16, fjne_else.50258
-	fjlt	%f4, %f16, fjge_else.50260
-	fdiv	%f0, %f20, %f2
-	jmp	fjge_cont.50261
-fjge_else.50260:
-	fdiv	%f0, %f17, %f2
-fjge_cont.50261:
-	jmp	fjne_cont.50259
-fjne_else.50258:
-	setL %g3, l.42509
-	fldi	%f0, %g3, 0
-fjne_cont.50259:
+	fadd	%f0, %f3, %f0
+	fsqrt	%f3, %f0
+	fjeq	%f3, %f16, fjne_else.42734
+	fldi	%f2, %g1, 28
+	fjlt	%f2, %f16, fjge_else.42736
+	fdiv	%f0, %f20, %f3
+	jmp	fjge_cont.42737
+fjge_else.42736:
+	fdiv	%f0, %f17, %f3
+fjge_cont.42737:
+	jmp	fjne_cont.42735
+fjne_else.42734:
+	setL %g4, l.35959
+	fldi	%f0, %g4, 0
+fjne_cont.42735:
 	fmul	%f1, %f1, %f0
-	fsti	%f1, %g8, 0
-	fldi	%f1, %g8, -4
+	fsti	%f1, %g5, 0
+	fldi	%f1, %g5, -4
 	fmul	%f1, %f1, %f0
-	fsti	%f1, %g8, -4
-	fldi	%f1, %g8, -8
+	fsti	%f1, %g5, -4
+	fldi	%f1, %g5, -8
 	fmul	%f0, %f1, %f0
-	fsti	%f0, %g8, -8
-	jmp	jeq_cont.50257
-jeq_else.50256:
-jeq_cont.50257:
-jeq_cont.50237:
-	jne	%g13, %g0, jeq_else.50262
-	jmp	jeq_cont.50263
-jeq_else.50262:
-	fldi	%f3, %g7, 0
+	fsti	%f0, %g5, -8
+	jmp	jeq_cont.42733
+jeq_else.42732:
+jeq_cont.42733:
+jeq_cont.42713:
+	jne	%g7, %g0, jeq_else.42738
+	jmp	jeq_cont.42739
+jeq_else.42738:
+	fldi	%f3, %g3, 0
 	fsub	%f2, %f22, %f3
-	setL %g3, l.42247
-	fldi	%f4, %g3, 0
-	setL %g3, l.42249
-	fldi	%f14, %g3, 0
-	fjlt	%f2, %f16, fjge_else.50264
+	setL %g4, l.35801
+	fldi	%f4, %g4, 0
+	setL %g4, l.35803
+	fldi	%f14, %g4, 0
+	fjlt	%f2, %f16, fjge_else.42740
 	fmov	%f1, %f2
-	jmp	fjge_cont.50265
-fjge_else.50264:
+	jmp	fjge_cont.42741
+fjge_else.42740:
 	fneg	%f1, %f2
-fjge_cont.50265:
-	fjlt	%f29, %f1, fjge_else.50266
-	fjlt	%f1, %f16, fjge_else.50268
+fjge_cont.42741:
+	fjlt	%f29, %f1, fjge_else.42742
+	fjlt	%f1, %f16, fjge_else.42744
 	fmov	%f0, %f1
-	jmp	fjge_cont.50269
-fjge_else.50268:
+	jmp	fjge_cont.42745
+fjge_else.42744:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50270
-	fjlt	%f1, %f16, fjge_else.50272
+	fjlt	%f29, %f1, fjge_else.42746
+	fjlt	%f1, %f16, fjge_else.42748
 	fmov	%f0, %f1
-	jmp	fjge_cont.50273
-fjge_else.50272:
+	jmp	fjge_cont.42749
+fjge_else.42748:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50274
-	fjlt	%f1, %f16, fjge_else.50276
+	fjlt	%f29, %f1, fjge_else.42750
+	fjlt	%f1, %f16, fjge_else.42752
 	fmov	%f0, %f1
-	jmp	fjge_cont.50277
-fjge_else.50276:
+	jmp	fjge_cont.42753
+fjge_else.42752:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.50277:
-	jmp	fjge_cont.50275
-fjge_else.50274:
+	subi	%g1, %g1, 52
+	call	sin_sub.2518
+	addi	%g1, %g1, 52
+fjge_cont.42753:
+	jmp	fjge_cont.42751
+fjge_else.42750:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.50275:
-fjge_cont.50273:
-	jmp	fjge_cont.50271
-fjge_else.50270:
+	subi	%g1, %g1, 52
+	call	sin_sub.2518
+	addi	%g1, %g1, 52
+fjge_cont.42751:
+fjge_cont.42749:
+	jmp	fjge_cont.42747
+fjge_else.42746:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50278
-	fjlt	%f1, %f16, fjge_else.50280
+	fjlt	%f29, %f1, fjge_else.42754
+	fjlt	%f1, %f16, fjge_else.42756
 	fmov	%f0, %f1
-	jmp	fjge_cont.50281
-fjge_else.50280:
+	jmp	fjge_cont.42757
+fjge_else.42756:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.50281:
-	jmp	fjge_cont.50279
-fjge_else.50278:
+	subi	%g1, %g1, 52
+	call	sin_sub.2518
+	addi	%g1, %g1, 52
+fjge_cont.42757:
+	jmp	fjge_cont.42755
+fjge_else.42754:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.50279:
-fjge_cont.50271:
-fjge_cont.50269:
-	jmp	fjge_cont.50267
-fjge_else.50266:
+	subi	%g1, %g1, 52
+	call	sin_sub.2518
+	addi	%g1, %g1, 52
+fjge_cont.42755:
+fjge_cont.42747:
+fjge_cont.42745:
+	jmp	fjge_cont.42743
+fjge_else.42742:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50282
-	fjlt	%f1, %f16, fjge_else.50284
+	fjlt	%f29, %f1, fjge_else.42758
+	fjlt	%f1, %f16, fjge_else.42760
 	fmov	%f0, %f1
-	jmp	fjge_cont.50285
-fjge_else.50284:
+	jmp	fjge_cont.42761
+fjge_else.42760:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50286
-	fjlt	%f1, %f16, fjge_else.50288
+	fjlt	%f29, %f1, fjge_else.42762
+	fjlt	%f1, %f16, fjge_else.42764
 	fmov	%f0, %f1
-	jmp	fjge_cont.50289
-fjge_else.50288:
+	jmp	fjge_cont.42765
+fjge_else.42764:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.50289:
-	jmp	fjge_cont.50287
-fjge_else.50286:
+	subi	%g1, %g1, 52
+	call	sin_sub.2518
+	addi	%g1, %g1, 52
+fjge_cont.42765:
+	jmp	fjge_cont.42763
+fjge_else.42762:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.50287:
-fjge_cont.50285:
-	jmp	fjge_cont.50283
-fjge_else.50282:
+	subi	%g1, %g1, 52
+	call	sin_sub.2518
+	addi	%g1, %g1, 52
+fjge_cont.42763:
+fjge_cont.42761:
+	jmp	fjge_cont.42759
+fjge_else.42758:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50290
-	fjlt	%f1, %f16, fjge_else.50292
+	fjlt	%f29, %f1, fjge_else.42766
+	fjlt	%f1, %f16, fjge_else.42768
 	fmov	%f0, %f1
-	jmp	fjge_cont.50293
-fjge_else.50292:
+	jmp	fjge_cont.42769
+fjge_else.42768:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.50293:
-	jmp	fjge_cont.50291
-fjge_else.50290:
+	subi	%g1, %g1, 52
+	call	sin_sub.2518
+	addi	%g1, %g1, 52
+fjge_cont.42769:
+	jmp	fjge_cont.42767
+fjge_else.42766:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 4
-	call	sin_sub.2497
-	addi	%g1, %g1, 4
-fjge_cont.50291:
-fjge_cont.50283:
-fjge_cont.50267:
-	fjlt	%f4, %f0, fjge_else.50294
-	fjlt	%f16, %f2, fjge_else.50296
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.50297
-fjge_else.50296:
-	addi	%g3, %g0, 1
-fjge_cont.50297:
-	jmp	fjge_cont.50295
-fjge_else.50294:
-	fjlt	%f16, %f2, fjge_else.50298
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.50299
-fjge_else.50298:
-	addi	%g3, %g0, 0
-fjge_cont.50299:
-fjge_cont.50295:
-	fjlt	%f4, %f0, fjge_else.50300
+	subi	%g1, %g1, 52
+	call	sin_sub.2518
+	addi	%g1, %g1, 52
+fjge_cont.42767:
+fjge_cont.42759:
+fjge_cont.42743:
+	fjlt	%f4, %f0, fjge_else.42770
+	fjlt	%f16, %f2, fjge_else.42772
+	addi	%g4, %g0, 0
+	jmp	fjge_cont.42773
+fjge_else.42772:
+	addi	%g4, %g0, 1
+fjge_cont.42773:
+	jmp	fjge_cont.42771
+fjge_else.42770:
+	fjlt	%f16, %f2, fjge_else.42774
+	addi	%g4, %g0, 1
+	jmp	fjge_cont.42775
+fjge_else.42774:
+	addi	%g4, %g0, 0
+fjge_cont.42775:
+fjge_cont.42771:
+	fjlt	%f4, %f0, fjge_else.42776
 	fmov	%f1, %f0
-	jmp	fjge_cont.50301
-fjge_else.50300:
+	jmp	fjge_cont.42777
+fjge_else.42776:
 	fsub	%f1, %f29, %f0
-fjge_cont.50301:
-	fjlt	%f22, %f1, fjge_else.50302
+fjge_cont.42777:
+	fjlt	%f22, %f1, fjge_else.42778
 	fmov	%f0, %f1
-	jmp	fjge_cont.50303
-fjge_else.50302:
+	jmp	fjge_cont.42779
+fjge_else.42778:
 	fsub	%f0, %f4, %f1
-fjge_cont.50303:
+fjge_cont.42779:
 	fmul	%f1, %f0, %f21
 	fmul	%f0, %f1, %f1
 	fdiv	%f2, %f0, %f25
@@ -7533,148 +5074,148 @@ fjge_cont.50303:
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f17, %f0
 	fdiv	%f0, %f1, %f0
-	jne	%g3, %g0, jeq_else.50304
+	jne	%g4, %g0, jeq_else.42780
 	fneg	%f15, %f0
-	jmp	jeq_cont.50305
-jeq_else.50304:
+	jmp	jeq_cont.42781
+jeq_else.42780:
 	fmov	%f15, %f0
-jeq_cont.50305:
-	fjlt	%f3, %f16, fjge_else.50306
+jeq_cont.42781:
+	fjlt	%f3, %f16, fjge_else.42782
 	fmov	%f1, %f3
-	jmp	fjge_cont.50307
-fjge_else.50306:
+	jmp	fjge_cont.42783
+fjge_else.42782:
 	fneg	%f1, %f3
-fjge_cont.50307:
-	fsti	%f15, %g1, 0
-	fjlt	%f29, %f1, fjge_else.50308
-	fjlt	%f1, %f16, fjge_else.50310
+fjge_cont.42783:
+	fsti	%f15, %g1, 48
+	fjlt	%f29, %f1, fjge_else.42784
+	fjlt	%f1, %f16, fjge_else.42786
 	fmov	%f0, %f1
-	jmp	fjge_cont.50311
-fjge_else.50310:
+	jmp	fjge_cont.42787
+fjge_else.42786:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50312
-	fjlt	%f1, %f16, fjge_else.50314
+	fjlt	%f29, %f1, fjge_else.42788
+	fjlt	%f1, %f16, fjge_else.42790
 	fmov	%f0, %f1
-	jmp	fjge_cont.50315
-fjge_else.50314:
+	jmp	fjge_cont.42791
+fjge_else.42790:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50316
-	fjlt	%f1, %f16, fjge_else.50318
+	fjlt	%f29, %f1, fjge_else.42792
+	fjlt	%f1, %f16, fjge_else.42794
 	fmov	%f0, %f1
-	jmp	fjge_cont.50319
-fjge_else.50318:
+	jmp	fjge_cont.42795
+fjge_else.42794:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50319:
-	jmp	fjge_cont.50317
-fjge_else.50316:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42795:
+	jmp	fjge_cont.42793
+fjge_else.42792:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50317:
-fjge_cont.50315:
-	jmp	fjge_cont.50313
-fjge_else.50312:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42793:
+fjge_cont.42791:
+	jmp	fjge_cont.42789
+fjge_else.42788:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50320
-	fjlt	%f1, %f16, fjge_else.50322
+	fjlt	%f29, %f1, fjge_else.42796
+	fjlt	%f1, %f16, fjge_else.42798
 	fmov	%f0, %f1
-	jmp	fjge_cont.50323
-fjge_else.50322:
+	jmp	fjge_cont.42799
+fjge_else.42798:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50323:
-	jmp	fjge_cont.50321
-fjge_else.50320:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42799:
+	jmp	fjge_cont.42797
+fjge_else.42796:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50321:
-fjge_cont.50313:
-fjge_cont.50311:
-	jmp	fjge_cont.50309
-fjge_else.50308:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42797:
+fjge_cont.42789:
+fjge_cont.42787:
+	jmp	fjge_cont.42785
+fjge_else.42784:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50324
-	fjlt	%f1, %f16, fjge_else.50326
+	fjlt	%f29, %f1, fjge_else.42800
+	fjlt	%f1, %f16, fjge_else.42802
 	fmov	%f0, %f1
-	jmp	fjge_cont.50327
-fjge_else.50326:
+	jmp	fjge_cont.42803
+fjge_else.42802:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50328
-	fjlt	%f1, %f16, fjge_else.50330
+	fjlt	%f29, %f1, fjge_else.42804
+	fjlt	%f1, %f16, fjge_else.42806
 	fmov	%f0, %f1
-	jmp	fjge_cont.50331
-fjge_else.50330:
+	jmp	fjge_cont.42807
+fjge_else.42806:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50331:
-	jmp	fjge_cont.50329
-fjge_else.50328:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42807:
+	jmp	fjge_cont.42805
+fjge_else.42804:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50329:
-fjge_cont.50327:
-	jmp	fjge_cont.50325
-fjge_else.50324:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42805:
+fjge_cont.42803:
+	jmp	fjge_cont.42801
+fjge_else.42800:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50332
-	fjlt	%f1, %f16, fjge_else.50334
+	fjlt	%f29, %f1, fjge_else.42808
+	fjlt	%f1, %f16, fjge_else.42810
 	fmov	%f0, %f1
-	jmp	fjge_cont.50335
-fjge_else.50334:
+	jmp	fjge_cont.42811
+fjge_else.42810:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50335:
-	jmp	fjge_cont.50333
-fjge_else.50332:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42811:
+	jmp	fjge_cont.42809
+fjge_else.42808:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50333:
-fjge_cont.50325:
-fjge_cont.50309:
-	fjlt	%f4, %f0, fjge_else.50336
-	fjlt	%f16, %f3, fjge_else.50338
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.50339
-fjge_else.50338:
-	addi	%g3, %g0, 1
-fjge_cont.50339:
-	jmp	fjge_cont.50337
-fjge_else.50336:
-	fjlt	%f16, %f3, fjge_else.50340
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.50341
-fjge_else.50340:
-	addi	%g3, %g0, 0
-fjge_cont.50341:
-fjge_cont.50337:
-	fjlt	%f4, %f0, fjge_else.50342
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42809:
+fjge_cont.42801:
+fjge_cont.42785:
+	fjlt	%f4, %f0, fjge_else.42812
+	fjlt	%f16, %f3, fjge_else.42814
+	addi	%g4, %g0, 0
+	jmp	fjge_cont.42815
+fjge_else.42814:
+	addi	%g4, %g0, 1
+fjge_cont.42815:
+	jmp	fjge_cont.42813
+fjge_else.42812:
+	fjlt	%f16, %f3, fjge_else.42816
+	addi	%g4, %g0, 1
+	jmp	fjge_cont.42817
+fjge_else.42816:
+	addi	%g4, %g0, 0
+fjge_cont.42817:
+fjge_cont.42813:
+	fjlt	%f4, %f0, fjge_else.42818
 	fmov	%f1, %f0
-	jmp	fjge_cont.50343
-fjge_else.50342:
+	jmp	fjge_cont.42819
+fjge_else.42818:
 	fsub	%f1, %f29, %f0
-fjge_cont.50343:
-	fjlt	%f22, %f1, fjge_else.50344
+fjge_cont.42819:
+	fjlt	%f22, %f1, fjge_else.42820
 	fmov	%f0, %f1
-	jmp	fjge_cont.50345
-fjge_else.50344:
+	jmp	fjge_cont.42821
+fjge_else.42820:
 	fsub	%f0, %f4, %f1
-fjge_cont.50345:
+fjge_cont.42821:
 	fmul	%f1, %f0, %f21
 	fmul	%f0, %f1, %f1
 	fdiv	%f2, %f0, %f25
@@ -7690,149 +5231,149 @@ fjge_cont.50345:
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f17, %f0
 	fdiv	%f0, %f1, %f0
-	jne	%g3, %g0, jeq_else.50346
+	jne	%g4, %g0, jeq_else.42822
 	fneg	%f7, %f0
-	jmp	jeq_cont.50347
-jeq_else.50346:
+	jmp	jeq_cont.42823
+jeq_else.42822:
 	fmov	%f7, %f0
-jeq_cont.50347:
-	fldi	%f3, %g7, -4
+jeq_cont.42823:
+	fldi	%f3, %g3, -4
 	fsub	%f2, %f22, %f3
-	fjlt	%f2, %f16, fjge_else.50348
+	fjlt	%f2, %f16, fjge_else.42824
 	fmov	%f1, %f2
-	jmp	fjge_cont.50349
-fjge_else.50348:
+	jmp	fjge_cont.42825
+fjge_else.42824:
 	fneg	%f1, %f2
-fjge_cont.50349:
-	fjlt	%f29, %f1, fjge_else.50350
-	fjlt	%f1, %f16, fjge_else.50352
+fjge_cont.42825:
+	fjlt	%f29, %f1, fjge_else.42826
+	fjlt	%f1, %f16, fjge_else.42828
 	fmov	%f0, %f1
-	jmp	fjge_cont.50353
-fjge_else.50352:
+	jmp	fjge_cont.42829
+fjge_else.42828:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50354
-	fjlt	%f1, %f16, fjge_else.50356
+	fjlt	%f29, %f1, fjge_else.42830
+	fjlt	%f1, %f16, fjge_else.42832
 	fmov	%f0, %f1
-	jmp	fjge_cont.50357
-fjge_else.50356:
+	jmp	fjge_cont.42833
+fjge_else.42832:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50358
-	fjlt	%f1, %f16, fjge_else.50360
+	fjlt	%f29, %f1, fjge_else.42834
+	fjlt	%f1, %f16, fjge_else.42836
 	fmov	%f0, %f1
-	jmp	fjge_cont.50361
-fjge_else.50360:
+	jmp	fjge_cont.42837
+fjge_else.42836:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50361:
-	jmp	fjge_cont.50359
-fjge_else.50358:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42837:
+	jmp	fjge_cont.42835
+fjge_else.42834:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50359:
-fjge_cont.50357:
-	jmp	fjge_cont.50355
-fjge_else.50354:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42835:
+fjge_cont.42833:
+	jmp	fjge_cont.42831
+fjge_else.42830:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50362
-	fjlt	%f1, %f16, fjge_else.50364
+	fjlt	%f29, %f1, fjge_else.42838
+	fjlt	%f1, %f16, fjge_else.42840
 	fmov	%f0, %f1
-	jmp	fjge_cont.50365
-fjge_else.50364:
+	jmp	fjge_cont.42841
+fjge_else.42840:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50365:
-	jmp	fjge_cont.50363
-fjge_else.50362:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42841:
+	jmp	fjge_cont.42839
+fjge_else.42838:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50363:
-fjge_cont.50355:
-fjge_cont.50353:
-	jmp	fjge_cont.50351
-fjge_else.50350:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42839:
+fjge_cont.42831:
+fjge_cont.42829:
+	jmp	fjge_cont.42827
+fjge_else.42826:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50366
-	fjlt	%f1, %f16, fjge_else.50368
+	fjlt	%f29, %f1, fjge_else.42842
+	fjlt	%f1, %f16, fjge_else.42844
 	fmov	%f0, %f1
-	jmp	fjge_cont.50369
-fjge_else.50368:
+	jmp	fjge_cont.42845
+fjge_else.42844:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50370
-	fjlt	%f1, %f16, fjge_else.50372
+	fjlt	%f29, %f1, fjge_else.42846
+	fjlt	%f1, %f16, fjge_else.42848
 	fmov	%f0, %f1
-	jmp	fjge_cont.50373
-fjge_else.50372:
+	jmp	fjge_cont.42849
+fjge_else.42848:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50373:
-	jmp	fjge_cont.50371
-fjge_else.50370:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42849:
+	jmp	fjge_cont.42847
+fjge_else.42846:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50371:
-fjge_cont.50369:
-	jmp	fjge_cont.50367
-fjge_else.50366:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42847:
+fjge_cont.42845:
+	jmp	fjge_cont.42843
+fjge_else.42842:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50374
-	fjlt	%f1, %f16, fjge_else.50376
+	fjlt	%f29, %f1, fjge_else.42850
+	fjlt	%f1, %f16, fjge_else.42852
 	fmov	%f0, %f1
-	jmp	fjge_cont.50377
-fjge_else.50376:
+	jmp	fjge_cont.42853
+fjge_else.42852:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50377:
-	jmp	fjge_cont.50375
-fjge_else.50374:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42853:
+	jmp	fjge_cont.42851
+fjge_else.42850:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50375:
-fjge_cont.50367:
-fjge_cont.50351:
-	fjlt	%f4, %f0, fjge_else.50378
-	fjlt	%f16, %f2, fjge_else.50380
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.50381
-fjge_else.50380:
-	addi	%g3, %g0, 1
-fjge_cont.50381:
-	jmp	fjge_cont.50379
-fjge_else.50378:
-	fjlt	%f16, %f2, fjge_else.50382
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.50383
-fjge_else.50382:
-	addi	%g3, %g0, 0
-fjge_cont.50383:
-fjge_cont.50379:
-	fjlt	%f4, %f0, fjge_else.50384
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42851:
+fjge_cont.42843:
+fjge_cont.42827:
+	fjlt	%f4, %f0, fjge_else.42854
+	fjlt	%f16, %f2, fjge_else.42856
+	addi	%g4, %g0, 0
+	jmp	fjge_cont.42857
+fjge_else.42856:
+	addi	%g4, %g0, 1
+fjge_cont.42857:
+	jmp	fjge_cont.42855
+fjge_else.42854:
+	fjlt	%f16, %f2, fjge_else.42858
+	addi	%g4, %g0, 1
+	jmp	fjge_cont.42859
+fjge_else.42858:
+	addi	%g4, %g0, 0
+fjge_cont.42859:
+fjge_cont.42855:
+	fjlt	%f4, %f0, fjge_else.42860
 	fmov	%f1, %f0
-	jmp	fjge_cont.50385
-fjge_else.50384:
+	jmp	fjge_cont.42861
+fjge_else.42860:
 	fsub	%f1, %f29, %f0
-fjge_cont.50385:
-	fjlt	%f22, %f1, fjge_else.50386
+fjge_cont.42861:
+	fjlt	%f22, %f1, fjge_else.42862
 	fmov	%f0, %f1
-	jmp	fjge_cont.50387
-fjge_else.50386:
+	jmp	fjge_cont.42863
+fjge_else.42862:
 	fsub	%f0, %f4, %f1
-fjge_cont.50387:
+fjge_cont.42863:
 	fmul	%f1, %f0, %f21
 	fmul	%f0, %f1, %f1
 	fdiv	%f2, %f0, %f25
@@ -7848,147 +5389,147 @@ fjge_cont.50387:
 	fmul	%f1, %f1, %f1
 	fadd	%f1, %f17, %f1
 	fdiv	%f0, %f0, %f1
-	jne	%g3, %g0, jeq_else.50388
+	jne	%g4, %g0, jeq_else.42864
 	fneg	%f13, %f0
-	jmp	jeq_cont.50389
-jeq_else.50388:
+	jmp	jeq_cont.42865
+jeq_else.42864:
 	fmov	%f13, %f0
-jeq_cont.50389:
-	fjlt	%f3, %f16, fjge_else.50390
+jeq_cont.42865:
+	fjlt	%f3, %f16, fjge_else.42866
 	fmov	%f1, %f3
-	jmp	fjge_cont.50391
-fjge_else.50390:
+	jmp	fjge_cont.42867
+fjge_else.42866:
 	fneg	%f1, %f3
-fjge_cont.50391:
-	fjlt	%f29, %f1, fjge_else.50392
-	fjlt	%f1, %f16, fjge_else.50394
+fjge_cont.42867:
+	fjlt	%f29, %f1, fjge_else.42868
+	fjlt	%f1, %f16, fjge_else.42870
 	fmov	%f0, %f1
-	jmp	fjge_cont.50395
-fjge_else.50394:
+	jmp	fjge_cont.42871
+fjge_else.42870:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50396
-	fjlt	%f1, %f16, fjge_else.50398
+	fjlt	%f29, %f1, fjge_else.42872
+	fjlt	%f1, %f16, fjge_else.42874
 	fmov	%f0, %f1
-	jmp	fjge_cont.50399
-fjge_else.50398:
+	jmp	fjge_cont.42875
+fjge_else.42874:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50400
-	fjlt	%f1, %f16, fjge_else.50402
+	fjlt	%f29, %f1, fjge_else.42876
+	fjlt	%f1, %f16, fjge_else.42878
 	fmov	%f0, %f1
-	jmp	fjge_cont.50403
-fjge_else.50402:
+	jmp	fjge_cont.42879
+fjge_else.42878:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50403:
-	jmp	fjge_cont.50401
-fjge_else.50400:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42879:
+	jmp	fjge_cont.42877
+fjge_else.42876:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50401:
-fjge_cont.50399:
-	jmp	fjge_cont.50397
-fjge_else.50396:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42877:
+fjge_cont.42875:
+	jmp	fjge_cont.42873
+fjge_else.42872:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50404
-	fjlt	%f1, %f16, fjge_else.50406
+	fjlt	%f29, %f1, fjge_else.42880
+	fjlt	%f1, %f16, fjge_else.42882
 	fmov	%f0, %f1
-	jmp	fjge_cont.50407
-fjge_else.50406:
+	jmp	fjge_cont.42883
+fjge_else.42882:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50407:
-	jmp	fjge_cont.50405
-fjge_else.50404:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42883:
+	jmp	fjge_cont.42881
+fjge_else.42880:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50405:
-fjge_cont.50397:
-fjge_cont.50395:
-	jmp	fjge_cont.50393
-fjge_else.50392:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42881:
+fjge_cont.42873:
+fjge_cont.42871:
+	jmp	fjge_cont.42869
+fjge_else.42868:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50408
-	fjlt	%f1, %f16, fjge_else.50410
+	fjlt	%f29, %f1, fjge_else.42884
+	fjlt	%f1, %f16, fjge_else.42886
 	fmov	%f0, %f1
-	jmp	fjge_cont.50411
-fjge_else.50410:
+	jmp	fjge_cont.42887
+fjge_else.42886:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50412
-	fjlt	%f1, %f16, fjge_else.50414
+	fjlt	%f29, %f1, fjge_else.42888
+	fjlt	%f1, %f16, fjge_else.42890
 	fmov	%f0, %f1
-	jmp	fjge_cont.50415
-fjge_else.50414:
+	jmp	fjge_cont.42891
+fjge_else.42890:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50415:
-	jmp	fjge_cont.50413
-fjge_else.50412:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42891:
+	jmp	fjge_cont.42889
+fjge_else.42888:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50413:
-fjge_cont.50411:
-	jmp	fjge_cont.50409
-fjge_else.50408:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42889:
+fjge_cont.42887:
+	jmp	fjge_cont.42885
+fjge_else.42884:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50416
-	fjlt	%f1, %f16, fjge_else.50418
+	fjlt	%f29, %f1, fjge_else.42892
+	fjlt	%f1, %f16, fjge_else.42894
 	fmov	%f0, %f1
-	jmp	fjge_cont.50419
-fjge_else.50418:
+	jmp	fjge_cont.42895
+fjge_else.42894:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50419:
-	jmp	fjge_cont.50417
-fjge_else.50416:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42895:
+	jmp	fjge_cont.42893
+fjge_else.42892:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50417:
-fjge_cont.50409:
-fjge_cont.50393:
-	fjlt	%f4, %f0, fjge_else.50420
-	fjlt	%f16, %f3, fjge_else.50422
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.50423
-fjge_else.50422:
-	addi	%g3, %g0, 1
-fjge_cont.50423:
-	jmp	fjge_cont.50421
-fjge_else.50420:
-	fjlt	%f16, %f3, fjge_else.50424
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.50425
-fjge_else.50424:
-	addi	%g3, %g0, 0
-fjge_cont.50425:
-fjge_cont.50421:
-	fjlt	%f4, %f0, fjge_else.50426
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42893:
+fjge_cont.42885:
+fjge_cont.42869:
+	fjlt	%f4, %f0, fjge_else.42896
+	fjlt	%f16, %f3, fjge_else.42898
+	addi	%g4, %g0, 0
+	jmp	fjge_cont.42899
+fjge_else.42898:
+	addi	%g4, %g0, 1
+fjge_cont.42899:
+	jmp	fjge_cont.42897
+fjge_else.42896:
+	fjlt	%f16, %f3, fjge_else.42900
+	addi	%g4, %g0, 1
+	jmp	fjge_cont.42901
+fjge_else.42900:
+	addi	%g4, %g0, 0
+fjge_cont.42901:
+fjge_cont.42897:
+	fjlt	%f4, %f0, fjge_else.42902
 	fmov	%f1, %f0
-	jmp	fjge_cont.50427
-fjge_else.50426:
+	jmp	fjge_cont.42903
+fjge_else.42902:
 	fsub	%f1, %f29, %f0
-fjge_cont.50427:
-	fjlt	%f22, %f1, fjge_else.50428
+fjge_cont.42903:
+	fjlt	%f22, %f1, fjge_else.42904
 	fmov	%f0, %f1
-	jmp	fjge_cont.50429
-fjge_else.50428:
+	jmp	fjge_cont.42905
+fjge_else.42904:
 	fsub	%f0, %f4, %f1
-fjge_cont.50429:
+fjge_cont.42905:
 	fmul	%f1, %f0, %f21
 	fmul	%f0, %f1, %f1
 	fdiv	%f2, %f0, %f25
@@ -8004,149 +5545,149 @@ fjge_cont.50429:
 	fmul	%f1, %f1, %f1
 	fadd	%f1, %f17, %f1
 	fdiv	%f0, %f0, %f1
-	jne	%g3, %g0, jeq_else.50430
+	jne	%g4, %g0, jeq_else.42906
 	fneg	%f9, %f0
-	jmp	jeq_cont.50431
-jeq_else.50430:
+	jmp	jeq_cont.42907
+jeq_else.42906:
 	fmov	%f9, %f0
-jeq_cont.50431:
-	fldi	%f3, %g7, -8
+jeq_cont.42907:
+	fldi	%f3, %g3, -8
 	fsub	%f2, %f22, %f3
-	fjlt	%f2, %f16, fjge_else.50432
+	fjlt	%f2, %f16, fjge_else.42908
 	fmov	%f1, %f2
-	jmp	fjge_cont.50433
-fjge_else.50432:
+	jmp	fjge_cont.42909
+fjge_else.42908:
 	fneg	%f1, %f2
-fjge_cont.50433:
-	fjlt	%f29, %f1, fjge_else.50434
-	fjlt	%f1, %f16, fjge_else.50436
+fjge_cont.42909:
+	fjlt	%f29, %f1, fjge_else.42910
+	fjlt	%f1, %f16, fjge_else.42912
 	fmov	%f0, %f1
-	jmp	fjge_cont.50437
-fjge_else.50436:
+	jmp	fjge_cont.42913
+fjge_else.42912:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50438
-	fjlt	%f1, %f16, fjge_else.50440
+	fjlt	%f29, %f1, fjge_else.42914
+	fjlt	%f1, %f16, fjge_else.42916
 	fmov	%f0, %f1
-	jmp	fjge_cont.50441
-fjge_else.50440:
+	jmp	fjge_cont.42917
+fjge_else.42916:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50442
-	fjlt	%f1, %f16, fjge_else.50444
+	fjlt	%f29, %f1, fjge_else.42918
+	fjlt	%f1, %f16, fjge_else.42920
 	fmov	%f0, %f1
-	jmp	fjge_cont.50445
-fjge_else.50444:
+	jmp	fjge_cont.42921
+fjge_else.42920:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50445:
-	jmp	fjge_cont.50443
-fjge_else.50442:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42921:
+	jmp	fjge_cont.42919
+fjge_else.42918:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50443:
-fjge_cont.50441:
-	jmp	fjge_cont.50439
-fjge_else.50438:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42919:
+fjge_cont.42917:
+	jmp	fjge_cont.42915
+fjge_else.42914:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50446
-	fjlt	%f1, %f16, fjge_else.50448
+	fjlt	%f29, %f1, fjge_else.42922
+	fjlt	%f1, %f16, fjge_else.42924
 	fmov	%f0, %f1
-	jmp	fjge_cont.50449
-fjge_else.50448:
+	jmp	fjge_cont.42925
+fjge_else.42924:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50449:
-	jmp	fjge_cont.50447
-fjge_else.50446:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42925:
+	jmp	fjge_cont.42923
+fjge_else.42922:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50447:
-fjge_cont.50439:
-fjge_cont.50437:
-	jmp	fjge_cont.50435
-fjge_else.50434:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42923:
+fjge_cont.42915:
+fjge_cont.42913:
+	jmp	fjge_cont.42911
+fjge_else.42910:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50450
-	fjlt	%f1, %f16, fjge_else.50452
+	fjlt	%f29, %f1, fjge_else.42926
+	fjlt	%f1, %f16, fjge_else.42928
 	fmov	%f0, %f1
-	jmp	fjge_cont.50453
-fjge_else.50452:
+	jmp	fjge_cont.42929
+fjge_else.42928:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50454
-	fjlt	%f1, %f16, fjge_else.50456
+	fjlt	%f29, %f1, fjge_else.42930
+	fjlt	%f1, %f16, fjge_else.42932
 	fmov	%f0, %f1
-	jmp	fjge_cont.50457
-fjge_else.50456:
+	jmp	fjge_cont.42933
+fjge_else.42932:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50457:
-	jmp	fjge_cont.50455
-fjge_else.50454:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42933:
+	jmp	fjge_cont.42931
+fjge_else.42930:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50455:
-fjge_cont.50453:
-	jmp	fjge_cont.50451
-fjge_else.50450:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42931:
+fjge_cont.42929:
+	jmp	fjge_cont.42927
+fjge_else.42926:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50458
-	fjlt	%f1, %f16, fjge_else.50460
+	fjlt	%f29, %f1, fjge_else.42934
+	fjlt	%f1, %f16, fjge_else.42936
 	fmov	%f0, %f1
-	jmp	fjge_cont.50461
-fjge_else.50460:
+	jmp	fjge_cont.42937
+fjge_else.42936:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50461:
-	jmp	fjge_cont.50459
-fjge_else.50458:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42937:
+	jmp	fjge_cont.42935
+fjge_else.42934:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50459:
-fjge_cont.50451:
-fjge_cont.50435:
-	fjlt	%f4, %f0, fjge_else.50462
-	fjlt	%f16, %f2, fjge_else.50464
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.50465
-fjge_else.50464:
-	addi	%g3, %g0, 1
-fjge_cont.50465:
-	jmp	fjge_cont.50463
-fjge_else.50462:
-	fjlt	%f16, %f2, fjge_else.50466
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.50467
-fjge_else.50466:
-	addi	%g3, %g0, 0
-fjge_cont.50467:
-fjge_cont.50463:
-	fjlt	%f4, %f0, fjge_else.50468
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42935:
+fjge_cont.42927:
+fjge_cont.42911:
+	fjlt	%f4, %f0, fjge_else.42938
+	fjlt	%f16, %f2, fjge_else.42940
+	addi	%g4, %g0, 0
+	jmp	fjge_cont.42941
+fjge_else.42940:
+	addi	%g4, %g0, 1
+fjge_cont.42941:
+	jmp	fjge_cont.42939
+fjge_else.42938:
+	fjlt	%f16, %f2, fjge_else.42942
+	addi	%g4, %g0, 1
+	jmp	fjge_cont.42943
+fjge_else.42942:
+	addi	%g4, %g0, 0
+fjge_cont.42943:
+fjge_cont.42939:
+	fjlt	%f4, %f0, fjge_else.42944
 	fmov	%f1, %f0
-	jmp	fjge_cont.50469
-fjge_else.50468:
+	jmp	fjge_cont.42945
+fjge_else.42944:
 	fsub	%f1, %f29, %f0
-fjge_cont.50469:
-	fjlt	%f22, %f1, fjge_else.50470
+fjge_cont.42945:
+	fjlt	%f22, %f1, fjge_else.42946
 	fmov	%f0, %f1
-	jmp	fjge_cont.50471
-fjge_else.50470:
+	jmp	fjge_cont.42947
+fjge_else.42946:
 	fsub	%f0, %f4, %f1
-fjge_cont.50471:
+fjge_cont.42947:
 	fmul	%f1, %f0, %f21
 	fmul	%f0, %f1, %f1
 	fdiv	%f2, %f0, %f25
@@ -8162,147 +5703,147 @@ fjge_cont.50471:
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f17, %f0
 	fdiv	%f0, %f1, %f0
-	jne	%g3, %g0, jeq_else.50472
+	jne	%g4, %g0, jeq_else.42948
 	fneg	%f2, %f0
-	jmp	jeq_cont.50473
-jeq_else.50472:
+	jmp	jeq_cont.42949
+jeq_else.42948:
 	fmov	%f2, %f0
-jeq_cont.50473:
-	fjlt	%f3, %f16, fjge_else.50474
+jeq_cont.42949:
+	fjlt	%f3, %f16, fjge_else.42950
 	fmov	%f1, %f3
-	jmp	fjge_cont.50475
-fjge_else.50474:
+	jmp	fjge_cont.42951
+fjge_else.42950:
 	fneg	%f1, %f3
-fjge_cont.50475:
-	fjlt	%f29, %f1, fjge_else.50476
-	fjlt	%f1, %f16, fjge_else.50478
+fjge_cont.42951:
+	fjlt	%f29, %f1, fjge_else.42952
+	fjlt	%f1, %f16, fjge_else.42954
 	fmov	%f0, %f1
-	jmp	fjge_cont.50479
-fjge_else.50478:
+	jmp	fjge_cont.42955
+fjge_else.42954:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50480
-	fjlt	%f1, %f16, fjge_else.50482
+	fjlt	%f29, %f1, fjge_else.42956
+	fjlt	%f1, %f16, fjge_else.42958
 	fmov	%f0, %f1
-	jmp	fjge_cont.50483
-fjge_else.50482:
+	jmp	fjge_cont.42959
+fjge_else.42958:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50484
-	fjlt	%f1, %f16, fjge_else.50486
+	fjlt	%f29, %f1, fjge_else.42960
+	fjlt	%f1, %f16, fjge_else.42962
 	fmov	%f0, %f1
-	jmp	fjge_cont.50487
-fjge_else.50486:
+	jmp	fjge_cont.42963
+fjge_else.42962:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50487:
-	jmp	fjge_cont.50485
-fjge_else.50484:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42963:
+	jmp	fjge_cont.42961
+fjge_else.42960:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50485:
-fjge_cont.50483:
-	jmp	fjge_cont.50481
-fjge_else.50480:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42961:
+fjge_cont.42959:
+	jmp	fjge_cont.42957
+fjge_else.42956:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50488
-	fjlt	%f1, %f16, fjge_else.50490
+	fjlt	%f29, %f1, fjge_else.42964
+	fjlt	%f1, %f16, fjge_else.42966
 	fmov	%f0, %f1
-	jmp	fjge_cont.50491
-fjge_else.50490:
+	jmp	fjge_cont.42967
+fjge_else.42966:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50491:
-	jmp	fjge_cont.50489
-fjge_else.50488:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42967:
+	jmp	fjge_cont.42965
+fjge_else.42964:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50489:
-fjge_cont.50481:
-fjge_cont.50479:
-	jmp	fjge_cont.50477
-fjge_else.50476:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42965:
+fjge_cont.42957:
+fjge_cont.42955:
+	jmp	fjge_cont.42953
+fjge_else.42952:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50492
-	fjlt	%f1, %f16, fjge_else.50494
+	fjlt	%f29, %f1, fjge_else.42968
+	fjlt	%f1, %f16, fjge_else.42970
 	fmov	%f0, %f1
-	jmp	fjge_cont.50495
-fjge_else.50494:
+	jmp	fjge_cont.42971
+fjge_else.42970:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50496
-	fjlt	%f1, %f16, fjge_else.50498
+	fjlt	%f29, %f1, fjge_else.42972
+	fjlt	%f1, %f16, fjge_else.42974
 	fmov	%f0, %f1
-	jmp	fjge_cont.50499
-fjge_else.50498:
+	jmp	fjge_cont.42975
+fjge_else.42974:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50499:
-	jmp	fjge_cont.50497
-fjge_else.50496:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42975:
+	jmp	fjge_cont.42973
+fjge_else.42972:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50497:
-fjge_cont.50495:
-	jmp	fjge_cont.50493
-fjge_else.50492:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42973:
+fjge_cont.42971:
+	jmp	fjge_cont.42969
+fjge_else.42968:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.50500
-	fjlt	%f1, %f16, fjge_else.50502
+	fjlt	%f29, %f1, fjge_else.42976
+	fjlt	%f1, %f16, fjge_else.42978
 	fmov	%f0, %f1
-	jmp	fjge_cont.50503
-fjge_else.50502:
+	jmp	fjge_cont.42979
+fjge_else.42978:
 	fadd	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50503:
-	jmp	fjge_cont.50501
-fjge_else.50500:
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42979:
+	jmp	fjge_cont.42977
+fjge_else.42976:
 	fsub	%f1, %f1, %f29
-	subi	%g1, %g1, 8
-	call	sin_sub.2497
-	addi	%g1, %g1, 8
-fjge_cont.50501:
-fjge_cont.50493:
-fjge_cont.50477:
-	fjlt	%f4, %f0, fjge_else.50504
-	fjlt	%f16, %f3, fjge_else.50506
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.50507
-fjge_else.50506:
-	addi	%g3, %g0, 1
-fjge_cont.50507:
-	jmp	fjge_cont.50505
-fjge_else.50504:
-	fjlt	%f16, %f3, fjge_else.50508
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.50509
-fjge_else.50508:
-	addi	%g3, %g0, 0
-fjge_cont.50509:
-fjge_cont.50505:
-	fjlt	%f4, %f0, fjge_else.50510
+	subi	%g1, %g1, 56
+	call	sin_sub.2518
+	addi	%g1, %g1, 56
+fjge_cont.42977:
+fjge_cont.42969:
+fjge_cont.42953:
+	fjlt	%f4, %f0, fjge_else.42980
+	fjlt	%f16, %f3, fjge_else.42982
+	addi	%g4, %g0, 0
+	jmp	fjge_cont.42983
+fjge_else.42982:
+	addi	%g4, %g0, 1
+fjge_cont.42983:
+	jmp	fjge_cont.42981
+fjge_else.42980:
+	fjlt	%f16, %f3, fjge_else.42984
+	addi	%g4, %g0, 1
+	jmp	fjge_cont.42985
+fjge_else.42984:
+	addi	%g4, %g0, 0
+fjge_cont.42985:
+fjge_cont.42981:
+	fjlt	%f4, %f0, fjge_else.42986
 	fmov	%f1, %f0
-	jmp	fjge_cont.50511
-fjge_else.50510:
+	jmp	fjge_cont.42987
+fjge_else.42986:
 	fsub	%f1, %f29, %f0
-fjge_cont.50511:
-	fjlt	%f22, %f1, fjge_else.50512
+fjge_cont.42987:
+	fjlt	%f22, %f1, fjge_else.42988
 	fmov	%f0, %f1
-	jmp	fjge_cont.50513
-fjge_else.50512:
+	jmp	fjge_cont.42989
+fjge_else.42988:
 	fsub	%f0, %f4, %f1
-fjge_cont.50513:
+fjge_cont.42989:
 	fmul	%f1, %f0, %f21
 	fmul	%f0, %f1, %f1
 	fdiv	%f3, %f0, %f25
@@ -8318,16 +5859,16 @@ fjge_cont.50513:
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f17, %f0
 	fdiv	%f1, %f1, %f0
-	jne	%g3, %g0, jeq_else.50514
+	jne	%g4, %g0, jeq_else.42990
 	fneg	%f0, %f1
-	jmp	jeq_cont.50515
-jeq_else.50514:
+	jmp	jeq_cont.42991
+jeq_else.42990:
 	fmov	%f0, %f1
-jeq_cont.50515:
+jeq_cont.42991:
 	fmul	%f12, %f13, %f2
 	fmul	%f5, %f7, %f9
 	fmul	%f3, %f5, %f2
-	fldi	%f15, %g1, 0
+	fldi	%f15, %g1, 48
 	fmul	%f1, %f15, %f0
 	fsub	%f10, %f3, %f1
 	fmul	%f1, %f15, %f9
@@ -8344,9 +5885,9 @@ jeq_cont.50515:
 	fneg	%f9, %f9
 	fmul	%f7, %f7, %f13
 	fmul	%f4, %f15, %f13
-	fldi	%f0, %g8, 0
-	fldi	%f2, %g8, -4
-	fldi	%f3, %g8, -8
+	fldi	%f0, %g5, 0
+	fldi	%f2, %g5, -4
+	fldi	%f3, %g5, -8
 	fmul	%f1, %f12, %f12
 	fmul	%f13, %f0, %f1
 	fmul	%f1, %f11, %f11
@@ -8355,7 +5896,7 @@ jeq_cont.50515:
 	fmul	%f1, %f9, %f9
 	fmul	%f1, %f3, %f1
 	fadd	%f1, %f13, %f1
-	fsti	%f1, %g8, 0
+	fsti	%f1, %g5, 0
 	fmul	%f1, %f10, %f10
 	fmul	%f13, %f0, %f1
 	fmul	%f1, %f8, %f8
@@ -8364,7 +5905,7 @@ jeq_cont.50515:
 	fmul	%f1, %f7, %f7
 	fmul	%f1, %f3, %f1
 	fadd	%f1, %f13, %f1
-	fsti	%f1, %g8, -4
+	fsti	%f1, %g5, -4
 	fmul	%f1, %f6, %f6
 	fmul	%f13, %f0, %f1
 	fmul	%f1, %f5, %f5
@@ -8373,7 +5914,7 @@ jeq_cont.50515:
 	fmul	%f1, %f4, %f4
 	fmul	%f1, %f3, %f1
 	fadd	%f1, %f13, %f1
-	fsti	%f1, %g8, -8
+	fsti	%f1, %g5, -8
 	fmul	%f1, %f0, %f10
 	fmul	%f13, %f1, %f6
 	fmul	%f1, %f2, %f8
@@ -8383,7 +5924,7 @@ jeq_cont.50515:
 	fmul	%f1, %f1, %f4
 	fadd	%f1, %f13, %f1
 	fmul	%f1, %f14, %f1
-	fsti	%f1, %g7, 0
+	fsti	%f1, %g3, 0
 	fmul	%f1, %f0, %f12
 	fmul	%f6, %f1, %f6
 	fmul	%f0, %f2, %f11
@@ -8393,707 +5934,114 @@ jeq_cont.50515:
 	fmul	%f2, %f3, %f4
 	fadd	%f2, %f5, %f2
 	fmul	%f2, %f14, %f2
-	fsti	%f2, %g7, -4
+	fsti	%f2, %g3, -4
 	fmul	%f1, %f1, %f10
 	fmul	%f0, %f0, %f8
 	fadd	%f1, %f1, %f0
 	fmul	%f0, %f3, %f7
 	fadd	%f0, %f1, %f0
 	fmul	%f0, %f14, %f0
-	fsti	%f0, %g7, -8
-jeq_cont.50263:
+	fsti	%f0, %g3, -8
+jeq_cont.42739:
 	addi	%g3, %g0, 1
-jeq_cont.49935:
-	jne	%g3, %g0, jeq_else.50516
-	sti	%g16, %g31, 28
+jeq_cont.42705:
+	jne	%g3, %g0, jeq_else.42992
+	ldi	%g8, %g1, 0
+	sti	%g8, %g31, 28
 	return
-jeq_else.50516:
-	addi	%g16, %g16, 1
-	jmp	read_object.2696
+jeq_else.42992:
+	ldi	%g8, %g1, 0
+	addi	%g8, %g8, 1
+	jmp	read_object.2713
 
 !==============================
-! args = [%g8]
+! args = [%g4]
 ! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %f15, %dummy]
+! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0, %dummy]
 ! ret type = Array(Int)
 !================================
-read_net_item.2700:
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 8
-	input	%g4
-	addi	%g7, %g0, 48
-	jlt	%g4, %g7, jle_else.50518
-	addi	%g7, %g0, 57
-	jlt	%g7, %g4, jle_else.50520
-	addi	%g7, %g0, 0
-	jmp	jle_cont.50521
-jle_else.50520:
-	addi	%g7, %g0, 1
-jle_cont.50521:
-	jmp	jle_cont.50519
-jle_else.50518:
-	addi	%g7, %g0, 1
-jle_cont.50519:
-	jne	%g7, %g0, jeq_else.50522
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.50524
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.50525
-jeq_else.50524:
-jeq_cont.50525:
-	ldi	%g3, %g31, 4
-	slli	%g5, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g5, %g5, %g3
-	subi	%g3, %g4, 48
-	add	%g3, %g5, %g3
-	sti	%g3, %g31, 4
-	input	%g5
-	addi	%g7, %g0, 48
-	jlt	%g5, %g7, jle_else.50526
-	addi	%g7, %g0, 57
-	jlt	%g7, %g5, jle_else.50528
-	addi	%g7, %g0, 0
-	jmp	jle_cont.50529
-jle_else.50528:
-	addi	%g7, %g0, 1
-jle_cont.50529:
-	jmp	jle_cont.50527
-jle_else.50526:
-	addi	%g7, %g0, 1
-jle_cont.50527:
-	jne	%g7, %g0, jeq_else.50530
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.50532
-	addi	%g3, %g0, 45
-	jne	%g4, %g3, jeq_else.50534
-	addi	%g3, %g0, -1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.50535
-jeq_else.50534:
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-jeq_cont.50535:
-	jmp	jeq_cont.50533
-jeq_else.50532:
-jeq_cont.50533:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g7, %g3
-	jmp	jeq_cont.50531
-jeq_else.50530:
-	ldi	%g7, %g31, 8
-	jne	%g7, %g28, jeq_else.50536
-	ldi	%g7, %g31, 4
-	jmp	jeq_cont.50537
-jeq_else.50536:
-	ldi	%g7, %g31, 4
-	sub	%g7, %g0, %g7
-jeq_cont.50537:
-jeq_cont.50531:
-	jmp	jeq_cont.50523
-jeq_else.50522:
-	input	%g5
-	addi	%g7, %g0, 48
-	jlt	%g5, %g7, jle_else.50538
-	addi	%g7, %g0, 57
-	jlt	%g7, %g5, jle_else.50540
-	addi	%g7, %g0, 0
-	jmp	jle_cont.50541
-jle_else.50540:
-	addi	%g7, %g0, 1
-jle_cont.50541:
-	jmp	jle_cont.50539
-jle_else.50538:
-	addi	%g7, %g0, 1
-jle_cont.50539:
-	jne	%g7, %g0, jeq_else.50542
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.50544
-	addi	%g3, %g0, 45
-	jne	%g4, %g3, jeq_else.50546
-	addi	%g3, %g0, -1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.50547
-jeq_else.50546:
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-jeq_cont.50547:
-	jmp	jeq_cont.50545
-jeq_else.50544:
-jeq_cont.50545:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g7, %g3
-	jmp	jeq_cont.50543
-jeq_else.50542:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g7, %g3
-jeq_cont.50543:
-jeq_cont.50523:
-	jne	%g7, %g29, jeq_else.50548
-	addi	%g3, %g8, 1
-	addi	%g4, %g0, -1
-	jmp	min_caml_create_array
-jeq_else.50548:
-	addi	%g9, %g8, 1
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 8
-	input	%g5
-	addi	%g4, %g0, 48
-	jlt	%g5, %g4, jle_else.50549
-	addi	%g4, %g0, 57
-	jlt	%g4, %g5, jle_else.50551
-	addi	%g4, %g0, 0
-	jmp	jle_cont.50552
-jle_else.50551:
-	addi	%g4, %g0, 1
-jle_cont.50552:
-	jmp	jle_cont.50550
-jle_else.50549:
-	addi	%g4, %g0, 1
-jle_cont.50550:
-	jne	%g4, %g0, jeq_else.50553
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.50555
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.50556
-jeq_else.50555:
-jeq_cont.50556:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g4, %g3
-	jmp	jeq_cont.50554
-jeq_else.50553:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g4, %g3
-jeq_cont.50554:
-	sti	%g7, %g1, 0
-	sti	%g8, %g1, 4
-	jne	%g4, %g29, jeq_else.50557
-	addi	%g3, %g9, 1
-	addi	%g4, %g0, -1
-	subi	%g1, %g1, 12
-	call	min_caml_create_array
-	addi	%g1, %g1, 12
-	jmp	jeq_cont.50558
-jeq_else.50557:
-	addi	%g3, %g9, 1
-	sti	%g4, %g1, 8
-	sti	%g9, %g1, 12
-	mov	%g8, %g3
-	subi	%g1, %g1, 20
-	call	read_net_item.2700
-	addi	%g1, %g1, 20
-	ldi	%g9, %g1, 12
-	slli	%g5, %g9, 2
-	ldi	%g4, %g1, 8
-	st	%g4, %g3, %g5
-jeq_cont.50558:
-	ldi	%g8, %g1, 4
-	slli	%g4, %g8, 2
-	ldi	%g7, %g1, 0
-	st	%g7, %g3, %g4
-	return
-
-!==============================
-! args = [%g11]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f15, %dummy]
-! ret type = Array(Array(Int))
-!================================
-read_or_network.2702:
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 8
-	input	%g5
-	addi	%g3, %g0, 48
-	jlt	%g5, %g3, jle_else.50559
-	addi	%g3, %g0, 57
-	jlt	%g3, %g5, jle_else.50561
-	addi	%g3, %g0, 0
-	jmp	jle_cont.50562
-jle_else.50561:
-	addi	%g3, %g0, 1
-jle_cont.50562:
-	jmp	jle_cont.50560
-jle_else.50559:
-	addi	%g3, %g0, 1
-jle_cont.50560:
-	jne	%g3, %g0, jeq_else.50563
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.50565
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.50566
-jeq_else.50565:
-jeq_cont.50566:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50564
-jeq_else.50563:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-jeq_cont.50564:
-	jne	%g3, %g29, jeq_else.50567
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, -1
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	addi	%g1, %g1, 4
-	mov	%g5, %g3
-	jmp	jeq_cont.50568
-jeq_else.50567:
-	addi	%g8, %g0, 1
-	sti	%g3, %g1, 0
+read_net_item.2717:
+	sti	%g4, %g1, 0
 	subi	%g1, %g1, 8
-	call	read_net_item.2700
+	call	min_caml_read_int
 	addi	%g1, %g1, 8
 	mov	%g5, %g3
-	ldi	%g3, %g1, 0
-	sti	%g3, %g5, 0
-jeq_cont.50568:
-	ldi	%g3, %g5, 0
-	jne	%g3, %g29, jeq_else.50569
-	addi	%g3, %g11, 1
-	mov	%g4, %g5
+	jne	%g5, %g29, jeq_else.42994
+	ldi	%g4, %g1, 0
+	addi	%g3, %g4, 1
+	addi	%g4, %g0, -1
 	jmp	min_caml_create_array
-jeq_else.50569:
-	addi	%g10, %g11, 1
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 8
-	input	%g7
-	addi	%g3, %g0, 48
-	jlt	%g7, %g3, jle_else.50570
-	addi	%g3, %g0, 57
-	jlt	%g3, %g7, jle_else.50572
-	addi	%g3, %g0, 0
-	jmp	jle_cont.50573
-jle_else.50572:
-	addi	%g3, %g0, 1
-jle_cont.50573:
-	jmp	jle_cont.50571
-jle_else.50570:
-	addi	%g3, %g0, 1
-jle_cont.50571:
+jeq_else.42994:
+	ldi	%g4, %g1, 0
+	addi	%g3, %g4, 1
 	sti	%g5, %g1, 4
-	jne	%g3, %g0, jeq_else.50574
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.50576
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.50577
-jeq_else.50576:
-jeq_cont.50577:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g7, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	mov	%g5, %g7
-	subi	%g1, %g1, 12
-	call	read_int_token.2507
-	addi	%g1, %g1, 12
-	jmp	jeq_cont.50575
-jeq_else.50574:
-	addi	%g6, %g0, 0
-	mov	%g5, %g7
-	subi	%g1, %g1, 12
-	call	read_int_token.2507
-	addi	%g1, %g1, 12
-jeq_cont.50575:
-	jne	%g3, %g29, jeq_else.50578
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, -1
+	mov	%g4, %g3
 	subi	%g1, %g1, 12
-	call	min_caml_create_array
+	call	read_net_item.2717
 	addi	%g1, %g1, 12
-	mov	%g4, %g3
-	jmp	jeq_cont.50579
-jeq_else.50578:
-	addi	%g8, %g0, 1
-	sti	%g3, %g1, 8
-	subi	%g1, %g1, 16
-	call	read_net_item.2700
-	addi	%g1, %g1, 16
-	mov	%g4, %g3
-	ldi	%g3, %g1, 8
-	sti	%g3, %g4, 0
-jeq_cont.50579:
-	ldi	%g3, %g4, 0
-	sti	%g11, %g1, 12
-	jne	%g3, %g29, jeq_else.50580
-	addi	%g3, %g10, 1
-	subi	%g1, %g1, 20
-	call	min_caml_create_array
-	addi	%g1, %g1, 20
-	jmp	jeq_cont.50581
-jeq_else.50580:
-	addi	%g3, %g10, 1
-	sti	%g4, %g1, 16
-	sti	%g10, %g1, 20
-	mov	%g11, %g3
-	subi	%g1, %g1, 28
-	call	read_or_network.2702
-	addi	%g1, %g1, 28
-	ldi	%g10, %g1, 20
-	slli	%g6, %g10, 2
-	ldi	%g4, %g1, 16
-	st	%g4, %g3, %g6
-jeq_cont.50581:
-	ldi	%g11, %g1, 12
-	slli	%g4, %g11, 2
+	ldi	%g4, %g1, 0
+	slli	%g4, %g4, 2
 	ldi	%g5, %g1, 4
 	st	%g5, %g3, %g4
 	return
 
 !==============================
-! args = [%g11]
+! args = [%g4]
 ! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g12, %g11, %g10, %f15, %dummy]
-! ret type = Unit
+! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0, %dummy]
+! ret type = Array(Array(Int))
 !================================
-read_and_network.2704:
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 8
-	input	%g4
-	addi	%g10, %g0, 48
-	jlt	%g4, %g10, jle_else.50582
-	addi	%g10, %g0, 57
-	jlt	%g10, %g4, jle_else.50584
-	addi	%g10, %g0, 0
-	jmp	jle_cont.50585
-jle_else.50584:
-	addi	%g10, %g0, 1
-jle_cont.50585:
-	jmp	jle_cont.50583
-jle_else.50582:
-	addi	%g10, %g0, 1
-jle_cont.50583:
-	jne	%g10, %g0, jeq_else.50586
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.50588
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.50589
-jeq_else.50588:
-jeq_cont.50589:
-	ldi	%g3, %g31, 4
-	slli	%g5, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g5, %g5, %g3
-	subi	%g3, %g4, 48
-	add	%g3, %g5, %g3
-	sti	%g3, %g31, 4
-	input	%g5
-	addi	%g10, %g0, 48
-	jlt	%g5, %g10, jle_else.50590
-	addi	%g10, %g0, 57
-	jlt	%g10, %g5, jle_else.50592
-	addi	%g10, %g0, 0
-	jmp	jle_cont.50593
-jle_else.50592:
-	addi	%g10, %g0, 1
-jle_cont.50593:
-	jmp	jle_cont.50591
-jle_else.50590:
-	addi	%g10, %g0, 1
-jle_cont.50591:
-	jne	%g10, %g0, jeq_else.50594
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.50596
-	addi	%g3, %g0, 45
-	jne	%g4, %g3, jeq_else.50598
-	addi	%g3, %g0, -1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.50599
-jeq_else.50598:
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-jeq_cont.50599:
-	jmp	jeq_cont.50597
-jeq_else.50596:
-jeq_cont.50597:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g10, %g3
-	jmp	jeq_cont.50595
-jeq_else.50594:
-	ldi	%g10, %g31, 8
-	jne	%g10, %g28, jeq_else.50600
-	ldi	%g10, %g31, 4
-	jmp	jeq_cont.50601
-jeq_else.50600:
-	ldi	%g10, %g31, 4
-	sub	%g10, %g0, %g10
-jeq_cont.50601:
-jeq_cont.50595:
-	jmp	jeq_cont.50587
-jeq_else.50586:
-	input	%g5
-	addi	%g10, %g0, 48
-	jlt	%g5, %g10, jle_else.50602
-	addi	%g10, %g0, 57
-	jlt	%g10, %g5, jle_else.50604
-	addi	%g10, %g0, 0
-	jmp	jle_cont.50605
-jle_else.50604:
-	addi	%g10, %g0, 1
-jle_cont.50605:
-	jmp	jle_cont.50603
-jle_else.50602:
-	addi	%g10, %g0, 1
-jle_cont.50603:
-	jne	%g10, %g0, jeq_else.50606
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.50608
-	addi	%g3, %g0, 45
-	jne	%g4, %g3, jeq_else.50610
-	addi	%g3, %g0, -1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.50611
-jeq_else.50610:
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-jeq_cont.50611:
-	jmp	jeq_cont.50609
-jeq_else.50608:
-jeq_cont.50609:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g10, %g3
-	jmp	jeq_cont.50607
-jeq_else.50606:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g10, %g3
-jeq_cont.50607:
-jeq_cont.50587:
-	jne	%g10, %g29, jeq_else.50612
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, -1
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50613
-jeq_else.50612:
+read_or_network.2719:
 	addi	%g3, %g0, 0
-	sti	%g3, %g31, 4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 8
-	input	%g5
-	addi	%g12, %g0, 48
-	jlt	%g5, %g12, jle_else.50614
-	addi	%g12, %g0, 57
-	jlt	%g12, %g5, jle_else.50616
-	addi	%g12, %g0, 0
-	jmp	jle_cont.50617
-jle_else.50616:
-	addi	%g12, %g0, 1
-jle_cont.50617:
-	jmp	jle_cont.50615
-jle_else.50614:
-	addi	%g12, %g0, 1
-jle_cont.50615:
-	jne	%g12, %g0, jeq_else.50618
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.50620
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.50621
-jeq_else.50620:
-jeq_cont.50621:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g12, %g3
-	jmp	jeq_cont.50619
-jeq_else.50618:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g12, %g3
-jeq_cont.50619:
-	jne	%g12, %g29, jeq_else.50622
-	addi	%g3, %g0, 2
-	addi	%g4, %g0, -1
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50623
-jeq_else.50622:
-	addi	%g8, %g0, 2
-	subi	%g1, %g1, 4
-	call	read_net_item.2700
-	addi	%g1, %g1, 4
-	sti	%g12, %g3, -4
-jeq_cont.50623:
-	sti	%g10, %g3, 0
-jeq_cont.50613:
-	ldi	%g4, %g3, 0
-	jne	%g4, %g29, jeq_else.50624
+	sti	%g4, %g1, 0
+	mov	%g4, %g3
+	subi	%g1, %g1, 8
+	call	read_net_item.2717
+	addi	%g1, %g1, 8
+	mov	%g6, %g3
+	ldi	%g3, %g6, 0
+	jne	%g3, %g29, jeq_else.42995
+	ldi	%g4, %g1, 0
+	addi	%g3, %g4, 1
+	mov	%g4, %g6
+	jmp	min_caml_create_array
+jeq_else.42995:
+	ldi	%g4, %g1, 0
+	addi	%g3, %g4, 1
+	sti	%g6, %g1, 4
+	mov	%g4, %g3
+	subi	%g1, %g1, 12
+	call	read_or_network.2719
+	addi	%g1, %g1, 12
+	ldi	%g4, %g1, 0
+	slli	%g4, %g4, 2
+	ldi	%g6, %g1, 4
+	st	%g6, %g3, %g4
 	return
-jeq_else.50624:
-	slli	%g4, %g11, 2
-	add	%g4, %g31, %g4
-	sti	%g3, %g4, 512
-	addi	%g11, %g11, 1
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 4
-	addi	%g3, %g0, 0
-	sti	%g3, %g31, 8
-	input	%g5
-	addi	%g10, %g0, 48
-	jlt	%g5, %g10, jle_else.50626
-	addi	%g10, %g0, 57
-	jlt	%g10, %g5, jle_else.50628
-	addi	%g10, %g0, 0
-	jmp	jle_cont.50629
-jle_else.50628:
-	addi	%g10, %g0, 1
-jle_cont.50629:
-	jmp	jle_cont.50627
-jle_else.50626:
-	addi	%g10, %g0, 1
-jle_cont.50627:
-	jne	%g10, %g0, jeq_else.50630
-	ldi	%g3, %g31, 8
-	jne	%g3, %g0, jeq_else.50632
-	addi	%g3, %g0, 1
-	sti	%g3, %g31, 8
-	jmp	jeq_cont.50633
-jeq_else.50632:
-jeq_cont.50633:
-	ldi	%g3, %g31, 4
-	slli	%g4, %g3, 3
-	slli	%g3, %g3, 1
-	add	%g4, %g4, %g3
-	subi	%g3, %g5, 48
-	add	%g3, %g4, %g3
-	sti	%g3, %g31, 4
-	addi	%g6, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g10, %g3
-	jmp	jeq_cont.50631
-jeq_else.50630:
-	addi	%g6, %g0, 0
-	subi	%g1, %g1, 4
-	call	read_int_token.2507
-	addi	%g1, %g1, 4
-	mov	%g10, %g3
-jeq_cont.50631:
-	jne	%g10, %g29, jeq_else.50634
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, -1
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	addi	%g1, %g1, 4
-	jmp	jeq_cont.50635
-jeq_else.50634:
-	addi	%g8, %g0, 1
-	subi	%g1, %g1, 4
-	call	read_net_item.2700
-	addi	%g1, %g1, 4
-	sti	%g10, %g3, 0
-jeq_cont.50635:
-	ldi	%g4, %g3, 0
-	jne	%g4, %g29, jeq_else.50636
+
+!==============================
+! args = [%g3]
+! fargs = []
+! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0, %dummy]
+! ret type = Unit
+!================================
+read_and_network.2721:
+	addi	%g4, %g0, 0
+	sti	%g3, %g1, 0
+	subi	%g1, %g1, 8
+	call	read_net_item.2717
+	addi	%g1, %g1, 8
+	mov	%g4, %g3
+	ldi	%g5, %g4, 0
+	jne	%g5, %g29, jeq_else.42996
 	return
-jeq_else.50636:
-	slli	%g4, %g11, 2
-	add	%g4, %g31, %g4
-	sti	%g3, %g4, 512
-	addi	%g11, %g11, 1
-	jmp	read_and_network.2704
+jeq_else.42996:
+	ldi	%g3, %g1, 0
+	slli	%g5, %g3, 2
+	add	%g5, %g31, %g5
+	sti	%g4, %g5, 512
+	addi	%g3, %g3, 1
+	jmp	read_and_network.2721
 
 !==============================
 ! args = [%g7, %g6, %g5]
@@ -9101,99 +6049,99 @@ jeq_else.50636:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g10, %f8, %f7, %f6, %f5, %f4, %f3, %f21, %f20, %f2, %f17, %f16, %f15, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-iter_setup_dirvec_constants.2801:
-	jlt	%g5, %g0, jge_else.50638
+iter_setup_dirvec_constants.2818:
+	jlt	%g5, %g0, jge_else.42998
 	slli	%g3, %g5, 2
 	add	%g3, %g31, %g3
 	ldi	%g9, %g3, 272
 	ldi	%g3, %g9, -4
-	jne	%g3, %g28, jeq_else.50639
+	jne	%g3, %g28, jeq_else.42999
 	addi	%g3, %g0, 6
 	fmov	%f0, %f16
 	subi	%g1, %g1, 4
 	call	min_caml_create_float_array
 	addi	%g1, %g1, 4
 	fldi	%f0, %g7, 0
-	fjeq	%f0, %f16, fjne_else.50641
+	fjeq	%f0, %f16, fjne_else.43001
 	ldi	%g4, %g9, -24
-	fjlt	%f0, %f16, fjge_else.50643
+	fjlt	%f0, %f16, fjge_else.43003
 	addi	%g10, %g0, 0
-	jmp	fjge_cont.50644
-fjge_else.50643:
+	jmp	fjge_cont.43004
+fjge_else.43003:
 	addi	%g10, %g0, 1
-fjge_cont.50644:
+fjge_cont.43004:
 	ldi	%g8, %g9, -16
 	fldi	%f1, %g8, 0
-	jne	%g4, %g10, jeq_else.50645
+	jne	%g4, %g10, jeq_else.43005
 	fneg	%f0, %f1
-	jmp	jeq_cont.50646
-jeq_else.50645:
+	jmp	jeq_cont.43006
+jeq_else.43005:
 	fmov	%f0, %f1
-jeq_cont.50646:
+jeq_cont.43006:
 	fsti	%f0, %g3, 0
 	fldi	%f0, %g7, 0
 	fdiv	%f0, %f17, %f0
 	fsti	%f0, %g3, -4
-	jmp	fjne_cont.50642
-fjne_else.50641:
+	jmp	fjne_cont.43002
+fjne_else.43001:
 	fsti	%f16, %g3, -4
-fjne_cont.50642:
+fjne_cont.43002:
 	fldi	%f0, %g7, -4
-	fjeq	%f0, %f16, fjne_else.50647
+	fjeq	%f0, %f16, fjne_else.43007
 	ldi	%g4, %g9, -24
-	fjlt	%f0, %f16, fjge_else.50649
+	fjlt	%f0, %f16, fjge_else.43009
 	addi	%g10, %g0, 0
-	jmp	fjge_cont.50650
-fjge_else.50649:
+	jmp	fjge_cont.43010
+fjge_else.43009:
 	addi	%g10, %g0, 1
-fjge_cont.50650:
+fjge_cont.43010:
 	ldi	%g8, %g9, -16
 	fldi	%f1, %g8, -4
-	jne	%g4, %g10, jeq_else.50651
+	jne	%g4, %g10, jeq_else.43011
 	fneg	%f0, %f1
-	jmp	jeq_cont.50652
-jeq_else.50651:
+	jmp	jeq_cont.43012
+jeq_else.43011:
 	fmov	%f0, %f1
-jeq_cont.50652:
+jeq_cont.43012:
 	fsti	%f0, %g3, -8
 	fldi	%f0, %g7, -4
 	fdiv	%f0, %f17, %f0
 	fsti	%f0, %g3, -12
-	jmp	fjne_cont.50648
-fjne_else.50647:
+	jmp	fjne_cont.43008
+fjne_else.43007:
 	fsti	%f16, %g3, -12
-fjne_cont.50648:
+fjne_cont.43008:
 	fldi	%f0, %g7, -8
-	fjeq	%f0, %f16, fjne_else.50653
+	fjeq	%f0, %f16, fjne_else.43013
 	ldi	%g4, %g9, -24
-	fjlt	%f0, %f16, fjge_else.50655
+	fjlt	%f0, %f16, fjge_else.43015
 	addi	%g10, %g0, 0
-	jmp	fjge_cont.50656
-fjge_else.50655:
+	jmp	fjge_cont.43016
+fjge_else.43015:
 	addi	%g10, %g0, 1
-fjge_cont.50656:
+fjge_cont.43016:
 	ldi	%g8, %g9, -16
 	fldi	%f1, %g8, -8
-	jne	%g4, %g10, jeq_else.50657
+	jne	%g4, %g10, jeq_else.43017
 	fneg	%f0, %f1
-	jmp	jeq_cont.50658
-jeq_else.50657:
+	jmp	jeq_cont.43018
+jeq_else.43017:
 	fmov	%f0, %f1
-jeq_cont.50658:
+jeq_cont.43018:
 	fsti	%f0, %g3, -16
 	fldi	%f0, %g7, -8
 	fdiv	%f0, %f17, %f0
 	fsti	%f0, %g3, -20
-	jmp	fjne_cont.50654
-fjne_else.50653:
+	jmp	fjne_cont.43014
+fjne_else.43013:
 	fsti	%f16, %g3, -20
-fjne_cont.50654:
+fjne_cont.43014:
 	slli	%g4, %g5, 2
 	st	%g3, %g6, %g4
-	jmp	jeq_cont.50640
-jeq_else.50639:
+	jmp	jeq_cont.43000
+jeq_else.42999:
 	addi	%g4, %g0, 2
-	jne	%g3, %g4, jeq_else.50659
+	jne	%g3, %g4, jeq_else.43019
 	addi	%g3, %g0, 4
 	fmov	%f0, %f16
 	subi	%g1, %g1, 4
@@ -9211,10 +6159,10 @@ jeq_else.50639:
 	fldi	%f0, %g4, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f16, %f0, fjge_else.50661
+	fjlt	%f16, %f0, fjge_else.43021
 	fsti	%f16, %g3, 0
-	jmp	fjge_cont.50662
-fjge_else.50661:
+	jmp	fjge_cont.43022
+fjge_else.43021:
 	fdiv	%f1, %f20, %f0
 	fsti	%f1, %g3, 0
 	fldi	%f1, %g4, 0
@@ -9229,11 +6177,11 @@ fjge_else.50661:
 	fdiv	%f0, %f1, %f0
 	fneg	%f0, %f0
 	fsti	%f0, %g3, -12
-fjge_cont.50662:
+fjge_cont.43022:
 	slli	%g4, %g5, 2
 	st	%g3, %g6, %g4
-	jmp	jeq_cont.50660
-jeq_else.50659:
+	jmp	jeq_cont.43020
+jeq_else.43019:
 	addi	%g3, %g0, 5
 	fmov	%f0, %f16
 	subi	%g1, %g1, 4
@@ -9255,10 +6203,10 @@ jeq_else.50659:
 	fmul	%f3, %f3, %f4
 	fadd	%f7, %f7, %f3
 	ldi	%g8, %g9, -12
-	jne	%g8, %g0, jeq_else.50663
+	jne	%g8, %g0, jeq_else.43023
 	fmov	%f3, %f7
-	jmp	jeq_cont.50664
-jeq_else.50663:
+	jmp	jeq_cont.43024
+jeq_else.43023:
 	fmul	%f8, %f1, %f2
 	ldi	%g4, %g9, -36
 	fldi	%f3, %g4, 0
@@ -9272,7 +6220,7 @@ jeq_else.50663:
 	fldi	%f3, %g4, -8
 	fmul	%f3, %f7, %f3
 	fadd	%f3, %f8, %f3
-jeq_cont.50664:
+jeq_cont.43024:
 	fmul	%f0, %f0, %f5
 	fneg	%f0, %f0
 	fmul	%f1, %f1, %f6
@@ -9280,12 +6228,12 @@ jeq_cont.50664:
 	fmul	%f2, %f2, %f4
 	fneg	%f2, %f2
 	fsti	%f3, %g3, 0
-	jne	%g8, %g0, jeq_else.50665
+	jne	%g8, %g0, jeq_else.43025
 	fsti	%f0, %g3, -4
 	fsti	%f1, %g3, -8
 	fsti	%f2, %g3, -12
-	jmp	jeq_cont.50666
-jeq_else.50665:
+	jmp	jeq_cont.43026
+jeq_else.43025:
 	fldi	%f5, %g7, -8
 	ldi	%g4, %g9, -36
 	fldi	%f4, %g4, -4
@@ -9317,20 +6265,20 @@ jeq_else.50665:
 	fmul	%f0, %f0, %f21
 	fsub	%f0, %f2, %f0
 	fsti	%f0, %g3, -12
-jeq_cont.50666:
-	fjeq	%f3, %f16, fjne_else.50667
+jeq_cont.43026:
+	fjeq	%f3, %f16, fjne_else.43027
 	fdiv	%f0, %f17, %f3
 	fsti	%f0, %g3, -16
-	jmp	fjne_cont.50668
-fjne_else.50667:
-fjne_cont.50668:
+	jmp	fjne_cont.43028
+fjne_else.43027:
+fjne_cont.43028:
 	slli	%g4, %g5, 2
 	st	%g3, %g6, %g4
-jeq_cont.50660:
-jeq_cont.50640:
+jeq_cont.43020:
+jeq_cont.43000:
 	subi	%g5, %g5, 1
-	jmp	iter_setup_dirvec_constants.2801
-jge_else.50638:
+	jmp	iter_setup_dirvec_constants.2818
+jge_else.42998:
 	return
 
 !==============================
@@ -9339,8 +6287,8 @@ jge_else.50638:
 ! use_regs = [%g8, %g7, %g6, %g5, %g4, %g3, %g27, %f5, %f4, %f3, %f2, %f17, %f15, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-setup_startp_constants.2806:
-	jlt	%g4, %g0, jge_else.50670
+setup_startp_constants.2823:
+	jlt	%g4, %g0, jge_else.43030
 	slli	%g5, %g4, 2
 	add	%g5, %g31, %g5
 	ldi	%g5, %g5, 272
@@ -9360,7 +6308,7 @@ setup_startp_constants.2806:
 	fsub	%f0, %f1, %f0
 	fsti	%f0, %g8, -8
 	addi	%g6, %g0, 2
-	jne	%g7, %g6, jeq_else.50671
+	jne	%g7, %g6, jeq_else.43031
 	ldi	%g5, %g5, -16
 	fldi	%f1, %g8, 0
 	fldi	%f3, %g8, -4
@@ -9374,12 +6322,12 @@ setup_startp_constants.2806:
 	fmul	%f0, %f0, %f2
 	fadd	%f0, %f1, %f0
 	fsti	%f0, %g8, -12
-	jmp	jeq_cont.50672
-jeq_else.50671:
+	jmp	jeq_cont.43032
+jeq_else.43031:
 	addi	%g6, %g0, 2
-	jlt	%g6, %g7, jle_else.50673
-	jmp	jle_cont.50674
-jle_else.50673:
+	jlt	%g6, %g7, jle_else.43033
+	jmp	jle_cont.43034
+jle_else.43033:
 	fldi	%f2, %g8, 0
 	fldi	%f1, %g8, -4
 	fldi	%f0, %g8, -8
@@ -9396,10 +6344,10 @@ jle_else.50673:
 	fmul	%f3, %f4, %f3
 	fadd	%f4, %f5, %f3
 	ldi	%g6, %g5, -12
-	jne	%g6, %g0, jeq_else.50675
+	jne	%g6, %g0, jeq_else.43035
 	fmov	%f3, %f4
-	jmp	jeq_cont.50676
-jeq_else.50675:
+	jmp	jeq_cont.43036
+jeq_else.43035:
 	fmul	%f5, %f1, %f0
 	ldi	%g5, %g5, -36
 	fldi	%f3, %g5, 0
@@ -9413,19 +6361,19 @@ jeq_else.50675:
 	fldi	%f0, %g5, -8
 	fmul	%f3, %f1, %f0
 	fadd	%f3, %f4, %f3
-jeq_cont.50676:
+jeq_cont.43036:
 	addi	%g5, %g0, 3
-	jne	%g7, %g5, jeq_else.50677
+	jne	%g7, %g5, jeq_else.43037
 	fsub	%f0, %f3, %f17
-	jmp	jeq_cont.50678
-jeq_else.50677:
+	jmp	jeq_cont.43038
+jeq_else.43037:
 	fmov	%f0, %f3
-jeq_cont.50678:
+jeq_cont.43038:
 	fsti	%f0, %g8, -12
-jle_cont.50674:
-jeq_cont.50672:
+jle_cont.43034:
+jeq_cont.43032:
 	subi	%g8, %g4, 1
-	jlt	%g8, %g0, jge_else.50679
+	jlt	%g8, %g0, jge_else.43039
 	slli	%g4, %g8, 2
 	add	%g4, %g31, %g4
 	ldi	%g4, %g4, 272
@@ -9445,7 +6393,7 @@ jeq_cont.50672:
 	fsub	%f0, %f1, %f0
 	fsti	%f0, %g7, -8
 	addi	%g5, %g0, 2
-	jne	%g6, %g5, jeq_else.50680
+	jne	%g6, %g5, jeq_else.43040
 	ldi	%g4, %g4, -16
 	fldi	%f1, %g7, 0
 	fldi	%f3, %g7, -4
@@ -9459,12 +6407,12 @@ jeq_cont.50672:
 	fmul	%f0, %f0, %f2
 	fadd	%f0, %f1, %f0
 	fsti	%f0, %g7, -12
-	jmp	jeq_cont.50681
-jeq_else.50680:
+	jmp	jeq_cont.43041
+jeq_else.43040:
 	addi	%g5, %g0, 2
-	jlt	%g5, %g6, jle_else.50682
-	jmp	jle_cont.50683
-jle_else.50682:
+	jlt	%g5, %g6, jle_else.43042
+	jmp	jle_cont.43043
+jle_else.43042:
 	fldi	%f2, %g7, 0
 	fldi	%f1, %g7, -4
 	fldi	%f0, %g7, -8
@@ -9481,10 +6429,10 @@ jle_else.50682:
 	fmul	%f3, %f4, %f3
 	fadd	%f4, %f5, %f3
 	ldi	%g5, %g4, -12
-	jne	%g5, %g0, jeq_else.50684
+	jne	%g5, %g0, jeq_else.43044
 	fmov	%f3, %f4
-	jmp	jeq_cont.50685
-jeq_else.50684:
+	jmp	jeq_cont.43045
+jeq_else.43044:
 	fmul	%f5, %f1, %f0
 	ldi	%g4, %g4, -36
 	fldi	%f3, %g4, 0
@@ -9498,22 +6446,22 @@ jeq_else.50684:
 	fldi	%f0, %g4, -8
 	fmul	%f3, %f1, %f0
 	fadd	%f3, %f4, %f3
-jeq_cont.50685:
+jeq_cont.43045:
 	addi	%g4, %g0, 3
-	jne	%g6, %g4, jeq_else.50686
+	jne	%g6, %g4, jeq_else.43046
 	fsub	%f0, %f3, %f17
-	jmp	jeq_cont.50687
-jeq_else.50686:
+	jmp	jeq_cont.43047
+jeq_else.43046:
 	fmov	%f0, %f3
-jeq_cont.50687:
+jeq_cont.43047:
 	fsti	%f0, %g7, -12
-jle_cont.50683:
-jeq_cont.50681:
+jle_cont.43043:
+jeq_cont.43041:
 	subi	%g4, %g8, 1
-	jmp	setup_startp_constants.2806
-jge_else.50679:
+	jmp	setup_startp_constants.2823
+jge_else.43039:
 	return
-jge_else.50670:
+jge_else.43030:
 	return
 
 !==============================
@@ -9522,13 +6470,13 @@ jge_else.50670:
 ! use_regs = [%g7, %g6, %g5, %g4, %g3, %g27, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f17, %f16, %f15, %f1, %f0]
 ! ret type = Bool
 !================================
-check_all_inside.2831:
+check_all_inside.2848:
 	slli	%g3, %g5, 2
 	ld	%g6, %g4, %g3
-	jne	%g6, %g29, jeq_else.50690
+	jne	%g6, %g29, jeq_else.43050
 	addi	%g3, %g0, 1
 	return
-jeq_else.50690:
+jeq_else.43050:
 	slli	%g3, %g6, 2
 	add	%g3, %g31, %g3
 	ldi	%g7, %g3, 272
@@ -9540,61 +6488,61 @@ jeq_else.50690:
 	fldi	%f1, %g3, -8
 	fsub	%f1, %f3, %f1
 	ldi	%g6, %g7, -4
-	jne	%g6, %g28, jeq_else.50691
-	fjlt	%f0, %f16, fjge_else.50693
+	jne	%g6, %g28, jeq_else.43051
+	fjlt	%f0, %f16, fjge_else.43053
 	fmov	%f6, %f0
-	jmp	fjge_cont.50694
-fjge_else.50693:
+	jmp	fjge_cont.43054
+fjge_else.43053:
 	fneg	%f6, %f0
-fjge_cont.50694:
+fjge_cont.43054:
 	ldi	%g3, %g7, -16
 	fldi	%f0, %g3, 0
-	fjlt	%f6, %f0, fjge_else.50695
+	fjlt	%f6, %f0, fjge_else.43055
 	addi	%g6, %g0, 0
-	jmp	fjge_cont.50696
-fjge_else.50695:
-	fjlt	%f2, %f16, fjge_else.50697
+	jmp	fjge_cont.43056
+fjge_else.43055:
+	fjlt	%f2, %f16, fjge_else.43057
 	fmov	%f0, %f2
-	jmp	fjge_cont.50698
-fjge_else.50697:
+	jmp	fjge_cont.43058
+fjge_else.43057:
 	fneg	%f0, %f2
-fjge_cont.50698:
+fjge_cont.43058:
 	fldi	%f2, %g3, -4
-	fjlt	%f0, %f2, fjge_else.50699
+	fjlt	%f0, %f2, fjge_else.43059
 	addi	%g6, %g0, 0
-	jmp	fjge_cont.50700
-fjge_else.50699:
-	fjlt	%f1, %f16, fjge_else.50701
+	jmp	fjge_cont.43060
+fjge_else.43059:
+	fjlt	%f1, %f16, fjge_else.43061
 	fmov	%f0, %f1
-	jmp	fjge_cont.50702
-fjge_else.50701:
+	jmp	fjge_cont.43062
+fjge_else.43061:
 	fneg	%f0, %f1
-fjge_cont.50702:
+fjge_cont.43062:
 	fldi	%f1, %g3, -8
-	fjlt	%f0, %f1, fjge_else.50703
+	fjlt	%f0, %f1, fjge_else.43063
 	addi	%g6, %g0, 0
-	jmp	fjge_cont.50704
-fjge_else.50703:
+	jmp	fjge_cont.43064
+fjge_else.43063:
 	addi	%g6, %g0, 1
-fjge_cont.50704:
-fjge_cont.50700:
-fjge_cont.50696:
-	jne	%g6, %g0, jeq_else.50705
+fjge_cont.43064:
+fjge_cont.43060:
+fjge_cont.43056:
+	jne	%g6, %g0, jeq_else.43065
 	ldi	%g3, %g7, -24
-	jne	%g3, %g0, jeq_else.50707
+	jne	%g3, %g0, jeq_else.43067
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.50708
-jeq_else.50707:
+	jmp	jeq_cont.43068
+jeq_else.43067:
 	addi	%g3, %g0, 0
-jeq_cont.50708:
-	jmp	jeq_cont.50706
-jeq_else.50705:
+jeq_cont.43068:
+	jmp	jeq_cont.43066
+jeq_else.43065:
 	ldi	%g3, %g7, -24
-jeq_cont.50706:
-	jmp	jeq_cont.50692
-jeq_else.50691:
+jeq_cont.43066:
+	jmp	jeq_cont.43052
+jeq_else.43051:
 	addi	%g3, %g0, 2
-	jne	%g6, %g3, jeq_else.50709
+	jne	%g6, %g3, jeq_else.43069
 	ldi	%g3, %g7, -16
 	fldi	%f6, %g3, 0
 	fmul	%f6, %f6, %f0
@@ -9605,20 +6553,20 @@ jeq_else.50691:
 	fmul	%f0, %f0, %f1
 	fadd	%f0, %f2, %f0
 	ldi	%g3, %g7, -24
-	fjlt	%f0, %f16, fjge_else.50711
+	fjlt	%f0, %f16, fjge_else.43071
 	addi	%g6, %g0, 0
-	jmp	fjge_cont.50712
-fjge_else.50711:
+	jmp	fjge_cont.43072
+fjge_else.43071:
 	addi	%g6, %g0, 1
-fjge_cont.50712:
-	jne	%g3, %g6, jeq_else.50713
+fjge_cont.43072:
+	jne	%g3, %g6, jeq_else.43073
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.50714
-jeq_else.50713:
+	jmp	jeq_cont.43074
+jeq_else.43073:
 	addi	%g3, %g0, 0
-jeq_cont.50714:
-	jmp	jeq_cont.50710
-jeq_else.50709:
+jeq_cont.43074:
+	jmp	jeq_cont.43070
+jeq_else.43069:
 	fmul	%f7, %f0, %f0
 	ldi	%g3, %g7, -16
 	fldi	%f6, %g3, 0
@@ -9632,10 +6580,10 @@ jeq_else.50709:
 	fmul	%f6, %f7, %f6
 	fadd	%f7, %f8, %f6
 	ldi	%g3, %g7, -12
-	jne	%g3, %g0, jeq_else.50715
+	jne	%g3, %g0, jeq_else.43075
 	fmov	%f6, %f7
-	jmp	jeq_cont.50716
-jeq_else.50715:
+	jmp	jeq_cont.43076
+jeq_else.43075:
 	fmul	%f8, %f2, %f1
 	ldi	%g3, %g7, -36
 	fldi	%f6, %g3, 0
@@ -9649,37 +6597,37 @@ jeq_else.50715:
 	fldi	%f0, %g3, -8
 	fmul	%f6, %f1, %f0
 	fadd	%f6, %f7, %f6
-jeq_cont.50716:
+jeq_cont.43076:
 	addi	%g3, %g0, 3
-	jne	%g6, %g3, jeq_else.50717
+	jne	%g6, %g3, jeq_else.43077
 	fsub	%f0, %f6, %f17
-	jmp	jeq_cont.50718
-jeq_else.50717:
+	jmp	jeq_cont.43078
+jeq_else.43077:
 	fmov	%f0, %f6
-jeq_cont.50718:
+jeq_cont.43078:
 	ldi	%g3, %g7, -24
-	fjlt	%f0, %f16, fjge_else.50719
+	fjlt	%f0, %f16, fjge_else.43079
 	addi	%g6, %g0, 0
-	jmp	fjge_cont.50720
-fjge_else.50719:
+	jmp	fjge_cont.43080
+fjge_else.43079:
 	addi	%g6, %g0, 1
-fjge_cont.50720:
-	jne	%g3, %g6, jeq_else.50721
+fjge_cont.43080:
+	jne	%g3, %g6, jeq_else.43081
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.50722
-jeq_else.50721:
+	jmp	jeq_cont.43082
+jeq_else.43081:
 	addi	%g3, %g0, 0
-jeq_cont.50722:
-jeq_cont.50710:
-jeq_cont.50692:
-	jne	%g3, %g0, jeq_else.50723
+jeq_cont.43082:
+jeq_cont.43070:
+jeq_cont.43052:
+	jne	%g3, %g0, jeq_else.43083
 	addi	%g7, %g5, 1
 	slli	%g3, %g7, 2
 	ld	%g5, %g4, %g3
-	jne	%g5, %g29, jeq_else.50724
+	jne	%g5, %g29, jeq_else.43084
 	addi	%g3, %g0, 1
 	return
-jeq_else.50724:
+jeq_else.43084:
 	slli	%g3, %g5, 2
 	add	%g3, %g31, %g3
 	ldi	%g6, %g3, 272
@@ -9691,61 +6639,61 @@ jeq_else.50724:
 	fldi	%f1, %g3, -8
 	fsub	%f1, %f3, %f1
 	ldi	%g5, %g6, -4
-	jne	%g5, %g28, jeq_else.50725
-	fjlt	%f0, %f16, fjge_else.50727
+	jne	%g5, %g28, jeq_else.43085
+	fjlt	%f0, %f16, fjge_else.43087
 	fmov	%f6, %f0
-	jmp	fjge_cont.50728
-fjge_else.50727:
+	jmp	fjge_cont.43088
+fjge_else.43087:
 	fneg	%f6, %f0
-fjge_cont.50728:
+fjge_cont.43088:
 	ldi	%g3, %g6, -16
 	fldi	%f0, %g3, 0
-	fjlt	%f6, %f0, fjge_else.50729
+	fjlt	%f6, %f0, fjge_else.43089
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.50730
-fjge_else.50729:
-	fjlt	%f2, %f16, fjge_else.50731
+	jmp	fjge_cont.43090
+fjge_else.43089:
+	fjlt	%f2, %f16, fjge_else.43091
 	fmov	%f0, %f2
-	jmp	fjge_cont.50732
-fjge_else.50731:
+	jmp	fjge_cont.43092
+fjge_else.43091:
 	fneg	%f0, %f2
-fjge_cont.50732:
+fjge_cont.43092:
 	fldi	%f2, %g3, -4
-	fjlt	%f0, %f2, fjge_else.50733
+	fjlt	%f0, %f2, fjge_else.43093
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.50734
-fjge_else.50733:
-	fjlt	%f1, %f16, fjge_else.50735
+	jmp	fjge_cont.43094
+fjge_else.43093:
+	fjlt	%f1, %f16, fjge_else.43095
 	fmov	%f0, %f1
-	jmp	fjge_cont.50736
-fjge_else.50735:
+	jmp	fjge_cont.43096
+fjge_else.43095:
 	fneg	%f0, %f1
-fjge_cont.50736:
+fjge_cont.43096:
 	fldi	%f1, %g3, -8
-	fjlt	%f0, %f1, fjge_else.50737
+	fjlt	%f0, %f1, fjge_else.43097
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.50738
-fjge_else.50737:
+	jmp	fjge_cont.43098
+fjge_else.43097:
 	addi	%g5, %g0, 1
-fjge_cont.50738:
-fjge_cont.50734:
-fjge_cont.50730:
-	jne	%g5, %g0, jeq_else.50739
+fjge_cont.43098:
+fjge_cont.43094:
+fjge_cont.43090:
+	jne	%g5, %g0, jeq_else.43099
 	ldi	%g3, %g6, -24
-	jne	%g3, %g0, jeq_else.50741
+	jne	%g3, %g0, jeq_else.43101
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.50742
-jeq_else.50741:
+	jmp	jeq_cont.43102
+jeq_else.43101:
 	addi	%g3, %g0, 0
-jeq_cont.50742:
-	jmp	jeq_cont.50740
-jeq_else.50739:
+jeq_cont.43102:
+	jmp	jeq_cont.43100
+jeq_else.43099:
 	ldi	%g3, %g6, -24
-jeq_cont.50740:
-	jmp	jeq_cont.50726
-jeq_else.50725:
+jeq_cont.43100:
+	jmp	jeq_cont.43086
+jeq_else.43085:
 	addi	%g3, %g0, 2
-	jne	%g5, %g3, jeq_else.50743
+	jne	%g5, %g3, jeq_else.43103
 	ldi	%g3, %g6, -16
 	fldi	%f6, %g3, 0
 	fmul	%f6, %f6, %f0
@@ -9756,20 +6704,20 @@ jeq_else.50725:
 	fmul	%f0, %f0, %f1
 	fadd	%f0, %f2, %f0
 	ldi	%g3, %g6, -24
-	fjlt	%f0, %f16, fjge_else.50745
+	fjlt	%f0, %f16, fjge_else.43105
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.50746
-fjge_else.50745:
+	jmp	fjge_cont.43106
+fjge_else.43105:
 	addi	%g5, %g0, 1
-fjge_cont.50746:
-	jne	%g3, %g5, jeq_else.50747
+fjge_cont.43106:
+	jne	%g3, %g5, jeq_else.43107
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.50748
-jeq_else.50747:
+	jmp	jeq_cont.43108
+jeq_else.43107:
 	addi	%g3, %g0, 0
-jeq_cont.50748:
-	jmp	jeq_cont.50744
-jeq_else.50743:
+jeq_cont.43108:
+	jmp	jeq_cont.43104
+jeq_else.43103:
 	fmul	%f7, %f0, %f0
 	ldi	%g3, %g6, -16
 	fldi	%f6, %g3, 0
@@ -9783,10 +6731,10 @@ jeq_else.50743:
 	fmul	%f6, %f7, %f6
 	fadd	%f7, %f8, %f6
 	ldi	%g3, %g6, -12
-	jne	%g3, %g0, jeq_else.50749
+	jne	%g3, %g0, jeq_else.43109
 	fmov	%f6, %f7
-	jmp	jeq_cont.50750
-jeq_else.50749:
+	jmp	jeq_cont.43110
+jeq_else.43109:
 	fmul	%f8, %f2, %f1
 	ldi	%g3, %g6, -36
 	fldi	%f6, %g3, 0
@@ -9800,36 +6748,36 @@ jeq_else.50749:
 	fldi	%f0, %g3, -8
 	fmul	%f6, %f1, %f0
 	fadd	%f6, %f7, %f6
-jeq_cont.50750:
+jeq_cont.43110:
 	addi	%g3, %g0, 3
-	jne	%g5, %g3, jeq_else.50751
+	jne	%g5, %g3, jeq_else.43111
 	fsub	%f0, %f6, %f17
-	jmp	jeq_cont.50752
-jeq_else.50751:
+	jmp	jeq_cont.43112
+jeq_else.43111:
 	fmov	%f0, %f6
-jeq_cont.50752:
+jeq_cont.43112:
 	ldi	%g3, %g6, -24
-	fjlt	%f0, %f16, fjge_else.50753
+	fjlt	%f0, %f16, fjge_else.43113
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.50754
-fjge_else.50753:
+	jmp	fjge_cont.43114
+fjge_else.43113:
 	addi	%g5, %g0, 1
-fjge_cont.50754:
-	jne	%g3, %g5, jeq_else.50755
+fjge_cont.43114:
+	jne	%g3, %g5, jeq_else.43115
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.50756
-jeq_else.50755:
+	jmp	jeq_cont.43116
+jeq_else.43115:
 	addi	%g3, %g0, 0
-jeq_cont.50756:
-jeq_cont.50744:
-jeq_cont.50726:
-	jne	%g3, %g0, jeq_else.50757
+jeq_cont.43116:
+jeq_cont.43104:
+jeq_cont.43086:
+	jne	%g3, %g0, jeq_else.43117
 	addi	%g5, %g7, 1
-	jmp	check_all_inside.2831
-jeq_else.50757:
+	jmp	check_all_inside.2848
+jeq_else.43117:
 	addi	%g3, %g0, 0
 	return
-jeq_else.50723:
+jeq_else.43083:
 	addi	%g3, %g0, 0
 	return
 
@@ -9839,13 +6787,13 @@ jeq_else.50723:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f17, %f16, %f15, %f1, %f0, %dummy]
 ! ret type = Bool
 !================================
-shadow_check_and_group.2837:
+shadow_check_and_group.2854:
 	slli	%g3, %g8, 2
 	ld	%g9, %g4, %g3
-	jne	%g9, %g29, jeq_else.50758
+	jne	%g9, %g29, jeq_else.43118
 	addi	%g3, %g0, 0
 	return
-jeq_else.50758:
+jeq_else.43118:
 	slli	%g3, %g9, 2
 	add	%g3, %g31, %g3
 	ldi	%g6, %g3, 272
@@ -9863,7 +6811,7 @@ jeq_else.50758:
 	add	%g3, %g31, %g3
 	ldi	%g7, %g3, 972
 	ldi	%g5, %g6, -4
-	jne	%g5, %g28, jeq_else.50759
+	jne	%g5, %g28, jeq_else.43119
 	fldi	%f0, %g7, 0
 	fsub	%f0, %f0, %f3
 	fldi	%f1, %g7, -4
@@ -9871,41 +6819,41 @@ jeq_else.50758:
 	fldi	%f5, %g31, 728
 	fmul	%f5, %f0, %f5
 	fadd	%f6, %f5, %f4
-	fjlt	%f6, %f16, fjge_else.50761
+	fjlt	%f6, %f16, fjge_else.43121
 	fmov	%f5, %f6
-	jmp	fjge_cont.50762
-fjge_else.50761:
+	jmp	fjge_cont.43122
+fjge_else.43121:
 	fneg	%f5, %f6
-fjge_cont.50762:
+fjge_cont.43122:
 	ldi	%g5, %g6, -16
 	fldi	%f6, %g5, -4
-	fjlt	%f5, %f6, fjge_else.50763
+	fjlt	%f5, %f6, fjge_else.43123
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50764
-fjge_else.50763:
+	jmp	fjge_cont.43124
+fjge_else.43123:
 	fldi	%f5, %g31, 724
 	fmul	%f5, %f0, %f5
 	fadd	%f6, %f5, %f2
-	fjlt	%f6, %f16, fjge_else.50765
+	fjlt	%f6, %f16, fjge_else.43125
 	fmov	%f5, %f6
-	jmp	fjge_cont.50766
-fjge_else.50765:
+	jmp	fjge_cont.43126
+fjge_else.43125:
 	fneg	%f5, %f6
-fjge_cont.50766:
+fjge_cont.43126:
 	fldi	%f6, %g5, -8
-	fjlt	%f5, %f6, fjge_else.50767
+	fjlt	%f5, %f6, fjge_else.43127
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50768
-fjge_else.50767:
-	fjeq	%f1, %f16, fjne_else.50769
+	jmp	fjge_cont.43128
+fjge_else.43127:
+	fjeq	%f1, %f16, fjne_else.43129
 	addi	%g3, %g0, 1
-	jmp	fjne_cont.50770
-fjne_else.50769:
+	jmp	fjne_cont.43130
+fjne_else.43129:
 	addi	%g3, %g0, 0
-fjne_cont.50770:
-fjge_cont.50768:
-fjge_cont.50764:
-	jne	%g3, %g0, jeq_else.50771
+fjne_cont.43130:
+fjge_cont.43128:
+fjge_cont.43124:
+	jne	%g3, %g0, jeq_else.43131
 	fldi	%f0, %g7, -8
 	fsub	%f0, %f0, %f4
 	fldi	%f1, %g7, -12
@@ -9913,40 +6861,40 @@ fjge_cont.50764:
 	fldi	%f5, %g31, 732
 	fmul	%f5, %f0, %f5
 	fadd	%f6, %f5, %f3
-	fjlt	%f6, %f16, fjge_else.50773
+	fjlt	%f6, %f16, fjge_else.43133
 	fmov	%f5, %f6
-	jmp	fjge_cont.50774
-fjge_else.50773:
+	jmp	fjge_cont.43134
+fjge_else.43133:
 	fneg	%f5, %f6
-fjge_cont.50774:
+fjge_cont.43134:
 	fldi	%f6, %g5, 0
-	fjlt	%f5, %f6, fjge_else.50775
+	fjlt	%f5, %f6, fjge_else.43135
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50776
-fjge_else.50775:
+	jmp	fjge_cont.43136
+fjge_else.43135:
 	fldi	%f5, %g31, 724
 	fmul	%f5, %f0, %f5
 	fadd	%f6, %f5, %f2
-	fjlt	%f6, %f16, fjge_else.50777
+	fjlt	%f6, %f16, fjge_else.43137
 	fmov	%f5, %f6
-	jmp	fjge_cont.50778
-fjge_else.50777:
+	jmp	fjge_cont.43138
+fjge_else.43137:
 	fneg	%f5, %f6
-fjge_cont.50778:
+fjge_cont.43138:
 	fldi	%f6, %g5, -8
-	fjlt	%f5, %f6, fjge_else.50779
+	fjlt	%f5, %f6, fjge_else.43139
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50780
-fjge_else.50779:
-	fjeq	%f1, %f16, fjne_else.50781
+	jmp	fjge_cont.43140
+fjge_else.43139:
+	fjeq	%f1, %f16, fjne_else.43141
 	addi	%g3, %g0, 1
-	jmp	fjne_cont.50782
-fjne_else.50781:
+	jmp	fjne_cont.43142
+fjne_else.43141:
 	addi	%g3, %g0, 0
-fjne_cont.50782:
-fjge_cont.50780:
-fjge_cont.50776:
-	jne	%g3, %g0, jeq_else.50783
+fjne_cont.43142:
+fjge_cont.43140:
+fjge_cont.43136:
+	jne	%g3, %g0, jeq_else.43143
 	fldi	%f0, %g7, -16
 	fsub	%f1, %f0, %f2
 	fldi	%f0, %g7, -20
@@ -9954,65 +6902,65 @@ fjge_cont.50776:
 	fldi	%f1, %g31, 732
 	fmul	%f1, %f5, %f1
 	fadd	%f2, %f1, %f3
-	fjlt	%f2, %f16, fjge_else.50785
+	fjlt	%f2, %f16, fjge_else.43145
 	fmov	%f1, %f2
-	jmp	fjge_cont.50786
-fjge_else.50785:
+	jmp	fjge_cont.43146
+fjge_else.43145:
 	fneg	%f1, %f2
-fjge_cont.50786:
+fjge_cont.43146:
 	fldi	%f2, %g5, 0
-	fjlt	%f1, %f2, fjge_else.50787
+	fjlt	%f1, %f2, fjge_else.43147
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50788
-fjge_else.50787:
+	jmp	fjge_cont.43148
+fjge_else.43147:
 	fldi	%f1, %g31, 728
 	fmul	%f1, %f5, %f1
 	fadd	%f2, %f1, %f4
-	fjlt	%f2, %f16, fjge_else.50789
+	fjlt	%f2, %f16, fjge_else.43149
 	fmov	%f1, %f2
-	jmp	fjge_cont.50790
-fjge_else.50789:
+	jmp	fjge_cont.43150
+fjge_else.43149:
 	fneg	%f1, %f2
-fjge_cont.50790:
+fjge_cont.43150:
 	fldi	%f2, %g5, -4
-	fjlt	%f1, %f2, fjge_else.50791
+	fjlt	%f1, %f2, fjge_else.43151
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50792
-fjge_else.50791:
-	fjeq	%f0, %f16, fjne_else.50793
+	jmp	fjge_cont.43152
+fjge_else.43151:
+	fjeq	%f0, %f16, fjne_else.43153
 	addi	%g3, %g0, 1
-	jmp	fjne_cont.50794
-fjne_else.50793:
+	jmp	fjne_cont.43154
+fjne_else.43153:
 	addi	%g3, %g0, 0
-fjne_cont.50794:
-fjge_cont.50792:
-fjge_cont.50788:
-	jne	%g3, %g0, jeq_else.50795
+fjne_cont.43154:
+fjge_cont.43152:
+fjge_cont.43148:
+	jne	%g3, %g0, jeq_else.43155
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50796
-jeq_else.50795:
+	jmp	jeq_cont.43156
+jeq_else.43155:
 	fsti	%f5, %g31, 520
 	addi	%g3, %g0, 3
-jeq_cont.50796:
-	jmp	jeq_cont.50784
-jeq_else.50783:
+jeq_cont.43156:
+	jmp	jeq_cont.43144
+jeq_else.43143:
 	fsti	%f0, %g31, 520
 	addi	%g3, %g0, 2
-jeq_cont.50784:
-	jmp	jeq_cont.50772
-jeq_else.50771:
+jeq_cont.43144:
+	jmp	jeq_cont.43132
+jeq_else.43131:
 	fsti	%f0, %g31, 520
 	addi	%g3, %g0, 1
-jeq_cont.50772:
-	jmp	jeq_cont.50760
-jeq_else.50759:
+jeq_cont.43132:
+	jmp	jeq_cont.43120
+jeq_else.43119:
 	addi	%g3, %g0, 2
-	jne	%g5, %g3, jeq_else.50797
+	jne	%g5, %g3, jeq_else.43157
 	fldi	%f0, %g7, 0
-	fjlt	%f0, %f16, fjge_else.50799
+	fjlt	%f0, %f16, fjge_else.43159
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50800
-fjge_else.50799:
+	jmp	fjge_cont.43160
+fjge_else.43159:
 	fldi	%f0, %g7, -4
 	fmul	%f1, %f0, %f3
 	fldi	%f0, %g7, -8
@@ -10023,11 +6971,11 @@ fjge_else.50799:
 	fadd	%f0, %f1, %f0
 	fsti	%f0, %g31, 520
 	addi	%g3, %g0, 1
-fjge_cont.50800:
-	jmp	jeq_cont.50798
-jeq_else.50797:
+fjge_cont.43160:
+	jmp	jeq_cont.43158
+jeq_else.43157:
 	fldi	%f0, %g7, 0
-	fjeq	%f0, %f16, fjne_else.50801
+	fjeq	%f0, %f16, fjne_else.43161
 	fldi	%f1, %g7, -4
 	fmul	%f5, %f1, %f3
 	fldi	%f1, %g7, -8
@@ -10049,10 +6997,10 @@ jeq_else.50797:
 	fmul	%f5, %f6, %f5
 	fadd	%f6, %f7, %f5
 	ldi	%g3, %g6, -12
-	jne	%g3, %g0, jeq_else.50803
+	jne	%g3, %g0, jeq_else.43163
 	fmov	%f5, %f6
-	jmp	jeq_cont.50804
-jeq_else.50803:
+	jmp	jeq_cont.43164
+jeq_else.43163:
 	fmul	%f7, %f4, %f2
 	ldi	%g3, %g6, -36
 	fldi	%f5, %g3, 0
@@ -10066,71 +7014,71 @@ jeq_else.50803:
 	fldi	%f2, %g3, -8
 	fmul	%f5, %f3, %f2
 	fadd	%f5, %f6, %f5
-jeq_cont.50804:
+jeq_cont.43164:
 	addi	%g3, %g0, 3
-	jne	%g5, %g3, jeq_else.50805
+	jne	%g5, %g3, jeq_else.43165
 	fsub	%f2, %f5, %f17
-	jmp	jeq_cont.50806
-jeq_else.50805:
+	jmp	jeq_cont.43166
+jeq_else.43165:
 	fmov	%f2, %f5
-jeq_cont.50806:
+jeq_cont.43166:
 	fmul	%f3, %f1, %f1
 	fmul	%f0, %f0, %f2
 	fsub	%f0, %f3, %f0
-	fjlt	%f16, %f0, fjge_else.50807
+	fjlt	%f16, %f0, fjge_else.43167
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50808
-fjge_else.50807:
+	jmp	fjge_cont.43168
+fjge_else.43167:
 	ldi	%g3, %g6, -24
-	jne	%g3, %g0, jeq_else.50809
+	jne	%g3, %g0, jeq_else.43169
 	fsqrt	%f0, %f0
 	fsub	%f1, %f1, %f0
 	fldi	%f0, %g7, -16
 	fmul	%f0, %f1, %f0
 	fsti	%f0, %g31, 520
-	jmp	jeq_cont.50810
-jeq_else.50809:
+	jmp	jeq_cont.43170
+jeq_else.43169:
 	fsqrt	%f0, %f0
 	fadd	%f1, %f1, %f0
 	fldi	%f0, %g7, -16
 	fmul	%f0, %f1, %f0
 	fsti	%f0, %g31, 520
-jeq_cont.50810:
+jeq_cont.43170:
 	addi	%g3, %g0, 1
-fjge_cont.50808:
-	jmp	fjne_cont.50802
-fjne_else.50801:
+fjge_cont.43168:
+	jmp	fjne_cont.43162
+fjne_else.43161:
 	addi	%g3, %g0, 0
-fjne_cont.50802:
-jeq_cont.50798:
-jeq_cont.50760:
+fjne_cont.43162:
+jeq_cont.43158:
+jeq_cont.43120:
 	fldi	%f0, %g31, 520
-	jne	%g3, %g0, jeq_else.50811
+	jne	%g3, %g0, jeq_else.43171
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50812
-jeq_else.50811:
-	setL %g3, l.44093
+	jmp	jeq_cont.43172
+jeq_else.43171:
+	setL %g3, l.36803
 	fldi	%f1, %g3, 0
-	fjlt	%f0, %f1, fjge_else.50813
+	fjlt	%f0, %f1, fjge_else.43173
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50814
-fjge_else.50813:
+	jmp	fjge_cont.43174
+fjge_else.43173:
 	addi	%g3, %g0, 1
-fjge_cont.50814:
-jeq_cont.50812:
-	jne	%g3, %g0, jeq_else.50815
+fjge_cont.43174:
+jeq_cont.43172:
+	jne	%g3, %g0, jeq_else.43175
 	slli	%g3, %g9, 2
 	add	%g3, %g31, %g3
 	ldi	%g3, %g3, 272
 	ldi	%g3, %g3, -24
-	jne	%g3, %g0, jeq_else.50816
+	jne	%g3, %g0, jeq_else.43176
 	addi	%g3, %g0, 0
 	return
-jeq_else.50816:
+jeq_else.43176:
 	addi	%g8, %g8, 1
-	jmp	shadow_check_and_group.2837
-jeq_else.50815:
-	setL %g3, l.44095
+	jmp	shadow_check_and_group.2854
+jeq_else.43175:
+	setL %g3, l.36805
 	fldi	%f1, %g3, 0
 	fadd	%f0, %f0, %f1
 	fldi	%f1, %g31, 308
@@ -10147,10 +7095,10 @@ jeq_else.50815:
 	fadd	%f3, %f1, %f0
 	ldi	%g5, %g4, 0
 	sti	%g4, %g1, 0
-	jne	%g5, %g29, jeq_else.50817
+	jne	%g5, %g29, jeq_else.43177
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.50818
-jeq_else.50817:
+	jmp	jeq_cont.43178
+jeq_else.43177:
 	slli	%g3, %g5, 2
 	add	%g3, %g31, %g3
 	ldi	%g6, %g3, 272
@@ -10162,61 +7110,61 @@ jeq_else.50817:
 	fldi	%f1, %g3, -8
 	fsub	%f1, %f3, %f1
 	ldi	%g5, %g6, -4
-	jne	%g5, %g28, jeq_else.50819
-	fjlt	%f0, %f16, fjge_else.50821
+	jne	%g5, %g28, jeq_else.43179
+	fjlt	%f0, %f16, fjge_else.43181
 	fmov	%f6, %f0
-	jmp	fjge_cont.50822
-fjge_else.50821:
+	jmp	fjge_cont.43182
+fjge_else.43181:
 	fneg	%f6, %f0
-fjge_cont.50822:
+fjge_cont.43182:
 	ldi	%g3, %g6, -16
 	fldi	%f0, %g3, 0
-	fjlt	%f6, %f0, fjge_else.50823
+	fjlt	%f6, %f0, fjge_else.43183
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.50824
-fjge_else.50823:
-	fjlt	%f2, %f16, fjge_else.50825
+	jmp	fjge_cont.43184
+fjge_else.43183:
+	fjlt	%f2, %f16, fjge_else.43185
 	fmov	%f0, %f2
-	jmp	fjge_cont.50826
-fjge_else.50825:
+	jmp	fjge_cont.43186
+fjge_else.43185:
 	fneg	%f0, %f2
-fjge_cont.50826:
+fjge_cont.43186:
 	fldi	%f2, %g3, -4
-	fjlt	%f0, %f2, fjge_else.50827
+	fjlt	%f0, %f2, fjge_else.43187
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.50828
-fjge_else.50827:
-	fjlt	%f1, %f16, fjge_else.50829
+	jmp	fjge_cont.43188
+fjge_else.43187:
+	fjlt	%f1, %f16, fjge_else.43189
 	fmov	%f0, %f1
-	jmp	fjge_cont.50830
-fjge_else.50829:
+	jmp	fjge_cont.43190
+fjge_else.43189:
 	fneg	%f0, %f1
-fjge_cont.50830:
+fjge_cont.43190:
 	fldi	%f1, %g3, -8
-	fjlt	%f0, %f1, fjge_else.50831
+	fjlt	%f0, %f1, fjge_else.43191
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.50832
-fjge_else.50831:
+	jmp	fjge_cont.43192
+fjge_else.43191:
 	addi	%g5, %g0, 1
-fjge_cont.50832:
-fjge_cont.50828:
-fjge_cont.50824:
-	jne	%g5, %g0, jeq_else.50833
+fjge_cont.43192:
+fjge_cont.43188:
+fjge_cont.43184:
+	jne	%g5, %g0, jeq_else.43193
 	ldi	%g3, %g6, -24
-	jne	%g3, %g0, jeq_else.50835
+	jne	%g3, %g0, jeq_else.43195
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.50836
-jeq_else.50835:
+	jmp	jeq_cont.43196
+jeq_else.43195:
 	addi	%g3, %g0, 0
-jeq_cont.50836:
-	jmp	jeq_cont.50834
-jeq_else.50833:
+jeq_cont.43196:
+	jmp	jeq_cont.43194
+jeq_else.43193:
 	ldi	%g3, %g6, -24
-jeq_cont.50834:
-	jmp	jeq_cont.50820
-jeq_else.50819:
+jeq_cont.43194:
+	jmp	jeq_cont.43180
+jeq_else.43179:
 	addi	%g3, %g0, 2
-	jne	%g5, %g3, jeq_else.50837
+	jne	%g5, %g3, jeq_else.43197
 	ldi	%g3, %g6, -16
 	fldi	%f6, %g3, 0
 	fmul	%f6, %f6, %f0
@@ -10227,20 +7175,20 @@ jeq_else.50819:
 	fmul	%f0, %f0, %f1
 	fadd	%f0, %f2, %f0
 	ldi	%g3, %g6, -24
-	fjlt	%f0, %f16, fjge_else.50839
+	fjlt	%f0, %f16, fjge_else.43199
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.50840
-fjge_else.50839:
+	jmp	fjge_cont.43200
+fjge_else.43199:
 	addi	%g5, %g0, 1
-fjge_cont.50840:
-	jne	%g3, %g5, jeq_else.50841
+fjge_cont.43200:
+	jne	%g3, %g5, jeq_else.43201
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.50842
-jeq_else.50841:
+	jmp	jeq_cont.43202
+jeq_else.43201:
 	addi	%g3, %g0, 0
-jeq_cont.50842:
-	jmp	jeq_cont.50838
-jeq_else.50837:
+jeq_cont.43202:
+	jmp	jeq_cont.43198
+jeq_else.43197:
 	fmul	%f7, %f0, %f0
 	ldi	%g3, %g6, -16
 	fldi	%f6, %g3, 0
@@ -10254,10 +7202,10 @@ jeq_else.50837:
 	fmul	%f6, %f7, %f6
 	fadd	%f7, %f8, %f6
 	ldi	%g3, %g6, -12
-	jne	%g3, %g0, jeq_else.50843
+	jne	%g3, %g0, jeq_else.43203
 	fmov	%f6, %f7
-	jmp	jeq_cont.50844
-jeq_else.50843:
+	jmp	jeq_cont.43204
+jeq_else.43203:
 	fmul	%f8, %f2, %f1
 	ldi	%g3, %g6, -36
 	fldi	%f6, %g3, 0
@@ -10271,44 +7219,44 @@ jeq_else.50843:
 	fldi	%f0, %g3, -8
 	fmul	%f6, %f1, %f0
 	fadd	%f6, %f7, %f6
-jeq_cont.50844:
+jeq_cont.43204:
 	addi	%g3, %g0, 3
-	jne	%g5, %g3, jeq_else.50845
+	jne	%g5, %g3, jeq_else.43205
 	fsub	%f0, %f6, %f17
-	jmp	jeq_cont.50846
-jeq_else.50845:
+	jmp	jeq_cont.43206
+jeq_else.43205:
 	fmov	%f0, %f6
-jeq_cont.50846:
+jeq_cont.43206:
 	ldi	%g3, %g6, -24
-	fjlt	%f0, %f16, fjge_else.50847
+	fjlt	%f0, %f16, fjge_else.43207
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.50848
-fjge_else.50847:
+	jmp	fjge_cont.43208
+fjge_else.43207:
 	addi	%g5, %g0, 1
-fjge_cont.50848:
-	jne	%g3, %g5, jeq_else.50849
+fjge_cont.43208:
+	jne	%g3, %g5, jeq_else.43209
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.50850
-jeq_else.50849:
+	jmp	jeq_cont.43210
+jeq_else.43209:
 	addi	%g3, %g0, 0
-jeq_cont.50850:
-jeq_cont.50838:
-jeq_cont.50820:
-	jne	%g3, %g0, jeq_else.50851
+jeq_cont.43210:
+jeq_cont.43198:
+jeq_cont.43180:
+	jne	%g3, %g0, jeq_else.43211
 	addi	%g5, %g0, 1
 	subi	%g1, %g1, 8
-	call	check_all_inside.2831
+	call	check_all_inside.2848
 	addi	%g1, %g1, 8
-	jmp	jeq_cont.50852
-jeq_else.50851:
+	jmp	jeq_cont.43212
+jeq_else.43211:
 	addi	%g3, %g0, 0
-jeq_cont.50852:
-jeq_cont.50818:
-	jne	%g3, %g0, jeq_else.50853
+jeq_cont.43212:
+jeq_cont.43178:
+	jne	%g3, %g0, jeq_else.43213
 	addi	%g8, %g8, 1
 	ldi	%g4, %g1, 0
-	jmp	shadow_check_and_group.2837
-jeq_else.50853:
+	jmp	shadow_check_and_group.2854
+jeq_else.43213:
 	addi	%g3, %g0, 1
 	return
 
@@ -10318,150 +7266,150 @@ jeq_else.50853:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f17, %f16, %f15, %f1, %f0, %dummy]
 ! ret type = Bool
 !================================
-shadow_check_one_or_group.2840:
+shadow_check_one_or_group.2857:
 	slli	%g3, %g11, 2
 	ld	%g4, %g10, %g3
-	jne	%g4, %g29, jeq_else.50854
+	jne	%g4, %g29, jeq_else.43214
 	addi	%g3, %g0, 0
 	return
-jeq_else.50854:
+jeq_else.43214:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 4
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 4
-	jne	%g3, %g0, jeq_else.50855
+	jne	%g3, %g0, jeq_else.43215
 	addi	%g11, %g11, 1
 	slli	%g3, %g11, 2
 	ld	%g4, %g10, %g3
-	jne	%g4, %g29, jeq_else.50856
+	jne	%g4, %g29, jeq_else.43216
 	addi	%g3, %g0, 0
 	return
-jeq_else.50856:
+jeq_else.43216:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 4
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 4
-	jne	%g3, %g0, jeq_else.50857
+	jne	%g3, %g0, jeq_else.43217
 	addi	%g11, %g11, 1
 	slli	%g3, %g11, 2
 	ld	%g4, %g10, %g3
-	jne	%g4, %g29, jeq_else.50858
+	jne	%g4, %g29, jeq_else.43218
 	addi	%g3, %g0, 0
 	return
-jeq_else.50858:
+jeq_else.43218:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 4
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 4
-	jne	%g3, %g0, jeq_else.50859
+	jne	%g3, %g0, jeq_else.43219
 	addi	%g11, %g11, 1
 	slli	%g3, %g11, 2
 	ld	%g4, %g10, %g3
-	jne	%g4, %g29, jeq_else.50860
+	jne	%g4, %g29, jeq_else.43220
 	addi	%g3, %g0, 0
 	return
-jeq_else.50860:
+jeq_else.43220:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 4
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 4
-	jne	%g3, %g0, jeq_else.50861
+	jne	%g3, %g0, jeq_else.43221
 	addi	%g11, %g11, 1
 	slli	%g3, %g11, 2
 	ld	%g4, %g10, %g3
-	jne	%g4, %g29, jeq_else.50862
+	jne	%g4, %g29, jeq_else.43222
 	addi	%g3, %g0, 0
 	return
-jeq_else.50862:
+jeq_else.43222:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 4
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 4
-	jne	%g3, %g0, jeq_else.50863
+	jne	%g3, %g0, jeq_else.43223
 	addi	%g11, %g11, 1
 	slli	%g3, %g11, 2
 	ld	%g4, %g10, %g3
-	jne	%g4, %g29, jeq_else.50864
+	jne	%g4, %g29, jeq_else.43224
 	addi	%g3, %g0, 0
 	return
-jeq_else.50864:
+jeq_else.43224:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 4
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 4
-	jne	%g3, %g0, jeq_else.50865
+	jne	%g3, %g0, jeq_else.43225
 	addi	%g11, %g11, 1
 	slli	%g3, %g11, 2
 	ld	%g4, %g10, %g3
-	jne	%g4, %g29, jeq_else.50866
+	jne	%g4, %g29, jeq_else.43226
 	addi	%g3, %g0, 0
 	return
-jeq_else.50866:
+jeq_else.43226:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 4
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 4
-	jne	%g3, %g0, jeq_else.50867
+	jne	%g3, %g0, jeq_else.43227
 	addi	%g11, %g11, 1
 	slli	%g3, %g11, 2
 	ld	%g4, %g10, %g3
-	jne	%g4, %g29, jeq_else.50868
+	jne	%g4, %g29, jeq_else.43228
 	addi	%g3, %g0, 0
 	return
-jeq_else.50868:
+jeq_else.43228:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 4
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 4
-	jne	%g3, %g0, jeq_else.50869
+	jne	%g3, %g0, jeq_else.43229
 	addi	%g11, %g11, 1
-	jmp	shadow_check_one_or_group.2840
-jeq_else.50869:
+	jmp	shadow_check_one_or_group.2857
+jeq_else.43229:
 	addi	%g3, %g0, 1
 	return
-jeq_else.50867:
+jeq_else.43227:
 	addi	%g3, %g0, 1
 	return
-jeq_else.50865:
+jeq_else.43225:
 	addi	%g3, %g0, 1
 	return
-jeq_else.50863:
+jeq_else.43223:
 	addi	%g3, %g0, 1
 	return
-jeq_else.50861:
+jeq_else.43221:
 	addi	%g3, %g0, 1
 	return
-jeq_else.50859:
+jeq_else.43219:
 	addi	%g3, %g0, 1
 	return
-jeq_else.50857:
+jeq_else.43217:
 	addi	%g3, %g0, 1
 	return
-jeq_else.50855:
+jeq_else.43215:
 	addi	%g3, %g0, 1
 	return
 
@@ -10471,20 +7419,20 @@ jeq_else.50855:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g13, %g12, %g11, %g10, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f17, %f16, %f15, %f1, %f0, %dummy]
 ! ret type = Bool
 !================================
-shadow_check_one_or_matrix.2843:
+shadow_check_one_or_matrix.2860:
 	slli	%g3, %g12, 2
 	ld	%g10, %g13, %g3
 	ldi	%g4, %g10, 0
-	jne	%g4, %g29, jeq_else.50870
+	jne	%g4, %g29, jeq_else.43230
 	addi	%g3, %g0, 0
 	return
-jeq_else.50870:
+jeq_else.43230:
 	addi	%g3, %g0, 99
 	sti	%g10, %g1, 0
-	jne	%g4, %g3, jeq_else.50871
+	jne	%g4, %g3, jeq_else.43231
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.50872
-jeq_else.50871:
+	jmp	jeq_cont.43232
+jeq_else.43231:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g5, %g3, 272
@@ -10502,7 +7450,7 @@ jeq_else.50871:
 	add	%g3, %g31, %g3
 	ldi	%g6, %g3, 972
 	ldi	%g4, %g5, -4
-	jne	%g4, %g28, jeq_else.50873
+	jne	%g4, %g28, jeq_else.43233
 	fldi	%f0, %g6, 0
 	fsub	%f2, %f0, %f3
 	fldi	%f0, %g6, -4
@@ -10510,41 +7458,41 @@ jeq_else.50871:
 	fldi	%f2, %g31, 728
 	fmul	%f2, %f6, %f2
 	fadd	%f5, %f2, %f4
-	fjlt	%f5, %f16, fjge_else.50875
+	fjlt	%f5, %f16, fjge_else.43235
 	fmov	%f2, %f5
-	jmp	fjge_cont.50876
-fjge_else.50875:
+	jmp	fjge_cont.43236
+fjge_else.43235:
 	fneg	%f2, %f5
-fjge_cont.50876:
+fjge_cont.43236:
 	ldi	%g4, %g5, -16
 	fldi	%f5, %g4, -4
-	fjlt	%f2, %f5, fjge_else.50877
+	fjlt	%f2, %f5, fjge_else.43237
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50878
-fjge_else.50877:
+	jmp	fjge_cont.43238
+fjge_else.43237:
 	fldi	%f2, %g31, 724
 	fmul	%f2, %f6, %f2
 	fadd	%f5, %f2, %f1
-	fjlt	%f5, %f16, fjge_else.50879
+	fjlt	%f5, %f16, fjge_else.43239
 	fmov	%f2, %f5
-	jmp	fjge_cont.50880
-fjge_else.50879:
+	jmp	fjge_cont.43240
+fjge_else.43239:
 	fneg	%f2, %f5
-fjge_cont.50880:
+fjge_cont.43240:
 	fldi	%f5, %g4, -8
-	fjlt	%f2, %f5, fjge_else.50881
+	fjlt	%f2, %f5, fjge_else.43241
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50882
-fjge_else.50881:
-	fjeq	%f0, %f16, fjne_else.50883
+	jmp	fjge_cont.43242
+fjge_else.43241:
+	fjeq	%f0, %f16, fjne_else.43243
 	addi	%g3, %g0, 1
-	jmp	fjne_cont.50884
-fjne_else.50883:
+	jmp	fjne_cont.43244
+fjne_else.43243:
 	addi	%g3, %g0, 0
-fjne_cont.50884:
-fjge_cont.50882:
-fjge_cont.50878:
-	jne	%g3, %g0, jeq_else.50885
+fjne_cont.43244:
+fjge_cont.43242:
+fjge_cont.43238:
+	jne	%g3, %g0, jeq_else.43245
 	fldi	%f0, %g6, -8
 	fsub	%f0, %f0, %f4
 	fldi	%f6, %g6, -12
@@ -10552,40 +7500,40 @@ fjge_cont.50878:
 	fldi	%f0, %g31, 732
 	fmul	%f0, %f5, %f0
 	fadd	%f2, %f0, %f3
-	fjlt	%f2, %f16, fjge_else.50887
+	fjlt	%f2, %f16, fjge_else.43247
 	fmov	%f0, %f2
-	jmp	fjge_cont.50888
-fjge_else.50887:
+	jmp	fjge_cont.43248
+fjge_else.43247:
 	fneg	%f0, %f2
-fjge_cont.50888:
+fjge_cont.43248:
 	fldi	%f2, %g4, 0
-	fjlt	%f0, %f2, fjge_else.50889
+	fjlt	%f0, %f2, fjge_else.43249
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50890
-fjge_else.50889:
+	jmp	fjge_cont.43250
+fjge_else.43249:
 	fldi	%f0, %g31, 724
 	fmul	%f0, %f5, %f0
 	fadd	%f2, %f0, %f1
-	fjlt	%f2, %f16, fjge_else.50891
+	fjlt	%f2, %f16, fjge_else.43251
 	fmov	%f0, %f2
-	jmp	fjge_cont.50892
-fjge_else.50891:
+	jmp	fjge_cont.43252
+fjge_else.43251:
 	fneg	%f0, %f2
-fjge_cont.50892:
+fjge_cont.43252:
 	fldi	%f2, %g4, -8
-	fjlt	%f0, %f2, fjge_else.50893
+	fjlt	%f0, %f2, fjge_else.43253
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50894
-fjge_else.50893:
-	fjeq	%f6, %f16, fjne_else.50895
+	jmp	fjge_cont.43254
+fjge_else.43253:
+	fjeq	%f6, %f16, fjne_else.43255
 	addi	%g3, %g0, 1
-	jmp	fjne_cont.50896
-fjne_else.50895:
+	jmp	fjne_cont.43256
+fjne_else.43255:
 	addi	%g3, %g0, 0
-fjne_cont.50896:
-fjge_cont.50894:
-fjge_cont.50890:
-	jne	%g3, %g0, jeq_else.50897
+fjne_cont.43256:
+fjge_cont.43254:
+fjge_cont.43250:
+	jne	%g3, %g0, jeq_else.43257
 	fldi	%f0, %g6, -16
 	fsub	%f0, %f0, %f1
 	fldi	%f5, %g6, -20
@@ -10593,65 +7541,65 @@ fjge_cont.50890:
 	fldi	%f0, %g31, 732
 	fmul	%f0, %f2, %f0
 	fadd	%f1, %f0, %f3
-	fjlt	%f1, %f16, fjge_else.50899
+	fjlt	%f1, %f16, fjge_else.43259
 	fmov	%f0, %f1
-	jmp	fjge_cont.50900
-fjge_else.50899:
+	jmp	fjge_cont.43260
+fjge_else.43259:
 	fneg	%f0, %f1
-fjge_cont.50900:
+fjge_cont.43260:
 	fldi	%f1, %g4, 0
-	fjlt	%f0, %f1, fjge_else.50901
+	fjlt	%f0, %f1, fjge_else.43261
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50902
-fjge_else.50901:
+	jmp	fjge_cont.43262
+fjge_else.43261:
 	fldi	%f0, %g31, 728
 	fmul	%f0, %f2, %f0
 	fadd	%f1, %f0, %f4
-	fjlt	%f1, %f16, fjge_else.50903
+	fjlt	%f1, %f16, fjge_else.43263
 	fmov	%f0, %f1
-	jmp	fjge_cont.50904
-fjge_else.50903:
+	jmp	fjge_cont.43264
+fjge_else.43263:
 	fneg	%f0, %f1
-fjge_cont.50904:
+fjge_cont.43264:
 	fldi	%f1, %g4, -4
-	fjlt	%f0, %f1, fjge_else.50905
+	fjlt	%f0, %f1, fjge_else.43265
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50906
-fjge_else.50905:
-	fjeq	%f5, %f16, fjne_else.50907
+	jmp	fjge_cont.43266
+fjge_else.43265:
+	fjeq	%f5, %f16, fjne_else.43267
 	addi	%g3, %g0, 1
-	jmp	fjne_cont.50908
-fjne_else.50907:
+	jmp	fjne_cont.43268
+fjne_else.43267:
 	addi	%g3, %g0, 0
-fjne_cont.50908:
-fjge_cont.50906:
-fjge_cont.50902:
-	jne	%g3, %g0, jeq_else.50909
+fjne_cont.43268:
+fjge_cont.43266:
+fjge_cont.43262:
+	jne	%g3, %g0, jeq_else.43269
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50910
-jeq_else.50909:
+	jmp	jeq_cont.43270
+jeq_else.43269:
 	fsti	%f2, %g31, 520
 	addi	%g3, %g0, 3
-jeq_cont.50910:
-	jmp	jeq_cont.50898
-jeq_else.50897:
+jeq_cont.43270:
+	jmp	jeq_cont.43258
+jeq_else.43257:
 	fsti	%f5, %g31, 520
 	addi	%g3, %g0, 2
-jeq_cont.50898:
-	jmp	jeq_cont.50886
-jeq_else.50885:
+jeq_cont.43258:
+	jmp	jeq_cont.43246
+jeq_else.43245:
 	fsti	%f6, %g31, 520
 	addi	%g3, %g0, 1
-jeq_cont.50886:
-	jmp	jeq_cont.50874
-jeq_else.50873:
+jeq_cont.43246:
+	jmp	jeq_cont.43234
+jeq_else.43233:
 	addi	%g3, %g0, 2
-	jne	%g4, %g3, jeq_else.50911
+	jne	%g4, %g3, jeq_else.43271
 	fldi	%f0, %g6, 0
-	fjlt	%f0, %f16, fjge_else.50913
+	fjlt	%f0, %f16, fjge_else.43273
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50914
-fjge_else.50913:
+	jmp	fjge_cont.43274
+fjge_else.43273:
 	fldi	%f0, %g6, -4
 	fmul	%f2, %f0, %f3
 	fldi	%f0, %g6, -8
@@ -10662,11 +7610,11 @@ fjge_else.50913:
 	fadd	%f0, %f2, %f0
 	fsti	%f0, %g31, 520
 	addi	%g3, %g0, 1
-fjge_cont.50914:
-	jmp	jeq_cont.50912
-jeq_else.50911:
+fjge_cont.43274:
+	jmp	jeq_cont.43272
+jeq_else.43271:
 	fldi	%f0, %g6, 0
-	fjeq	%f0, %f16, fjne_else.50915
+	fjeq	%f0, %f16, fjne_else.43275
 	fldi	%f2, %g6, -4
 	fmul	%f5, %f2, %f3
 	fldi	%f2, %g6, -8
@@ -10688,10 +7636,10 @@ jeq_else.50911:
 	fmul	%f5, %f6, %f5
 	fadd	%f6, %f7, %f5
 	ldi	%g3, %g5, -12
-	jne	%g3, %g0, jeq_else.50917
+	jne	%g3, %g0, jeq_else.43277
 	fmov	%f5, %f6
-	jmp	jeq_cont.50918
-jeq_else.50917:
+	jmp	jeq_cont.43278
+jeq_else.43277:
 	fmul	%f7, %f4, %f1
 	ldi	%g3, %g5, -36
 	fldi	%f5, %g3, 0
@@ -10705,333 +7653,333 @@ jeq_else.50917:
 	fldi	%f1, %g3, -8
 	fmul	%f5, %f3, %f1
 	fadd	%f5, %f6, %f5
-jeq_cont.50918:
+jeq_cont.43278:
 	addi	%g3, %g0, 3
-	jne	%g4, %g3, jeq_else.50919
+	jne	%g4, %g3, jeq_else.43279
 	fsub	%f1, %f5, %f17
-	jmp	jeq_cont.50920
-jeq_else.50919:
+	jmp	jeq_cont.43280
+jeq_else.43279:
 	fmov	%f1, %f5
-jeq_cont.50920:
+jeq_cont.43280:
 	fmul	%f3, %f2, %f2
 	fmul	%f0, %f0, %f1
 	fsub	%f0, %f3, %f0
-	fjlt	%f16, %f0, fjge_else.50921
+	fjlt	%f16, %f0, fjge_else.43281
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50922
-fjge_else.50921:
+	jmp	fjge_cont.43282
+fjge_else.43281:
 	ldi	%g3, %g5, -24
-	jne	%g3, %g0, jeq_else.50923
+	jne	%g3, %g0, jeq_else.43283
 	fsqrt	%f0, %f0
 	fsub	%f1, %f2, %f0
 	fldi	%f0, %g6, -16
 	fmul	%f0, %f1, %f0
 	fsti	%f0, %g31, 520
-	jmp	jeq_cont.50924
-jeq_else.50923:
+	jmp	jeq_cont.43284
+jeq_else.43283:
 	fsqrt	%f0, %f0
 	fadd	%f1, %f2, %f0
 	fldi	%f0, %g6, -16
 	fmul	%f0, %f1, %f0
 	fsti	%f0, %g31, 520
-jeq_cont.50924:
+jeq_cont.43284:
 	addi	%g3, %g0, 1
-fjge_cont.50922:
-	jmp	fjne_cont.50916
-fjne_else.50915:
+fjge_cont.43282:
+	jmp	fjne_cont.43276
+fjne_else.43275:
 	addi	%g3, %g0, 0
-fjne_cont.50916:
-jeq_cont.50912:
-jeq_cont.50874:
-	jne	%g3, %g0, jeq_else.50925
+fjne_cont.43276:
+jeq_cont.43272:
+jeq_cont.43234:
+	jne	%g3, %g0, jeq_else.43285
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50926
-jeq_else.50925:
+	jmp	jeq_cont.43286
+jeq_else.43285:
 	fldi	%f1, %g31, 520
-	setL %g3, l.44281
+	setL %g3, l.36991
 	fldi	%f0, %g3, 0
-	fjlt	%f1, %f0, fjge_else.50927
+	fjlt	%f1, %f0, fjge_else.43287
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.50928
-fjge_else.50927:
+	jmp	fjge_cont.43288
+fjge_else.43287:
 	ldi	%g4, %g10, -4
-	jne	%g4, %g29, jeq_else.50929
+	jne	%g4, %g29, jeq_else.43289
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50930
-jeq_else.50929:
+	jmp	jeq_cont.43290
+jeq_else.43289:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 8
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 8
-	jne	%g3, %g0, jeq_else.50931
+	jne	%g3, %g0, jeq_else.43291
 	ldi	%g4, %g10, -8
-	jne	%g4, %g29, jeq_else.50933
+	jne	%g4, %g29, jeq_else.43293
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50934
-jeq_else.50933:
+	jmp	jeq_cont.43294
+jeq_else.43293:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 8
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 8
-	jne	%g3, %g0, jeq_else.50935
+	jne	%g3, %g0, jeq_else.43295
 	ldi	%g4, %g10, -12
-	jne	%g4, %g29, jeq_else.50937
+	jne	%g4, %g29, jeq_else.43297
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50938
-jeq_else.50937:
+	jmp	jeq_cont.43298
+jeq_else.43297:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 8
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 8
-	jne	%g3, %g0, jeq_else.50939
+	jne	%g3, %g0, jeq_else.43299
 	ldi	%g4, %g10, -16
-	jne	%g4, %g29, jeq_else.50941
+	jne	%g4, %g29, jeq_else.43301
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50942
-jeq_else.50941:
+	jmp	jeq_cont.43302
+jeq_else.43301:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 8
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 8
-	jne	%g3, %g0, jeq_else.50943
+	jne	%g3, %g0, jeq_else.43303
 	ldi	%g4, %g10, -20
-	jne	%g4, %g29, jeq_else.50945
+	jne	%g4, %g29, jeq_else.43305
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50946
-jeq_else.50945:
+	jmp	jeq_cont.43306
+jeq_else.43305:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 8
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 8
-	jne	%g3, %g0, jeq_else.50947
+	jne	%g3, %g0, jeq_else.43307
 	ldi	%g4, %g10, -24
-	jne	%g4, %g29, jeq_else.50949
+	jne	%g4, %g29, jeq_else.43309
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50950
-jeq_else.50949:
+	jmp	jeq_cont.43310
+jeq_else.43309:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 8
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 8
-	jne	%g3, %g0, jeq_else.50951
+	jne	%g3, %g0, jeq_else.43311
 	ldi	%g4, %g10, -28
-	jne	%g4, %g29, jeq_else.50953
+	jne	%g4, %g29, jeq_else.43313
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50954
-jeq_else.50953:
+	jmp	jeq_cont.43314
+jeq_else.43313:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 8
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 8
-	jne	%g3, %g0, jeq_else.50955
+	jne	%g3, %g0, jeq_else.43315
 	addi	%g11, %g0, 8
 	subi	%g1, %g1, 8
-	call	shadow_check_one_or_group.2840
+	call	shadow_check_one_or_group.2857
 	addi	%g1, %g1, 8
-	jmp	jeq_cont.50956
-jeq_else.50955:
-	addi	%g3, %g0, 1
-jeq_cont.50956:
-jeq_cont.50954:
-	jmp	jeq_cont.50952
-jeq_else.50951:
-	addi	%g3, %g0, 1
-jeq_cont.50952:
-jeq_cont.50950:
-	jmp	jeq_cont.50948
-jeq_else.50947:
-	addi	%g3, %g0, 1
-jeq_cont.50948:
-jeq_cont.50946:
-	jmp	jeq_cont.50944
-jeq_else.50943:
-	addi	%g3, %g0, 1
-jeq_cont.50944:
-jeq_cont.50942:
-	jmp	jeq_cont.50940
-jeq_else.50939:
-	addi	%g3, %g0, 1
-jeq_cont.50940:
-jeq_cont.50938:
-	jmp	jeq_cont.50936
-jeq_else.50935:
-	addi	%g3, %g0, 1
-jeq_cont.50936:
-jeq_cont.50934:
-	jmp	jeq_cont.50932
-jeq_else.50931:
-	addi	%g3, %g0, 1
-jeq_cont.50932:
-jeq_cont.50930:
-	jne	%g3, %g0, jeq_else.50957
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.50958
-jeq_else.50957:
-	addi	%g3, %g0, 1
-jeq_cont.50958:
-fjge_cont.50928:
-jeq_cont.50926:
-jeq_cont.50872:
-	jne	%g3, %g0, jeq_else.50959
+	jmp	jeq_cont.43316
+jeq_else.43315:
+	addi	%g3, %g0, 1
+jeq_cont.43316:
+jeq_cont.43314:
+	jmp	jeq_cont.43312
+jeq_else.43311:
+	addi	%g3, %g0, 1
+jeq_cont.43312:
+jeq_cont.43310:
+	jmp	jeq_cont.43308
+jeq_else.43307:
+	addi	%g3, %g0, 1
+jeq_cont.43308:
+jeq_cont.43306:
+	jmp	jeq_cont.43304
+jeq_else.43303:
+	addi	%g3, %g0, 1
+jeq_cont.43304:
+jeq_cont.43302:
+	jmp	jeq_cont.43300
+jeq_else.43299:
+	addi	%g3, %g0, 1
+jeq_cont.43300:
+jeq_cont.43298:
+	jmp	jeq_cont.43296
+jeq_else.43295:
+	addi	%g3, %g0, 1
+jeq_cont.43296:
+jeq_cont.43294:
+	jmp	jeq_cont.43292
+jeq_else.43291:
+	addi	%g3, %g0, 1
+jeq_cont.43292:
+jeq_cont.43290:
+	jne	%g3, %g0, jeq_else.43317
+	addi	%g3, %g0, 0
+	jmp	jeq_cont.43318
+jeq_else.43317:
+	addi	%g3, %g0, 1
+jeq_cont.43318:
+fjge_cont.43288:
+jeq_cont.43286:
+jeq_cont.43232:
+	jne	%g3, %g0, jeq_else.43319
 	addi	%g12, %g12, 1
-	jmp	shadow_check_one_or_matrix.2843
-jeq_else.50959:
+	jmp	shadow_check_one_or_matrix.2860
+jeq_else.43319:
 	ldi	%g10, %g1, 0
 	ldi	%g4, %g10, -4
-	jne	%g4, %g29, jeq_else.50960
+	jne	%g4, %g29, jeq_else.43320
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50961
-jeq_else.50960:
+	jmp	jeq_cont.43321
+jeq_else.43320:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 8
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 8
-	jne	%g3, %g0, jeq_else.50962
+	jne	%g3, %g0, jeq_else.43322
 	ldi	%g4, %g10, -8
-	jne	%g4, %g29, jeq_else.50964
+	jne	%g4, %g29, jeq_else.43324
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50965
-jeq_else.50964:
+	jmp	jeq_cont.43325
+jeq_else.43324:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 8
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 8
-	jne	%g3, %g0, jeq_else.50966
+	jne	%g3, %g0, jeq_else.43326
 	ldi	%g4, %g10, -12
-	jne	%g4, %g29, jeq_else.50968
+	jne	%g4, %g29, jeq_else.43328
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50969
-jeq_else.50968:
+	jmp	jeq_cont.43329
+jeq_else.43328:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 8
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 8
-	jne	%g3, %g0, jeq_else.50970
+	jne	%g3, %g0, jeq_else.43330
 	ldi	%g4, %g10, -16
-	jne	%g4, %g29, jeq_else.50972
+	jne	%g4, %g29, jeq_else.43332
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50973
-jeq_else.50972:
+	jmp	jeq_cont.43333
+jeq_else.43332:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 8
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 8
-	jne	%g3, %g0, jeq_else.50974
+	jne	%g3, %g0, jeq_else.43334
 	ldi	%g4, %g10, -20
-	jne	%g4, %g29, jeq_else.50976
+	jne	%g4, %g29, jeq_else.43336
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50977
-jeq_else.50976:
+	jmp	jeq_cont.43337
+jeq_else.43336:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 8
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 8
-	jne	%g3, %g0, jeq_else.50978
+	jne	%g3, %g0, jeq_else.43338
 	ldi	%g4, %g10, -24
-	jne	%g4, %g29, jeq_else.50980
+	jne	%g4, %g29, jeq_else.43340
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50981
-jeq_else.50980:
+	jmp	jeq_cont.43341
+jeq_else.43340:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 8
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 8
-	jne	%g3, %g0, jeq_else.50982
+	jne	%g3, %g0, jeq_else.43342
 	ldi	%g4, %g10, -28
-	jne	%g4, %g29, jeq_else.50984
+	jne	%g4, %g29, jeq_else.43344
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.50985
-jeq_else.50984:
+	jmp	jeq_cont.43345
+jeq_else.43344:
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g8, %g0, 0
 	subi	%g1, %g1, 8
-	call	shadow_check_and_group.2837
+	call	shadow_check_and_group.2854
 	addi	%g1, %g1, 8
-	jne	%g3, %g0, jeq_else.50986
+	jne	%g3, %g0, jeq_else.43346
 	addi	%g11, %g0, 8
 	subi	%g1, %g1, 8
-	call	shadow_check_one_or_group.2840
+	call	shadow_check_one_or_group.2857
 	addi	%g1, %g1, 8
-	jmp	jeq_cont.50987
-jeq_else.50986:
-	addi	%g3, %g0, 1
-jeq_cont.50987:
-jeq_cont.50985:
-	jmp	jeq_cont.50983
-jeq_else.50982:
-	addi	%g3, %g0, 1
-jeq_cont.50983:
-jeq_cont.50981:
-	jmp	jeq_cont.50979
-jeq_else.50978:
-	addi	%g3, %g0, 1
-jeq_cont.50979:
-jeq_cont.50977:
-	jmp	jeq_cont.50975
-jeq_else.50974:
-	addi	%g3, %g0, 1
-jeq_cont.50975:
-jeq_cont.50973:
-	jmp	jeq_cont.50971
-jeq_else.50970:
-	addi	%g3, %g0, 1
-jeq_cont.50971:
-jeq_cont.50969:
-	jmp	jeq_cont.50967
-jeq_else.50966:
-	addi	%g3, %g0, 1
-jeq_cont.50967:
-jeq_cont.50965:
-	jmp	jeq_cont.50963
-jeq_else.50962:
-	addi	%g3, %g0, 1
-jeq_cont.50963:
-jeq_cont.50961:
-	jne	%g3, %g0, jeq_else.50988
+	jmp	jeq_cont.43347
+jeq_else.43346:
+	addi	%g3, %g0, 1
+jeq_cont.43347:
+jeq_cont.43345:
+	jmp	jeq_cont.43343
+jeq_else.43342:
+	addi	%g3, %g0, 1
+jeq_cont.43343:
+jeq_cont.43341:
+	jmp	jeq_cont.43339
+jeq_else.43338:
+	addi	%g3, %g0, 1
+jeq_cont.43339:
+jeq_cont.43337:
+	jmp	jeq_cont.43335
+jeq_else.43334:
+	addi	%g3, %g0, 1
+jeq_cont.43335:
+jeq_cont.43333:
+	jmp	jeq_cont.43331
+jeq_else.43330:
+	addi	%g3, %g0, 1
+jeq_cont.43331:
+jeq_cont.43329:
+	jmp	jeq_cont.43327
+jeq_else.43326:
+	addi	%g3, %g0, 1
+jeq_cont.43327:
+jeq_cont.43325:
+	jmp	jeq_cont.43323
+jeq_else.43322:
+	addi	%g3, %g0, 1
+jeq_cont.43323:
+jeq_cont.43321:
+	jne	%g3, %g0, jeq_else.43348
 	addi	%g12, %g12, 1
-	jmp	shadow_check_one_or_matrix.2843
-jeq_else.50988:
+	jmp	shadow_check_one_or_matrix.2860
+jeq_else.43348:
 	addi	%g3, %g0, 1
 	return
 
@@ -11041,12 +7989,12 @@ jeq_else.50988:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f21, %f2, %f17, %f16, %f15, %f12, %f11, %f10, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-solve_each_element.2846:
+solve_each_element.2863:
 	slli	%g3, %g11, 2
 	ld	%g10, %g4, %g3
-	jne	%g10, %g29, jeq_else.50989
+	jne	%g10, %g29, jeq_else.43349
 	return
-jeq_else.50989:
+jeq_else.43349:
 	slli	%g3, %g10, 2
 	add	%g3, %g31, %g3
 	ldi	%g7, %g3, 272
@@ -11061,192 +8009,192 @@ jeq_else.50989:
 	fldi	%f0, %g3, -8
 	fsub	%f5, %f1, %f0
 	ldi	%g3, %g7, -4
-	jne	%g3, %g28, jeq_else.50991
+	jne	%g3, %g28, jeq_else.43351
 	fldi	%f2, %g9, 0
-	fjeq	%f2, %f16, fjne_else.50993
+	fjeq	%f2, %f16, fjne_else.43353
 	ldi	%g5, %g7, -16
 	ldi	%g3, %g7, -24
-	fjlt	%f2, %f16, fjge_else.50995
+	fjlt	%f2, %f16, fjge_else.43355
 	addi	%g6, %g0, 0
-	jmp	fjge_cont.50996
-fjge_else.50995:
+	jmp	fjge_cont.43356
+fjge_else.43355:
 	addi	%g6, %g0, 1
-fjge_cont.50996:
+fjge_cont.43356:
 	fldi	%f1, %g5, 0
-	jne	%g3, %g6, jeq_else.50997
+	jne	%g3, %g6, jeq_else.43357
 	fneg	%f0, %f1
-	jmp	jeq_cont.50998
-jeq_else.50997:
+	jmp	jeq_cont.43358
+jeq_else.43357:
 	fmov	%f0, %f1
-jeq_cont.50998:
+jeq_cont.43358:
 	fsub	%f0, %f0, %f6
 	fdiv	%f2, %f0, %f2
 	fldi	%f0, %g9, -4
 	fmul	%f0, %f2, %f0
 	fadd	%f1, %f0, %f7
-	fjlt	%f1, %f16, fjge_else.50999
+	fjlt	%f1, %f16, fjge_else.43359
 	fmov	%f0, %f1
-	jmp	fjge_cont.51000
-fjge_else.50999:
+	jmp	fjge_cont.43360
+fjge_else.43359:
 	fneg	%f0, %f1
-fjge_cont.51000:
+fjge_cont.43360:
 	fldi	%f1, %g5, -4
-	fjlt	%f0, %f1, fjge_else.51001
+	fjlt	%f0, %f1, fjge_else.43361
 	addi	%g8, %g0, 0
-	jmp	fjge_cont.51002
-fjge_else.51001:
+	jmp	fjge_cont.43362
+fjge_else.43361:
 	fldi	%f0, %g9, -8
 	fmul	%f0, %f2, %f0
 	fadd	%f1, %f0, %f5
-	fjlt	%f1, %f16, fjge_else.51003
+	fjlt	%f1, %f16, fjge_else.43363
 	fmov	%f0, %f1
-	jmp	fjge_cont.51004
-fjge_else.51003:
+	jmp	fjge_cont.43364
+fjge_else.43363:
 	fneg	%f0, %f1
-fjge_cont.51004:
+fjge_cont.43364:
 	fldi	%f1, %g5, -8
-	fjlt	%f0, %f1, fjge_else.51005
+	fjlt	%f0, %f1, fjge_else.43365
 	addi	%g8, %g0, 0
-	jmp	fjge_cont.51006
-fjge_else.51005:
+	jmp	fjge_cont.43366
+fjge_else.43365:
 	fsti	%f2, %g31, 520
 	addi	%g8, %g0, 1
-fjge_cont.51006:
-fjge_cont.51002:
-	jmp	fjne_cont.50994
-fjne_else.50993:
+fjge_cont.43366:
+fjge_cont.43362:
+	jmp	fjne_cont.43354
+fjne_else.43353:
 	addi	%g8, %g0, 0
-fjne_cont.50994:
-	jne	%g8, %g0, jeq_else.51007
+fjne_cont.43354:
+	jne	%g8, %g0, jeq_else.43367
 	fldi	%f2, %g9, -4
-	fjeq	%f2, %f16, fjne_else.51009
+	fjeq	%f2, %f16, fjne_else.43369
 	ldi	%g5, %g7, -16
 	ldi	%g3, %g7, -24
-	fjlt	%f2, %f16, fjge_else.51011
+	fjlt	%f2, %f16, fjge_else.43371
 	addi	%g6, %g0, 0
-	jmp	fjge_cont.51012
-fjge_else.51011:
+	jmp	fjge_cont.43372
+fjge_else.43371:
 	addi	%g6, %g0, 1
-fjge_cont.51012:
+fjge_cont.43372:
 	fldi	%f1, %g5, -4
-	jne	%g3, %g6, jeq_else.51013
+	jne	%g3, %g6, jeq_else.43373
 	fneg	%f0, %f1
-	jmp	jeq_cont.51014
-jeq_else.51013:
+	jmp	jeq_cont.43374
+jeq_else.43373:
 	fmov	%f0, %f1
-jeq_cont.51014:
+jeq_cont.43374:
 	fsub	%f0, %f0, %f7
 	fdiv	%f2, %f0, %f2
 	fldi	%f0, %g9, -8
 	fmul	%f0, %f2, %f0
 	fadd	%f1, %f0, %f5
-	fjlt	%f1, %f16, fjge_else.51015
+	fjlt	%f1, %f16, fjge_else.43375
 	fmov	%f0, %f1
-	jmp	fjge_cont.51016
-fjge_else.51015:
+	jmp	fjge_cont.43376
+fjge_else.43375:
 	fneg	%f0, %f1
-fjge_cont.51016:
+fjge_cont.43376:
 	fldi	%f1, %g5, -8
-	fjlt	%f0, %f1, fjge_else.51017
+	fjlt	%f0, %f1, fjge_else.43377
 	addi	%g8, %g0, 0
-	jmp	fjge_cont.51018
-fjge_else.51017:
+	jmp	fjge_cont.43378
+fjge_else.43377:
 	fldi	%f0, %g9, 0
 	fmul	%f0, %f2, %f0
 	fadd	%f1, %f0, %f6
-	fjlt	%f1, %f16, fjge_else.51019
+	fjlt	%f1, %f16, fjge_else.43379
 	fmov	%f0, %f1
-	jmp	fjge_cont.51020
-fjge_else.51019:
+	jmp	fjge_cont.43380
+fjge_else.43379:
 	fneg	%f0, %f1
-fjge_cont.51020:
+fjge_cont.43380:
 	fldi	%f1, %g5, 0
-	fjlt	%f0, %f1, fjge_else.51021
+	fjlt	%f0, %f1, fjge_else.43381
 	addi	%g8, %g0, 0
-	jmp	fjge_cont.51022
-fjge_else.51021:
+	jmp	fjge_cont.43382
+fjge_else.43381:
 	fsti	%f2, %g31, 520
 	addi	%g8, %g0, 1
-fjge_cont.51022:
-fjge_cont.51018:
-	jmp	fjne_cont.51010
-fjne_else.51009:
+fjge_cont.43382:
+fjge_cont.43378:
+	jmp	fjne_cont.43370
+fjne_else.43369:
 	addi	%g8, %g0, 0
-fjne_cont.51010:
-	jne	%g8, %g0, jeq_else.51023
+fjne_cont.43370:
+	jne	%g8, %g0, jeq_else.43383
 	fldi	%f2, %g9, -8
-	fjeq	%f2, %f16, fjne_else.51025
+	fjeq	%f2, %f16, fjne_else.43385
 	ldi	%g5, %g7, -16
 	ldi	%g3, %g7, -24
-	fjlt	%f2, %f16, fjge_else.51027
+	fjlt	%f2, %f16, fjge_else.43387
 	addi	%g6, %g0, 0
-	jmp	fjge_cont.51028
-fjge_else.51027:
+	jmp	fjge_cont.43388
+fjge_else.43387:
 	addi	%g6, %g0, 1
-fjge_cont.51028:
+fjge_cont.43388:
 	fldi	%f1, %g5, -8
-	jne	%g3, %g6, jeq_else.51029
+	jne	%g3, %g6, jeq_else.43389
 	fneg	%f0, %f1
-	jmp	jeq_cont.51030
-jeq_else.51029:
+	jmp	jeq_cont.43390
+jeq_else.43389:
 	fmov	%f0, %f1
-jeq_cont.51030:
+jeq_cont.43390:
 	fsub	%f0, %f0, %f5
 	fdiv	%f2, %f0, %f2
 	fldi	%f0, %g9, 0
 	fmul	%f0, %f2, %f0
 	fadd	%f1, %f0, %f6
-	fjlt	%f1, %f16, fjge_else.51031
+	fjlt	%f1, %f16, fjge_else.43391
 	fmov	%f0, %f1
-	jmp	fjge_cont.51032
-fjge_else.51031:
+	jmp	fjge_cont.43392
+fjge_else.43391:
 	fneg	%f0, %f1
-fjge_cont.51032:
+fjge_cont.43392:
 	fldi	%f1, %g5, 0
-	fjlt	%f0, %f1, fjge_else.51033
+	fjlt	%f0, %f1, fjge_else.43393
 	addi	%g8, %g0, 0
-	jmp	fjge_cont.51034
-fjge_else.51033:
+	jmp	fjge_cont.43394
+fjge_else.43393:
 	fldi	%f0, %g9, -4
 	fmul	%f0, %f2, %f0
 	fadd	%f1, %f0, %f7
-	fjlt	%f1, %f16, fjge_else.51035
+	fjlt	%f1, %f16, fjge_else.43395
 	fmov	%f0, %f1
-	jmp	fjge_cont.51036
-fjge_else.51035:
+	jmp	fjge_cont.43396
+fjge_else.43395:
 	fneg	%f0, %f1
-fjge_cont.51036:
+fjge_cont.43396:
 	fldi	%f1, %g5, -4
-	fjlt	%f0, %f1, fjge_else.51037
+	fjlt	%f0, %f1, fjge_else.43397
 	addi	%g8, %g0, 0
-	jmp	fjge_cont.51038
-fjge_else.51037:
+	jmp	fjge_cont.43398
+fjge_else.43397:
 	fsti	%f2, %g31, 520
 	addi	%g8, %g0, 1
-fjge_cont.51038:
-fjge_cont.51034:
-	jmp	fjne_cont.51026
-fjne_else.51025:
+fjge_cont.43398:
+fjge_cont.43394:
+	jmp	fjne_cont.43386
+fjne_else.43385:
 	addi	%g8, %g0, 0
-fjne_cont.51026:
-	jne	%g8, %g0, jeq_else.51039
+fjne_cont.43386:
+	jne	%g8, %g0, jeq_else.43399
 	addi	%g8, %g0, 0
-	jmp	jeq_cont.51040
-jeq_else.51039:
+	jmp	jeq_cont.43400
+jeq_else.43399:
 	addi	%g8, %g0, 3
-jeq_cont.51040:
-	jmp	jeq_cont.51024
-jeq_else.51023:
+jeq_cont.43400:
+	jmp	jeq_cont.43384
+jeq_else.43383:
 	addi	%g8, %g0, 2
-jeq_cont.51024:
-	jmp	jeq_cont.51008
-jeq_else.51007:
+jeq_cont.43384:
+	jmp	jeq_cont.43368
+jeq_else.43367:
 	addi	%g8, %g0, 1
-jeq_cont.51008:
-	jmp	jeq_cont.50992
-jeq_else.50991:
+jeq_cont.43368:
+	jmp	jeq_cont.43352
+jeq_else.43351:
 	addi	%g8, %g0, 2
-	jne	%g3, %g8, jeq_else.51041
+	jne	%g3, %g8, jeq_else.43401
 	ldi	%g3, %g7, -16
 	fldi	%f0, %g9, 0
 	fldi	%f4, %g3, 0
@@ -11259,10 +8207,10 @@ jeq_else.50991:
 	fldi	%f1, %g3, -8
 	fmul	%f0, %f0, %f1
 	fadd	%f0, %f2, %f0
-	fjlt	%f16, %f0, fjge_else.51043
+	fjlt	%f16, %f0, fjge_else.43403
 	addi	%g8, %g0, 0
-	jmp	fjge_cont.51044
-fjge_else.51043:
+	jmp	fjge_cont.43404
+fjge_else.43403:
 	fmul	%f4, %f4, %f6
 	fmul	%f2, %f3, %f7
 	fadd	%f2, %f4, %f2
@@ -11272,9 +8220,9 @@ fjge_else.51043:
 	fdiv	%f0, %f1, %f0
 	fsti	%f0, %g31, 520
 	addi	%g8, %g0, 1
-fjge_cont.51044:
-	jmp	jeq_cont.51042
-jeq_else.51041:
+fjge_cont.43404:
+	jmp	jeq_cont.43402
+jeq_else.43401:
 	fldi	%f1, %g9, 0
 	fldi	%f2, %g9, -4
 	fldi	%f0, %g9, -8
@@ -11291,10 +8239,10 @@ jeq_else.51041:
 	fmul	%f3, %f3, %f11
 	fadd	%f3, %f4, %f3
 	ldi	%g6, %g7, -12
-	jne	%g6, %g0, jeq_else.51045
+	jne	%g6, %g0, jeq_else.43405
 	fmov	%f9, %f3
-	jmp	jeq_cont.51046
-jeq_else.51045:
+	jmp	jeq_cont.43406
+jeq_else.43405:
 	fmul	%f8, %f2, %f0
 	ldi	%g5, %g7, -36
 	fldi	%f4, %g5, 0
@@ -11308,8 +8256,8 @@ jeq_else.51045:
 	fldi	%f3, %g5, -8
 	fmul	%f9, %f4, %f3
 	fadd	%f9, %f8, %f9
-jeq_cont.51046:
-	fjeq	%f9, %f16, fjne_else.51047
+jeq_cont.43406:
+	fjeq	%f9, %f16, fjne_else.43407
 	fmul	%f3, %f1, %f6
 	fmul	%f4, %f3, %f10
 	fmul	%f3, %f2, %f7
@@ -11318,10 +8266,10 @@ jeq_cont.51046:
 	fmul	%f3, %f0, %f5
 	fmul	%f3, %f3, %f11
 	fadd	%f8, %f4, %f3
-	jne	%g6, %g0, jeq_else.51049
+	jne	%g6, %g0, jeq_else.43409
 	fmov	%f3, %f8
-	jmp	jeq_cont.51050
-jeq_else.51049:
+	jmp	jeq_cont.43410
+jeq_else.43409:
 	fmul	%f4, %f0, %f7
 	fmul	%f3, %f2, %f5
 	fadd	%f4, %f4, %f3
@@ -11342,7 +8290,7 @@ jeq_else.51049:
 	fadd	%f0, %f0, %f1
 	fmul	%f3, %f0, %f21
 	fadd	%f3, %f8, %f3
-jeq_cont.51050:
+jeq_cont.43410:
 	fmul	%f0, %f6, %f6
 	fmul	%f1, %f0, %f10
 	fmul	%f0, %f7, %f7
@@ -11351,10 +8299,10 @@ jeq_cont.51050:
 	fmul	%f0, %f5, %f5
 	fmul	%f0, %f0, %f11
 	fadd	%f1, %f1, %f0
-	jne	%g6, %g0, jeq_else.51051
+	jne	%g6, %g0, jeq_else.43411
 	fmov	%f0, %f1
-	jmp	jeq_cont.51052
-jeq_else.51051:
+	jmp	jeq_cont.43412
+jeq_else.43411:
 	fmul	%f2, %f7, %f5
 	ldi	%g5, %g7, -36
 	fldi	%f0, %g5, 0
@@ -11368,61 +8316,61 @@ jeq_else.51051:
 	fldi	%f0, %g5, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-jeq_cont.51052:
+jeq_cont.43412:
 	addi	%g5, %g0, 3
-	jne	%g3, %g5, jeq_else.51053
+	jne	%g3, %g5, jeq_else.43413
 	fsub	%f1, %f0, %f17
-	jmp	jeq_cont.51054
-jeq_else.51053:
+	jmp	jeq_cont.43414
+jeq_else.43413:
 	fmov	%f1, %f0
-jeq_cont.51054:
+jeq_cont.43414:
 	fmul	%f2, %f3, %f3
 	fmul	%f0, %f9, %f1
 	fsub	%f0, %f2, %f0
-	fjlt	%f16, %f0, fjge_else.51055
+	fjlt	%f16, %f0, fjge_else.43415
 	addi	%g8, %g0, 0
-	jmp	fjge_cont.51056
-fjge_else.51055:
+	jmp	fjge_cont.43416
+fjge_else.43415:
 	fsqrt	%f0, %f0
 	ldi	%g3, %g7, -24
-	jne	%g3, %g0, jeq_else.51057
+	jne	%g3, %g0, jeq_else.43417
 	fneg	%f1, %f0
-	jmp	jeq_cont.51058
-jeq_else.51057:
+	jmp	jeq_cont.43418
+jeq_else.43417:
 	fmov	%f1, %f0
-jeq_cont.51058:
+jeq_cont.43418:
 	fsub	%f0, %f1, %f3
 	fdiv	%f0, %f0, %f9
 	fsti	%f0, %g31, 520
 	addi	%g8, %g0, 1
-fjge_cont.51056:
-	jmp	fjne_cont.51048
-fjne_else.51047:
+fjge_cont.43416:
+	jmp	fjne_cont.43408
+fjne_else.43407:
 	addi	%g8, %g0, 0
-fjne_cont.51048:
-jeq_cont.51042:
-jeq_cont.50992:
-	jne	%g8, %g0, jeq_else.51059
+fjne_cont.43408:
+jeq_cont.43402:
+jeq_cont.43352:
+	jne	%g8, %g0, jeq_else.43419
 	slli	%g3, %g10, 2
 	add	%g3, %g31, %g3
 	ldi	%g3, %g3, 272
 	ldi	%g3, %g3, -24
-	jne	%g3, %g0, jeq_else.51060
+	jne	%g3, %g0, jeq_else.43420
 	return
-jeq_else.51060:
+jeq_else.43420:
 	addi	%g11, %g11, 1
-	jmp	solve_each_element.2846
-jeq_else.51059:
+	jmp	solve_each_element.2863
+jeq_else.43419:
 	fldi	%f0, %g31, 520
 	sti	%g4, %g1, 0
-	fjlt	%f16, %f0, fjge_else.51062
-	jmp	fjge_cont.51063
-fjge_else.51062:
+	fjlt	%f16, %f0, fjge_else.43422
+	jmp	fjge_cont.43423
+fjge_else.43422:
 	fldi	%f1, %g31, 528
-	fjlt	%f0, %f1, fjge_else.51064
-	jmp	fjge_cont.51065
-fjge_else.51064:
-	setL %g3, l.44095
+	fjlt	%f0, %f1, fjge_else.43424
+	jmp	fjge_cont.43425
+fjge_else.43424:
+	setL %g3, l.36805
 	fldi	%f1, %g3, 0
 	fadd	%f9, %f0, %f1
 	fldi	%f0, %g9, 0
@@ -11441,10 +8389,10 @@ fjge_else.51064:
 	fsti	%f3, %g1, 4
 	fsti	%f4, %g1, 8
 	fsti	%f5, %g1, 12
-	jne	%g5, %g29, jeq_else.51066
+	jne	%g5, %g29, jeq_else.43426
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.51067
-jeq_else.51066:
+	jmp	jeq_cont.43427
+jeq_else.43426:
 	slli	%g3, %g5, 2
 	add	%g3, %g31, %g3
 	ldi	%g6, %g3, 272
@@ -11456,61 +8404,61 @@ jeq_else.51066:
 	fldi	%f1, %g3, -8
 	fsub	%f1, %f3, %f1
 	ldi	%g5, %g6, -4
-	jne	%g5, %g28, jeq_else.51068
-	fjlt	%f0, %f16, fjge_else.51070
+	jne	%g5, %g28, jeq_else.43428
+	fjlt	%f0, %f16, fjge_else.43430
 	fmov	%f6, %f0
-	jmp	fjge_cont.51071
-fjge_else.51070:
+	jmp	fjge_cont.43431
+fjge_else.43430:
 	fneg	%f6, %f0
-fjge_cont.51071:
+fjge_cont.43431:
 	ldi	%g3, %g6, -16
 	fldi	%f0, %g3, 0
-	fjlt	%f6, %f0, fjge_else.51072
+	fjlt	%f6, %f0, fjge_else.43432
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.51073
-fjge_else.51072:
-	fjlt	%f2, %f16, fjge_else.51074
+	jmp	fjge_cont.43433
+fjge_else.43432:
+	fjlt	%f2, %f16, fjge_else.43434
 	fmov	%f0, %f2
-	jmp	fjge_cont.51075
-fjge_else.51074:
+	jmp	fjge_cont.43435
+fjge_else.43434:
 	fneg	%f0, %f2
-fjge_cont.51075:
+fjge_cont.43435:
 	fldi	%f2, %g3, -4
-	fjlt	%f0, %f2, fjge_else.51076
+	fjlt	%f0, %f2, fjge_else.43436
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.51077
-fjge_else.51076:
-	fjlt	%f1, %f16, fjge_else.51078
+	jmp	fjge_cont.43437
+fjge_else.43436:
+	fjlt	%f1, %f16, fjge_else.43438
 	fmov	%f0, %f1
-	jmp	fjge_cont.51079
-fjge_else.51078:
+	jmp	fjge_cont.43439
+fjge_else.43438:
 	fneg	%f0, %f1
-fjge_cont.51079:
+fjge_cont.43439:
 	fldi	%f1, %g3, -8
-	fjlt	%f0, %f1, fjge_else.51080
+	fjlt	%f0, %f1, fjge_else.43440
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.51081
-fjge_else.51080:
+	jmp	fjge_cont.43441
+fjge_else.43440:
 	addi	%g5, %g0, 1
-fjge_cont.51081:
-fjge_cont.51077:
-fjge_cont.51073:
-	jne	%g5, %g0, jeq_else.51082
+fjge_cont.43441:
+fjge_cont.43437:
+fjge_cont.43433:
+	jne	%g5, %g0, jeq_else.43442
 	ldi	%g3, %g6, -24
-	jne	%g3, %g0, jeq_else.51084
+	jne	%g3, %g0, jeq_else.43444
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.51085
-jeq_else.51084:
+	jmp	jeq_cont.43445
+jeq_else.43444:
 	addi	%g3, %g0, 0
-jeq_cont.51085:
-	jmp	jeq_cont.51083
-jeq_else.51082:
+jeq_cont.43445:
+	jmp	jeq_cont.43443
+jeq_else.43442:
 	ldi	%g3, %g6, -24
-jeq_cont.51083:
-	jmp	jeq_cont.51069
-jeq_else.51068:
+jeq_cont.43443:
+	jmp	jeq_cont.43429
+jeq_else.43428:
 	addi	%g3, %g0, 2
-	jne	%g5, %g3, jeq_else.51086
+	jne	%g5, %g3, jeq_else.43446
 	ldi	%g3, %g6, -16
 	fldi	%f6, %g3, 0
 	fmul	%f6, %f6, %f0
@@ -11521,20 +8469,20 @@ jeq_else.51068:
 	fmul	%f0, %f0, %f1
 	fadd	%f0, %f2, %f0
 	ldi	%g3, %g6, -24
-	fjlt	%f0, %f16, fjge_else.51088
+	fjlt	%f0, %f16, fjge_else.43448
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.51089
-fjge_else.51088:
+	jmp	fjge_cont.43449
+fjge_else.43448:
 	addi	%g5, %g0, 1
-fjge_cont.51089:
-	jne	%g3, %g5, jeq_else.51090
+fjge_cont.43449:
+	jne	%g3, %g5, jeq_else.43450
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.51091
-jeq_else.51090:
+	jmp	jeq_cont.43451
+jeq_else.43450:
 	addi	%g3, %g0, 0
-jeq_cont.51091:
-	jmp	jeq_cont.51087
-jeq_else.51086:
+jeq_cont.43451:
+	jmp	jeq_cont.43447
+jeq_else.43446:
 	fmul	%f7, %f0, %f0
 	ldi	%g3, %g6, -16
 	fldi	%f6, %g3, 0
@@ -11548,10 +8496,10 @@ jeq_else.51086:
 	fmul	%f6, %f7, %f6
 	fadd	%f7, %f8, %f6
 	ldi	%g3, %g6, -12
-	jne	%g3, %g0, jeq_else.51092
+	jne	%g3, %g0, jeq_else.43452
 	fmov	%f6, %f7
-	jmp	jeq_cont.51093
-jeq_else.51092:
+	jmp	jeq_cont.43453
+jeq_else.43452:
 	fmul	%f8, %f2, %f1
 	ldi	%g3, %g6, -36
 	fldi	%f6, %g3, 0
@@ -11565,42 +8513,42 @@ jeq_else.51092:
 	fldi	%f0, %g3, -8
 	fmul	%f6, %f1, %f0
 	fadd	%f6, %f7, %f6
-jeq_cont.51093:
+jeq_cont.43453:
 	addi	%g3, %g0, 3
-	jne	%g5, %g3, jeq_else.51094
+	jne	%g5, %g3, jeq_else.43454
 	fsub	%f0, %f6, %f17
-	jmp	jeq_cont.51095
-jeq_else.51094:
+	jmp	jeq_cont.43455
+jeq_else.43454:
 	fmov	%f0, %f6
-jeq_cont.51095:
+jeq_cont.43455:
 	ldi	%g3, %g6, -24
-	fjlt	%f0, %f16, fjge_else.51096
+	fjlt	%f0, %f16, fjge_else.43456
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.51097
-fjge_else.51096:
+	jmp	fjge_cont.43457
+fjge_else.43456:
 	addi	%g5, %g0, 1
-fjge_cont.51097:
-	jne	%g3, %g5, jeq_else.51098
+fjge_cont.43457:
+	jne	%g3, %g5, jeq_else.43458
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.51099
-jeq_else.51098:
+	jmp	jeq_cont.43459
+jeq_else.43458:
 	addi	%g3, %g0, 0
-jeq_cont.51099:
-jeq_cont.51087:
-jeq_cont.51069:
-	jne	%g3, %g0, jeq_else.51100
+jeq_cont.43459:
+jeq_cont.43447:
+jeq_cont.43429:
+	jne	%g3, %g0, jeq_else.43460
 	addi	%g5, %g0, 1
 	subi	%g1, %g1, 20
-	call	check_all_inside.2831
+	call	check_all_inside.2848
 	addi	%g1, %g1, 20
-	jmp	jeq_cont.51101
-jeq_else.51100:
-	addi	%g3, %g0, 0
-jeq_cont.51101:
-jeq_cont.51067:
-	jne	%g3, %g0, jeq_else.51102
-	jmp	jeq_cont.51103
-jeq_else.51102:
+	jmp	jeq_cont.43461
+jeq_else.43460:
+	addi	%g3, %g0, 0
+jeq_cont.43461:
+jeq_cont.43427:
+	jne	%g3, %g0, jeq_else.43462
+	jmp	jeq_cont.43463
+jeq_else.43462:
 	fsti	%f9, %g31, 528
 	fldi	%f5, %g1, 12
 	fsti	%f5, %g31, 540
@@ -11610,12 +8558,12 @@ jeq_else.51102:
 	fsti	%f3, %g31, 532
 	sti	%g10, %g31, 544
 	sti	%g8, %g31, 524
-jeq_cont.51103:
-fjge_cont.51065:
-fjge_cont.51063:
+jeq_cont.43463:
+fjge_cont.43425:
+fjge_cont.43423:
 	addi	%g11, %g11, 1
 	ldi	%g4, %g1, 0
-	jmp	solve_each_element.2846
+	jmp	solve_each_element.2863
 
 !==============================
 ! args = [%g13, %g12, %g9]
@@ -11623,121 +8571,121 @@ fjge_cont.51063:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f21, %f2, %f17, %f16, %f15, %f12, %f11, %f10, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-solve_one_or_network.2850:
+solve_one_or_network.2867:
 	slli	%g3, %g13, 2
 	ld	%g3, %g12, %g3
-	jne	%g3, %g29, jeq_else.51104
+	jne	%g3, %g29, jeq_else.43464
 	return
-jeq_else.51104:
+jeq_else.43464:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	sti	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	addi	%g13, %g13, 1
 	slli	%g3, %g13, 2
 	ld	%g3, %g12, %g3
-	jne	%g3, %g29, jeq_else.51106
+	jne	%g3, %g29, jeq_else.43466
 	return
-jeq_else.51106:
+jeq_else.43466:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	addi	%g13, %g13, 1
 	slli	%g3, %g13, 2
 	ld	%g3, %g12, %g3
-	jne	%g3, %g29, jeq_else.51108
+	jne	%g3, %g29, jeq_else.43468
 	return
-jeq_else.51108:
+jeq_else.43468:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	addi	%g13, %g13, 1
 	slli	%g3, %g13, 2
 	ld	%g3, %g12, %g3
-	jne	%g3, %g29, jeq_else.51110
+	jne	%g3, %g29, jeq_else.43470
 	return
-jeq_else.51110:
+jeq_else.43470:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	addi	%g13, %g13, 1
 	slli	%g3, %g13, 2
 	ld	%g3, %g12, %g3
-	jne	%g3, %g29, jeq_else.51112
+	jne	%g3, %g29, jeq_else.43472
 	return
-jeq_else.51112:
+jeq_else.43472:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	addi	%g13, %g13, 1
 	slli	%g3, %g13, 2
 	ld	%g3, %g12, %g3
-	jne	%g3, %g29, jeq_else.51114
+	jne	%g3, %g29, jeq_else.43474
 	return
-jeq_else.51114:
+jeq_else.43474:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	addi	%g13, %g13, 1
 	slli	%g3, %g13, 2
 	ld	%g3, %g12, %g3
-	jne	%g3, %g29, jeq_else.51116
+	jne	%g3, %g29, jeq_else.43476
 	return
-jeq_else.51116:
+jeq_else.43476:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	addi	%g13, %g13, 1
 	slli	%g3, %g13, 2
 	ld	%g3, %g12, %g3
-	jne	%g3, %g29, jeq_else.51118
+	jne	%g3, %g29, jeq_else.43478
 	return
-jeq_else.51118:
+jeq_else.43478:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	addi	%g13, %g13, 1
 	ldi	%g9, %g1, 0
-	jmp	solve_one_or_network.2850
+	jmp	solve_one_or_network.2867
 
 !==============================
 ! args = [%g14, %g15, %g9]
@@ -11745,113 +8693,113 @@ jeq_else.51118:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f21, %f2, %f17, %f16, %f15, %f12, %f11, %f10, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-trace_or_matrix.2854:
+trace_or_matrix.2871:
 	slli	%g3, %g14, 2
 	ld	%g12, %g15, %g3
 	ldi	%g3, %g12, 0
-	jne	%g3, %g29, jeq_else.51120
+	jne	%g3, %g29, jeq_else.43480
 	return
-jeq_else.51120:
+jeq_else.43480:
 	addi	%g4, %g0, 99
 	sti	%g9, %g1, 0
-	jne	%g3, %g4, jeq_else.51122
+	jne	%g3, %g4, jeq_else.43482
 	ldi	%g3, %g12, -4
-	jne	%g3, %g29, jeq_else.51124
-	jmp	jeq_cont.51125
-jeq_else.51124:
+	jne	%g3, %g29, jeq_else.43484
+	jmp	jeq_cont.43485
+jeq_else.43484:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	ldi	%g3, %g12, -8
-	jne	%g3, %g29, jeq_else.51126
-	jmp	jeq_cont.51127
-jeq_else.51126:
+	jne	%g3, %g29, jeq_else.43486
+	jmp	jeq_cont.43487
+jeq_else.43486:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	ldi	%g3, %g12, -12
-	jne	%g3, %g29, jeq_else.51128
-	jmp	jeq_cont.51129
-jeq_else.51128:
+	jne	%g3, %g29, jeq_else.43488
+	jmp	jeq_cont.43489
+jeq_else.43488:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	ldi	%g3, %g12, -16
-	jne	%g3, %g29, jeq_else.51130
-	jmp	jeq_cont.51131
-jeq_else.51130:
+	jne	%g3, %g29, jeq_else.43490
+	jmp	jeq_cont.43491
+jeq_else.43490:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	ldi	%g3, %g12, -20
-	jne	%g3, %g29, jeq_else.51132
-	jmp	jeq_cont.51133
-jeq_else.51132:
+	jne	%g3, %g29, jeq_else.43492
+	jmp	jeq_cont.43493
+jeq_else.43492:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	ldi	%g3, %g12, -24
-	jne	%g3, %g29, jeq_else.51134
-	jmp	jeq_cont.51135
-jeq_else.51134:
+	jne	%g3, %g29, jeq_else.43494
+	jmp	jeq_cont.43495
+jeq_else.43494:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	ldi	%g3, %g12, -28
-	jne	%g3, %g29, jeq_else.51136
-	jmp	jeq_cont.51137
-jeq_else.51136:
+	jne	%g3, %g29, jeq_else.43496
+	jmp	jeq_cont.43497
+jeq_else.43496:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	addi	%g13, %g0, 8
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_one_or_network.2850
+	call	solve_one_or_network.2867
 	addi	%g1, %g1, 8
-jeq_cont.51137:
-jeq_cont.51135:
-jeq_cont.51133:
-jeq_cont.51131:
-jeq_cont.51129:
-jeq_cont.51127:
-jeq_cont.51125:
-	jmp	jeq_cont.51123
-jeq_else.51122:
+jeq_cont.43497:
+jeq_cont.43495:
+jeq_cont.43493:
+jeq_cont.43491:
+jeq_cont.43489:
+jeq_cont.43487:
+jeq_cont.43485:
+	jmp	jeq_cont.43483
+jeq_else.43482:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g6, %g3, 272
@@ -11866,192 +8814,192 @@ jeq_else.51122:
 	fldi	%f0, %g3, -8
 	fsub	%f4, %f1, %f0
 	ldi	%g4, %g6, -4
-	jne	%g4, %g28, jeq_else.51138
+	jne	%g4, %g28, jeq_else.43498
 	fldi	%f2, %g9, 0
-	fjeq	%f2, %f16, fjne_else.51140
+	fjeq	%f2, %f16, fjne_else.43500
 	ldi	%g4, %g6, -16
 	ldi	%g3, %g6, -24
-	fjlt	%f2, %f16, fjge_else.51142
+	fjlt	%f2, %f16, fjge_else.43502
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.51143
-fjge_else.51142:
+	jmp	fjge_cont.43503
+fjge_else.43502:
 	addi	%g5, %g0, 1
-fjge_cont.51143:
+fjge_cont.43503:
 	fldi	%f1, %g4, 0
-	jne	%g3, %g5, jeq_else.51144
+	jne	%g3, %g5, jeq_else.43504
 	fneg	%f0, %f1
-	jmp	jeq_cont.51145
-jeq_else.51144:
+	jmp	jeq_cont.43505
+jeq_else.43504:
 	fmov	%f0, %f1
-jeq_cont.51145:
+jeq_cont.43505:
 	fsub	%f0, %f0, %f5
 	fdiv	%f2, %f0, %f2
 	fldi	%f0, %g9, -4
 	fmul	%f0, %f2, %f0
 	fadd	%f1, %f0, %f6
-	fjlt	%f1, %f16, fjge_else.51146
+	fjlt	%f1, %f16, fjge_else.43506
 	fmov	%f0, %f1
-	jmp	fjge_cont.51147
-fjge_else.51146:
+	jmp	fjge_cont.43507
+fjge_else.43506:
 	fneg	%f0, %f1
-fjge_cont.51147:
+fjge_cont.43507:
 	fldi	%f1, %g4, -4
-	fjlt	%f0, %f1, fjge_else.51148
+	fjlt	%f0, %f1, fjge_else.43508
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51149
-fjge_else.51148:
+	jmp	fjge_cont.43509
+fjge_else.43508:
 	fldi	%f0, %g9, -8
 	fmul	%f0, %f2, %f0
 	fadd	%f1, %f0, %f4
-	fjlt	%f1, %f16, fjge_else.51150
+	fjlt	%f1, %f16, fjge_else.43510
 	fmov	%f0, %f1
-	jmp	fjge_cont.51151
-fjge_else.51150:
+	jmp	fjge_cont.43511
+fjge_else.43510:
 	fneg	%f0, %f1
-fjge_cont.51151:
+fjge_cont.43511:
 	fldi	%f1, %g4, -8
-	fjlt	%f0, %f1, fjge_else.51152
+	fjlt	%f0, %f1, fjge_else.43512
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51153
-fjge_else.51152:
+	jmp	fjge_cont.43513
+fjge_else.43512:
 	fsti	%f2, %g31, 520
 	addi	%g3, %g0, 1
-fjge_cont.51153:
-fjge_cont.51149:
-	jmp	fjne_cont.51141
-fjne_else.51140:
+fjge_cont.43513:
+fjge_cont.43509:
+	jmp	fjne_cont.43501
+fjne_else.43500:
 	addi	%g3, %g0, 0
-fjne_cont.51141:
-	jne	%g3, %g0, jeq_else.51154
+fjne_cont.43501:
+	jne	%g3, %g0, jeq_else.43514
 	fldi	%f2, %g9, -4
-	fjeq	%f2, %f16, fjne_else.51156
+	fjeq	%f2, %f16, fjne_else.43516
 	ldi	%g4, %g6, -16
 	ldi	%g3, %g6, -24
-	fjlt	%f2, %f16, fjge_else.51158
+	fjlt	%f2, %f16, fjge_else.43518
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.51159
-fjge_else.51158:
+	jmp	fjge_cont.43519
+fjge_else.43518:
 	addi	%g5, %g0, 1
-fjge_cont.51159:
+fjge_cont.43519:
 	fldi	%f1, %g4, -4
-	jne	%g3, %g5, jeq_else.51160
+	jne	%g3, %g5, jeq_else.43520
 	fneg	%f0, %f1
-	jmp	jeq_cont.51161
-jeq_else.51160:
+	jmp	jeq_cont.43521
+jeq_else.43520:
 	fmov	%f0, %f1
-jeq_cont.51161:
+jeq_cont.43521:
 	fsub	%f0, %f0, %f6
 	fdiv	%f2, %f0, %f2
 	fldi	%f0, %g9, -8
 	fmul	%f0, %f2, %f0
 	fadd	%f1, %f0, %f4
-	fjlt	%f1, %f16, fjge_else.51162
+	fjlt	%f1, %f16, fjge_else.43522
 	fmov	%f0, %f1
-	jmp	fjge_cont.51163
-fjge_else.51162:
+	jmp	fjge_cont.43523
+fjge_else.43522:
 	fneg	%f0, %f1
-fjge_cont.51163:
+fjge_cont.43523:
 	fldi	%f1, %g4, -8
-	fjlt	%f0, %f1, fjge_else.51164
+	fjlt	%f0, %f1, fjge_else.43524
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51165
-fjge_else.51164:
+	jmp	fjge_cont.43525
+fjge_else.43524:
 	fldi	%f0, %g9, 0
 	fmul	%f0, %f2, %f0
 	fadd	%f1, %f0, %f5
-	fjlt	%f1, %f16, fjge_else.51166
+	fjlt	%f1, %f16, fjge_else.43526
 	fmov	%f0, %f1
-	jmp	fjge_cont.51167
-fjge_else.51166:
+	jmp	fjge_cont.43527
+fjge_else.43526:
 	fneg	%f0, %f1
-fjge_cont.51167:
+fjge_cont.43527:
 	fldi	%f1, %g4, 0
-	fjlt	%f0, %f1, fjge_else.51168
+	fjlt	%f0, %f1, fjge_else.43528
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51169
-fjge_else.51168:
+	jmp	fjge_cont.43529
+fjge_else.43528:
 	fsti	%f2, %g31, 520
 	addi	%g3, %g0, 1
-fjge_cont.51169:
-fjge_cont.51165:
-	jmp	fjne_cont.51157
-fjne_else.51156:
+fjge_cont.43529:
+fjge_cont.43525:
+	jmp	fjne_cont.43517
+fjne_else.43516:
 	addi	%g3, %g0, 0
-fjne_cont.51157:
-	jne	%g3, %g0, jeq_else.51170
+fjne_cont.43517:
+	jne	%g3, %g0, jeq_else.43530
 	fldi	%f2, %g9, -8
-	fjeq	%f2, %f16, fjne_else.51172
+	fjeq	%f2, %f16, fjne_else.43532
 	ldi	%g4, %g6, -16
 	ldi	%g3, %g6, -24
-	fjlt	%f2, %f16, fjge_else.51174
+	fjlt	%f2, %f16, fjge_else.43534
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.51175
-fjge_else.51174:
+	jmp	fjge_cont.43535
+fjge_else.43534:
 	addi	%g5, %g0, 1
-fjge_cont.51175:
+fjge_cont.43535:
 	fldi	%f1, %g4, -8
-	jne	%g3, %g5, jeq_else.51176
+	jne	%g3, %g5, jeq_else.43536
 	fneg	%f0, %f1
-	jmp	jeq_cont.51177
-jeq_else.51176:
+	jmp	jeq_cont.43537
+jeq_else.43536:
 	fmov	%f0, %f1
-jeq_cont.51177:
+jeq_cont.43537:
 	fsub	%f0, %f0, %f4
 	fdiv	%f2, %f0, %f2
 	fldi	%f0, %g9, 0
 	fmul	%f0, %f2, %f0
 	fadd	%f1, %f0, %f5
-	fjlt	%f1, %f16, fjge_else.51178
+	fjlt	%f1, %f16, fjge_else.43538
 	fmov	%f0, %f1
-	jmp	fjge_cont.51179
-fjge_else.51178:
+	jmp	fjge_cont.43539
+fjge_else.43538:
 	fneg	%f0, %f1
-fjge_cont.51179:
+fjge_cont.43539:
 	fldi	%f1, %g4, 0
-	fjlt	%f0, %f1, fjge_else.51180
+	fjlt	%f0, %f1, fjge_else.43540
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51181
-fjge_else.51180:
+	jmp	fjge_cont.43541
+fjge_else.43540:
 	fldi	%f0, %g9, -4
 	fmul	%f0, %f2, %f0
 	fadd	%f1, %f0, %f6
-	fjlt	%f1, %f16, fjge_else.51182
+	fjlt	%f1, %f16, fjge_else.43542
 	fmov	%f0, %f1
-	jmp	fjge_cont.51183
-fjge_else.51182:
+	jmp	fjge_cont.43543
+fjge_else.43542:
 	fneg	%f0, %f1
-fjge_cont.51183:
+fjge_cont.43543:
 	fldi	%f1, %g4, -4
-	fjlt	%f0, %f1, fjge_else.51184
+	fjlt	%f0, %f1, fjge_else.43544
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51185
-fjge_else.51184:
+	jmp	fjge_cont.43545
+fjge_else.43544:
 	fsti	%f2, %g31, 520
 	addi	%g3, %g0, 1
-fjge_cont.51185:
-fjge_cont.51181:
-	jmp	fjne_cont.51173
-fjne_else.51172:
+fjge_cont.43545:
+fjge_cont.43541:
+	jmp	fjne_cont.43533
+fjne_else.43532:
 	addi	%g3, %g0, 0
-fjne_cont.51173:
-	jne	%g3, %g0, jeq_else.51186
+fjne_cont.43533:
+	jne	%g3, %g0, jeq_else.43546
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.51187
-jeq_else.51186:
+	jmp	jeq_cont.43547
+jeq_else.43546:
 	addi	%g3, %g0, 3
-jeq_cont.51187:
-	jmp	jeq_cont.51171
-jeq_else.51170:
+jeq_cont.43547:
+	jmp	jeq_cont.43531
+jeq_else.43530:
 	addi	%g3, %g0, 2
-jeq_cont.51171:
-	jmp	jeq_cont.51155
-jeq_else.51154:
+jeq_cont.43531:
+	jmp	jeq_cont.43515
+jeq_else.43514:
 	addi	%g3, %g0, 1
-jeq_cont.51155:
-	jmp	jeq_cont.51139
-jeq_else.51138:
+jeq_cont.43515:
+	jmp	jeq_cont.43499
+jeq_else.43498:
 	addi	%g3, %g0, 2
-	jne	%g4, %g3, jeq_else.51188
+	jne	%g4, %g3, jeq_else.43548
 	ldi	%g3, %g6, -16
 	fldi	%f0, %g9, 0
 	fldi	%f7, %g3, 0
@@ -12064,10 +9012,10 @@ jeq_else.51138:
 	fldi	%f1, %g3, -8
 	fmul	%f0, %f0, %f1
 	fadd	%f0, %f2, %f0
-	fjlt	%f16, %f0, fjge_else.51190
+	fjlt	%f16, %f0, fjge_else.43550
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51191
-fjge_else.51190:
+	jmp	fjge_cont.43551
+fjge_else.43550:
 	fmul	%f5, %f7, %f5
 	fmul	%f2, %f3, %f6
 	fadd	%f2, %f5, %f2
@@ -12077,9 +9025,9 @@ fjge_else.51190:
 	fdiv	%f0, %f1, %f0
 	fsti	%f0, %g31, 520
 	addi	%g3, %g0, 1
-fjge_cont.51191:
-	jmp	jeq_cont.51189
-jeq_else.51188:
+fjge_cont.43551:
+	jmp	jeq_cont.43549
+jeq_else.43548:
 	fldi	%f1, %g9, 0
 	fldi	%f2, %g9, -4
 	fldi	%f0, %g9, -8
@@ -12096,10 +9044,10 @@ jeq_else.51188:
 	fmul	%f3, %f3, %f10
 	fadd	%f3, %f7, %f3
 	ldi	%g5, %g6, -12
-	jne	%g5, %g0, jeq_else.51192
+	jne	%g5, %g0, jeq_else.43552
 	fmov	%f8, %f3
-	jmp	jeq_cont.51193
-jeq_else.51192:
+	jmp	jeq_cont.43553
+jeq_else.43552:
 	fmul	%f8, %f2, %f0
 	ldi	%g3, %g6, -36
 	fldi	%f7, %g3, 0
@@ -12113,8 +9061,8 @@ jeq_else.51192:
 	fldi	%f3, %g3, -8
 	fmul	%f8, %f7, %f3
 	fadd	%f8, %f12, %f8
-jeq_cont.51193:
-	fjeq	%f8, %f16, fjne_else.51194
+jeq_cont.43553:
+	fjeq	%f8, %f16, fjne_else.43554
 	fmul	%f3, %f1, %f5
 	fmul	%f7, %f3, %f9
 	fmul	%f3, %f2, %f6
@@ -12123,10 +9071,10 @@ jeq_cont.51193:
 	fmul	%f3, %f0, %f4
 	fmul	%f3, %f3, %f10
 	fadd	%f7, %f7, %f3
-	jne	%g5, %g0, jeq_else.51196
+	jne	%g5, %g0, jeq_else.43556
 	fmov	%f3, %f7
-	jmp	jeq_cont.51197
-jeq_else.51196:
+	jmp	jeq_cont.43557
+jeq_else.43556:
 	fmul	%f12, %f0, %f6
 	fmul	%f3, %f2, %f4
 	fadd	%f12, %f12, %f3
@@ -12147,7 +9095,7 @@ jeq_else.51196:
 	fadd	%f0, %f0, %f1
 	fmul	%f3, %f0, %f21
 	fadd	%f3, %f7, %f3
-jeq_cont.51197:
+jeq_cont.43557:
 	fmul	%f0, %f5, %f5
 	fmul	%f1, %f0, %f9
 	fmul	%f0, %f6, %f6
@@ -12156,10 +9104,10 @@ jeq_cont.51197:
 	fmul	%f0, %f4, %f4
 	fmul	%f0, %f0, %f10
 	fadd	%f1, %f1, %f0
-	jne	%g5, %g0, jeq_else.51198
+	jne	%g5, %g0, jeq_else.43558
 	fmov	%f0, %f1
-	jmp	jeq_cont.51199
-jeq_else.51198:
+	jmp	jeq_cont.43559
+jeq_else.43558:
 	fmul	%f2, %f6, %f4
 	ldi	%g3, %g6, -36
 	fldi	%f0, %g3, 0
@@ -12173,149 +9121,149 @@ jeq_else.51198:
 	fldi	%f0, %g3, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-jeq_cont.51199:
+jeq_cont.43559:
 	addi	%g3, %g0, 3
-	jne	%g4, %g3, jeq_else.51200
+	jne	%g4, %g3, jeq_else.43560
 	fsub	%f1, %f0, %f17
-	jmp	jeq_cont.51201
-jeq_else.51200:
+	jmp	jeq_cont.43561
+jeq_else.43560:
 	fmov	%f1, %f0
-jeq_cont.51201:
+jeq_cont.43561:
 	fmul	%f2, %f3, %f3
 	fmul	%f0, %f8, %f1
 	fsub	%f0, %f2, %f0
-	fjlt	%f16, %f0, fjge_else.51202
+	fjlt	%f16, %f0, fjge_else.43562
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51203
-fjge_else.51202:
+	jmp	fjge_cont.43563
+fjge_else.43562:
 	fsqrt	%f0, %f0
 	ldi	%g3, %g6, -24
-	jne	%g3, %g0, jeq_else.51204
+	jne	%g3, %g0, jeq_else.43564
 	fneg	%f1, %f0
-	jmp	jeq_cont.51205
-jeq_else.51204:
+	jmp	jeq_cont.43565
+jeq_else.43564:
 	fmov	%f1, %f0
-jeq_cont.51205:
+jeq_cont.43565:
 	fsub	%f0, %f1, %f3
 	fdiv	%f0, %f0, %f8
 	fsti	%f0, %g31, 520
 	addi	%g3, %g0, 1
-fjge_cont.51203:
-	jmp	fjne_cont.51195
-fjne_else.51194:
+fjge_cont.43563:
+	jmp	fjne_cont.43555
+fjne_else.43554:
 	addi	%g3, %g0, 0
-fjne_cont.51195:
-jeq_cont.51189:
-jeq_cont.51139:
-	jne	%g3, %g0, jeq_else.51206
-	jmp	jeq_cont.51207
-jeq_else.51206:
+fjne_cont.43555:
+jeq_cont.43549:
+jeq_cont.43499:
+	jne	%g3, %g0, jeq_else.43566
+	jmp	jeq_cont.43567
+jeq_else.43566:
 	fldi	%f0, %g31, 520
 	fldi	%f1, %g31, 528
-	fjlt	%f0, %f1, fjge_else.51208
-	jmp	fjge_cont.51209
-fjge_else.51208:
+	fjlt	%f0, %f1, fjge_else.43568
+	jmp	fjge_cont.43569
+fjge_else.43568:
 	ldi	%g3, %g12, -4
-	jne	%g3, %g29, jeq_else.51210
-	jmp	jeq_cont.51211
-jeq_else.51210:
+	jne	%g3, %g29, jeq_else.43570
+	jmp	jeq_cont.43571
+jeq_else.43570:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	ldi	%g3, %g12, -8
-	jne	%g3, %g29, jeq_else.51212
-	jmp	jeq_cont.51213
-jeq_else.51212:
+	jne	%g3, %g29, jeq_else.43572
+	jmp	jeq_cont.43573
+jeq_else.43572:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	ldi	%g3, %g12, -12
-	jne	%g3, %g29, jeq_else.51214
-	jmp	jeq_cont.51215
-jeq_else.51214:
+	jne	%g3, %g29, jeq_else.43574
+	jmp	jeq_cont.43575
+jeq_else.43574:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	ldi	%g3, %g12, -16
-	jne	%g3, %g29, jeq_else.51216
-	jmp	jeq_cont.51217
-jeq_else.51216:
+	jne	%g3, %g29, jeq_else.43576
+	jmp	jeq_cont.43577
+jeq_else.43576:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	ldi	%g3, %g12, -20
-	jne	%g3, %g29, jeq_else.51218
-	jmp	jeq_cont.51219
-jeq_else.51218:
+	jne	%g3, %g29, jeq_else.43578
+	jmp	jeq_cont.43579
+jeq_else.43578:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	ldi	%g3, %g12, -24
-	jne	%g3, %g29, jeq_else.51220
-	jmp	jeq_cont.51221
-jeq_else.51220:
+	jne	%g3, %g29, jeq_else.43580
+	jmp	jeq_cont.43581
+jeq_else.43580:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	ldi	%g3, %g12, -28
-	jne	%g3, %g29, jeq_else.51222
-	jmp	jeq_cont.51223
-jeq_else.51222:
+	jne	%g3, %g29, jeq_else.43582
+	jmp	jeq_cont.43583
+jeq_else.43582:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
 	addi	%g11, %g0, 0
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_each_element.2846
+	call	solve_each_element.2863
 	addi	%g1, %g1, 8
 	addi	%g13, %g0, 8
 	ldi	%g9, %g1, 0
 	subi	%g1, %g1, 8
-	call	solve_one_or_network.2850
+	call	solve_one_or_network.2867
 	addi	%g1, %g1, 8
-jeq_cont.51223:
-jeq_cont.51221:
-jeq_cont.51219:
-jeq_cont.51217:
-jeq_cont.51215:
-jeq_cont.51213:
-jeq_cont.51211:
-fjge_cont.51209:
-jeq_cont.51207:
-jeq_cont.51123:
+jeq_cont.43583:
+jeq_cont.43581:
+jeq_cont.43579:
+jeq_cont.43577:
+jeq_cont.43575:
+jeq_cont.43573:
+jeq_cont.43571:
+fjge_cont.43569:
+jeq_cont.43567:
+jeq_cont.43483:
 	addi	%g14, %g14, 1
 	ldi	%g9, %g1, 0
-	jmp	trace_or_matrix.2854
+	jmp	trace_or_matrix.2871
 
 !==============================
 ! args = [%g10, %g4, %g12, %g11]
@@ -12323,12 +9271,12 @@ jeq_cont.51123:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f17, %f16, %f15, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-solve_each_element_fast.2860:
+solve_each_element_fast.2877:
 	slli	%g3, %g10, 2
 	ld	%g9, %g4, %g3
-	jne	%g9, %g29, jeq_else.51224
+	jne	%g9, %g29, jeq_else.43584
 	return
-jeq_else.51224:
+jeq_else.43584:
 	slli	%g3, %g9, 2
 	add	%g3, %g31, %g3
 	ldi	%g6, %g3, 272
@@ -12339,7 +9287,7 @@ jeq_else.51224:
 	slli	%g3, %g9, 2
 	ld	%g7, %g11, %g3
 	ldi	%g3, %g6, -4
-	jne	%g3, %g28, jeq_else.51226
+	jne	%g3, %g28, jeq_else.43586
 	fldi	%f0, %g7, 0
 	fsub	%f0, %f0, %f3
 	fldi	%f1, %g7, -4
@@ -12347,41 +9295,41 @@ jeq_else.51224:
 	fldi	%f5, %g12, -4
 	fmul	%f5, %f0, %f5
 	fadd	%f6, %f5, %f4
-	fjlt	%f6, %f16, fjge_else.51228
+	fjlt	%f6, %f16, fjge_else.43588
 	fmov	%f5, %f6
-	jmp	fjge_cont.51229
-fjge_else.51228:
+	jmp	fjge_cont.43589
+fjge_else.43588:
 	fneg	%f5, %f6
-fjge_cont.51229:
+fjge_cont.43589:
 	ldi	%g3, %g6, -16
 	fldi	%f6, %g3, -4
-	fjlt	%f5, %f6, fjge_else.51230
+	fjlt	%f5, %f6, fjge_else.43590
 	addi	%g8, %g0, 0
-	jmp	fjge_cont.51231
-fjge_else.51230:
+	jmp	fjge_cont.43591
+fjge_else.43590:
 	fldi	%f5, %g12, -8
 	fmul	%f5, %f0, %f5
 	fadd	%f6, %f5, %f2
-	fjlt	%f6, %f16, fjge_else.51232
+	fjlt	%f6, %f16, fjge_else.43592
 	fmov	%f5, %f6
-	jmp	fjge_cont.51233
-fjge_else.51232:
+	jmp	fjge_cont.43593
+fjge_else.43592:
 	fneg	%f5, %f6
-fjge_cont.51233:
+fjge_cont.43593:
 	fldi	%f6, %g3, -8
-	fjlt	%f5, %f6, fjge_else.51234
+	fjlt	%f5, %f6, fjge_else.43594
 	addi	%g8, %g0, 0
-	jmp	fjge_cont.51235
-fjge_else.51234:
-	fjeq	%f1, %f16, fjne_else.51236
+	jmp	fjge_cont.43595
+fjge_else.43594:
+	fjeq	%f1, %f16, fjne_else.43596
 	addi	%g8, %g0, 1
-	jmp	fjne_cont.51237
-fjne_else.51236:
+	jmp	fjne_cont.43597
+fjne_else.43596:
 	addi	%g8, %g0, 0
-fjne_cont.51237:
-fjge_cont.51235:
-fjge_cont.51231:
-	jne	%g8, %g0, jeq_else.51238
+fjne_cont.43597:
+fjge_cont.43595:
+fjge_cont.43591:
+	jne	%g8, %g0, jeq_else.43598
 	fldi	%f0, %g7, -8
 	fsub	%f0, %f0, %f4
 	fldi	%f1, %g7, -12
@@ -12389,40 +9337,40 @@ fjge_cont.51231:
 	fldi	%f5, %g12, 0
 	fmul	%f5, %f0, %f5
 	fadd	%f6, %f5, %f3
-	fjlt	%f6, %f16, fjge_else.51240
+	fjlt	%f6, %f16, fjge_else.43600
 	fmov	%f5, %f6
-	jmp	fjge_cont.51241
-fjge_else.51240:
+	jmp	fjge_cont.43601
+fjge_else.43600:
 	fneg	%f5, %f6
-fjge_cont.51241:
+fjge_cont.43601:
 	fldi	%f6, %g3, 0
-	fjlt	%f5, %f6, fjge_else.51242
+	fjlt	%f5, %f6, fjge_else.43602
 	addi	%g8, %g0, 0
-	jmp	fjge_cont.51243
-fjge_else.51242:
+	jmp	fjge_cont.43603
+fjge_else.43602:
 	fldi	%f5, %g12, -8
 	fmul	%f5, %f0, %f5
 	fadd	%f6, %f5, %f2
-	fjlt	%f6, %f16, fjge_else.51244
+	fjlt	%f6, %f16, fjge_else.43604
 	fmov	%f5, %f6
-	jmp	fjge_cont.51245
-fjge_else.51244:
+	jmp	fjge_cont.43605
+fjge_else.43604:
 	fneg	%f5, %f6
-fjge_cont.51245:
+fjge_cont.43605:
 	fldi	%f6, %g3, -8
-	fjlt	%f5, %f6, fjge_else.51246
+	fjlt	%f5, %f6, fjge_else.43606
 	addi	%g8, %g0, 0
-	jmp	fjge_cont.51247
-fjge_else.51246:
-	fjeq	%f1, %f16, fjne_else.51248
+	jmp	fjge_cont.43607
+fjge_else.43606:
+	fjeq	%f1, %f16, fjne_else.43608
 	addi	%g8, %g0, 1
-	jmp	fjne_cont.51249
-fjne_else.51248:
+	jmp	fjne_cont.43609
+fjne_else.43608:
 	addi	%g8, %g0, 0
-fjne_cont.51249:
-fjge_cont.51247:
-fjge_cont.51243:
-	jne	%g8, %g0, jeq_else.51250
+fjne_cont.43609:
+fjge_cont.43607:
+fjge_cont.43603:
+	jne	%g8, %g0, jeq_else.43610
 	fldi	%f0, %g7, -16
 	fsub	%f1, %f0, %f2
 	fldi	%f0, %g7, -20
@@ -12430,74 +9378,74 @@ fjge_cont.51243:
 	fldi	%f1, %g12, 0
 	fmul	%f1, %f5, %f1
 	fadd	%f2, %f1, %f3
-	fjlt	%f2, %f16, fjge_else.51252
+	fjlt	%f2, %f16, fjge_else.43612
 	fmov	%f1, %f2
-	jmp	fjge_cont.51253
-fjge_else.51252:
+	jmp	fjge_cont.43613
+fjge_else.43612:
 	fneg	%f1, %f2
-fjge_cont.51253:
+fjge_cont.43613:
 	fldi	%f2, %g3, 0
-	fjlt	%f1, %f2, fjge_else.51254
+	fjlt	%f1, %f2, fjge_else.43614
 	addi	%g8, %g0, 0
-	jmp	fjge_cont.51255
-fjge_else.51254:
+	jmp	fjge_cont.43615
+fjge_else.43614:
 	fldi	%f1, %g12, -4
 	fmul	%f1, %f5, %f1
 	fadd	%f2, %f1, %f4
-	fjlt	%f2, %f16, fjge_else.51256
+	fjlt	%f2, %f16, fjge_else.43616
 	fmov	%f1, %f2
-	jmp	fjge_cont.51257
-fjge_else.51256:
+	jmp	fjge_cont.43617
+fjge_else.43616:
 	fneg	%f1, %f2
-fjge_cont.51257:
+fjge_cont.43617:
 	fldi	%f2, %g3, -4
-	fjlt	%f1, %f2, fjge_else.51258
+	fjlt	%f1, %f2, fjge_else.43618
 	addi	%g8, %g0, 0
-	jmp	fjge_cont.51259
-fjge_else.51258:
-	fjeq	%f0, %f16, fjne_else.51260
+	jmp	fjge_cont.43619
+fjge_else.43618:
+	fjeq	%f0, %f16, fjne_else.43620
 	addi	%g8, %g0, 1
-	jmp	fjne_cont.51261
-fjne_else.51260:
+	jmp	fjne_cont.43621
+fjne_else.43620:
 	addi	%g8, %g0, 0
-fjne_cont.51261:
-fjge_cont.51259:
-fjge_cont.51255:
-	jne	%g8, %g0, jeq_else.51262
+fjne_cont.43621:
+fjge_cont.43619:
+fjge_cont.43615:
+	jne	%g8, %g0, jeq_else.43622
 	addi	%g8, %g0, 0
-	jmp	jeq_cont.51263
-jeq_else.51262:
+	jmp	jeq_cont.43623
+jeq_else.43622:
 	fsti	%f5, %g31, 520
 	addi	%g8, %g0, 3
-jeq_cont.51263:
-	jmp	jeq_cont.51251
-jeq_else.51250:
+jeq_cont.43623:
+	jmp	jeq_cont.43611
+jeq_else.43610:
 	fsti	%f0, %g31, 520
 	addi	%g8, %g0, 2
-jeq_cont.51251:
-	jmp	jeq_cont.51239
-jeq_else.51238:
+jeq_cont.43611:
+	jmp	jeq_cont.43599
+jeq_else.43598:
 	fsti	%f0, %g31, 520
 	addi	%g8, %g0, 1
-jeq_cont.51239:
-	jmp	jeq_cont.51227
-jeq_else.51226:
+jeq_cont.43599:
+	jmp	jeq_cont.43587
+jeq_else.43586:
 	addi	%g8, %g0, 2
-	jne	%g3, %g8, jeq_else.51264
+	jne	%g3, %g8, jeq_else.43624
 	fldi	%f1, %g7, 0
-	fjlt	%f1, %f16, fjge_else.51266
+	fjlt	%f1, %f16, fjge_else.43626
 	addi	%g8, %g0, 0
-	jmp	fjge_cont.51267
-fjge_else.51266:
+	jmp	fjge_cont.43627
+fjge_else.43626:
 	fldi	%f0, %g5, -12
 	fmul	%f0, %f1, %f0
 	fsti	%f0, %g31, 520
 	addi	%g8, %g0, 1
-fjge_cont.51267:
-	jmp	jeq_cont.51265
-jeq_else.51264:
+fjge_cont.43627:
+	jmp	jeq_cont.43625
+jeq_else.43624:
 	fldi	%f5, %g7, 0
-	fjeq	%f5, %f16, fjne_else.51268
+	fjeq	%f5, %f16, fjne_else.43628
 	fldi	%f0, %g7, -4
 	fmul	%f1, %f0, %f3
 	fldi	%f0, %g7, -8
@@ -12510,54 +9458,54 @@ jeq_else.51264:
 	fmul	%f2, %f1, %f1
 	fmul	%f0, %f5, %f0
 	fsub	%f0, %f2, %f0
-	fjlt	%f16, %f0, fjge_else.51270
+	fjlt	%f16, %f0, fjge_else.43630
 	addi	%g8, %g0, 0
-	jmp	fjge_cont.51271
-fjge_else.51270:
+	jmp	fjge_cont.43631
+fjge_else.43630:
 	ldi	%g3, %g6, -24
-	jne	%g3, %g0, jeq_else.51272
+	jne	%g3, %g0, jeq_else.43632
 	fsqrt	%f0, %f0
 	fsub	%f1, %f1, %f0
 	fldi	%f0, %g7, -16
 	fmul	%f0, %f1, %f0
 	fsti	%f0, %g31, 520
-	jmp	jeq_cont.51273
-jeq_else.51272:
+	jmp	jeq_cont.43633
+jeq_else.43632:
 	fsqrt	%f0, %f0
 	fadd	%f1, %f1, %f0
 	fldi	%f0, %g7, -16
 	fmul	%f0, %f1, %f0
 	fsti	%f0, %g31, 520
-jeq_cont.51273:
+jeq_cont.43633:
 	addi	%g8, %g0, 1
-fjge_cont.51271:
-	jmp	fjne_cont.51269
-fjne_else.51268:
+fjge_cont.43631:
+	jmp	fjne_cont.43629
+fjne_else.43628:
 	addi	%g8, %g0, 0
-fjne_cont.51269:
-jeq_cont.51265:
-jeq_cont.51227:
-	jne	%g8, %g0, jeq_else.51274
+fjne_cont.43629:
+jeq_cont.43625:
+jeq_cont.43587:
+	jne	%g8, %g0, jeq_else.43634
 	slli	%g3, %g9, 2
 	add	%g3, %g31, %g3
 	ldi	%g3, %g3, 272
 	ldi	%g3, %g3, -24
-	jne	%g3, %g0, jeq_else.51275
+	jne	%g3, %g0, jeq_else.43635
 	return
-jeq_else.51275:
+jeq_else.43635:
 	addi	%g10, %g10, 1
-	jmp	solve_each_element_fast.2860
-jeq_else.51274:
+	jmp	solve_each_element_fast.2877
+jeq_else.43634:
 	fldi	%f0, %g31, 520
 	sti	%g4, %g1, 0
-	fjlt	%f16, %f0, fjge_else.51277
-	jmp	fjge_cont.51278
-fjge_else.51277:
+	fjlt	%f16, %f0, fjge_else.43637
+	jmp	fjge_cont.43638
+fjge_else.43637:
 	fldi	%f1, %g31, 528
-	fjlt	%f0, %f1, fjge_else.51279
-	jmp	fjge_cont.51280
-fjge_else.51279:
-	setL %g3, l.44095
+	fjlt	%f0, %f1, fjge_else.43639
+	jmp	fjge_cont.43640
+fjge_else.43639:
+	setL %g3, l.36805
 	fldi	%f1, %g3, 0
 	fadd	%f9, %f0, %f1
 	fldi	%f0, %g12, 0
@@ -12576,10 +9524,10 @@ fjge_else.51279:
 	fsti	%f3, %g1, 4
 	fsti	%f4, %g1, 8
 	fsti	%f5, %g1, 12
-	jne	%g5, %g29, jeq_else.51281
+	jne	%g5, %g29, jeq_else.43641
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.51282
-jeq_else.51281:
+	jmp	jeq_cont.43642
+jeq_else.43641:
 	slli	%g3, %g5, 2
 	add	%g3, %g31, %g3
 	ldi	%g6, %g3, 272
@@ -12591,61 +9539,61 @@ jeq_else.51281:
 	fldi	%f1, %g3, -8
 	fsub	%f1, %f3, %f1
 	ldi	%g5, %g6, -4
-	jne	%g5, %g28, jeq_else.51283
-	fjlt	%f0, %f16, fjge_else.51285
+	jne	%g5, %g28, jeq_else.43643
+	fjlt	%f0, %f16, fjge_else.43645
 	fmov	%f6, %f0
-	jmp	fjge_cont.51286
-fjge_else.51285:
+	jmp	fjge_cont.43646
+fjge_else.43645:
 	fneg	%f6, %f0
-fjge_cont.51286:
+fjge_cont.43646:
 	ldi	%g3, %g6, -16
 	fldi	%f0, %g3, 0
-	fjlt	%f6, %f0, fjge_else.51287
+	fjlt	%f6, %f0, fjge_else.43647
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.51288
-fjge_else.51287:
-	fjlt	%f2, %f16, fjge_else.51289
+	jmp	fjge_cont.43648
+fjge_else.43647:
+	fjlt	%f2, %f16, fjge_else.43649
 	fmov	%f0, %f2
-	jmp	fjge_cont.51290
-fjge_else.51289:
+	jmp	fjge_cont.43650
+fjge_else.43649:
 	fneg	%f0, %f2
-fjge_cont.51290:
+fjge_cont.43650:
 	fldi	%f2, %g3, -4
-	fjlt	%f0, %f2, fjge_else.51291
+	fjlt	%f0, %f2, fjge_else.43651
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.51292
-fjge_else.51291:
-	fjlt	%f1, %f16, fjge_else.51293
+	jmp	fjge_cont.43652
+fjge_else.43651:
+	fjlt	%f1, %f16, fjge_else.43653
 	fmov	%f0, %f1
-	jmp	fjge_cont.51294
-fjge_else.51293:
+	jmp	fjge_cont.43654
+fjge_else.43653:
 	fneg	%f0, %f1
-fjge_cont.51294:
+fjge_cont.43654:
 	fldi	%f1, %g3, -8
-	fjlt	%f0, %f1, fjge_else.51295
+	fjlt	%f0, %f1, fjge_else.43655
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.51296
-fjge_else.51295:
+	jmp	fjge_cont.43656
+fjge_else.43655:
 	addi	%g5, %g0, 1
-fjge_cont.51296:
-fjge_cont.51292:
-fjge_cont.51288:
-	jne	%g5, %g0, jeq_else.51297
+fjge_cont.43656:
+fjge_cont.43652:
+fjge_cont.43648:
+	jne	%g5, %g0, jeq_else.43657
 	ldi	%g3, %g6, -24
-	jne	%g3, %g0, jeq_else.51299
+	jne	%g3, %g0, jeq_else.43659
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.51300
-jeq_else.51299:
+	jmp	jeq_cont.43660
+jeq_else.43659:
 	addi	%g3, %g0, 0
-jeq_cont.51300:
-	jmp	jeq_cont.51298
-jeq_else.51297:
+jeq_cont.43660:
+	jmp	jeq_cont.43658
+jeq_else.43657:
 	ldi	%g3, %g6, -24
-jeq_cont.51298:
-	jmp	jeq_cont.51284
-jeq_else.51283:
+jeq_cont.43658:
+	jmp	jeq_cont.43644
+jeq_else.43643:
 	addi	%g3, %g0, 2
-	jne	%g5, %g3, jeq_else.51301
+	jne	%g5, %g3, jeq_else.43661
 	ldi	%g3, %g6, -16
 	fldi	%f6, %g3, 0
 	fmul	%f6, %f6, %f0
@@ -12656,20 +9604,20 @@ jeq_else.51283:
 	fmul	%f0, %f0, %f1
 	fadd	%f0, %f2, %f0
 	ldi	%g3, %g6, -24
-	fjlt	%f0, %f16, fjge_else.51303
+	fjlt	%f0, %f16, fjge_else.43663
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.51304
-fjge_else.51303:
+	jmp	fjge_cont.43664
+fjge_else.43663:
 	addi	%g5, %g0, 1
-fjge_cont.51304:
-	jne	%g3, %g5, jeq_else.51305
+fjge_cont.43664:
+	jne	%g3, %g5, jeq_else.43665
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.51306
-jeq_else.51305:
+	jmp	jeq_cont.43666
+jeq_else.43665:
 	addi	%g3, %g0, 0
-jeq_cont.51306:
-	jmp	jeq_cont.51302
-jeq_else.51301:
+jeq_cont.43666:
+	jmp	jeq_cont.43662
+jeq_else.43661:
 	fmul	%f7, %f0, %f0
 	ldi	%g3, %g6, -16
 	fldi	%f6, %g3, 0
@@ -12683,10 +9631,10 @@ jeq_else.51301:
 	fmul	%f6, %f7, %f6
 	fadd	%f7, %f8, %f6
 	ldi	%g3, %g6, -12
-	jne	%g3, %g0, jeq_else.51307
+	jne	%g3, %g0, jeq_else.43667
 	fmov	%f6, %f7
-	jmp	jeq_cont.51308
-jeq_else.51307:
+	jmp	jeq_cont.43668
+jeq_else.43667:
 	fmul	%f8, %f2, %f1
 	ldi	%g3, %g6, -36
 	fldi	%f6, %g3, 0
@@ -12700,42 +9648,42 @@ jeq_else.51307:
 	fldi	%f0, %g3, -8
 	fmul	%f6, %f1, %f0
 	fadd	%f6, %f7, %f6
-jeq_cont.51308:
+jeq_cont.43668:
 	addi	%g3, %g0, 3
-	jne	%g5, %g3, jeq_else.51309
+	jne	%g5, %g3, jeq_else.43669
 	fsub	%f0, %f6, %f17
-	jmp	jeq_cont.51310
-jeq_else.51309:
+	jmp	jeq_cont.43670
+jeq_else.43669:
 	fmov	%f0, %f6
-jeq_cont.51310:
+jeq_cont.43670:
 	ldi	%g3, %g6, -24
-	fjlt	%f0, %f16, fjge_else.51311
+	fjlt	%f0, %f16, fjge_else.43671
 	addi	%g5, %g0, 0
-	jmp	fjge_cont.51312
-fjge_else.51311:
+	jmp	fjge_cont.43672
+fjge_else.43671:
 	addi	%g5, %g0, 1
-fjge_cont.51312:
-	jne	%g3, %g5, jeq_else.51313
+fjge_cont.43672:
+	jne	%g3, %g5, jeq_else.43673
 	addi	%g3, %g0, 1
-	jmp	jeq_cont.51314
-jeq_else.51313:
+	jmp	jeq_cont.43674
+jeq_else.43673:
 	addi	%g3, %g0, 0
-jeq_cont.51314:
-jeq_cont.51302:
-jeq_cont.51284:
-	jne	%g3, %g0, jeq_else.51315
+jeq_cont.43674:
+jeq_cont.43662:
+jeq_cont.43644:
+	jne	%g3, %g0, jeq_else.43675
 	addi	%g5, %g0, 1
 	subi	%g1, %g1, 20
-	call	check_all_inside.2831
+	call	check_all_inside.2848
 	addi	%g1, %g1, 20
-	jmp	jeq_cont.51316
-jeq_else.51315:
-	addi	%g3, %g0, 0
-jeq_cont.51316:
-jeq_cont.51282:
-	jne	%g3, %g0, jeq_else.51317
-	jmp	jeq_cont.51318
-jeq_else.51317:
+	jmp	jeq_cont.43676
+jeq_else.43675:
+	addi	%g3, %g0, 0
+jeq_cont.43676:
+jeq_cont.43642:
+	jne	%g3, %g0, jeq_else.43677
+	jmp	jeq_cont.43678
+jeq_else.43677:
 	fsti	%f9, %g31, 528
 	fldi	%f5, %g1, 12
 	fsti	%f5, %g31, 540
@@ -12745,12 +9693,12 @@ jeq_else.51317:
 	fsti	%f3, %g31, 532
 	sti	%g9, %g31, 544
 	sti	%g8, %g31, 524
-jeq_cont.51318:
-fjge_cont.51280:
-fjge_cont.51278:
+jeq_cont.43678:
+fjge_cont.43640:
+fjge_cont.43638:
 	addi	%g10, %g10, 1
 	ldi	%g4, %g1, 0
-	jmp	solve_each_element_fast.2860
+	jmp	solve_each_element_fast.2877
 
 !==============================
 ! args = [%g16, %g15, %g14, %g13]
@@ -12758,12 +9706,12 @@ fjge_cont.51278:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f17, %f16, %f15, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-solve_one_or_network_fast.2864:
+solve_one_or_network_fast.2881:
 	slli	%g3, %g16, 2
 	ld	%g3, %g15, %g3
-	jne	%g3, %g29, jeq_else.51319
+	jne	%g3, %g29, jeq_else.43679
 	return
-jeq_else.51319:
+jeq_else.43679:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -12771,14 +9719,14 @@ jeq_else.51319:
 	mov	%g11, %g13
 	mov	%g12, %g14
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	addi	%g16, %g16, 1
 	slli	%g3, %g16, 2
 	ld	%g3, %g15, %g3
-	jne	%g3, %g29, jeq_else.51321
+	jne	%g3, %g29, jeq_else.43681
 	return
-jeq_else.51321:
+jeq_else.43681:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -12786,14 +9734,14 @@ jeq_else.51321:
 	mov	%g11, %g13
 	mov	%g12, %g14
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	addi	%g16, %g16, 1
 	slli	%g3, %g16, 2
 	ld	%g3, %g15, %g3
-	jne	%g3, %g29, jeq_else.51323
+	jne	%g3, %g29, jeq_else.43683
 	return
-jeq_else.51323:
+jeq_else.43683:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -12801,14 +9749,14 @@ jeq_else.51323:
 	mov	%g11, %g13
 	mov	%g12, %g14
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	addi	%g16, %g16, 1
 	slli	%g3, %g16, 2
 	ld	%g3, %g15, %g3
-	jne	%g3, %g29, jeq_else.51325
+	jne	%g3, %g29, jeq_else.43685
 	return
-jeq_else.51325:
+jeq_else.43685:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -12816,14 +9764,14 @@ jeq_else.51325:
 	mov	%g11, %g13
 	mov	%g12, %g14
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	addi	%g16, %g16, 1
 	slli	%g3, %g16, 2
 	ld	%g3, %g15, %g3
-	jne	%g3, %g29, jeq_else.51327
+	jne	%g3, %g29, jeq_else.43687
 	return
-jeq_else.51327:
+jeq_else.43687:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -12831,14 +9779,14 @@ jeq_else.51327:
 	mov	%g11, %g13
 	mov	%g12, %g14
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	addi	%g16, %g16, 1
 	slli	%g3, %g16, 2
 	ld	%g3, %g15, %g3
-	jne	%g3, %g29, jeq_else.51329
+	jne	%g3, %g29, jeq_else.43689
 	return
-jeq_else.51329:
+jeq_else.43689:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -12846,14 +9794,14 @@ jeq_else.51329:
 	mov	%g11, %g13
 	mov	%g12, %g14
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	addi	%g16, %g16, 1
 	slli	%g3, %g16, 2
 	ld	%g3, %g15, %g3
-	jne	%g3, %g29, jeq_else.51331
+	jne	%g3, %g29, jeq_else.43691
 	return
-jeq_else.51331:
+jeq_else.43691:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -12861,14 +9809,14 @@ jeq_else.51331:
 	mov	%g11, %g13
 	mov	%g12, %g14
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	addi	%g16, %g16, 1
 	slli	%g3, %g16, 2
 	ld	%g3, %g15, %g3
-	jne	%g3, %g29, jeq_else.51333
+	jne	%g3, %g29, jeq_else.43693
 	return
-jeq_else.51333:
+jeq_else.43693:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -12876,10 +9824,10 @@ jeq_else.51333:
 	mov	%g11, %g13
 	mov	%g12, %g14
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	addi	%g16, %g16, 1
-	jmp	solve_one_or_network_fast.2864
+	jmp	solve_one_or_network_fast.2881
 
 !==============================
 ! args = [%g19, %g20, %g18, %g17]
@@ -12887,19 +9835,19 @@ jeq_else.51333:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f17, %f16, %f15, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-trace_or_matrix_fast.2868:
+trace_or_matrix_fast.2885:
 	slli	%g3, %g19, 2
 	ld	%g15, %g20, %g3
 	ldi	%g3, %g15, 0
-	jne	%g3, %g29, jeq_else.51335
+	jne	%g3, %g29, jeq_else.43695
 	return
-jeq_else.51335:
+jeq_else.43695:
 	addi	%g4, %g0, 99
-	jne	%g3, %g4, jeq_else.51337
+	jne	%g3, %g4, jeq_else.43697
 	ldi	%g3, %g15, -4
-	jne	%g3, %g29, jeq_else.51339
-	jmp	jeq_cont.51340
-jeq_else.51339:
+	jne	%g3, %g29, jeq_else.43699
+	jmp	jeq_cont.43700
+jeq_else.43699:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -12907,12 +9855,12 @@ jeq_else.51339:
 	mov	%g11, %g17
 	mov	%g12, %g18
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	ldi	%g3, %g15, -8
-	jne	%g3, %g29, jeq_else.51341
-	jmp	jeq_cont.51342
-jeq_else.51341:
+	jne	%g3, %g29, jeq_else.43701
+	jmp	jeq_cont.43702
+jeq_else.43701:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -12920,12 +9868,12 @@ jeq_else.51341:
 	mov	%g11, %g17
 	mov	%g12, %g18
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	ldi	%g3, %g15, -12
-	jne	%g3, %g29, jeq_else.51343
-	jmp	jeq_cont.51344
-jeq_else.51343:
+	jne	%g3, %g29, jeq_else.43703
+	jmp	jeq_cont.43704
+jeq_else.43703:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -12933,12 +9881,12 @@ jeq_else.51343:
 	mov	%g11, %g17
 	mov	%g12, %g18
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	ldi	%g3, %g15, -16
-	jne	%g3, %g29, jeq_else.51345
-	jmp	jeq_cont.51346
-jeq_else.51345:
+	jne	%g3, %g29, jeq_else.43705
+	jmp	jeq_cont.43706
+jeq_else.43705:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -12946,12 +9894,12 @@ jeq_else.51345:
 	mov	%g11, %g17
 	mov	%g12, %g18
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	ldi	%g3, %g15, -20
-	jne	%g3, %g29, jeq_else.51347
-	jmp	jeq_cont.51348
-jeq_else.51347:
+	jne	%g3, %g29, jeq_else.43707
+	jmp	jeq_cont.43708
+jeq_else.43707:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -12959,12 +9907,12 @@ jeq_else.51347:
 	mov	%g11, %g17
 	mov	%g12, %g18
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	ldi	%g3, %g15, -24
-	jne	%g3, %g29, jeq_else.51349
-	jmp	jeq_cont.51350
-jeq_else.51349:
+	jne	%g3, %g29, jeq_else.43709
+	jmp	jeq_cont.43710
+jeq_else.43709:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -12972,12 +9920,12 @@ jeq_else.51349:
 	mov	%g11, %g17
 	mov	%g12, %g18
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	ldi	%g3, %g15, -28
-	jne	%g3, %g29, jeq_else.51351
-	jmp	jeq_cont.51352
-jeq_else.51351:
+	jne	%g3, %g29, jeq_else.43711
+	jmp	jeq_cont.43712
+jeq_else.43711:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -12985,21 +9933,21 @@ jeq_else.51351:
 	mov	%g11, %g17
 	mov	%g12, %g18
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g16, %g0, 8
 	mov	%g13, %g17
 	mov	%g14, %g18
-	call	solve_one_or_network_fast.2864
-	addi	%g1, %g1, 4
-jeq_cont.51352:
-jeq_cont.51350:
-jeq_cont.51348:
-jeq_cont.51346:
-jeq_cont.51344:
-jeq_cont.51342:
-jeq_cont.51340:
-	jmp	jeq_cont.51338
-jeq_else.51337:
+	call	solve_one_or_network_fast.2881
+	addi	%g1, %g1, 4
+jeq_cont.43712:
+jeq_cont.43710:
+jeq_cont.43708:
+jeq_cont.43706:
+jeq_cont.43704:
+jeq_cont.43702:
+jeq_cont.43700:
+	jmp	jeq_cont.43698
+jeq_else.43697:
 	slli	%g4, %g3, 2
 	add	%g4, %g31, %g4
 	ldi	%g6, %g4, 272
@@ -13010,7 +9958,7 @@ jeq_else.51337:
 	slli	%g3, %g3, 2
 	ld	%g7, %g17, %g3
 	ldi	%g4, %g6, -4
-	jne	%g4, %g28, jeq_else.51353
+	jne	%g4, %g28, jeq_else.43713
 	fldi	%f0, %g7, 0
 	fsub	%f4, %f0, %f2
 	fldi	%f0, %g7, -4
@@ -13018,41 +9966,41 @@ jeq_else.51337:
 	fldi	%f4, %g18, -4
 	fmul	%f4, %f6, %f4
 	fadd	%f5, %f4, %f3
-	fjlt	%f5, %f16, fjge_else.51355
+	fjlt	%f5, %f16, fjge_else.43715
 	fmov	%f4, %f5
-	jmp	fjge_cont.51356
-fjge_else.51355:
+	jmp	fjge_cont.43716
+fjge_else.43715:
 	fneg	%f4, %f5
-fjge_cont.51356:
+fjge_cont.43716:
 	ldi	%g4, %g6, -16
 	fldi	%f5, %g4, -4
-	fjlt	%f4, %f5, fjge_else.51357
+	fjlt	%f4, %f5, fjge_else.43717
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51358
-fjge_else.51357:
+	jmp	fjge_cont.43718
+fjge_else.43717:
 	fldi	%f4, %g18, -8
 	fmul	%f4, %f6, %f4
 	fadd	%f5, %f4, %f1
-	fjlt	%f5, %f16, fjge_else.51359
+	fjlt	%f5, %f16, fjge_else.43719
 	fmov	%f4, %f5
-	jmp	fjge_cont.51360
-fjge_else.51359:
+	jmp	fjge_cont.43720
+fjge_else.43719:
 	fneg	%f4, %f5
-fjge_cont.51360:
+fjge_cont.43720:
 	fldi	%f5, %g4, -8
-	fjlt	%f4, %f5, fjge_else.51361
+	fjlt	%f4, %f5, fjge_else.43721
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51362
-fjge_else.51361:
-	fjeq	%f0, %f16, fjne_else.51363
+	jmp	fjge_cont.43722
+fjge_else.43721:
+	fjeq	%f0, %f16, fjne_else.43723
 	addi	%g3, %g0, 1
-	jmp	fjne_cont.51364
-fjne_else.51363:
+	jmp	fjne_cont.43724
+fjne_else.43723:
 	addi	%g3, %g0, 0
-fjne_cont.51364:
-fjge_cont.51362:
-fjge_cont.51358:
-	jne	%g3, %g0, jeq_else.51365
+fjne_cont.43724:
+fjge_cont.43722:
+fjge_cont.43718:
+	jne	%g3, %g0, jeq_else.43725
 	fldi	%f0, %g7, -8
 	fsub	%f0, %f0, %f3
 	fldi	%f6, %g7, -12
@@ -13060,40 +10008,40 @@ fjge_cont.51358:
 	fldi	%f0, %g18, 0
 	fmul	%f0, %f5, %f0
 	fadd	%f4, %f0, %f2
-	fjlt	%f4, %f16, fjge_else.51367
+	fjlt	%f4, %f16, fjge_else.43727
 	fmov	%f0, %f4
-	jmp	fjge_cont.51368
-fjge_else.51367:
+	jmp	fjge_cont.43728
+fjge_else.43727:
 	fneg	%f0, %f4
-fjge_cont.51368:
+fjge_cont.43728:
 	fldi	%f4, %g4, 0
-	fjlt	%f0, %f4, fjge_else.51369
+	fjlt	%f0, %f4, fjge_else.43729
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51370
-fjge_else.51369:
+	jmp	fjge_cont.43730
+fjge_else.43729:
 	fldi	%f0, %g18, -8
 	fmul	%f0, %f5, %f0
 	fadd	%f4, %f0, %f1
-	fjlt	%f4, %f16, fjge_else.51371
+	fjlt	%f4, %f16, fjge_else.43731
 	fmov	%f0, %f4
-	jmp	fjge_cont.51372
-fjge_else.51371:
+	jmp	fjge_cont.43732
+fjge_else.43731:
 	fneg	%f0, %f4
-fjge_cont.51372:
+fjge_cont.43732:
 	fldi	%f4, %g4, -8
-	fjlt	%f0, %f4, fjge_else.51373
+	fjlt	%f0, %f4, fjge_else.43733
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51374
-fjge_else.51373:
-	fjeq	%f6, %f16, fjne_else.51375
+	jmp	fjge_cont.43734
+fjge_else.43733:
+	fjeq	%f6, %f16, fjne_else.43735
 	addi	%g3, %g0, 1
-	jmp	fjne_cont.51376
-fjne_else.51375:
+	jmp	fjne_cont.43736
+fjne_else.43735:
 	addi	%g3, %g0, 0
-fjne_cont.51376:
-fjge_cont.51374:
-fjge_cont.51370:
-	jne	%g3, %g0, jeq_else.51377
+fjne_cont.43736:
+fjge_cont.43734:
+fjge_cont.43730:
+	jne	%g3, %g0, jeq_else.43737
 	fldi	%f0, %g7, -16
 	fsub	%f0, %f0, %f1
 	fldi	%f5, %g7, -20
@@ -13101,74 +10049,74 @@ fjge_cont.51370:
 	fldi	%f0, %g18, 0
 	fmul	%f0, %f4, %f0
 	fadd	%f1, %f0, %f2
-	fjlt	%f1, %f16, fjge_else.51379
+	fjlt	%f1, %f16, fjge_else.43739
 	fmov	%f0, %f1
-	jmp	fjge_cont.51380
-fjge_else.51379:
+	jmp	fjge_cont.43740
+fjge_else.43739:
 	fneg	%f0, %f1
-fjge_cont.51380:
+fjge_cont.43740:
 	fldi	%f1, %g4, 0
-	fjlt	%f0, %f1, fjge_else.51381
+	fjlt	%f0, %f1, fjge_else.43741
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51382
-fjge_else.51381:
+	jmp	fjge_cont.43742
+fjge_else.43741:
 	fldi	%f0, %g18, -4
 	fmul	%f0, %f4, %f0
 	fadd	%f1, %f0, %f3
-	fjlt	%f1, %f16, fjge_else.51383
+	fjlt	%f1, %f16, fjge_else.43743
 	fmov	%f0, %f1
-	jmp	fjge_cont.51384
-fjge_else.51383:
+	jmp	fjge_cont.43744
+fjge_else.43743:
 	fneg	%f0, %f1
-fjge_cont.51384:
+fjge_cont.43744:
 	fldi	%f1, %g4, -4
-	fjlt	%f0, %f1, fjge_else.51385
+	fjlt	%f0, %f1, fjge_else.43745
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51386
-fjge_else.51385:
-	fjeq	%f5, %f16, fjne_else.51387
+	jmp	fjge_cont.43746
+fjge_else.43745:
+	fjeq	%f5, %f16, fjne_else.43747
 	addi	%g3, %g0, 1
-	jmp	fjne_cont.51388
-fjne_else.51387:
+	jmp	fjne_cont.43748
+fjne_else.43747:
 	addi	%g3, %g0, 0
-fjne_cont.51388:
-fjge_cont.51386:
-fjge_cont.51382:
-	jne	%g3, %g0, jeq_else.51389
+fjne_cont.43748:
+fjge_cont.43746:
+fjge_cont.43742:
+	jne	%g3, %g0, jeq_else.43749
 	addi	%g3, %g0, 0
-	jmp	jeq_cont.51390
-jeq_else.51389:
+	jmp	jeq_cont.43750
+jeq_else.43749:
 	fsti	%f4, %g31, 520
 	addi	%g3, %g0, 3
-jeq_cont.51390:
-	jmp	jeq_cont.51378
-jeq_else.51377:
+jeq_cont.43750:
+	jmp	jeq_cont.43738
+jeq_else.43737:
 	fsti	%f5, %g31, 520
 	addi	%g3, %g0, 2
-jeq_cont.51378:
-	jmp	jeq_cont.51366
-jeq_else.51365:
+jeq_cont.43738:
+	jmp	jeq_cont.43726
+jeq_else.43725:
 	fsti	%f6, %g31, 520
 	addi	%g3, %g0, 1
-jeq_cont.51366:
-	jmp	jeq_cont.51354
-jeq_else.51353:
+jeq_cont.43726:
+	jmp	jeq_cont.43714
+jeq_else.43713:
 	addi	%g3, %g0, 2
-	jne	%g4, %g3, jeq_else.51391
+	jne	%g4, %g3, jeq_else.43751
 	fldi	%f1, %g7, 0
-	fjlt	%f1, %f16, fjge_else.51393
+	fjlt	%f1, %f16, fjge_else.43753
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51394
-fjge_else.51393:
+	jmp	fjge_cont.43754
+fjge_else.43753:
 	fldi	%f0, %g5, -12
 	fmul	%f0, %f1, %f0
 	fsti	%f0, %g31, 520
 	addi	%g3, %g0, 1
-fjge_cont.51394:
-	jmp	jeq_cont.51392
-jeq_else.51391:
+fjge_cont.43754:
+	jmp	jeq_cont.43752
+jeq_else.43751:
 	fldi	%f4, %g7, 0
-	fjeq	%f4, %f16, fjne_else.51395
+	fjeq	%f4, %f16, fjne_else.43755
 	fldi	%f0, %g7, -4
 	fmul	%f2, %f0, %f2
 	fldi	%f0, %g7, -8
@@ -13181,45 +10129,45 @@ jeq_else.51391:
 	fmul	%f2, %f1, %f1
 	fmul	%f0, %f4, %f0
 	fsub	%f0, %f2, %f0
-	fjlt	%f16, %f0, fjge_else.51397
+	fjlt	%f16, %f0, fjge_else.43757
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51398
-fjge_else.51397:
+	jmp	fjge_cont.43758
+fjge_else.43757:
 	ldi	%g3, %g6, -24
-	jne	%g3, %g0, jeq_else.51399
+	jne	%g3, %g0, jeq_else.43759
 	fsqrt	%f0, %f0
 	fsub	%f1, %f1, %f0
 	fldi	%f0, %g7, -16
 	fmul	%f0, %f1, %f0
 	fsti	%f0, %g31, 520
-	jmp	jeq_cont.51400
-jeq_else.51399:
+	jmp	jeq_cont.43760
+jeq_else.43759:
 	fsqrt	%f0, %f0
 	fadd	%f1, %f1, %f0
 	fldi	%f0, %g7, -16
 	fmul	%f0, %f1, %f0
 	fsti	%f0, %g31, 520
-jeq_cont.51400:
-	addi	%g3, %g0, 1
-fjge_cont.51398:
-	jmp	fjne_cont.51396
-fjne_else.51395:
-	addi	%g3, %g0, 0
-fjne_cont.51396:
-jeq_cont.51392:
-jeq_cont.51354:
-	jne	%g3, %g0, jeq_else.51401
-	jmp	jeq_cont.51402
-jeq_else.51401:
+jeq_cont.43760:
+	addi	%g3, %g0, 1
+fjge_cont.43758:
+	jmp	fjne_cont.43756
+fjne_else.43755:
+	addi	%g3, %g0, 0
+fjne_cont.43756:
+jeq_cont.43752:
+jeq_cont.43714:
+	jne	%g3, %g0, jeq_else.43761
+	jmp	jeq_cont.43762
+jeq_else.43761:
 	fldi	%f0, %g31, 520
 	fldi	%f1, %g31, 528
-	fjlt	%f0, %f1, fjge_else.51403
-	jmp	fjge_cont.51404
-fjge_else.51403:
+	fjlt	%f0, %f1, fjge_else.43763
+	jmp	fjge_cont.43764
+fjge_else.43763:
 	ldi	%g3, %g15, -4
-	jne	%g3, %g29, jeq_else.51405
-	jmp	jeq_cont.51406
-jeq_else.51405:
+	jne	%g3, %g29, jeq_else.43765
+	jmp	jeq_cont.43766
+jeq_else.43765:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -13227,12 +10175,12 @@ jeq_else.51405:
 	mov	%g11, %g17
 	mov	%g12, %g18
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	ldi	%g3, %g15, -8
-	jne	%g3, %g29, jeq_else.51407
-	jmp	jeq_cont.51408
-jeq_else.51407:
+	jne	%g3, %g29, jeq_else.43767
+	jmp	jeq_cont.43768
+jeq_else.43767:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -13240,12 +10188,12 @@ jeq_else.51407:
 	mov	%g11, %g17
 	mov	%g12, %g18
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	ldi	%g3, %g15, -12
-	jne	%g3, %g29, jeq_else.51409
-	jmp	jeq_cont.51410
-jeq_else.51409:
+	jne	%g3, %g29, jeq_else.43769
+	jmp	jeq_cont.43770
+jeq_else.43769:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -13253,12 +10201,12 @@ jeq_else.51409:
 	mov	%g11, %g17
 	mov	%g12, %g18
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	ldi	%g3, %g15, -16
-	jne	%g3, %g29, jeq_else.51411
-	jmp	jeq_cont.51412
-jeq_else.51411:
+	jne	%g3, %g29, jeq_else.43771
+	jmp	jeq_cont.43772
+jeq_else.43771:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -13266,12 +10214,12 @@ jeq_else.51411:
 	mov	%g11, %g17
 	mov	%g12, %g18
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	ldi	%g3, %g15, -20
-	jne	%g3, %g29, jeq_else.51413
-	jmp	jeq_cont.51414
-jeq_else.51413:
+	jne	%g3, %g29, jeq_else.43773
+	jmp	jeq_cont.43774
+jeq_else.43773:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -13279,12 +10227,12 @@ jeq_else.51413:
 	mov	%g11, %g17
 	mov	%g12, %g18
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	ldi	%g3, %g15, -24
-	jne	%g3, %g29, jeq_else.51415
-	jmp	jeq_cont.51416
-jeq_else.51415:
+	jne	%g3, %g29, jeq_else.43775
+	jmp	jeq_cont.43776
+jeq_else.43775:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -13292,12 +10240,12 @@ jeq_else.51415:
 	mov	%g11, %g17
 	mov	%g12, %g18
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g1, %g1, 4
 	ldi	%g3, %g15, -28
-	jne	%g3, %g29, jeq_else.51417
-	jmp	jeq_cont.51418
-jeq_else.51417:
+	jne	%g3, %g29, jeq_else.43777
+	jmp	jeq_cont.43778
+jeq_else.43777:
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g4, %g3, 512
@@ -13305,24 +10253,24 @@ jeq_else.51417:
 	mov	%g11, %g17
 	mov	%g12, %g18
 	subi	%g1, %g1, 4
-	call	solve_each_element_fast.2860
+	call	solve_each_element_fast.2877
 	addi	%g16, %g0, 8
 	mov	%g13, %g17
 	mov	%g14, %g18
-	call	solve_one_or_network_fast.2864
-	addi	%g1, %g1, 4
-jeq_cont.51418:
-jeq_cont.51416:
-jeq_cont.51414:
-jeq_cont.51412:
-jeq_cont.51410:
-jeq_cont.51408:
-jeq_cont.51406:
-fjge_cont.51404:
-jeq_cont.51402:
-jeq_cont.51338:
+	call	solve_one_or_network_fast.2881
+	addi	%g1, %g1, 4
+jeq_cont.43778:
+jeq_cont.43776:
+jeq_cont.43774:
+jeq_cont.43772:
+jeq_cont.43770:
+jeq_cont.43768:
+jeq_cont.43766:
+fjge_cont.43764:
+jeq_cont.43762:
+jeq_cont.43698:
 	addi	%g19, %g19, 1
-	jmp	trace_or_matrix_fast.2868
+	jmp	trace_or_matrix_fast.2885
 
 !==============================
 ! args = [%g21, %g22]
@@ -13330,13 +10278,13 @@ jeq_cont.51338:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f17, %f16, %f15, %f11, %f10, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-trace_reflections.2890:
-	jlt	%g21, %g0, jge_else.51419
+trace_reflections.2907:
+	jlt	%g21, %g0, jge_else.43779
 	slli	%g3, %g21, 2
 	add	%g3, %g31, %g3
 	ldi	%g23, %g3, 1716
 	ldi	%g24, %g23, -4
-	setL %g3, l.42275
+	setL %g3, l.35829
 	fldi	%f0, %g3, 0
 	fsti	%f0, %g31, 528
 	addi	%g19, %g0, 0
@@ -13344,39 +10292,39 @@ trace_reflections.2890:
 	ldi	%g17, %g24, -4
 	ldi	%g18, %g24, 0
 	subi	%g1, %g1, 4
-	call	trace_or_matrix_fast.2868
+	call	trace_or_matrix_fast.2885
 	addi	%g1, %g1, 4
 	fldi	%f0, %g31, 528
-	setL %g3, l.44281
+	setL %g3, l.36991
 	fldi	%f1, %g3, 0
-	fjlt	%f1, %f0, fjge_else.51420
+	fjlt	%f1, %f0, fjge_else.43780
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51421
-fjge_else.51420:
-	setL %g3, l.45016
+	jmp	fjge_cont.43781
+fjge_else.43780:
+	setL %g3, l.37726
 	fldi	%f1, %g3, 0
-	fjlt	%f0, %f1, fjge_else.51422
+	fjlt	%f0, %f1, fjge_else.43782
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51423
-fjge_else.51422:
+	jmp	fjge_cont.43783
+fjge_else.43782:
 	addi	%g3, %g0, 1
-fjge_cont.51423:
-fjge_cont.51421:
-	jne	%g3, %g0, jeq_else.51424
-	jmp	jeq_cont.51425
-jeq_else.51424:
+fjge_cont.43783:
+fjge_cont.43781:
+	jne	%g3, %g0, jeq_else.43784
+	jmp	jeq_cont.43785
+jeq_else.43784:
 	ldi	%g3, %g31, 544
 	slli	%g4, %g3, 2
 	ldi	%g3, %g31, 524
 	add	%g3, %g4, %g3
 	ldi	%g4, %g23, 0
-	jne	%g3, %g4, jeq_else.51426
+	jne	%g3, %g4, jeq_else.43786
 	addi	%g12, %g0, 0
 	ldi	%g13, %g31, 516
 	subi	%g1, %g1, 4
-	call	shadow_check_one_or_matrix.2843
+	call	shadow_check_one_or_matrix.2860
 	addi	%g1, %g1, 4
-	jne	%g3, %g0, jeq_else.51428
+	jne	%g3, %g0, jeq_else.43788
 	ldi	%g3, %g24, 0
 	fldi	%f0, %g31, 556
 	fldi	%f2, %g3, 0
@@ -13401,9 +10349,9 @@ jeq_else.51424:
 	fmul	%f2, %f2, %f3
 	fadd	%f2, %f4, %f2
 	fmul	%f0, %f0, %f2
-	fjlt	%f16, %f1, fjge_else.51430
-	jmp	fjge_cont.51431
-fjge_else.51430:
+	fjlt	%f16, %f1, fjge_else.43790
+	jmp	fjge_cont.43791
+fjge_else.43790:
 	fldi	%f3, %g31, 592
 	fldi	%f2, %g31, 568
 	fmul	%f2, %f1, %f2
@@ -13419,10 +10367,10 @@ fjge_else.51430:
 	fmul	%f1, %f1, %f2
 	fadd	%f1, %f3, %f1
 	fsti	%f1, %g31, 584
-fjge_cont.51431:
-	fjlt	%f16, %f0, fjge_else.51432
-	jmp	fjge_cont.51433
-fjge_else.51432:
+fjge_cont.43791:
+	fjlt	%f16, %f0, fjge_else.43792
+	jmp	fjge_cont.43793
+fjge_else.43792:
 	fmul	%f0, %f0, %f0
 	fmul	%f0, %f0, %f0
 	fmul	%f0, %f0, %f10
@@ -13435,17 +10383,17 @@ fjge_else.51432:
 	fldi	%f1, %g31, 584
 	fadd	%f0, %f1, %f0
 	fsti	%f0, %g31, 584
-fjge_cont.51433:
-	jmp	jeq_cont.51429
-jeq_else.51428:
-jeq_cont.51429:
-	jmp	jeq_cont.51427
-jeq_else.51426:
-jeq_cont.51427:
-jeq_cont.51425:
+fjge_cont.43793:
+	jmp	jeq_cont.43789
+jeq_else.43788:
+jeq_cont.43789:
+	jmp	jeq_cont.43787
+jeq_else.43786:
+jeq_cont.43787:
+jeq_cont.43785:
 	subi	%g21, %g21, 1
-	jmp	trace_reflections.2890
-jge_else.51419:
+	jmp	trace_reflections.2907
+jge_else.43779:
 	return
 
 !==============================
@@ -13454,41 +10402,41 @@ jge_else.51419:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f31, %f30, %f3, %f29, %f28, %f27, %f26, %f25, %f24, %f23, %f22, %f21, %f20, %f2, %f17, %f16, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-trace_ray.2895:
+trace_ray.2912:
 	addi	%g3, %g0, 4
-	jlt	%g3, %g25, jle_else.51435
-	setL %g3, l.42275
+	jlt	%g3, %g25, jle_else.43795
+	setL %g3, l.35829
 	fldi	%f0, %g3, 0
 	fsti	%f0, %g31, 528
 	addi	%g14, %g0, 0
 	ldi	%g15, %g31, 516
 	mov	%g9, %g22
 	subi	%g1, %g1, 4
-	call	trace_or_matrix.2854
+	call	trace_or_matrix.2871
 	addi	%g1, %g1, 4
 	fldi	%f0, %g31, 528
-	setL %g3, l.44281
+	setL %g3, l.36991
 	fldi	%f1, %g3, 0
-	fjlt	%f1, %f0, fjge_else.51436
+	fjlt	%f1, %f0, fjge_else.43796
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51437
-fjge_else.51436:
-	setL %g3, l.45016
+	jmp	fjge_cont.43797
+fjge_else.43796:
+	setL %g3, l.37726
 	fldi	%f1, %g3, 0
-	fjlt	%f0, %f1, fjge_else.51438
+	fjlt	%f0, %f1, fjge_else.43798
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51439
-fjge_else.51438:
+	jmp	fjge_cont.43799
+fjge_else.43798:
 	addi	%g3, %g0, 1
-fjge_cont.51439:
-fjge_cont.51437:
-	jne	%g3, %g0, jeq_else.51440
+fjge_cont.43799:
+fjge_cont.43797:
+	jne	%g3, %g0, jeq_else.43800
 	addi	%g4, %g0, -1
 	slli	%g3, %g25, 2
 	st	%g4, %g19, %g3
-	jne	%g25, %g0, jeq_else.51441
+	jne	%g25, %g0, jeq_else.43801
 	return
-jeq_else.51441:
+jeq_else.43801:
 	fldi	%f1, %g22, 0
 	fldi	%f0, %g31, 308
 	fmul	%f2, %f1, %f0
@@ -13501,9 +10449,9 @@ jeq_else.51441:
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
 	fneg	%f0, %f0
-	fjlt	%f16, %f0, fjge_else.51443
+	fjlt	%f16, %f0, fjge_else.43803
 	return
-fjge_else.51443:
+fjge_else.43803:
 	fmul	%f1, %f0, %f0
 	fmul	%f0, %f1, %f0
 	fmul	%f1, %f0, %f13
@@ -13519,7 +10467,7 @@ fjge_else.51443:
 	fadd	%f0, %f1, %f0
 	fsti	%f0, %g31, 584
 	return
-jeq_else.51440:
+jeq_else.43800:
 	ldi	%g7, %g31, 544
 	slli	%g3, %g7, 2
 	add	%g3, %g31, %g3
@@ -13529,7 +10477,7 @@ jeq_else.51440:
 	fldi	%f0, %g26, 0
 	fmul	%f11, %f0, %f13
 	ldi	%g4, %g3, -4
-	jne	%g4, %g28, jeq_else.51446
+	jne	%g4, %g28, jeq_else.43806
 	ldi	%g4, %g31, 524
 	fsti	%f16, %g31, 556
 	fsti	%f16, %g31, 552
@@ -13537,27 +10485,27 @@ jeq_else.51440:
 	subi	%g5, %g4, 1
 	slli	%g4, %g5, 2
 	fld	%f1, %g22, %g4
-	fjeq	%f1, %f16, fjne_else.51448
-	fjlt	%f16, %f1, fjge_else.51450
-	setL %g4, l.43536
+	fjeq	%f1, %f16, fjne_else.43808
+	fjlt	%f16, %f1, fjge_else.43810
+	setL %g4, l.36354
 	fldi	%f0, %g4, 0
-	jmp	fjge_cont.51451
-fjge_else.51450:
-	setL %g4, l.42509
+	jmp	fjge_cont.43811
+fjge_else.43810:
+	setL %g4, l.35959
 	fldi	%f0, %g4, 0
-fjge_cont.51451:
-	jmp	fjne_cont.51449
-fjne_else.51448:
+fjge_cont.43811:
+	jmp	fjne_cont.43809
+fjne_else.43808:
 	fmov	%f0, %f16
-fjne_cont.51449:
+fjne_cont.43809:
 	fneg	%f0, %f0
 	slli	%g4, %g5, 2
 	add	%g4, %g31, %g4
 	fsti	%f0, %g4, 556
-	jmp	jeq_cont.51447
-jeq_else.51446:
+	jmp	jeq_cont.43807
+jeq_else.43806:
 	addi	%g5, %g0, 2
-	jne	%g4, %g5, jeq_else.51452
+	jne	%g4, %g5, jeq_else.43812
 	ldi	%g4, %g3, -16
 	fldi	%f0, %g4, 0
 	fneg	%f0, %f0
@@ -13568,8 +10516,8 @@ jeq_else.51446:
 	fldi	%f0, %g4, -8
 	fneg	%f0, %f0
 	fsti	%f0, %g31, 548
-	jmp	jeq_cont.51453
-jeq_else.51452:
+	jmp	jeq_cont.43813
+jeq_else.43812:
 	fldi	%f1, %g31, 540
 	ldi	%g4, %g3, -20
 	fldi	%f0, %g4, 0
@@ -13588,12 +10536,12 @@ jeq_else.51452:
 	fldi	%f2, %g4, -8
 	fmul	%f7, %f0, %f2
 	ldi	%g4, %g3, -12
-	jne	%g4, %g0, jeq_else.51454
+	jne	%g4, %g0, jeq_else.43814
 	fsti	%f1, %g31, 556
 	fsti	%f5, %g31, 552
 	fsti	%f7, %g31, 548
-	jmp	jeq_cont.51455
-jeq_else.51454:
+	jmp	jeq_cont.43815
+jeq_else.43814:
 	ldi	%g4, %g3, -36
 	fldi	%f2, %g4, -8
 	fmul	%f6, %f3, %f2
@@ -13619,7 +10567,7 @@ jeq_else.51454:
 	fmul	%f0, %f0, %f21
 	fadd	%f0, %f7, %f0
 	fsti	%f0, %g31, 548
-jeq_cont.51455:
+jeq_cont.43815:
 	ldi	%g4, %g3, -24
 	fldi	%f2, %g31, 556
 	fmul	%f1, %f2, %f2
@@ -13630,18 +10578,18 @@ jeq_cont.51455:
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f1, %f0
 	fsqrt	%f1, %f0
-	fjeq	%f1, %f16, fjne_else.51456
-	jne	%g4, %g0, jeq_else.51458
+	fjeq	%f1, %f16, fjne_else.43816
+	jne	%g4, %g0, jeq_else.43818
 	fdiv	%f0, %f17, %f1
-	jmp	jeq_cont.51459
-jeq_else.51458:
+	jmp	jeq_cont.43819
+jeq_else.43818:
 	fdiv	%f0, %f20, %f1
-jeq_cont.51459:
-	jmp	fjne_cont.51457
-fjne_else.51456:
-	setL %g4, l.42509
+jeq_cont.43819:
+	jmp	fjne_cont.43817
+fjne_else.43816:
+	setL %g4, l.35959
 	fldi	%f0, %g4, 0
-fjne_cont.51457:
+fjne_cont.43817:
 	fmul	%f1, %f2, %f0
 	fsti	%f1, %g31, 556
 	fldi	%f1, %g31, 552
@@ -13650,8 +10598,8 @@ fjne_cont.51457:
 	fldi	%f1, %g31, 548
 	fmul	%f0, %f1, %f0
 	fsti	%f0, %g31, 548
-jeq_cont.51453:
-jeq_cont.51447:
+jeq_cont.43813:
+jeq_cont.43807:
 	fldi	%f0, %g31, 540
 	fsti	%f0, %g31, 624
 	fldi	%f0, %g31, 536
@@ -13666,21 +10614,21 @@ jeq_cont.51447:
 	fsti	%f0, %g31, 564
 	fldi	%f0, %g5, -8
 	fsti	%f0, %g31, 560
-	jne	%g4, %g28, jeq_else.51460
+	jne	%g4, %g28, jeq_else.43820
 	fldi	%f1, %g31, 540
 	ldi	%g5, %g3, -20
 	fldi	%f0, %g5, 0
 	fsub	%f5, %f1, %f0
-	setL %g3, l.45321
+	setL %g3, l.38031
 	fldi	%f9, %g3, 0
 	fmul	%f0, %f5, %f9
 	subi	%g1, %g1, 4
 	call	min_caml_floor
-	setL %g3, l.45323
+	setL %g3, l.38033
 	fldi	%f6, %g3, 0
 	fmul	%f0, %f0, %f6
 	fsub	%f8, %f5, %f0
-	setL %g3, l.45282
+	setL %g3, l.37992
 	fldi	%f5, %g3, 0
 	fldi	%f1, %g31, 532
 	fldi	%f0, %g5, -8
@@ -13690,174 +10638,174 @@ jeq_cont.51447:
 	addi	%g1, %g1, 4
 	fmul	%f0, %f0, %f6
 	fsub	%f1, %f7, %f0
-	fjlt	%f8, %f5, fjge_else.51462
-	fjlt	%f1, %f5, fjge_else.51464
-	setL %g3, l.42271
+	fjlt	%f8, %f5, fjge_else.43822
+	fjlt	%f1, %f5, fjge_else.43824
+	setL %g3, l.35825
 	fldi	%f0, %g3, 0
-	jmp	fjge_cont.51465
-fjge_else.51464:
-	setL %g3, l.42257
+	jmp	fjge_cont.43825
+fjge_else.43824:
+	setL %g3, l.35811
 	fldi	%f0, %g3, 0
-fjge_cont.51465:
-	jmp	fjge_cont.51463
-fjge_else.51462:
-	fjlt	%f1, %f5, fjge_else.51466
-	setL %g3, l.42257
+fjge_cont.43825:
+	jmp	fjge_cont.43823
+fjge_else.43822:
+	fjlt	%f1, %f5, fjge_else.43826
+	setL %g3, l.35811
 	fldi	%f0, %g3, 0
-	jmp	fjge_cont.51467
-fjge_else.51466:
-	setL %g3, l.42271
+	jmp	fjge_cont.43827
+fjge_else.43826:
+	setL %g3, l.35825
 	fldi	%f0, %g3, 0
-fjge_cont.51467:
-fjge_cont.51463:
+fjge_cont.43827:
+fjge_cont.43823:
 	fsti	%f0, %g31, 564
-	jmp	jeq_cont.51461
-jeq_else.51460:
+	jmp	jeq_cont.43821
+jeq_else.43820:
 	addi	%g5, %g0, 2
-	jne	%g4, %g5, jeq_else.51468
+	jne	%g4, %g5, jeq_else.43828
 	fldi	%f1, %g31, 536
-	setL %g3, l.45301
+	setL %g3, l.38011
 	fldi	%f0, %g3, 0
 	fmul	%f2, %f1, %f0
-	setL %g3, l.42247
+	setL %g3, l.35801
 	fldi	%f3, %g3, 0
-	setL %g3, l.42249
+	setL %g3, l.35803
 	fldi	%f4, %g3, 0
-	fjlt	%f2, %f16, fjge_else.51470
+	fjlt	%f2, %f16, fjge_else.43830
 	fmov	%f1, %f2
-	jmp	fjge_cont.51471
-fjge_else.51470:
+	jmp	fjge_cont.43831
+fjge_else.43830:
 	fneg	%f1, %f2
-fjge_cont.51471:
-	fjlt	%f29, %f1, fjge_else.51472
-	fjlt	%f1, %f16, fjge_else.51474
+fjge_cont.43831:
+	fjlt	%f29, %f1, fjge_else.43832
+	fjlt	%f1, %f16, fjge_else.43834
 	fmov	%f0, %f1
-	jmp	fjge_cont.51475
-fjge_else.51474:
+	jmp	fjge_cont.43835
+fjge_else.43834:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51476
-	fjlt	%f1, %f16, fjge_else.51478
+	fjlt	%f29, %f1, fjge_else.43836
+	fjlt	%f1, %f16, fjge_else.43838
 	fmov	%f0, %f1
-	jmp	fjge_cont.51479
-fjge_else.51478:
+	jmp	fjge_cont.43839
+fjge_else.43838:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51480
-	fjlt	%f1, %f16, fjge_else.51482
+	fjlt	%f29, %f1, fjge_else.43840
+	fjlt	%f1, %f16, fjge_else.43842
 	fmov	%f0, %f1
-	jmp	fjge_cont.51483
-fjge_else.51482:
+	jmp	fjge_cont.43843
+fjge_else.43842:
 	fadd	%f1, %f1, %f29
 	subi	%g1, %g1, 4
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 4
-fjge_cont.51483:
-	jmp	fjge_cont.51481
-fjge_else.51480:
+fjge_cont.43843:
+	jmp	fjge_cont.43841
+fjge_else.43840:
 	fsub	%f1, %f1, %f29
 	subi	%g1, %g1, 4
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 4
-fjge_cont.51481:
-fjge_cont.51479:
-	jmp	fjge_cont.51477
-fjge_else.51476:
+fjge_cont.43841:
+fjge_cont.43839:
+	jmp	fjge_cont.43837
+fjge_else.43836:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51484
-	fjlt	%f1, %f16, fjge_else.51486
+	fjlt	%f29, %f1, fjge_else.43844
+	fjlt	%f1, %f16, fjge_else.43846
 	fmov	%f0, %f1
-	jmp	fjge_cont.51487
-fjge_else.51486:
+	jmp	fjge_cont.43847
+fjge_else.43846:
 	fadd	%f1, %f1, %f29
 	subi	%g1, %g1, 4
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 4
-fjge_cont.51487:
-	jmp	fjge_cont.51485
-fjge_else.51484:
+fjge_cont.43847:
+	jmp	fjge_cont.43845
+fjge_else.43844:
 	fsub	%f1, %f1, %f29
 	subi	%g1, %g1, 4
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 4
-fjge_cont.51485:
-fjge_cont.51477:
-fjge_cont.51475:
-	jmp	fjge_cont.51473
-fjge_else.51472:
+fjge_cont.43845:
+fjge_cont.43837:
+fjge_cont.43835:
+	jmp	fjge_cont.43833
+fjge_else.43832:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51488
-	fjlt	%f1, %f16, fjge_else.51490
+	fjlt	%f29, %f1, fjge_else.43848
+	fjlt	%f1, %f16, fjge_else.43850
 	fmov	%f0, %f1
-	jmp	fjge_cont.51491
-fjge_else.51490:
+	jmp	fjge_cont.43851
+fjge_else.43850:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51492
-	fjlt	%f1, %f16, fjge_else.51494
+	fjlt	%f29, %f1, fjge_else.43852
+	fjlt	%f1, %f16, fjge_else.43854
 	fmov	%f0, %f1
-	jmp	fjge_cont.51495
-fjge_else.51494:
+	jmp	fjge_cont.43855
+fjge_else.43854:
 	fadd	%f1, %f1, %f29
 	subi	%g1, %g1, 4
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 4
-fjge_cont.51495:
-	jmp	fjge_cont.51493
-fjge_else.51492:
+fjge_cont.43855:
+	jmp	fjge_cont.43853
+fjge_else.43852:
 	fsub	%f1, %f1, %f29
 	subi	%g1, %g1, 4
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 4
-fjge_cont.51493:
-fjge_cont.51491:
-	jmp	fjge_cont.51489
-fjge_else.51488:
+fjge_cont.43853:
+fjge_cont.43851:
+	jmp	fjge_cont.43849
+fjge_else.43848:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51496
-	fjlt	%f1, %f16, fjge_else.51498
+	fjlt	%f29, %f1, fjge_else.43856
+	fjlt	%f1, %f16, fjge_else.43858
 	fmov	%f0, %f1
-	jmp	fjge_cont.51499
-fjge_else.51498:
+	jmp	fjge_cont.43859
+fjge_else.43858:
 	fadd	%f1, %f1, %f29
 	subi	%g1, %g1, 4
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 4
-fjge_cont.51499:
-	jmp	fjge_cont.51497
-fjge_else.51496:
+fjge_cont.43859:
+	jmp	fjge_cont.43857
+fjge_else.43856:
 	fsub	%f1, %f1, %f29
 	subi	%g1, %g1, 4
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 4
-fjge_cont.51497:
-fjge_cont.51489:
-fjge_cont.51473:
-	fjlt	%f3, %f0, fjge_else.51500
-	fjlt	%f16, %f2, fjge_else.51502
+fjge_cont.43857:
+fjge_cont.43849:
+fjge_cont.43833:
+	fjlt	%f3, %f0, fjge_else.43860
+	fjlt	%f16, %f2, fjge_else.43862
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51503
-fjge_else.51502:
+	jmp	fjge_cont.43863
+fjge_else.43862:
 	addi	%g3, %g0, 1
-fjge_cont.51503:
-	jmp	fjge_cont.51501
-fjge_else.51500:
-	fjlt	%f16, %f2, fjge_else.51504
+fjge_cont.43863:
+	jmp	fjge_cont.43861
+fjge_else.43860:
+	fjlt	%f16, %f2, fjge_else.43864
 	addi	%g3, %g0, 1
-	jmp	fjge_cont.51505
-fjge_else.51504:
+	jmp	fjge_cont.43865
+fjge_else.43864:
 	addi	%g3, %g0, 0
-fjge_cont.51505:
-fjge_cont.51501:
-	fjlt	%f3, %f0, fjge_else.51506
+fjge_cont.43865:
+fjge_cont.43861:
+	fjlt	%f3, %f0, fjge_else.43866
 	fmov	%f1, %f0
-	jmp	fjge_cont.51507
-fjge_else.51506:
+	jmp	fjge_cont.43867
+fjge_else.43866:
 	fsub	%f1, %f29, %f0
-fjge_cont.51507:
-	fjlt	%f22, %f1, fjge_else.51508
+fjge_cont.43867:
+	fjlt	%f22, %f1, fjge_else.43868
 	fmov	%f0, %f1
-	jmp	fjge_cont.51509
-fjge_else.51508:
+	jmp	fjge_cont.43869
+fjge_else.43868:
 	fsub	%f0, %f3, %f1
-fjge_cont.51509:
+fjge_cont.43869:
 	fmul	%f1, %f0, %f21
 	fmul	%f0, %f1, %f1
 	fdiv	%f2, %f0, %f25
@@ -13873,22 +10821,22 @@ fjge_cont.51509:
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f17, %f0
 	fdiv	%f0, %f1, %f0
-	jne	%g3, %g0, jeq_else.51510
+	jne	%g3, %g0, jeq_else.43870
 	fneg	%f1, %f0
-	jmp	jeq_cont.51511
-jeq_else.51510:
+	jmp	jeq_cont.43871
+jeq_else.43870:
 	fmov	%f1, %f0
-jeq_cont.51511:
+jeq_cont.43871:
 	fmul	%f0, %f1, %f1
 	fmul	%f1, %f27, %f0
 	fsti	%f1, %g31, 568
 	fsub	%f0, %f17, %f0
 	fmul	%f0, %f27, %f0
 	fsti	%f0, %g31, 564
-	jmp	jeq_cont.51469
-jeq_else.51468:
+	jmp	jeq_cont.43829
+jeq_else.43828:
 	addi	%g5, %g0, 3
-	jne	%g4, %g5, jeq_else.51512
+	jne	%g4, %g5, jeq_else.43872
 	fldi	%f1, %g31, 540
 	ldi	%g3, %g3, -20
 	fldi	%f0, %g3, 0
@@ -13900,7 +10848,7 @@ jeq_else.51468:
 	fmul	%f1, %f1, %f1
 	fadd	%f0, %f0, %f1
 	fsqrt	%f0, %f0
-	setL %g3, l.45282
+	setL %g3, l.37992
 	fldi	%f1, %g3, 0
 	fdiv	%f0, %f0, %f1
 	fsti	%f0, %g1, 0
@@ -13912,145 +10860,145 @@ jeq_else.51468:
 	fsub	%f0, %f0, %f1
 	fmul	%f0, %f0, %f30
 	fsub	%f2, %f22, %f0
-	setL %g3, l.42247
+	setL %g3, l.35801
 	fldi	%f3, %g3, 0
-	setL %g3, l.42249
+	setL %g3, l.35803
 	fldi	%f4, %g3, 0
-	fjlt	%f2, %f16, fjge_else.51514
+	fjlt	%f2, %f16, fjge_else.43874
 	fmov	%f1, %f2
-	jmp	fjge_cont.51515
-fjge_else.51514:
+	jmp	fjge_cont.43875
+fjge_else.43874:
 	fneg	%f1, %f2
-fjge_cont.51515:
-	fjlt	%f29, %f1, fjge_else.51516
-	fjlt	%f1, %f16, fjge_else.51518
+fjge_cont.43875:
+	fjlt	%f29, %f1, fjge_else.43876
+	fjlt	%f1, %f16, fjge_else.43878
 	fmov	%f0, %f1
-	jmp	fjge_cont.51519
-fjge_else.51518:
+	jmp	fjge_cont.43879
+fjge_else.43878:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51520
-	fjlt	%f1, %f16, fjge_else.51522
+	fjlt	%f29, %f1, fjge_else.43880
+	fjlt	%f1, %f16, fjge_else.43882
 	fmov	%f0, %f1
-	jmp	fjge_cont.51523
-fjge_else.51522:
+	jmp	fjge_cont.43883
+fjge_else.43882:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51524
-	fjlt	%f1, %f16, fjge_else.51526
+	fjlt	%f29, %f1, fjge_else.43884
+	fjlt	%f1, %f16, fjge_else.43886
 	fmov	%f0, %f1
-	jmp	fjge_cont.51527
-fjge_else.51526:
+	jmp	fjge_cont.43887
+fjge_else.43886:
 	fadd	%f1, %f1, %f29
 	subi	%g1, %g1, 8
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 8
-fjge_cont.51527:
-	jmp	fjge_cont.51525
-fjge_else.51524:
+fjge_cont.43887:
+	jmp	fjge_cont.43885
+fjge_else.43884:
 	fsub	%f1, %f1, %f29
 	subi	%g1, %g1, 8
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 8
-fjge_cont.51525:
-fjge_cont.51523:
-	jmp	fjge_cont.51521
-fjge_else.51520:
+fjge_cont.43885:
+fjge_cont.43883:
+	jmp	fjge_cont.43881
+fjge_else.43880:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51528
-	fjlt	%f1, %f16, fjge_else.51530
+	fjlt	%f29, %f1, fjge_else.43888
+	fjlt	%f1, %f16, fjge_else.43890
 	fmov	%f0, %f1
-	jmp	fjge_cont.51531
-fjge_else.51530:
+	jmp	fjge_cont.43891
+fjge_else.43890:
 	fadd	%f1, %f1, %f29
 	subi	%g1, %g1, 8
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 8
-fjge_cont.51531:
-	jmp	fjge_cont.51529
-fjge_else.51528:
+fjge_cont.43891:
+	jmp	fjge_cont.43889
+fjge_else.43888:
 	fsub	%f1, %f1, %f29
 	subi	%g1, %g1, 8
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 8
-fjge_cont.51529:
-fjge_cont.51521:
-fjge_cont.51519:
-	jmp	fjge_cont.51517
-fjge_else.51516:
+fjge_cont.43889:
+fjge_cont.43881:
+fjge_cont.43879:
+	jmp	fjge_cont.43877
+fjge_else.43876:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51532
-	fjlt	%f1, %f16, fjge_else.51534
+	fjlt	%f29, %f1, fjge_else.43892
+	fjlt	%f1, %f16, fjge_else.43894
 	fmov	%f0, %f1
-	jmp	fjge_cont.51535
-fjge_else.51534:
+	jmp	fjge_cont.43895
+fjge_else.43894:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51536
-	fjlt	%f1, %f16, fjge_else.51538
+	fjlt	%f29, %f1, fjge_else.43896
+	fjlt	%f1, %f16, fjge_else.43898
 	fmov	%f0, %f1
-	jmp	fjge_cont.51539
-fjge_else.51538:
+	jmp	fjge_cont.43899
+fjge_else.43898:
 	fadd	%f1, %f1, %f29
 	subi	%g1, %g1, 8
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 8
-fjge_cont.51539:
-	jmp	fjge_cont.51537
-fjge_else.51536:
+fjge_cont.43899:
+	jmp	fjge_cont.43897
+fjge_else.43896:
 	fsub	%f1, %f1, %f29
 	subi	%g1, %g1, 8
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 8
-fjge_cont.51537:
-fjge_cont.51535:
-	jmp	fjge_cont.51533
-fjge_else.51532:
+fjge_cont.43897:
+fjge_cont.43895:
+	jmp	fjge_cont.43893
+fjge_else.43892:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51540
-	fjlt	%f1, %f16, fjge_else.51542
+	fjlt	%f29, %f1, fjge_else.43900
+	fjlt	%f1, %f16, fjge_else.43902
 	fmov	%f0, %f1
-	jmp	fjge_cont.51543
-fjge_else.51542:
+	jmp	fjge_cont.43903
+fjge_else.43902:
 	fadd	%f1, %f1, %f29
 	subi	%g1, %g1, 8
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 8
-fjge_cont.51543:
-	jmp	fjge_cont.51541
-fjge_else.51540:
+fjge_cont.43903:
+	jmp	fjge_cont.43901
+fjge_else.43900:
 	fsub	%f1, %f1, %f29
 	subi	%g1, %g1, 8
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 8
-fjge_cont.51541:
-fjge_cont.51533:
-fjge_cont.51517:
-	fjlt	%f3, %f0, fjge_else.51544
-	fjlt	%f16, %f2, fjge_else.51546
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.51547
-fjge_else.51546:
-	addi	%g3, %g0, 1
-fjge_cont.51547:
-	jmp	fjge_cont.51545
-fjge_else.51544:
-	fjlt	%f16, %f2, fjge_else.51548
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.51549
-fjge_else.51548:
-	addi	%g3, %g0, 0
-fjge_cont.51549:
-fjge_cont.51545:
-	fjlt	%f3, %f0, fjge_else.51550
+fjge_cont.43901:
+fjge_cont.43893:
+fjge_cont.43877:
+	fjlt	%f3, %f0, fjge_else.43904
+	fjlt	%f16, %f2, fjge_else.43906
+	addi	%g3, %g0, 0
+	jmp	fjge_cont.43907
+fjge_else.43906:
+	addi	%g3, %g0, 1
+fjge_cont.43907:
+	jmp	fjge_cont.43905
+fjge_else.43904:
+	fjlt	%f16, %f2, fjge_else.43908
+	addi	%g3, %g0, 1
+	jmp	fjge_cont.43909
+fjge_else.43908:
+	addi	%g3, %g0, 0
+fjge_cont.43909:
+fjge_cont.43905:
+	fjlt	%f3, %f0, fjge_else.43910
 	fmov	%f1, %f0
-	jmp	fjge_cont.51551
-fjge_else.51550:
+	jmp	fjge_cont.43911
+fjge_else.43910:
 	fsub	%f1, %f29, %f0
-fjge_cont.51551:
-	fjlt	%f22, %f1, fjge_else.51552
+fjge_cont.43911:
+	fjlt	%f22, %f1, fjge_else.43912
 	fmov	%f0, %f1
-	jmp	fjge_cont.51553
-fjge_else.51552:
+	jmp	fjge_cont.43913
+fjge_else.43912:
 	fsub	%f0, %f3, %f1
-fjge_cont.51553:
+fjge_cont.43913:
 	fmul	%f1, %f0, %f21
 	fmul	%f0, %f1, %f1
 	fdiv	%f2, %f0, %f25
@@ -14066,22 +11014,22 @@ fjge_cont.51553:
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f17, %f0
 	fdiv	%f0, %f1, %f0
-	jne	%g3, %g0, jeq_else.51554
+	jne	%g3, %g0, jeq_else.43914
 	fneg	%f1, %f0
-	jmp	jeq_cont.51555
-jeq_else.51554:
+	jmp	jeq_cont.43915
+jeq_else.43914:
 	fmov	%f1, %f0
-jeq_cont.51555:
+jeq_cont.43915:
 	fmul	%f0, %f1, %f1
 	fmul	%f1, %f0, %f27
 	fsti	%f1, %g31, 564
 	fsub	%f0, %f17, %f0
 	fmul	%f0, %f0, %f27
 	fsti	%f0, %g31, 560
-	jmp	jeq_cont.51513
-jeq_else.51512:
+	jmp	jeq_cont.43873
+jeq_else.43872:
 	addi	%g5, %g0, 4
-	jne	%g4, %g5, jeq_else.51556
+	jne	%g4, %g5, jeq_else.43916
 	fldi	%f1, %g31, 540
 	ldi	%g6, %g3, -20
 	fldi	%f0, %g6, 0
@@ -14099,87 +11047,87 @@ jeq_else.51512:
 	fmul	%f3, %f1, %f1
 	fmul	%f0, %f2, %f2
 	fadd	%f5, %f3, %f0
-	fjlt	%f1, %f16, fjge_else.51558
+	fjlt	%f1, %f16, fjge_else.43918
 	fmov	%f0, %f1
-	jmp	fjge_cont.51559
-fjge_else.51558:
+	jmp	fjge_cont.43919
+fjge_else.43918:
 	fneg	%f0, %f1
-fjge_cont.51559:
-	setL %g3, l.45186
+fjge_cont.43919:
+	setL %g3, l.37896
 	fldi	%f6, %g3, 0
-	fjlt	%f0, %f6, fjge_else.51560
+	fjlt	%f0, %f6, fjge_else.43920
 	fdiv	%f1, %f2, %f1
-	fjlt	%f1, %f16, fjge_else.51562
+	fjlt	%f1, %f16, fjge_else.43922
 	fmov	%f0, %f1
-	jmp	fjge_cont.51563
-fjge_else.51562:
+	jmp	fjge_cont.43923
+fjge_else.43922:
 	fneg	%f0, %f1
-fjge_cont.51563:
-	fjlt	%f17, %f0, fjge_else.51564
-	fjlt	%f0, %f20, fjge_else.51566
+fjge_cont.43923:
+	fjlt	%f17, %f0, fjge_else.43924
+	fjlt	%f0, %f20, fjge_else.43926
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51567
-fjge_else.51566:
+	jmp	fjge_cont.43927
+fjge_else.43926:
 	addi	%g3, %g0, -1
-fjge_cont.51567:
-	jmp	fjge_cont.51565
-fjge_else.51564:
+fjge_cont.43927:
+	jmp	fjge_cont.43925
+fjge_else.43924:
 	addi	%g3, %g0, 1
-fjge_cont.51565:
-	jne	%g3, %g0, jeq_else.51568
+fjge_cont.43925:
+	jne	%g3, %g0, jeq_else.43928
 	fmov	%f3, %f0
-	jmp	jeq_cont.51569
-jeq_else.51568:
+	jmp	jeq_cont.43929
+jeq_else.43928:
 	fdiv	%f3, %f17, %f0
-jeq_cont.51569:
+jeq_cont.43929:
 	fmul	%f0, %f3, %f3
-	setL %g4, l.45192
+	setL %g4, l.37902
 	fldi	%f1, %g4, 0
 	fmul	%f2, %f1, %f0
-	setL %g4, l.45194
+	setL %g4, l.37904
 	fldi	%f1, %g4, 0
 	fdiv	%f2, %f2, %f1
-	setL %g4, l.45196
+	setL %g4, l.37906
 	fldi	%f1, %g4, 0
 	fmul	%f4, %f1, %f0
-	setL %g4, l.45198
+	setL %g4, l.37908
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f4, %f1
-	setL %g4, l.45200
+	setL %g4, l.37910
 	fldi	%f1, %g4, 0
 	fmul	%f4, %f1, %f0
-	setL %g4, l.45202
+	setL %g4, l.37912
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f4, %f1
-	setL %g4, l.45204
+	setL %g4, l.37914
 	fldi	%f1, %g4, 0
 	fmul	%f4, %f1, %f0
-	setL %g4, l.45206
+	setL %g4, l.37916
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f4, %f1
-	setL %g4, l.45208
+	setL %g4, l.37918
 	fldi	%f1, %g4, 0
 	fmul	%f4, %f1, %f0
 	fadd	%f1, %f28, %f2
 	fdiv	%f2, %f4, %f1
-	setL %g4, l.45211
+	setL %g4, l.37921
 	fldi	%f1, %g4, 0
 	fmul	%f4, %f1, %f0
-	setL %g4, l.45213
+	setL %g4, l.37923
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f4, %f1
-	setL %g4, l.45215
+	setL %g4, l.37925
 	fldi	%f1, %g4, 0
 	fmul	%f4, %f1, %f0
-	setL %g4, l.45217
+	setL %g4, l.37927
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f4, %f1
-	setL %g4, l.45219
+	setL %g4, l.37929
 	fldi	%f1, %g4, 0
 	fmul	%f4, %f1, %f0
 	fadd	%f1, %f25, %f2
@@ -14187,7 +11135,7 @@ jeq_cont.51569:
 	fmul	%f2, %f25, %f0
 	fadd	%f1, %f26, %f1
 	fdiv	%f2, %f2, %f1
-	setL %g4, l.45223
+	setL %g4, l.37933
 	fldi	%f1, %g4, 0
 	fmul	%f4, %f1, %f0
 	fadd	%f1, %f24, %f2
@@ -14196,26 +11144,26 @@ jeq_cont.51569:
 	fdiv	%f0, %f0, %f1
 	fadd	%f0, %f17, %f0
 	fdiv	%f1, %f3, %f0
-	jlt	%g0, %g3, jle_else.51570
-	jlt	%g3, %g0, jge_else.51572
+	jlt	%g0, %g3, jle_else.43930
+	jlt	%g3, %g0, jge_else.43932
 	fmov	%f0, %f1
-	jmp	jge_cont.51573
-jge_else.51572:
+	jmp	jge_cont.43933
+jge_else.43932:
 	fsub	%f0, %f31, %f1
-jge_cont.51573:
-	jmp	jle_cont.51571
-jle_else.51570:
+jge_cont.43933:
+	jmp	jle_cont.43931
+jle_else.43930:
 	fsub	%f0, %f22, %f1
-jle_cont.51571:
-	setL %g3, l.45230
+jle_cont.43931:
+	setL %g3, l.37940
 	fldi	%f1, %g3, 0
 	fmul	%f0, %f0, %f1
 	fdiv	%f0, %f0, %f30
-	jmp	fjge_cont.51561
-fjge_else.51560:
-	setL %g3, l.45188
+	jmp	fjge_cont.43921
+fjge_else.43920:
+	setL %g3, l.37898
 	fldi	%f0, %g3, 0
-fjge_cont.51561:
+fjge_cont.43921:
 	fsti	%f0, %g1, 4
 	subi	%g1, %g1, 12
 	call	min_caml_floor
@@ -14229,85 +11177,85 @@ fjge_cont.51561:
 	fldi	%f0, %g5, -4
 	fsqrt	%f0, %f0
 	fmul	%f1, %f1, %f0
-	fjlt	%f5, %f16, fjge_else.51574
+	fjlt	%f5, %f16, fjge_else.43934
 	fmov	%f0, %f5
-	jmp	fjge_cont.51575
-fjge_else.51574:
+	jmp	fjge_cont.43935
+fjge_else.43934:
 	fneg	%f0, %f5
-fjge_cont.51575:
-	fjlt	%f0, %f6, fjge_else.51576
+fjge_cont.43935:
+	fjlt	%f0, %f6, fjge_else.43936
 	fdiv	%f1, %f1, %f5
-	fjlt	%f1, %f16, fjge_else.51578
+	fjlt	%f1, %f16, fjge_else.43938
 	fmov	%f0, %f1
-	jmp	fjge_cont.51579
-fjge_else.51578:
+	jmp	fjge_cont.43939
+fjge_else.43938:
 	fneg	%f0, %f1
-fjge_cont.51579:
-	fjlt	%f17, %f0, fjge_else.51580
-	fjlt	%f0, %f20, fjge_else.51582
+fjge_cont.43939:
+	fjlt	%f17, %f0, fjge_else.43940
+	fjlt	%f0, %f20, fjge_else.43942
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51583
-fjge_else.51582:
+	jmp	fjge_cont.43943
+fjge_else.43942:
 	addi	%g3, %g0, -1
-fjge_cont.51583:
-	jmp	fjge_cont.51581
-fjge_else.51580:
+fjge_cont.43943:
+	jmp	fjge_cont.43941
+fjge_else.43940:
 	addi	%g3, %g0, 1
-fjge_cont.51581:
-	jne	%g3, %g0, jeq_else.51584
+fjge_cont.43941:
+	jne	%g3, %g0, jeq_else.43944
 	fmov	%f4, %f0
-	jmp	jeq_cont.51585
-jeq_else.51584:
+	jmp	jeq_cont.43945
+jeq_else.43944:
 	fdiv	%f4, %f17, %f0
-jeq_cont.51585:
+jeq_cont.43945:
 	fmul	%f0, %f4, %f4
-	setL %g4, l.45192
+	setL %g4, l.37902
 	fldi	%f1, %g4, 0
 	fmul	%f2, %f1, %f0
-	setL %g4, l.45194
+	setL %g4, l.37904
 	fldi	%f1, %g4, 0
 	fdiv	%f2, %f2, %f1
-	setL %g4, l.45196
+	setL %g4, l.37906
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
-	setL %g4, l.45198
+	setL %g4, l.37908
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45200
+	setL %g4, l.37910
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
-	setL %g4, l.45202
+	setL %g4, l.37912
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45204
+	setL %g4, l.37914
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
-	setL %g4, l.45206
+	setL %g4, l.37916
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45208
+	setL %g4, l.37918
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
 	fadd	%f1, %f28, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45211
+	setL %g4, l.37921
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
-	setL %g4, l.45213
+	setL %g4, l.37923
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45215
+	setL %g4, l.37925
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
-	setL %g4, l.45217
+	setL %g4, l.37927
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45219
+	setL %g4, l.37929
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
 	fadd	%f1, %f25, %f2
@@ -14315,7 +11263,7 @@ jeq_cont.51585:
 	fmul	%f2, %f25, %f0
 	fadd	%f1, %f26, %f1
 	fdiv	%f2, %f2, %f1
-	setL %g4, l.45223
+	setL %g4, l.37933
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
 	fadd	%f1, %f24, %f2
@@ -14324,26 +11272,26 @@ jeq_cont.51585:
 	fdiv	%f0, %f0, %f1
 	fadd	%f0, %f17, %f0
 	fdiv	%f0, %f4, %f0
-	jlt	%g0, %g3, jle_else.51586
-	jlt	%g3, %g0, jge_else.51588
+	jlt	%g0, %g3, jle_else.43946
+	jlt	%g3, %g0, jge_else.43948
 	fmov	%f1, %f0
-	jmp	jge_cont.51589
-jge_else.51588:
+	jmp	jge_cont.43949
+jge_else.43948:
 	fsub	%f1, %f31, %f0
-jge_cont.51589:
-	jmp	jle_cont.51587
-jle_else.51586:
+jge_cont.43949:
+	jmp	jle_cont.43947
+jle_else.43946:
 	fsub	%f1, %f22, %f0
-jle_cont.51587:
-	setL %g3, l.45230
+jle_cont.43947:
+	setL %g3, l.37940
 	fldi	%f0, %g3, 0
 	fmul	%f0, %f1, %f0
 	fdiv	%f0, %f0, %f30
-	jmp	fjge_cont.51577
-fjge_else.51576:
-	setL %g3, l.45188
+	jmp	fjge_cont.43937
+fjge_else.43936:
+	setL %g3, l.37898
 	fldi	%f0, %g3, 0
-fjge_cont.51577:
+fjge_cont.43937:
 	fsti	%f0, %g1, 8
 	subi	%g1, %g1, 16
 	call	min_caml_floor
@@ -14351,7 +11299,7 @@ fjge_cont.51577:
 	fmov	%f1, %f0
 	fldi	%f0, %g1, 8
 	fsub	%f0, %f0, %f1
-	setL %g3, l.45267
+	setL %g3, l.37977
 	fldi	%f2, %g3, 0
 	fsub	%f1, %f21, %f7
 	fmul	%f1, %f1, %f1
@@ -14359,23 +11307,23 @@ fjge_cont.51577:
 	fsub	%f0, %f21, %f0
 	fmul	%f0, %f0, %f0
 	fsub	%f1, %f1, %f0
-	fjlt	%f1, %f16, fjge_else.51590
+	fjlt	%f1, %f16, fjge_else.43950
 	fmov	%f0, %f1
-	jmp	fjge_cont.51591
-fjge_else.51590:
+	jmp	fjge_cont.43951
+fjge_else.43950:
 	fmov	%f0, %f16
-fjge_cont.51591:
+fjge_cont.43951:
 	fmul	%f1, %f27, %f0
-	setL %g3, l.45271
+	setL %g3, l.37981
 	fldi	%f0, %g3, 0
 	fdiv	%f0, %f1, %f0
 	fsti	%f0, %g31, 560
-	jmp	jeq_cont.51557
-jeq_else.51556:
-jeq_cont.51557:
-jeq_cont.51513:
-jeq_cont.51469:
-jeq_cont.51461:
+	jmp	jeq_cont.43917
+jeq_else.43916:
+jeq_cont.43917:
+jeq_cont.43873:
+jeq_cont.43829:
+jeq_cont.43821:
 	slli	%g4, %g7, 2
 	ldi	%g3, %g31, 524
 	add	%g4, %g4, %g3
@@ -14390,7 +11338,7 @@ jeq_cont.51461:
 	fldi	%f0, %g31, 532
 	fsti	%f0, %g3, -8
 	fldi	%f0, %g26, 0
-	fjlt	%f0, %f21, fjge_else.51592
+	fjlt	%f0, %f21, fjge_else.43952
 	addi	%g4, %g0, 1
 	slli	%g3, %g25, 2
 	st	%g4, %g18, %g3
@@ -14404,7 +11352,7 @@ jeq_cont.51461:
 	fsti	%f0, %g3, -8
 	slli	%g3, %g25, 2
 	ld	%g4, %g17, %g3
-	setL %g3, l.45367
+	setL %g3, l.38077
 	fldi	%f0, %g3, 0
 	fmul	%f0, %f0, %f11
 	fldi	%f1, %g4, 0
@@ -14424,13 +11372,13 @@ jeq_cont.51461:
 	fsti	%f0, %g3, -4
 	fldi	%f0, %g31, 548
 	fsti	%f0, %g3, -8
-	jmp	fjge_cont.51593
-fjge_else.51592:
+	jmp	fjge_cont.43953
+fjge_else.43952:
 	addi	%g4, %g0, 0
 	slli	%g3, %g25, 2
 	st	%g4, %g18, %g3
-fjge_cont.51593:
-	setL %g3, l.45389
+fjge_cont.43953:
+	setL %g3, l.38099
 	fldi	%f3, %g3, 0
 	fldi	%f1, %g22, 0
 	fldi	%f0, %g31, 556
@@ -14462,9 +11410,9 @@ fjge_cont.51593:
 	addi	%g12, %g0, 0
 	ldi	%g13, %g31, 516
 	subi	%g1, %g1, 16
-	call	shadow_check_one_or_matrix.2843
+	call	shadow_check_one_or_matrix.2860
 	addi	%g1, %g1, 16
-	jne	%g3, %g0, jeq_else.51594
+	jne	%g3, %g0, jeq_else.43954
 	fldi	%f1, %g31, 556
 	fldi	%f0, %g31, 308
 	fmul	%f2, %f1, %f0
@@ -14487,9 +11435,9 @@ fjge_cont.51593:
 	fmul	%f0, %f0, %f2
 	fadd	%f0, %f3, %f0
 	fneg	%f0, %f0
-	fjlt	%f16, %f1, fjge_else.51596
-	jmp	fjge_cont.51597
-fjge_else.51596:
+	fjlt	%f16, %f1, fjge_else.43956
+	jmp	fjge_cont.43957
+fjge_else.43956:
 	fldi	%f3, %g31, 592
 	fldi	%f2, %g31, 568
 	fmul	%f2, %f1, %f2
@@ -14505,10 +11453,10 @@ fjge_else.51596:
 	fmul	%f1, %f1, %f2
 	fadd	%f1, %f3, %f1
 	fsti	%f1, %g31, 584
-fjge_cont.51597:
-	fjlt	%f16, %f0, fjge_else.51598
-	jmp	fjge_cont.51599
-fjge_else.51598:
+fjge_cont.43957:
+	fjlt	%f16, %f0, fjge_else.43958
+	jmp	fjge_cont.43959
+fjge_else.43958:
 	fmul	%f0, %f0, %f0
 	fmul	%f0, %f0, %f0
 	fmul	%f0, %f0, %f10
@@ -14521,10 +11469,10 @@ fjge_else.51598:
 	fldi	%f1, %g31, 584
 	fadd	%f0, %f1, %f0
 	fsti	%f0, %g31, 584
-fjge_cont.51599:
-	jmp	jeq_cont.51595
-jeq_else.51594:
-jeq_cont.51595:
+fjge_cont.43959:
+	jmp	jeq_cont.43955
+jeq_else.43954:
+jeq_cont.43955:
 	fldi	%f0, %g31, 540
 	fsti	%f0, %g31, 636
 	fldi	%f0, %g31, 536
@@ -14533,7 +11481,7 @@ jeq_cont.51595:
 	fsti	%f0, %g31, 628
 	ldi	%g3, %g31, 28
 	subi	%g3, %g3, 1
-	jlt	%g3, %g0, jge_else.51600
+	jlt	%g3, %g0, jge_else.43960
 	slli	%g4, %g3, 2
 	add	%g4, %g31, %g4
 	ldi	%g4, %g4, 272
@@ -14553,7 +11501,7 @@ jeq_cont.51595:
 	fsub	%f0, %f1, %f0
 	fsti	%f0, %g7, -8
 	addi	%g5, %g0, 2
-	jne	%g6, %g5, jeq_else.51602
+	jne	%g6, %g5, jeq_else.43962
 	ldi	%g4, %g4, -16
 	fldi	%f1, %g7, 0
 	fldi	%f3, %g7, -4
@@ -14567,12 +11515,12 @@ jeq_cont.51595:
 	fmul	%f0, %f0, %f2
 	fadd	%f0, %f1, %f0
 	fsti	%f0, %g7, -12
-	jmp	jeq_cont.51603
-jeq_else.51602:
+	jmp	jeq_cont.43963
+jeq_else.43962:
 	addi	%g5, %g0, 2
-	jlt	%g5, %g6, jle_else.51604
-	jmp	jle_cont.51605
-jle_else.51604:
+	jlt	%g5, %g6, jle_else.43964
+	jmp	jle_cont.43965
+jle_else.43964:
 	fldi	%f2, %g7, 0
 	fldi	%f1, %g7, -4
 	fldi	%f0, %g7, -8
@@ -14589,10 +11537,10 @@ jle_else.51604:
 	fmul	%f3, %f4, %f3
 	fadd	%f4, %f5, %f3
 	ldi	%g5, %g4, -12
-	jne	%g5, %g0, jeq_else.51606
+	jne	%g5, %g0, jeq_else.43966
 	fmov	%f3, %f4
-	jmp	jeq_cont.51607
-jeq_else.51606:
+	jmp	jeq_cont.43967
+jeq_else.43966:
 	fmul	%f5, %f1, %f0
 	ldi	%g4, %g4, -36
 	fldi	%f3, %g4, 0
@@ -14606,25 +11554,25 @@ jeq_else.51606:
 	fldi	%f0, %g4, -8
 	fmul	%f3, %f1, %f0
 	fadd	%f3, %f4, %f3
-jeq_cont.51607:
+jeq_cont.43967:
 	addi	%g4, %g0, 3
-	jne	%g6, %g4, jeq_else.51608
+	jne	%g6, %g4, jeq_else.43968
 	fsub	%f0, %f3, %f17
-	jmp	jeq_cont.51609
-jeq_else.51608:
+	jmp	jeq_cont.43969
+jeq_else.43968:
 	fmov	%f0, %f3
-jeq_cont.51609:
+jeq_cont.43969:
 	fsti	%f0, %g7, -12
-jle_cont.51605:
-jeq_cont.51603:
+jle_cont.43965:
+jeq_cont.43963:
 	subi	%g4, %g3, 1
 	subi	%g3, %g31, 540
 	subi	%g1, %g1, 16
-	call	setup_startp_constants.2806
+	call	setup_startp_constants.2823
 	addi	%g1, %g1, 16
-	jmp	jge_cont.51601
-jge_else.51600:
-jge_cont.51601:
+	jmp	jge_cont.43961
+jge_else.43960:
+jge_cont.43961:
 	ldi	%g3, %g31, 1720
 	subi	%g3, %g3, 1
 	sti	%g22, %g1, 12
@@ -14639,25 +11587,25 @@ jge_cont.51601:
 	sti	%g19, %g1, 48
 	mov	%g21, %g3
 	subi	%g1, %g1, 56
-	call	trace_reflections.2890
+	call	trace_reflections.2907
 	addi	%g1, %g1, 56
-	setL %g3, l.42726
+	setL %g3, l.36040
 	fldi	%f0, %g3, 0
-	fjlt	%f0, %f13, fjge_else.51610
+	fjlt	%f0, %f13, fjge_else.43970
 	return
-fjge_else.51610:
+fjge_else.43970:
 	addi	%g3, %g0, 4
-	jlt	%g25, %g3, jle_else.51612
-	jmp	jle_cont.51613
-jle_else.51612:
+	jlt	%g25, %g3, jle_else.43972
+	jmp	jle_cont.43973
+jle_else.43972:
 	addi	%g3, %g25, 1
 	addi	%g4, %g0, -1
 	slli	%g3, %g3, 2
 	ldi	%g19, %g1, 48
 	st	%g4, %g19, %g3
-jle_cont.51613:
+jle_cont.43973:
 	addi	%g3, %g0, 2
-	jne	%g30, %g3, jeq_else.51614
+	jne	%g30, %g3, jeq_else.43974
 	fldi	%f0, %g26, 0
 	fsub	%f0, %f17, %f0
 	fmul	%f13, %f13, %f0
@@ -14673,10 +11621,10 @@ jle_cont.51613:
 	ldi	%g21, %g1, 20
 	ldi	%g16, %g1, 16
 	ldi	%g22, %g1, 12
-	jmp	trace_ray.2895
-jeq_else.51614:
+	jmp	trace_ray.2912
+jeq_else.43974:
 	return
-jle_else.51435:
+jle_else.43795:
 	return
 
 !==============================
@@ -14685,8 +11633,8 @@ jle_else.51435:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f31, %f30, %f3, %f29, %f28, %f27, %f26, %f25, %f24, %f23, %f22, %f21, %f20, %f2, %f17, %f16, %f15, %f10, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-trace_diffuse_ray.2901:
-	setL %g4, l.42275
+trace_diffuse_ray.2918:
+	setL %g4, l.35829
 	fldi	%f0, %g4, 0
 	fsti	%f0, %g31, 528
 	addi	%g19, %g0, 0
@@ -14694,33 +11642,33 @@ trace_diffuse_ray.2901:
 	mov	%g17, %g3
 	mov	%g18, %g21
 	subi	%g1, %g1, 4
-	call	trace_or_matrix_fast.2868
+	call	trace_or_matrix_fast.2885
 	addi	%g1, %g1, 4
 	fldi	%f0, %g31, 528
-	setL %g3, l.44281
+	setL %g3, l.36991
 	fldi	%f1, %g3, 0
-	fjlt	%f1, %f0, fjge_else.51617
+	fjlt	%f1, %f0, fjge_else.43977
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51618
-fjge_else.51617:
-	setL %g3, l.45016
+	jmp	fjge_cont.43978
+fjge_else.43977:
+	setL %g3, l.37726
 	fldi	%f1, %g3, 0
-	fjlt	%f0, %f1, fjge_else.51619
+	fjlt	%f0, %f1, fjge_else.43979
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51620
-fjge_else.51619:
+	jmp	fjge_cont.43980
+fjge_else.43979:
 	addi	%g3, %g0, 1
-fjge_cont.51620:
-fjge_cont.51618:
-	jne	%g3, %g0, jeq_else.51621
+fjge_cont.43980:
+fjge_cont.43978:
+	jne	%g3, %g0, jeq_else.43981
 	return
-jeq_else.51621:
+jeq_else.43981:
 	ldi	%g3, %g31, 544
 	slli	%g3, %g3, 2
 	add	%g3, %g31, %g3
 	ldi	%g14, %g3, 272
 	ldi	%g3, %g14, -4
-	jne	%g3, %g28, jeq_else.51623
+	jne	%g3, %g28, jeq_else.43983
 	ldi	%g3, %g31, 524
 	fsti	%f16, %g31, 556
 	fsti	%f16, %g31, 552
@@ -14728,27 +11676,27 @@ jeq_else.51621:
 	subi	%g4, %g3, 1
 	slli	%g3, %g4, 2
 	fld	%f1, %g21, %g3
-	fjeq	%f1, %f16, fjne_else.51625
-	fjlt	%f16, %f1, fjge_else.51627
-	setL %g3, l.43536
+	fjeq	%f1, %f16, fjne_else.43985
+	fjlt	%f16, %f1, fjge_else.43987
+	setL %g3, l.36354
 	fldi	%f0, %g3, 0
-	jmp	fjge_cont.51628
-fjge_else.51627:
-	setL %g3, l.42509
+	jmp	fjge_cont.43988
+fjge_else.43987:
+	setL %g3, l.35959
 	fldi	%f0, %g3, 0
-fjge_cont.51628:
-	jmp	fjne_cont.51626
-fjne_else.51625:
+fjge_cont.43988:
+	jmp	fjne_cont.43986
+fjne_else.43985:
 	fmov	%f0, %f16
-fjne_cont.51626:
+fjne_cont.43986:
 	fneg	%f0, %f0
 	slli	%g3, %g4, 2
 	add	%g3, %g31, %g3
 	fsti	%f0, %g3, 556
-	jmp	jeq_cont.51624
-jeq_else.51623:
+	jmp	jeq_cont.43984
+jeq_else.43983:
 	addi	%g4, %g0, 2
-	jne	%g3, %g4, jeq_else.51629
+	jne	%g3, %g4, jeq_else.43989
 	ldi	%g3, %g14, -16
 	fldi	%f0, %g3, 0
 	fneg	%f0, %f0
@@ -14759,8 +11707,8 @@ jeq_else.51623:
 	fldi	%f0, %g3, -8
 	fneg	%f0, %f0
 	fsti	%f0, %g31, 548
-	jmp	jeq_cont.51630
-jeq_else.51629:
+	jmp	jeq_cont.43990
+jeq_else.43989:
 	fldi	%f1, %g31, 540
 	ldi	%g3, %g14, -20
 	fldi	%f0, %g3, 0
@@ -14779,12 +11727,12 @@ jeq_else.51629:
 	fldi	%f1, %g3, -8
 	fmul	%f7, %f0, %f1
 	ldi	%g3, %g14, -12
-	jne	%g3, %g0, jeq_else.51631
+	jne	%g3, %g0, jeq_else.43991
 	fsti	%f2, %g31, 556
 	fsti	%f6, %g31, 552
 	fsti	%f7, %g31, 548
-	jmp	jeq_cont.51632
-jeq_else.51631:
+	jmp	jeq_cont.43992
+jeq_else.43991:
 	ldi	%g3, %g14, -36
 	fldi	%f1, %g3, -8
 	fmul	%f5, %f3, %f1
@@ -14810,7 +11758,7 @@ jeq_else.51631:
 	fmul	%f0, %f0, %f21
 	fadd	%f0, %f7, %f0
 	fsti	%f0, %g31, 548
-jeq_cont.51632:
+jeq_cont.43992:
 	ldi	%g3, %g14, -24
 	fldi	%f2, %g31, 556
 	fmul	%f1, %f2, %f2
@@ -14821,18 +11769,18 @@ jeq_cont.51632:
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f1, %f0
 	fsqrt	%f1, %f0
-	fjeq	%f1, %f16, fjne_else.51633
-	jne	%g3, %g0, jeq_else.51635
+	fjeq	%f1, %f16, fjne_else.43993
+	jne	%g3, %g0, jeq_else.43995
 	fdiv	%f0, %f17, %f1
-	jmp	jeq_cont.51636
-jeq_else.51635:
+	jmp	jeq_cont.43996
+jeq_else.43995:
 	fdiv	%f0, %f20, %f1
-jeq_cont.51636:
-	jmp	fjne_cont.51634
-fjne_else.51633:
-	setL %g3, l.42509
+jeq_cont.43996:
+	jmp	fjne_cont.43994
+fjne_else.43993:
+	setL %g3, l.35959
 	fldi	%f0, %g3, 0
-fjne_cont.51634:
+fjne_cont.43994:
 	fmul	%f1, %f2, %f0
 	fsti	%f1, %g31, 556
 	fldi	%f1, %g31, 552
@@ -14841,8 +11789,8 @@ fjne_cont.51634:
 	fldi	%f1, %g31, 548
 	fmul	%f0, %f1, %f0
 	fsti	%f0, %g31, 548
-jeq_cont.51630:
-jeq_cont.51624:
+jeq_cont.43990:
+jeq_cont.43984:
 	ldi	%g3, %g14, 0
 	ldi	%g4, %g14, -32
 	fldi	%f0, %g4, 0
@@ -14851,21 +11799,21 @@ jeq_cont.51624:
 	fsti	%f0, %g31, 564
 	fldi	%f0, %g4, -8
 	fsti	%f0, %g31, 560
-	jne	%g3, %g28, jeq_else.51637
+	jne	%g3, %g28, jeq_else.43997
 	fldi	%f1, %g31, 540
 	ldi	%g5, %g14, -20
 	fldi	%f0, %g5, 0
 	fsub	%f5, %f1, %f0
-	setL %g3, l.45321
+	setL %g3, l.38031
 	fldi	%f9, %g3, 0
 	fmul	%f0, %f5, %f9
 	subi	%g1, %g1, 4
 	call	min_caml_floor
-	setL %g3, l.45323
+	setL %g3, l.38033
 	fldi	%f8, %g3, 0
 	fmul	%f0, %f0, %f8
 	fsub	%f7, %f5, %f0
-	setL %g3, l.45282
+	setL %g3, l.37992
 	fldi	%f6, %g3, 0
 	fldi	%f1, %g31, 532
 	fldi	%f0, %g5, -8
@@ -14875,174 +11823,174 @@ jeq_cont.51624:
 	addi	%g1, %g1, 4
 	fmul	%f0, %f0, %f8
 	fsub	%f1, %f5, %f0
-	fjlt	%f7, %f6, fjge_else.51639
-	fjlt	%f1, %f6, fjge_else.51641
-	setL %g3, l.42271
+	fjlt	%f7, %f6, fjge_else.43999
+	fjlt	%f1, %f6, fjge_else.44001
+	setL %g3, l.35825
 	fldi	%f0, %g3, 0
-	jmp	fjge_cont.51642
-fjge_else.51641:
-	setL %g3, l.42257
+	jmp	fjge_cont.44002
+fjge_else.44001:
+	setL %g3, l.35811
 	fldi	%f0, %g3, 0
-fjge_cont.51642:
-	jmp	fjge_cont.51640
-fjge_else.51639:
-	fjlt	%f1, %f6, fjge_else.51643
-	setL %g3, l.42257
+fjge_cont.44002:
+	jmp	fjge_cont.44000
+fjge_else.43999:
+	fjlt	%f1, %f6, fjge_else.44003
+	setL %g3, l.35811
 	fldi	%f0, %g3, 0
-	jmp	fjge_cont.51644
-fjge_else.51643:
-	setL %g3, l.42271
+	jmp	fjge_cont.44004
+fjge_else.44003:
+	setL %g3, l.35825
 	fldi	%f0, %g3, 0
-fjge_cont.51644:
-fjge_cont.51640:
+fjge_cont.44004:
+fjge_cont.44000:
 	fsti	%f0, %g31, 564
-	jmp	jeq_cont.51638
-jeq_else.51637:
+	jmp	jeq_cont.43998
+jeq_else.43997:
 	addi	%g4, %g0, 2
-	jne	%g3, %g4, jeq_else.51645
+	jne	%g3, %g4, jeq_else.44005
 	fldi	%f1, %g31, 536
-	setL %g3, l.45301
+	setL %g3, l.38011
 	fldi	%f0, %g3, 0
 	fmul	%f2, %f1, %f0
-	setL %g3, l.42247
+	setL %g3, l.35801
 	fldi	%f3, %g3, 0
-	setL %g3, l.42249
+	setL %g3, l.35803
 	fldi	%f4, %g3, 0
-	fjlt	%f2, %f16, fjge_else.51647
+	fjlt	%f2, %f16, fjge_else.44007
 	fmov	%f1, %f2
-	jmp	fjge_cont.51648
-fjge_else.51647:
+	jmp	fjge_cont.44008
+fjge_else.44007:
 	fneg	%f1, %f2
-fjge_cont.51648:
-	fjlt	%f29, %f1, fjge_else.51649
-	fjlt	%f1, %f16, fjge_else.51651
+fjge_cont.44008:
+	fjlt	%f29, %f1, fjge_else.44009
+	fjlt	%f1, %f16, fjge_else.44011
 	fmov	%f0, %f1
-	jmp	fjge_cont.51652
-fjge_else.51651:
+	jmp	fjge_cont.44012
+fjge_else.44011:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51653
-	fjlt	%f1, %f16, fjge_else.51655
+	fjlt	%f29, %f1, fjge_else.44013
+	fjlt	%f1, %f16, fjge_else.44015
 	fmov	%f0, %f1
-	jmp	fjge_cont.51656
-fjge_else.51655:
+	jmp	fjge_cont.44016
+fjge_else.44015:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51657
-	fjlt	%f1, %f16, fjge_else.51659
+	fjlt	%f29, %f1, fjge_else.44017
+	fjlt	%f1, %f16, fjge_else.44019
 	fmov	%f0, %f1
-	jmp	fjge_cont.51660
-fjge_else.51659:
+	jmp	fjge_cont.44020
+fjge_else.44019:
 	fadd	%f1, %f1, %f29
 	subi	%g1, %g1, 4
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 4
-fjge_cont.51660:
-	jmp	fjge_cont.51658
-fjge_else.51657:
+fjge_cont.44020:
+	jmp	fjge_cont.44018
+fjge_else.44017:
 	fsub	%f1, %f1, %f29
 	subi	%g1, %g1, 4
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 4
-fjge_cont.51658:
-fjge_cont.51656:
-	jmp	fjge_cont.51654
-fjge_else.51653:
+fjge_cont.44018:
+fjge_cont.44016:
+	jmp	fjge_cont.44014
+fjge_else.44013:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51661
-	fjlt	%f1, %f16, fjge_else.51663
+	fjlt	%f29, %f1, fjge_else.44021
+	fjlt	%f1, %f16, fjge_else.44023
 	fmov	%f0, %f1
-	jmp	fjge_cont.51664
-fjge_else.51663:
+	jmp	fjge_cont.44024
+fjge_else.44023:
 	fadd	%f1, %f1, %f29
 	subi	%g1, %g1, 4
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 4
-fjge_cont.51664:
-	jmp	fjge_cont.51662
-fjge_else.51661:
+fjge_cont.44024:
+	jmp	fjge_cont.44022
+fjge_else.44021:
 	fsub	%f1, %f1, %f29
 	subi	%g1, %g1, 4
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 4
-fjge_cont.51662:
-fjge_cont.51654:
-fjge_cont.51652:
-	jmp	fjge_cont.51650
-fjge_else.51649:
+fjge_cont.44022:
+fjge_cont.44014:
+fjge_cont.44012:
+	jmp	fjge_cont.44010
+fjge_else.44009:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51665
-	fjlt	%f1, %f16, fjge_else.51667
+	fjlt	%f29, %f1, fjge_else.44025
+	fjlt	%f1, %f16, fjge_else.44027
 	fmov	%f0, %f1
-	jmp	fjge_cont.51668
-fjge_else.51667:
+	jmp	fjge_cont.44028
+fjge_else.44027:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51669
-	fjlt	%f1, %f16, fjge_else.51671
+	fjlt	%f29, %f1, fjge_else.44029
+	fjlt	%f1, %f16, fjge_else.44031
 	fmov	%f0, %f1
-	jmp	fjge_cont.51672
-fjge_else.51671:
+	jmp	fjge_cont.44032
+fjge_else.44031:
 	fadd	%f1, %f1, %f29
 	subi	%g1, %g1, 4
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 4
-fjge_cont.51672:
-	jmp	fjge_cont.51670
-fjge_else.51669:
+fjge_cont.44032:
+	jmp	fjge_cont.44030
+fjge_else.44029:
 	fsub	%f1, %f1, %f29
 	subi	%g1, %g1, 4
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 4
-fjge_cont.51670:
-fjge_cont.51668:
-	jmp	fjge_cont.51666
-fjge_else.51665:
+fjge_cont.44030:
+fjge_cont.44028:
+	jmp	fjge_cont.44026
+fjge_else.44025:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51673
-	fjlt	%f1, %f16, fjge_else.51675
+	fjlt	%f29, %f1, fjge_else.44033
+	fjlt	%f1, %f16, fjge_else.44035
 	fmov	%f0, %f1
-	jmp	fjge_cont.51676
-fjge_else.51675:
+	jmp	fjge_cont.44036
+fjge_else.44035:
 	fadd	%f1, %f1, %f29
 	subi	%g1, %g1, 4
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 4
-fjge_cont.51676:
-	jmp	fjge_cont.51674
-fjge_else.51673:
+fjge_cont.44036:
+	jmp	fjge_cont.44034
+fjge_else.44033:
 	fsub	%f1, %f1, %f29
 	subi	%g1, %g1, 4
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 4
-fjge_cont.51674:
-fjge_cont.51666:
-fjge_cont.51650:
-	fjlt	%f3, %f0, fjge_else.51677
-	fjlt	%f16, %f2, fjge_else.51679
+fjge_cont.44034:
+fjge_cont.44026:
+fjge_cont.44010:
+	fjlt	%f3, %f0, fjge_else.44037
+	fjlt	%f16, %f2, fjge_else.44039
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51680
-fjge_else.51679:
+	jmp	fjge_cont.44040
+fjge_else.44039:
 	addi	%g3, %g0, 1
-fjge_cont.51680:
-	jmp	fjge_cont.51678
-fjge_else.51677:
-	fjlt	%f16, %f2, fjge_else.51681
+fjge_cont.44040:
+	jmp	fjge_cont.44038
+fjge_else.44037:
+	fjlt	%f16, %f2, fjge_else.44041
 	addi	%g3, %g0, 1
-	jmp	fjge_cont.51682
-fjge_else.51681:
+	jmp	fjge_cont.44042
+fjge_else.44041:
 	addi	%g3, %g0, 0
-fjge_cont.51682:
-fjge_cont.51678:
-	fjlt	%f3, %f0, fjge_else.51683
+fjge_cont.44042:
+fjge_cont.44038:
+	fjlt	%f3, %f0, fjge_else.44043
 	fmov	%f1, %f0
-	jmp	fjge_cont.51684
-fjge_else.51683:
+	jmp	fjge_cont.44044
+fjge_else.44043:
 	fsub	%f1, %f29, %f0
-fjge_cont.51684:
-	fjlt	%f22, %f1, fjge_else.51685
+fjge_cont.44044:
+	fjlt	%f22, %f1, fjge_else.44045
 	fmov	%f0, %f1
-	jmp	fjge_cont.51686
-fjge_else.51685:
+	jmp	fjge_cont.44046
+fjge_else.44045:
 	fsub	%f0, %f3, %f1
-fjge_cont.51686:
+fjge_cont.44046:
 	fmul	%f1, %f0, %f21
 	fmul	%f0, %f1, %f1
 	fdiv	%f2, %f0, %f25
@@ -15058,22 +12006,22 @@ fjge_cont.51686:
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f17, %f0
 	fdiv	%f0, %f1, %f0
-	jne	%g3, %g0, jeq_else.51687
+	jne	%g3, %g0, jeq_else.44047
 	fneg	%f1, %f0
-	jmp	jeq_cont.51688
-jeq_else.51687:
+	jmp	jeq_cont.44048
+jeq_else.44047:
 	fmov	%f1, %f0
-jeq_cont.51688:
+jeq_cont.44048:
 	fmul	%f0, %f1, %f1
 	fmul	%f1, %f27, %f0
 	fsti	%f1, %g31, 568
 	fsub	%f0, %f17, %f0
 	fmul	%f0, %f27, %f0
 	fsti	%f0, %g31, 564
-	jmp	jeq_cont.51646
-jeq_else.51645:
+	jmp	jeq_cont.44006
+jeq_else.44005:
 	addi	%g4, %g0, 3
-	jne	%g3, %g4, jeq_else.51689
+	jne	%g3, %g4, jeq_else.44049
 	fldi	%f1, %g31, 540
 	ldi	%g3, %g14, -20
 	fldi	%f0, %g3, 0
@@ -15085,7 +12033,7 @@ jeq_else.51645:
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f1, %f0
 	fsqrt	%f0, %f0
-	setL %g3, l.45282
+	setL %g3, l.37992
 	fldi	%f1, %g3, 0
 	fdiv	%f0, %f0, %f1
 	fsti	%f0, %g1, 0
@@ -15097,145 +12045,145 @@ jeq_else.51645:
 	fsub	%f0, %f0, %f1
 	fmul	%f0, %f0, %f30
 	fsub	%f2, %f22, %f0
-	setL %g3, l.42247
+	setL %g3, l.35801
 	fldi	%f3, %g3, 0
-	setL %g3, l.42249
+	setL %g3, l.35803
 	fldi	%f4, %g3, 0
-	fjlt	%f2, %f16, fjge_else.51691
+	fjlt	%f2, %f16, fjge_else.44051
 	fmov	%f1, %f2
-	jmp	fjge_cont.51692
-fjge_else.51691:
+	jmp	fjge_cont.44052
+fjge_else.44051:
 	fneg	%f1, %f2
-fjge_cont.51692:
-	fjlt	%f29, %f1, fjge_else.51693
-	fjlt	%f1, %f16, fjge_else.51695
+fjge_cont.44052:
+	fjlt	%f29, %f1, fjge_else.44053
+	fjlt	%f1, %f16, fjge_else.44055
 	fmov	%f0, %f1
-	jmp	fjge_cont.51696
-fjge_else.51695:
+	jmp	fjge_cont.44056
+fjge_else.44055:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51697
-	fjlt	%f1, %f16, fjge_else.51699
+	fjlt	%f29, %f1, fjge_else.44057
+	fjlt	%f1, %f16, fjge_else.44059
 	fmov	%f0, %f1
-	jmp	fjge_cont.51700
-fjge_else.51699:
+	jmp	fjge_cont.44060
+fjge_else.44059:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51701
-	fjlt	%f1, %f16, fjge_else.51703
+	fjlt	%f29, %f1, fjge_else.44061
+	fjlt	%f1, %f16, fjge_else.44063
 	fmov	%f0, %f1
-	jmp	fjge_cont.51704
-fjge_else.51703:
+	jmp	fjge_cont.44064
+fjge_else.44063:
 	fadd	%f1, %f1, %f29
 	subi	%g1, %g1, 8
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 8
-fjge_cont.51704:
-	jmp	fjge_cont.51702
-fjge_else.51701:
+fjge_cont.44064:
+	jmp	fjge_cont.44062
+fjge_else.44061:
 	fsub	%f1, %f1, %f29
 	subi	%g1, %g1, 8
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 8
-fjge_cont.51702:
-fjge_cont.51700:
-	jmp	fjge_cont.51698
-fjge_else.51697:
+fjge_cont.44062:
+fjge_cont.44060:
+	jmp	fjge_cont.44058
+fjge_else.44057:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51705
-	fjlt	%f1, %f16, fjge_else.51707
+	fjlt	%f29, %f1, fjge_else.44065
+	fjlt	%f1, %f16, fjge_else.44067
 	fmov	%f0, %f1
-	jmp	fjge_cont.51708
-fjge_else.51707:
+	jmp	fjge_cont.44068
+fjge_else.44067:
 	fadd	%f1, %f1, %f29
 	subi	%g1, %g1, 8
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 8
-fjge_cont.51708:
-	jmp	fjge_cont.51706
-fjge_else.51705:
+fjge_cont.44068:
+	jmp	fjge_cont.44066
+fjge_else.44065:
 	fsub	%f1, %f1, %f29
 	subi	%g1, %g1, 8
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 8
-fjge_cont.51706:
-fjge_cont.51698:
-fjge_cont.51696:
-	jmp	fjge_cont.51694
-fjge_else.51693:
+fjge_cont.44066:
+fjge_cont.44058:
+fjge_cont.44056:
+	jmp	fjge_cont.44054
+fjge_else.44053:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51709
-	fjlt	%f1, %f16, fjge_else.51711
+	fjlt	%f29, %f1, fjge_else.44069
+	fjlt	%f1, %f16, fjge_else.44071
 	fmov	%f0, %f1
-	jmp	fjge_cont.51712
-fjge_else.51711:
+	jmp	fjge_cont.44072
+fjge_else.44071:
 	fadd	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51713
-	fjlt	%f1, %f16, fjge_else.51715
+	fjlt	%f29, %f1, fjge_else.44073
+	fjlt	%f1, %f16, fjge_else.44075
 	fmov	%f0, %f1
-	jmp	fjge_cont.51716
-fjge_else.51715:
+	jmp	fjge_cont.44076
+fjge_else.44075:
 	fadd	%f1, %f1, %f29
 	subi	%g1, %g1, 8
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 8
-fjge_cont.51716:
-	jmp	fjge_cont.51714
-fjge_else.51713:
+fjge_cont.44076:
+	jmp	fjge_cont.44074
+fjge_else.44073:
 	fsub	%f1, %f1, %f29
 	subi	%g1, %g1, 8
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 8
-fjge_cont.51714:
-fjge_cont.51712:
-	jmp	fjge_cont.51710
-fjge_else.51709:
+fjge_cont.44074:
+fjge_cont.44072:
+	jmp	fjge_cont.44070
+fjge_else.44069:
 	fsub	%f1, %f1, %f29
-	fjlt	%f29, %f1, fjge_else.51717
-	fjlt	%f1, %f16, fjge_else.51719
+	fjlt	%f29, %f1, fjge_else.44077
+	fjlt	%f1, %f16, fjge_else.44079
 	fmov	%f0, %f1
-	jmp	fjge_cont.51720
-fjge_else.51719:
+	jmp	fjge_cont.44080
+fjge_else.44079:
 	fadd	%f1, %f1, %f29
 	subi	%g1, %g1, 8
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 8
-fjge_cont.51720:
-	jmp	fjge_cont.51718
-fjge_else.51717:
+fjge_cont.44080:
+	jmp	fjge_cont.44078
+fjge_else.44077:
 	fsub	%f1, %f1, %f29
 	subi	%g1, %g1, 8
-	call	sin_sub.2497
+	call	sin_sub.2518
 	addi	%g1, %g1, 8
-fjge_cont.51718:
-fjge_cont.51710:
-fjge_cont.51694:
-	fjlt	%f3, %f0, fjge_else.51721
-	fjlt	%f16, %f2, fjge_else.51723
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.51724
-fjge_else.51723:
-	addi	%g3, %g0, 1
-fjge_cont.51724:
-	jmp	fjge_cont.51722
-fjge_else.51721:
-	fjlt	%f16, %f2, fjge_else.51725
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.51726
-fjge_else.51725:
-	addi	%g3, %g0, 0
-fjge_cont.51726:
-fjge_cont.51722:
-	fjlt	%f3, %f0, fjge_else.51727
+fjge_cont.44078:
+fjge_cont.44070:
+fjge_cont.44054:
+	fjlt	%f3, %f0, fjge_else.44081
+	fjlt	%f16, %f2, fjge_else.44083
+	addi	%g3, %g0, 0
+	jmp	fjge_cont.44084
+fjge_else.44083:
+	addi	%g3, %g0, 1
+fjge_cont.44084:
+	jmp	fjge_cont.44082
+fjge_else.44081:
+	fjlt	%f16, %f2, fjge_else.44085
+	addi	%g3, %g0, 1
+	jmp	fjge_cont.44086
+fjge_else.44085:
+	addi	%g3, %g0, 0
+fjge_cont.44086:
+fjge_cont.44082:
+	fjlt	%f3, %f0, fjge_else.44087
 	fmov	%f1, %f0
-	jmp	fjge_cont.51728
-fjge_else.51727:
+	jmp	fjge_cont.44088
+fjge_else.44087:
 	fsub	%f1, %f29, %f0
-fjge_cont.51728:
-	fjlt	%f22, %f1, fjge_else.51729
+fjge_cont.44088:
+	fjlt	%f22, %f1, fjge_else.44089
 	fmov	%f0, %f1
-	jmp	fjge_cont.51730
-fjge_else.51729:
+	jmp	fjge_cont.44090
+fjge_else.44089:
 	fsub	%f0, %f3, %f1
-fjge_cont.51730:
+fjge_cont.44090:
 	fmul	%f1, %f0, %f21
 	fmul	%f0, %f1, %f1
 	fdiv	%f2, %f0, %f25
@@ -15251,22 +12199,22 @@ fjge_cont.51730:
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f17, %f0
 	fdiv	%f0, %f1, %f0
-	jne	%g3, %g0, jeq_else.51731
+	jne	%g3, %g0, jeq_else.44091
 	fneg	%f1, %f0
-	jmp	jeq_cont.51732
-jeq_else.51731:
+	jmp	jeq_cont.44092
+jeq_else.44091:
 	fmov	%f1, %f0
-jeq_cont.51732:
+jeq_cont.44092:
 	fmul	%f0, %f1, %f1
 	fmul	%f1, %f0, %f27
 	fsti	%f1, %g31, 564
 	fsub	%f0, %f17, %f0
 	fmul	%f0, %f0, %f27
 	fsti	%f0, %g31, 560
-	jmp	jeq_cont.51690
-jeq_else.51689:
+	jmp	jeq_cont.44050
+jeq_else.44049:
 	addi	%g4, %g0, 4
-	jne	%g3, %g4, jeq_else.51733
+	jne	%g3, %g4, jeq_else.44093
 	fldi	%f1, %g31, 540
 	ldi	%g5, %g14, -20
 	fldi	%f0, %g5, 0
@@ -15284,87 +12232,87 @@ jeq_else.51689:
 	fmul	%f3, %f1, %f1
 	fmul	%f0, %f2, %f2
 	fadd	%f5, %f3, %f0
-	fjlt	%f1, %f16, fjge_else.51735
+	fjlt	%f1, %f16, fjge_else.44095
 	fmov	%f0, %f1
-	jmp	fjge_cont.51736
-fjge_else.51735:
+	jmp	fjge_cont.44096
+fjge_else.44095:
 	fneg	%f0, %f1
-fjge_cont.51736:
-	setL %g3, l.45186
+fjge_cont.44096:
+	setL %g3, l.37896
 	fldi	%f6, %g3, 0
-	fjlt	%f0, %f6, fjge_else.51737
+	fjlt	%f0, %f6, fjge_else.44097
 	fdiv	%f1, %f2, %f1
-	fjlt	%f1, %f16, fjge_else.51739
+	fjlt	%f1, %f16, fjge_else.44099
 	fmov	%f0, %f1
-	jmp	fjge_cont.51740
-fjge_else.51739:
+	jmp	fjge_cont.44100
+fjge_else.44099:
 	fneg	%f0, %f1
-fjge_cont.51740:
-	fjlt	%f17, %f0, fjge_else.51741
-	fjlt	%f0, %f20, fjge_else.51743
+fjge_cont.44100:
+	fjlt	%f17, %f0, fjge_else.44101
+	fjlt	%f0, %f20, fjge_else.44103
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51744
-fjge_else.51743:
+	jmp	fjge_cont.44104
+fjge_else.44103:
 	addi	%g3, %g0, -1
-fjge_cont.51744:
-	jmp	fjge_cont.51742
-fjge_else.51741:
+fjge_cont.44104:
+	jmp	fjge_cont.44102
+fjge_else.44101:
 	addi	%g3, %g0, 1
-fjge_cont.51742:
-	jne	%g3, %g0, jeq_else.51745
+fjge_cont.44102:
+	jne	%g3, %g0, jeq_else.44105
 	fmov	%f4, %f0
-	jmp	jeq_cont.51746
-jeq_else.51745:
+	jmp	jeq_cont.44106
+jeq_else.44105:
 	fdiv	%f4, %f17, %f0
-jeq_cont.51746:
+jeq_cont.44106:
 	fmul	%f0, %f4, %f4
-	setL %g4, l.45192
+	setL %g4, l.37902
 	fldi	%f1, %g4, 0
 	fmul	%f2, %f1, %f0
-	setL %g4, l.45194
+	setL %g4, l.37904
 	fldi	%f1, %g4, 0
 	fdiv	%f2, %f2, %f1
-	setL %g4, l.45196
+	setL %g4, l.37906
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
-	setL %g4, l.45198
+	setL %g4, l.37908
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45200
+	setL %g4, l.37910
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
-	setL %g4, l.45202
+	setL %g4, l.37912
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45204
+	setL %g4, l.37914
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
-	setL %g4, l.45206
+	setL %g4, l.37916
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45208
+	setL %g4, l.37918
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
 	fadd	%f1, %f28, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45211
+	setL %g4, l.37921
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
-	setL %g4, l.45213
+	setL %g4, l.37923
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45215
+	setL %g4, l.37925
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
-	setL %g4, l.45217
+	setL %g4, l.37927
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45219
+	setL %g4, l.37929
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
 	fadd	%f1, %f25, %f2
@@ -15372,7 +12320,7 @@ jeq_cont.51746:
 	fmul	%f2, %f25, %f0
 	fadd	%f1, %f26, %f1
 	fdiv	%f2, %f2, %f1
-	setL %g4, l.45223
+	setL %g4, l.37933
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
 	fadd	%f1, %f24, %f2
@@ -15381,26 +12329,26 @@ jeq_cont.51746:
 	fdiv	%f0, %f0, %f1
 	fadd	%f0, %f17, %f0
 	fdiv	%f1, %f4, %f0
-	jlt	%g0, %g3, jle_else.51747
-	jlt	%g3, %g0, jge_else.51749
+	jlt	%g0, %g3, jle_else.44107
+	jlt	%g3, %g0, jge_else.44109
 	fmov	%f0, %f1
-	jmp	jge_cont.51750
-jge_else.51749:
+	jmp	jge_cont.44110
+jge_else.44109:
 	fsub	%f0, %f31, %f1
-jge_cont.51750:
-	jmp	jle_cont.51748
-jle_else.51747:
+jge_cont.44110:
+	jmp	jle_cont.44108
+jle_else.44107:
 	fsub	%f0, %f22, %f1
-jle_cont.51748:
-	setL %g3, l.45230
+jle_cont.44108:
+	setL %g3, l.37940
 	fldi	%f1, %g3, 0
 	fmul	%f0, %f0, %f1
 	fdiv	%f0, %f0, %f30
-	jmp	fjge_cont.51738
-fjge_else.51737:
-	setL %g3, l.45188
+	jmp	fjge_cont.44098
+fjge_else.44097:
+	setL %g3, l.37898
 	fldi	%f0, %g3, 0
-fjge_cont.51738:
+fjge_cont.44098:
 	fsti	%f0, %g1, 4
 	subi	%g1, %g1, 12
 	call	min_caml_floor
@@ -15414,85 +12362,85 @@ fjge_cont.51738:
 	fldi	%f0, %g6, -4
 	fsqrt	%f0, %f0
 	fmul	%f1, %f1, %f0
-	fjlt	%f5, %f16, fjge_else.51751
+	fjlt	%f5, %f16, fjge_else.44111
 	fmov	%f0, %f5
-	jmp	fjge_cont.51752
-fjge_else.51751:
+	jmp	fjge_cont.44112
+fjge_else.44111:
 	fneg	%f0, %f5
-fjge_cont.51752:
-	fjlt	%f0, %f6, fjge_else.51753
+fjge_cont.44112:
+	fjlt	%f0, %f6, fjge_else.44113
 	fdiv	%f1, %f1, %f5
-	fjlt	%f1, %f16, fjge_else.51755
+	fjlt	%f1, %f16, fjge_else.44115
 	fmov	%f0, %f1
-	jmp	fjge_cont.51756
-fjge_else.51755:
+	jmp	fjge_cont.44116
+fjge_else.44115:
 	fneg	%f0, %f1
-fjge_cont.51756:
-	fjlt	%f17, %f0, fjge_else.51757
-	fjlt	%f0, %f20, fjge_else.51759
+fjge_cont.44116:
+	fjlt	%f17, %f0, fjge_else.44117
+	fjlt	%f0, %f20, fjge_else.44119
 	addi	%g3, %g0, 0
-	jmp	fjge_cont.51760
-fjge_else.51759:
+	jmp	fjge_cont.44120
+fjge_else.44119:
 	addi	%g3, %g0, -1
-fjge_cont.51760:
-	jmp	fjge_cont.51758
-fjge_else.51757:
+fjge_cont.44120:
+	jmp	fjge_cont.44118
+fjge_else.44117:
 	addi	%g3, %g0, 1
-fjge_cont.51758:
-	jne	%g3, %g0, jeq_else.51761
+fjge_cont.44118:
+	jne	%g3, %g0, jeq_else.44121
 	fmov	%f4, %f0
-	jmp	jeq_cont.51762
-jeq_else.51761:
+	jmp	jeq_cont.44122
+jeq_else.44121:
 	fdiv	%f4, %f17, %f0
-jeq_cont.51762:
+jeq_cont.44122:
 	fmul	%f0, %f4, %f4
-	setL %g4, l.45192
+	setL %g4, l.37902
 	fldi	%f1, %g4, 0
 	fmul	%f2, %f1, %f0
-	setL %g4, l.45194
+	setL %g4, l.37904
 	fldi	%f1, %g4, 0
 	fdiv	%f2, %f2, %f1
-	setL %g4, l.45196
+	setL %g4, l.37906
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
-	setL %g4, l.45198
+	setL %g4, l.37908
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45200
+	setL %g4, l.37910
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
-	setL %g4, l.45202
+	setL %g4, l.37912
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45204
+	setL %g4, l.37914
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
-	setL %g4, l.45206
+	setL %g4, l.37916
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45208
+	setL %g4, l.37918
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
 	fadd	%f1, %f28, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45211
+	setL %g4, l.37921
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
-	setL %g4, l.45213
+	setL %g4, l.37923
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45215
+	setL %g4, l.37925
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
-	setL %g4, l.45217
+	setL %g4, l.37927
 	fldi	%f1, %g4, 0
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g4, l.45219
+	setL %g4, l.37929
 	fldi	%f1, %g4, 0
 	fmul	%f3, %f1, %f0
 	fadd	%f1, %f25, %f2
@@ -15500,7 +12448,7 @@ jeq_cont.51762:
 	fmul	%f1, %f25, %f0
 	fadd	%f2, %f26, %f2
 	fdiv	%f1, %f1, %f2
-	setL %g4, l.45223
+	setL %g4, l.37933
 	fldi	%f2, %g4, 0
 	fmul	%f2, %f2, %f0
 	fadd	%f1, %f24, %f1
@@ -15509,26 +12457,26 @@ jeq_cont.51762:
 	fdiv	%f0, %f0, %f1
 	fadd	%f0, %f17, %f0
 	fdiv	%f0, %f4, %f0
-	jlt	%g0, %g3, jle_else.51763
-	jlt	%g3, %g0, jge_else.51765
+	jlt	%g0, %g3, jle_else.44123
+	jlt	%g3, %g0, jge_else.44125
 	fmov	%f1, %f0
-	jmp	jge_cont.51766
-jge_else.51765:
+	jmp	jge_cont.44126
+jge_else.44125:
 	fsub	%f1, %f31, %f0
-jge_cont.51766:
-	jmp	jle_cont.51764
-jle_else.51763:
+jge_cont.44126:
+	jmp	jle_cont.44124
+jle_else.44123:
 	fsub	%f1, %f22, %f0
-jle_cont.51764:
-	setL %g3, l.45230
+jle_cont.44124:
+	setL %g3, l.37940
 	fldi	%f0, %g3, 0
 	fmul	%f0, %f1, %f0
 	fdiv	%f0, %f0, %f30
-	jmp	fjge_cont.51754
-fjge_else.51753:
-	setL %g3, l.45188
+	jmp	fjge_cont.44114
+fjge_else.44113:
+	setL %g3, l.37898
 	fldi	%f0, %g3, 0
-fjge_cont.51754:
+fjge_cont.44114:
 	fsti	%f0, %g1, 8
 	subi	%g1, %g1, 16
 	call	min_caml_floor
@@ -15536,7 +12484,7 @@ fjge_cont.51754:
 	fmov	%f1, %f0
 	fldi	%f0, %g1, 8
 	fsub	%f0, %f0, %f1
-	setL %g3, l.45267
+	setL %g3, l.37977
 	fldi	%f2, %g3, 0
 	fsub	%f1, %f21, %f7
 	fmul	%f1, %f1, %f1
@@ -15544,29 +12492,29 @@ fjge_cont.51754:
 	fsub	%f0, %f21, %f0
 	fmul	%f0, %f0, %f0
 	fsub	%f1, %f1, %f0
-	fjlt	%f1, %f16, fjge_else.51767
+	fjlt	%f1, %f16, fjge_else.44127
 	fmov	%f0, %f1
-	jmp	fjge_cont.51768
-fjge_else.51767:
+	jmp	fjge_cont.44128
+fjge_else.44127:
 	fmov	%f0, %f16
-fjge_cont.51768:
+fjge_cont.44128:
 	fmul	%f1, %f27, %f0
-	setL %g3, l.45271
+	setL %g3, l.37981
 	fldi	%f0, %g3, 0
 	fdiv	%f0, %f1, %f0
 	fsti	%f0, %g31, 560
-	jmp	jeq_cont.51734
-jeq_else.51733:
-jeq_cont.51734:
-jeq_cont.51690:
-jeq_cont.51646:
-jeq_cont.51638:
+	jmp	jeq_cont.44094
+jeq_else.44093:
+jeq_cont.44094:
+jeq_cont.44050:
+jeq_cont.44006:
+jeq_cont.43998:
 	addi	%g12, %g0, 0
 	ldi	%g13, %g31, 516
 	subi	%g1, %g1, 16
-	call	shadow_check_one_or_matrix.2843
+	call	shadow_check_one_or_matrix.2860
 	addi	%g1, %g1, 16
-	jne	%g3, %g0, jeq_else.51769
+	jne	%g3, %g0, jeq_else.44129
 	fldi	%f1, %g31, 556
 	fldi	%f0, %g31, 308
 	fmul	%f2, %f1, %f0
@@ -15579,12 +12527,12 @@ jeq_cont.51638:
 	fmul	%f0, %f1, %f0
 	fadd	%f1, %f2, %f0
 	fneg	%f1, %f1
-	fjlt	%f16, %f1, fjge_else.51770
+	fjlt	%f16, %f1, fjge_else.44130
 	fmov	%f0, %f16
-	jmp	fjge_cont.51771
-fjge_else.51770:
+	jmp	fjge_cont.44131
+fjge_else.44130:
 	fmov	%f0, %f1
-fjge_cont.51771:
+fjge_cont.44131:
 	fmul	%f1, %f10, %f0
 	ldi	%g3, %g14, -28
 	fldi	%f0, %g3, 0
@@ -15605,7 +12553,7 @@ fjge_cont.51771:
 	fadd	%f0, %f2, %f0
 	fsti	%f0, %g31, 572
 	return
-jeq_else.51769:
+jeq_else.44129:
 	return
 
 !==============================
@@ -15614,8 +12562,8 @@ jeq_else.51769:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f31, %f30, %f3, %f29, %f28, %f27, %f26, %f25, %f24, %f23, %f22, %f21, %f20, %f2, %f19, %f18, %f17, %f16, %f15, %f10, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-iter_trace_diffuse_rays.2904:
-	jlt	%g25, %g0, jge_else.51774
+iter_trace_diffuse_rays.2921:
+	jlt	%g25, %g0, jge_else.44134
 	slli	%g3, %g25, 2
 	ld	%g3, %g23, %g3
 	ldi	%g3, %g3, 0
@@ -15630,17 +12578,17 @@ iter_trace_diffuse_rays.2904:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51775
+	fjlt	%f0, %f16, fjge_else.44135
 	slli	%g3, %g25, 2
 	ld	%g4, %g23, %g3
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 4
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 4
-	jmp	fjge_cont.51776
-fjge_else.51775:
+	jmp	fjge_cont.44136
+fjge_else.44135:
 	addi	%g3, %g25, 1
 	slli	%g3, %g3, 2
 	ld	%g4, %g23, %g3
@@ -15648,11 +12596,11 @@ fjge_else.51775:
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 4
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 4
-fjge_cont.51776:
+fjge_cont.44136:
 	subi	%g25, %g25, 2
-	jlt	%g25, %g0, jge_else.51777
+	jlt	%g25, %g0, jge_else.44137
 	slli	%g3, %g25, 2
 	ld	%g3, %g23, %g3
 	ldi	%g3, %g3, 0
@@ -15667,17 +12615,17 @@ fjge_cont.51776:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51778
+	fjlt	%f0, %f16, fjge_else.44138
 	slli	%g3, %g25, 2
 	ld	%g4, %g23, %g3
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 4
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 4
-	jmp	fjge_cont.51779
-fjge_else.51778:
+	jmp	fjge_cont.44139
+fjge_else.44138:
 	addi	%g3, %g25, 1
 	slli	%g3, %g3, 2
 	ld	%g4, %g23, %g3
@@ -15685,11 +12633,11 @@ fjge_else.51778:
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 4
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 4
-fjge_cont.51779:
+fjge_cont.44139:
 	subi	%g25, %g25, 2
-	jlt	%g25, %g0, jge_else.51780
+	jlt	%g25, %g0, jge_else.44140
 	slli	%g3, %g25, 2
 	ld	%g3, %g23, %g3
 	ldi	%g3, %g3, 0
@@ -15704,17 +12652,17 @@ fjge_cont.51779:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51781
+	fjlt	%f0, %f16, fjge_else.44141
 	slli	%g3, %g25, 2
 	ld	%g4, %g23, %g3
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 4
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 4
-	jmp	fjge_cont.51782
-fjge_else.51781:
+	jmp	fjge_cont.44142
+fjge_else.44141:
 	addi	%g3, %g25, 1
 	slli	%g3, %g3, 2
 	ld	%g4, %g23, %g3
@@ -15722,11 +12670,11 @@ fjge_else.51781:
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 4
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 4
-fjge_cont.51782:
+fjge_cont.44142:
 	subi	%g25, %g25, 2
-	jlt	%g25, %g0, jge_else.51783
+	jlt	%g25, %g0, jge_else.44143
 	slli	%g3, %g25, 2
 	ld	%g3, %g23, %g3
 	ldi	%g3, %g3, 0
@@ -15741,17 +12689,17 @@ fjge_cont.51782:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51784
+	fjlt	%f0, %f16, fjge_else.44144
 	slli	%g3, %g25, 2
 	ld	%g4, %g23, %g3
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 4
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 4
-	jmp	fjge_cont.51785
-fjge_else.51784:
+	jmp	fjge_cont.44145
+fjge_else.44144:
 	addi	%g3, %g25, 1
 	slli	%g3, %g3, 2
 	ld	%g4, %g23, %g3
@@ -15759,18 +12707,18 @@ fjge_else.51784:
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 4
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 4
-fjge_cont.51785:
+fjge_cont.44145:
 	subi	%g25, %g25, 2
-	jmp	iter_trace_diffuse_rays.2904
-jge_else.51783:
+	jmp	iter_trace_diffuse_rays.2921
+jge_else.44143:
 	return
-jge_else.51780:
+jge_else.44140:
 	return
-jge_else.51777:
+jge_else.44137:
 	return
-jge_else.51774:
+jge_else.44134:
 	return
 
 !==============================
@@ -15779,12 +12727,12 @@ jge_else.51774:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f31, %f30, %f3, %f29, %f28, %f27, %f26, %f25, %f24, %f23, %f22, %f21, %f20, %f2, %f19, %f18, %f17, %f16, %f15, %f10, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-do_without_neighbors.2926:
+do_without_neighbors.2943:
 	addi	%g3, %g0, 4
-	jlt	%g3, %g26, jle_else.51790
+	jlt	%g3, %g26, jle_else.44150
 	slli	%g3, %g26, 2
 	ld	%g3, %g13, %g3
-	jlt	%g3, %g0, jge_else.51791
+	jlt	%g3, %g0, jge_else.44151
 	slli	%g3, %g26, 2
 	ld	%g3, %g12, %g3
 	sti	%g25, %g1, 0
@@ -15795,9 +12743,9 @@ do_without_neighbors.2926:
 	sti	%g13, %g1, 20
 	sti	%g14, %g1, 24
 	sti	%g15, %g1, 28
-	jne	%g3, %g0, jeq_else.51792
-	jmp	jeq_cont.51793
-jeq_else.51792:
+	jne	%g3, %g0, jeq_else.44152
+	jmp	jeq_cont.44153
+jeq_else.44152:
 	slli	%g3, %g26, 2
 	ld	%g3, %g10, %g3
 	fldi	%f0, %g3, 0
@@ -15814,9 +12762,9 @@ jeq_else.51792:
 	sti	%g11, %g1, 32
 	sti	%g22, %g1, 36
 	sti	%g24, %g1, 40
-	jne	%g30, %g0, jeq_else.51794
-	jmp	jeq_cont.51795
-jeq_else.51794:
+	jne	%g30, %g0, jeq_else.44154
+	jmp	jeq_cont.44155
+jeq_else.44154:
 	ldi	%g23, %g31, 716
 	fldi	%f0, %g24, 0
 	fsti	%f0, %g31, 636
@@ -15826,7 +12774,7 @@ jeq_else.51794:
 	fsti	%f0, %g31, 628
 	ldi	%g3, %g31, 28
 	subi	%g3, %g3, 1
-	jlt	%g3, %g0, jge_else.51796
+	jlt	%g3, %g0, jge_else.44156
 	slli	%g4, %g3, 2
 	add	%g4, %g31, %g4
 	ldi	%g4, %g4, 272
@@ -15846,7 +12794,7 @@ jeq_else.51794:
 	fsub	%f0, %f1, %f0
 	fsti	%f0, %g7, -8
 	addi	%g5, %g0, 2
-	jne	%g6, %g5, jeq_else.51798
+	jne	%g6, %g5, jeq_else.44158
 	ldi	%g4, %g4, -16
 	fldi	%f1, %g7, 0
 	fldi	%f3, %g7, -4
@@ -15860,12 +12808,12 @@ jeq_else.51794:
 	fmul	%f0, %f0, %f2
 	fadd	%f0, %f1, %f0
 	fsti	%f0, %g7, -12
-	jmp	jeq_cont.51799
-jeq_else.51798:
+	jmp	jeq_cont.44159
+jeq_else.44158:
 	addi	%g5, %g0, 2
-	jlt	%g5, %g6, jle_else.51800
-	jmp	jle_cont.51801
-jle_else.51800:
+	jlt	%g5, %g6, jle_else.44160
+	jmp	jle_cont.44161
+jle_else.44160:
 	fldi	%f2, %g7, 0
 	fldi	%f1, %g7, -4
 	fldi	%f0, %g7, -8
@@ -15882,10 +12830,10 @@ jle_else.51800:
 	fmul	%f3, %f4, %f3
 	fadd	%f4, %f5, %f3
 	ldi	%g5, %g4, -12
-	jne	%g5, %g0, jeq_else.51802
+	jne	%g5, %g0, jeq_else.44162
 	fmov	%f3, %f4
-	jmp	jeq_cont.51803
-jeq_else.51802:
+	jmp	jeq_cont.44163
+jeq_else.44162:
 	fmul	%f5, %f1, %f0
 	ldi	%g4, %g4, -36
 	fldi	%f3, %g4, 0
@@ -15899,25 +12847,25 @@ jeq_else.51802:
 	fldi	%f0, %g4, -8
 	fmul	%f3, %f1, %f0
 	fadd	%f3, %f4, %f3
-jeq_cont.51803:
+jeq_cont.44163:
 	addi	%g4, %g0, 3
-	jne	%g6, %g4, jeq_else.51804
+	jne	%g6, %g4, jeq_else.44164
 	fsub	%f0, %f3, %f17
-	jmp	jeq_cont.51805
-jeq_else.51804:
+	jmp	jeq_cont.44165
+jeq_else.44164:
 	fmov	%f0, %f3
-jeq_cont.51805:
+jeq_cont.44165:
 	fsti	%f0, %g7, -12
-jle_cont.51801:
-jeq_cont.51799:
+jle_cont.44161:
+jeq_cont.44159:
 	subi	%g4, %g3, 1
 	mov	%g3, %g24
 	subi	%g1, %g1, 48
-	call	setup_startp_constants.2806
+	call	setup_startp_constants.2823
 	addi	%g1, %g1, 48
-	jmp	jge_cont.51797
-jge_else.51796:
-jge_cont.51797:
+	jmp	jge_cont.44157
+jge_else.44156:
+jge_cont.44157:
 	ldi	%g3, %g23, -472
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -15931,24 +12879,24 @@ jge_cont.51797:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51806
+	fjlt	%f0, %f16, fjge_else.44166
 	ldi	%g4, %g23, -472
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-	jmp	fjge_cont.51807
-fjge_else.51806:
+	jmp	fjge_cont.44167
+fjge_else.44166:
 	ldi	%g4, %g23, -476
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-fjge_cont.51807:
+fjge_cont.44167:
 	ldi	%g3, %g23, -464
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -15962,24 +12910,24 @@ fjge_cont.51807:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51808
+	fjlt	%f0, %f16, fjge_else.44168
 	ldi	%g4, %g23, -464
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-	jmp	fjge_cont.51809
-fjge_else.51808:
+	jmp	fjge_cont.44169
+fjge_else.44168:
 	ldi	%g4, %g23, -468
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-fjge_cont.51809:
+fjge_cont.44169:
 	ldi	%g3, %g23, -456
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -15993,33 +12941,33 @@ fjge_cont.51809:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51810
+	fjlt	%f0, %f16, fjge_else.44170
 	ldi	%g4, %g23, -456
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-	jmp	fjge_cont.51811
-fjge_else.51810:
+	jmp	fjge_cont.44171
+fjge_else.44170:
 	ldi	%g4, %g23, -460
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-fjge_cont.51811:
+fjge_cont.44171:
 	addi	%g3, %g0, 112
 	mov	%g25, %g3
 	subi	%g1, %g1, 48
-	call	iter_trace_diffuse_rays.2904
+	call	iter_trace_diffuse_rays.2921
 	addi	%g1, %g1, 48
-jeq_cont.51795:
-	jne	%g30, %g28, jeq_else.51812
-	jmp	jeq_cont.51813
-jeq_else.51812:
+jeq_cont.44155:
+	jne	%g30, %g28, jeq_else.44172
+	jmp	jeq_cont.44173
+jeq_else.44172:
 	ldi	%g23, %g31, 712
 	ldi	%g24, %g1, 40
 	fldi	%f0, %g24, 0
@@ -16030,7 +12978,7 @@ jeq_else.51812:
 	fsti	%f0, %g31, 628
 	ldi	%g3, %g31, 28
 	subi	%g3, %g3, 1
-	jlt	%g3, %g0, jge_else.51814
+	jlt	%g3, %g0, jge_else.44174
 	slli	%g4, %g3, 2
 	add	%g4, %g31, %g4
 	ldi	%g4, %g4, 272
@@ -16050,7 +12998,7 @@ jeq_else.51812:
 	fsub	%f0, %f1, %f0
 	fsti	%f0, %g7, -8
 	addi	%g5, %g0, 2
-	jne	%g6, %g5, jeq_else.51816
+	jne	%g6, %g5, jeq_else.44176
 	ldi	%g4, %g4, -16
 	fldi	%f1, %g7, 0
 	fldi	%f3, %g7, -4
@@ -16064,12 +13012,12 @@ jeq_else.51812:
 	fmul	%f0, %f0, %f2
 	fadd	%f0, %f1, %f0
 	fsti	%f0, %g7, -12
-	jmp	jeq_cont.51817
-jeq_else.51816:
+	jmp	jeq_cont.44177
+jeq_else.44176:
 	addi	%g5, %g0, 2
-	jlt	%g5, %g6, jle_else.51818
-	jmp	jle_cont.51819
-jle_else.51818:
+	jlt	%g5, %g6, jle_else.44178
+	jmp	jle_cont.44179
+jle_else.44178:
 	fldi	%f2, %g7, 0
 	fldi	%f1, %g7, -4
 	fldi	%f0, %g7, -8
@@ -16086,10 +13034,10 @@ jle_else.51818:
 	fmul	%f3, %f4, %f3
 	fadd	%f4, %f5, %f3
 	ldi	%g5, %g4, -12
-	jne	%g5, %g0, jeq_else.51820
+	jne	%g5, %g0, jeq_else.44180
 	fmov	%f3, %f4
-	jmp	jeq_cont.51821
-jeq_else.51820:
+	jmp	jeq_cont.44181
+jeq_else.44180:
 	fmul	%f5, %f1, %f0
 	ldi	%g4, %g4, -36
 	fldi	%f3, %g4, 0
@@ -16103,25 +13051,25 @@ jeq_else.51820:
 	fldi	%f0, %g4, -8
 	fmul	%f3, %f1, %f0
 	fadd	%f3, %f4, %f3
-jeq_cont.51821:
+jeq_cont.44181:
 	addi	%g4, %g0, 3
-	jne	%g6, %g4, jeq_else.51822
+	jne	%g6, %g4, jeq_else.44182
 	fsub	%f0, %f3, %f17
-	jmp	jeq_cont.51823
-jeq_else.51822:
+	jmp	jeq_cont.44183
+jeq_else.44182:
 	fmov	%f0, %f3
-jeq_cont.51823:
+jeq_cont.44183:
 	fsti	%f0, %g7, -12
-jle_cont.51819:
-jeq_cont.51817:
+jle_cont.44179:
+jeq_cont.44177:
 	subi	%g4, %g3, 1
 	mov	%g3, %g24
 	subi	%g1, %g1, 48
-	call	setup_startp_constants.2806
+	call	setup_startp_constants.2823
 	addi	%g1, %g1, 48
-	jmp	jge_cont.51815
-jge_else.51814:
-jge_cont.51815:
+	jmp	jge_cont.44175
+jge_else.44174:
+jge_cont.44175:
 	ldi	%g3, %g23, -472
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -16136,24 +13084,24 @@ jge_cont.51815:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51824
+	fjlt	%f0, %f16, fjge_else.44184
 	ldi	%g4, %g23, -472
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-	jmp	fjge_cont.51825
-fjge_else.51824:
+	jmp	fjge_cont.44185
+fjge_else.44184:
 	ldi	%g4, %g23, -476
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-fjge_cont.51825:
+fjge_cont.44185:
 	ldi	%g3, %g23, -464
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -16167,24 +13115,24 @@ fjge_cont.51825:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51826
+	fjlt	%f0, %f16, fjge_else.44186
 	ldi	%g4, %g23, -464
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-	jmp	fjge_cont.51827
-fjge_else.51826:
+	jmp	fjge_cont.44187
+fjge_else.44186:
 	ldi	%g4, %g23, -468
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-fjge_cont.51827:
+fjge_cont.44187:
 	ldi	%g3, %g23, -456
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -16198,34 +13146,34 @@ fjge_cont.51827:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51828
+	fjlt	%f0, %f16, fjge_else.44188
 	ldi	%g4, %g23, -456
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-	jmp	fjge_cont.51829
-fjge_else.51828:
+	jmp	fjge_cont.44189
+fjge_else.44188:
 	ldi	%g4, %g23, -460
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-fjge_cont.51829:
+fjge_cont.44189:
 	addi	%g3, %g0, 112
 	mov	%g25, %g3
 	subi	%g1, %g1, 48
-	call	iter_trace_diffuse_rays.2904
+	call	iter_trace_diffuse_rays.2921
 	addi	%g1, %g1, 48
-jeq_cont.51813:
+jeq_cont.44173:
 	addi	%g3, %g0, 2
-	jne	%g30, %g3, jeq_else.51830
-	jmp	jeq_cont.51831
-jeq_else.51830:
+	jne	%g30, %g3, jeq_else.44190
+	jmp	jeq_cont.44191
+jeq_else.44190:
 	ldi	%g23, %g31, 708
 	ldi	%g24, %g1, 40
 	fldi	%f0, %g24, 0
@@ -16236,7 +13184,7 @@ jeq_else.51830:
 	fsti	%f0, %g31, 628
 	ldi	%g3, %g31, 28
 	subi	%g3, %g3, 1
-	jlt	%g3, %g0, jge_else.51832
+	jlt	%g3, %g0, jge_else.44192
 	slli	%g4, %g3, 2
 	add	%g4, %g31, %g4
 	ldi	%g4, %g4, 272
@@ -16256,7 +13204,7 @@ jeq_else.51830:
 	fsub	%f0, %f1, %f0
 	fsti	%f0, %g7, -8
 	addi	%g5, %g0, 2
-	jne	%g6, %g5, jeq_else.51834
+	jne	%g6, %g5, jeq_else.44194
 	ldi	%g4, %g4, -16
 	fldi	%f1, %g7, 0
 	fldi	%f3, %g7, -4
@@ -16270,12 +13218,12 @@ jeq_else.51830:
 	fmul	%f0, %f0, %f2
 	fadd	%f0, %f1, %f0
 	fsti	%f0, %g7, -12
-	jmp	jeq_cont.51835
-jeq_else.51834:
+	jmp	jeq_cont.44195
+jeq_else.44194:
 	addi	%g5, %g0, 2
-	jlt	%g5, %g6, jle_else.51836
-	jmp	jle_cont.51837
-jle_else.51836:
+	jlt	%g5, %g6, jle_else.44196
+	jmp	jle_cont.44197
+jle_else.44196:
 	fldi	%f2, %g7, 0
 	fldi	%f1, %g7, -4
 	fldi	%f0, %g7, -8
@@ -16292,10 +13240,10 @@ jle_else.51836:
 	fmul	%f3, %f4, %f3
 	fadd	%f4, %f5, %f3
 	ldi	%g5, %g4, -12
-	jne	%g5, %g0, jeq_else.51838
+	jne	%g5, %g0, jeq_else.44198
 	fmov	%f3, %f4
-	jmp	jeq_cont.51839
-jeq_else.51838:
+	jmp	jeq_cont.44199
+jeq_else.44198:
 	fmul	%f5, %f1, %f0
 	ldi	%g4, %g4, -36
 	fldi	%f3, %g4, 0
@@ -16309,25 +13257,25 @@ jeq_else.51838:
 	fldi	%f0, %g4, -8
 	fmul	%f3, %f1, %f0
 	fadd	%f3, %f4, %f3
-jeq_cont.51839:
+jeq_cont.44199:
 	addi	%g4, %g0, 3
-	jne	%g6, %g4, jeq_else.51840
+	jne	%g6, %g4, jeq_else.44200
 	fsub	%f0, %f3, %f17
-	jmp	jeq_cont.51841
-jeq_else.51840:
+	jmp	jeq_cont.44201
+jeq_else.44200:
 	fmov	%f0, %f3
-jeq_cont.51841:
+jeq_cont.44201:
 	fsti	%f0, %g7, -12
-jle_cont.51837:
-jeq_cont.51835:
+jle_cont.44197:
+jeq_cont.44195:
 	subi	%g4, %g3, 1
 	mov	%g3, %g24
 	subi	%g1, %g1, 48
-	call	setup_startp_constants.2806
+	call	setup_startp_constants.2823
 	addi	%g1, %g1, 48
-	jmp	jge_cont.51833
-jge_else.51832:
-jge_cont.51833:
+	jmp	jge_cont.44193
+jge_else.44192:
+jge_cont.44193:
 	ldi	%g3, %g23, -472
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -16342,24 +13290,24 @@ jge_cont.51833:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51842
+	fjlt	%f0, %f16, fjge_else.44202
 	ldi	%g4, %g23, -472
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-	jmp	fjge_cont.51843
-fjge_else.51842:
+	jmp	fjge_cont.44203
+fjge_else.44202:
 	ldi	%g4, %g23, -476
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-fjge_cont.51843:
+fjge_cont.44203:
 	ldi	%g3, %g23, -464
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -16373,24 +13321,24 @@ fjge_cont.51843:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51844
+	fjlt	%f0, %f16, fjge_else.44204
 	ldi	%g4, %g23, -464
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-	jmp	fjge_cont.51845
-fjge_else.51844:
+	jmp	fjge_cont.44205
+fjge_else.44204:
 	ldi	%g4, %g23, -468
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-fjge_cont.51845:
+fjge_cont.44205:
 	ldi	%g3, %g23, -456
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -16404,34 +13352,34 @@ fjge_cont.51845:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51846
+	fjlt	%f0, %f16, fjge_else.44206
 	ldi	%g4, %g23, -456
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-	jmp	fjge_cont.51847
-fjge_else.51846:
+	jmp	fjge_cont.44207
+fjge_else.44206:
 	ldi	%g4, %g23, -460
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-fjge_cont.51847:
+fjge_cont.44207:
 	addi	%g3, %g0, 112
 	mov	%g25, %g3
 	subi	%g1, %g1, 48
-	call	iter_trace_diffuse_rays.2904
+	call	iter_trace_diffuse_rays.2921
 	addi	%g1, %g1, 48
-jeq_cont.51831:
+jeq_cont.44191:
 	addi	%g3, %g0, 3
-	jne	%g30, %g3, jeq_else.51848
-	jmp	jeq_cont.51849
-jeq_else.51848:
+	jne	%g30, %g3, jeq_else.44208
+	jmp	jeq_cont.44209
+jeq_else.44208:
 	ldi	%g23, %g31, 704
 	ldi	%g24, %g1, 40
 	fldi	%f0, %g24, 0
@@ -16442,7 +13390,7 @@ jeq_else.51848:
 	fsti	%f0, %g31, 628
 	ldi	%g3, %g31, 28
 	subi	%g3, %g3, 1
-	jlt	%g3, %g0, jge_else.51850
+	jlt	%g3, %g0, jge_else.44210
 	slli	%g4, %g3, 2
 	add	%g4, %g31, %g4
 	ldi	%g4, %g4, 272
@@ -16462,7 +13410,7 @@ jeq_else.51848:
 	fsub	%f0, %f1, %f0
 	fsti	%f0, %g7, -8
 	addi	%g5, %g0, 2
-	jne	%g6, %g5, jeq_else.51852
+	jne	%g6, %g5, jeq_else.44212
 	ldi	%g4, %g4, -16
 	fldi	%f1, %g7, 0
 	fldi	%f3, %g7, -4
@@ -16476,12 +13424,12 @@ jeq_else.51848:
 	fmul	%f0, %f0, %f2
 	fadd	%f0, %f1, %f0
 	fsti	%f0, %g7, -12
-	jmp	jeq_cont.51853
-jeq_else.51852:
+	jmp	jeq_cont.44213
+jeq_else.44212:
 	addi	%g5, %g0, 2
-	jlt	%g5, %g6, jle_else.51854
-	jmp	jle_cont.51855
-jle_else.51854:
+	jlt	%g5, %g6, jle_else.44214
+	jmp	jle_cont.44215
+jle_else.44214:
 	fldi	%f2, %g7, 0
 	fldi	%f1, %g7, -4
 	fldi	%f0, %g7, -8
@@ -16498,10 +13446,10 @@ jle_else.51854:
 	fmul	%f3, %f4, %f3
 	fadd	%f4, %f5, %f3
 	ldi	%g5, %g4, -12
-	jne	%g5, %g0, jeq_else.51856
+	jne	%g5, %g0, jeq_else.44216
 	fmov	%f3, %f4
-	jmp	jeq_cont.51857
-jeq_else.51856:
+	jmp	jeq_cont.44217
+jeq_else.44216:
 	fmul	%f5, %f1, %f0
 	ldi	%g4, %g4, -36
 	fldi	%f3, %g4, 0
@@ -16515,25 +13463,25 @@ jeq_else.51856:
 	fldi	%f0, %g4, -8
 	fmul	%f3, %f1, %f0
 	fadd	%f3, %f4, %f3
-jeq_cont.51857:
+jeq_cont.44217:
 	addi	%g4, %g0, 3
-	jne	%g6, %g4, jeq_else.51858
+	jne	%g6, %g4, jeq_else.44218
 	fsub	%f0, %f3, %f17
-	jmp	jeq_cont.51859
-jeq_else.51858:
+	jmp	jeq_cont.44219
+jeq_else.44218:
 	fmov	%f0, %f3
-jeq_cont.51859:
+jeq_cont.44219:
 	fsti	%f0, %g7, -12
-jle_cont.51855:
-jeq_cont.51853:
+jle_cont.44215:
+jeq_cont.44213:
 	subi	%g4, %g3, 1
 	mov	%g3, %g24
 	subi	%g1, %g1, 48
-	call	setup_startp_constants.2806
+	call	setup_startp_constants.2823
 	addi	%g1, %g1, 48
-	jmp	jge_cont.51851
-jge_else.51850:
-jge_cont.51851:
+	jmp	jge_cont.44211
+jge_else.44210:
+jge_cont.44211:
 	ldi	%g3, %g23, -472
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -16548,24 +13496,24 @@ jge_cont.51851:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51860
+	fjlt	%f0, %f16, fjge_else.44220
 	ldi	%g4, %g23, -472
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-	jmp	fjge_cont.51861
-fjge_else.51860:
+	jmp	fjge_cont.44221
+fjge_else.44220:
 	ldi	%g4, %g23, -476
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-fjge_cont.51861:
+fjge_cont.44221:
 	ldi	%g3, %g23, -464
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -16579,24 +13527,24 @@ fjge_cont.51861:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51862
+	fjlt	%f0, %f16, fjge_else.44222
 	ldi	%g4, %g23, -464
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-	jmp	fjge_cont.51863
-fjge_else.51862:
+	jmp	fjge_cont.44223
+fjge_else.44222:
 	ldi	%g4, %g23, -468
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-fjge_cont.51863:
+fjge_cont.44223:
 	ldi	%g3, %g23, -456
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -16610,34 +13558,34 @@ fjge_cont.51863:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51864
+	fjlt	%f0, %f16, fjge_else.44224
 	ldi	%g4, %g23, -456
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-	jmp	fjge_cont.51865
-fjge_else.51864:
+	jmp	fjge_cont.44225
+fjge_else.44224:
 	ldi	%g4, %g23, -460
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-fjge_cont.51865:
+fjge_cont.44225:
 	addi	%g3, %g0, 112
 	mov	%g25, %g3
 	subi	%g1, %g1, 48
-	call	iter_trace_diffuse_rays.2904
+	call	iter_trace_diffuse_rays.2921
 	addi	%g1, %g1, 48
-jeq_cont.51849:
+jeq_cont.44209:
 	addi	%g3, %g0, 4
-	jne	%g30, %g3, jeq_else.51866
-	jmp	jeq_cont.51867
-jeq_else.51866:
+	jne	%g30, %g3, jeq_else.44226
+	jmp	jeq_cont.44227
+jeq_else.44226:
 	ldi	%g23, %g31, 700
 	ldi	%g24, %g1, 40
 	fldi	%f0, %g24, 0
@@ -16648,7 +13596,7 @@ jeq_else.51866:
 	fsti	%f0, %g31, 628
 	ldi	%g3, %g31, 28
 	subi	%g3, %g3, 1
-	jlt	%g3, %g0, jge_else.51868
+	jlt	%g3, %g0, jge_else.44228
 	slli	%g4, %g3, 2
 	add	%g4, %g31, %g4
 	ldi	%g4, %g4, 272
@@ -16668,7 +13616,7 @@ jeq_else.51866:
 	fsub	%f0, %f1, %f0
 	fsti	%f0, %g7, -8
 	addi	%g5, %g0, 2
-	jne	%g6, %g5, jeq_else.51870
+	jne	%g6, %g5, jeq_else.44230
 	ldi	%g4, %g4, -16
 	fldi	%f1, %g7, 0
 	fldi	%f3, %g7, -4
@@ -16682,12 +13630,12 @@ jeq_else.51866:
 	fmul	%f0, %f0, %f2
 	fadd	%f0, %f1, %f0
 	fsti	%f0, %g7, -12
-	jmp	jeq_cont.51871
-jeq_else.51870:
+	jmp	jeq_cont.44231
+jeq_else.44230:
 	addi	%g5, %g0, 2
-	jlt	%g5, %g6, jle_else.51872
-	jmp	jle_cont.51873
-jle_else.51872:
+	jlt	%g5, %g6, jle_else.44232
+	jmp	jle_cont.44233
+jle_else.44232:
 	fldi	%f2, %g7, 0
 	fldi	%f1, %g7, -4
 	fldi	%f0, %g7, -8
@@ -16704,10 +13652,10 @@ jle_else.51872:
 	fmul	%f3, %f4, %f3
 	fadd	%f4, %f5, %f3
 	ldi	%g5, %g4, -12
-	jne	%g5, %g0, jeq_else.51874
+	jne	%g5, %g0, jeq_else.44234
 	fmov	%f3, %f4
-	jmp	jeq_cont.51875
-jeq_else.51874:
+	jmp	jeq_cont.44235
+jeq_else.44234:
 	fmul	%f5, %f1, %f0
 	ldi	%g4, %g4, -36
 	fldi	%f3, %g4, 0
@@ -16721,25 +13669,25 @@ jeq_else.51874:
 	fldi	%f0, %g4, -8
 	fmul	%f3, %f1, %f0
 	fadd	%f3, %f4, %f3
-jeq_cont.51875:
+jeq_cont.44235:
 	addi	%g4, %g0, 3
-	jne	%g6, %g4, jeq_else.51876
+	jne	%g6, %g4, jeq_else.44236
 	fsub	%f0, %f3, %f17
-	jmp	jeq_cont.51877
-jeq_else.51876:
+	jmp	jeq_cont.44237
+jeq_else.44236:
 	fmov	%f0, %f3
-jeq_cont.51877:
+jeq_cont.44237:
 	fsti	%f0, %g7, -12
-jle_cont.51873:
-jeq_cont.51871:
+jle_cont.44233:
+jeq_cont.44231:
 	subi	%g4, %g3, 1
 	mov	%g3, %g24
 	subi	%g1, %g1, 48
-	call	setup_startp_constants.2806
+	call	setup_startp_constants.2823
 	addi	%g1, %g1, 48
-	jmp	jge_cont.51869
-jge_else.51868:
-jge_cont.51869:
+	jmp	jge_cont.44229
+jge_else.44228:
+jge_cont.44229:
 	ldi	%g3, %g23, -472
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -16754,24 +13702,24 @@ jge_cont.51869:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51878
+	fjlt	%f0, %f16, fjge_else.44238
 	ldi	%g4, %g23, -472
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-	jmp	fjge_cont.51879
-fjge_else.51878:
+	jmp	fjge_cont.44239
+fjge_else.44238:
 	ldi	%g4, %g23, -476
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-fjge_cont.51879:
+fjge_cont.44239:
 	ldi	%g3, %g23, -464
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -16785,24 +13733,24 @@ fjge_cont.51879:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51880
+	fjlt	%f0, %f16, fjge_else.44240
 	ldi	%g4, %g23, -464
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-	jmp	fjge_cont.51881
-fjge_else.51880:
+	jmp	fjge_cont.44241
+fjge_else.44240:
 	ldi	%g4, %g23, -468
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-fjge_cont.51881:
+fjge_cont.44241:
 	ldi	%g3, %g23, -456
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -16816,30 +13764,30 @@ fjge_cont.51881:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51882
+	fjlt	%f0, %f16, fjge_else.44242
 	ldi	%g4, %g23, -456
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-	jmp	fjge_cont.51883
-fjge_else.51882:
+	jmp	fjge_cont.44243
+fjge_else.44242:
 	ldi	%g4, %g23, -460
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 48
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 48
-fjge_cont.51883:
+fjge_cont.44243:
 	addi	%g30, %g0, 112
 	mov	%g25, %g30
 	subi	%g1, %g1, 48
-	call	iter_trace_diffuse_rays.2904
+	call	iter_trace_diffuse_rays.2921
 	addi	%g1, %g1, 48
-jeq_cont.51867:
+jeq_cont.44227:
 	slli	%g3, %g26, 2
 	ldi	%g11, %g1, 32
 	ld	%g3, %g11, %g3
@@ -16861,7 +13809,7 @@ jeq_cont.51867:
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
 	fsti	%f0, %g31, 584
-jeq_cont.51793:
+jeq_cont.44153:
 	addi	%g26, %g26, 1
 	ldi	%g15, %g1, 28
 	ldi	%g14, %g1, 24
@@ -16871,10 +13819,10 @@ jeq_cont.51793:
 	ldi	%g10, %g1, 8
 	ldi	%g9, %g1, 4
 	ldi	%g25, %g1, 0
-	jmp	do_without_neighbors.2926
-jge_else.51791:
+	jmp	do_without_neighbors.2943
+jge_else.44151:
 	return
-jle_else.51790:
+jle_else.44150:
 	return
 
 !==============================
@@ -16883,59 +13831,59 @@ jle_else.51790:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f31, %f30, %f3, %f29, %f28, %f27, %f26, %f25, %f24, %f23, %f22, %f21, %f20, %f2, %f19, %f18, %f17, %f16, %f15, %f10, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-try_exploit_neighbors.2942:
+try_exploit_neighbors.2959:
 	slli	%g3, %g4, 2
 	ld	%g6, %g5, %g3
 	addi	%g3, %g0, 4
-	jlt	%g3, %g26, jle_else.51886
+	jlt	%g3, %g26, jle_else.44246
 	ldi	%g7, %g6, -8
 	slli	%g3, %g26, 2
 	ld	%g3, %g7, %g3
-	jlt	%g3, %g0, jge_else.51887
+	jlt	%g3, %g0, jge_else.44247
 	slli	%g7, %g4, 2
 	ld	%g7, %g9, %g7
 	ldi	%g12, %g7, -8
 	slli	%g11, %g26, 2
 	ld	%g11, %g12, %g11
-	jne	%g11, %g3, jeq_else.51888
+	jne	%g11, %g3, jeq_else.44248
 	slli	%g11, %g4, 2
 	ld	%g11, %g8, %g11
 	ldi	%g12, %g11, -8
 	slli	%g11, %g26, 2
 	ld	%g11, %g12, %g11
-	jne	%g11, %g3, jeq_else.51890
+	jne	%g11, %g3, jeq_else.44250
 	subi	%g11, %g4, 1
 	slli	%g11, %g11, 2
 	ld	%g11, %g5, %g11
 	ldi	%g12, %g11, -8
 	slli	%g11, %g26, 2
 	ld	%g11, %g12, %g11
-	jne	%g11, %g3, jeq_else.51892
+	jne	%g11, %g3, jeq_else.44252
 	addi	%g11, %g4, 1
 	slli	%g11, %g11, 2
 	ld	%g11, %g5, %g11
 	ldi	%g12, %g11, -8
 	slli	%g11, %g26, 2
 	ld	%g11, %g12, %g11
-	jne	%g11, %g3, jeq_else.51894
+	jne	%g11, %g3, jeq_else.44254
 	addi	%g11, %g0, 1
-	jmp	jeq_cont.51895
-jeq_else.51894:
+	jmp	jeq_cont.44255
+jeq_else.44254:
 	addi	%g11, %g0, 0
-jeq_cont.51895:
-	jmp	jeq_cont.51893
-jeq_else.51892:
+jeq_cont.44255:
+	jmp	jeq_cont.44253
+jeq_else.44252:
 	addi	%g11, %g0, 0
-jeq_cont.51893:
-	jmp	jeq_cont.51891
-jeq_else.51890:
+jeq_cont.44253:
+	jmp	jeq_cont.44251
+jeq_else.44250:
 	addi	%g11, %g0, 0
-jeq_cont.51891:
-	jmp	jeq_cont.51889
-jeq_else.51888:
+jeq_cont.44251:
+	jmp	jeq_cont.44249
+jeq_else.44248:
 	addi	%g11, %g0, 0
-jeq_cont.51889:
-	jne	%g11, %g0, jeq_else.51896
+jeq_cont.44249:
+	jne	%g11, %g0, jeq_else.44256
 	slli	%g3, %g4, 2
 	ld	%g3, %g5, %g3
 	ldi	%g25, %g3, -28
@@ -16946,14 +13894,14 @@ jeq_cont.51889:
 	ldi	%g13, %g3, -8
 	ldi	%g14, %g3, -4
 	ldi	%g15, %g3, 0
-	jmp	do_without_neighbors.2926
-jeq_else.51896:
+	jmp	do_without_neighbors.2943
+jeq_else.44256:
 	ldi	%g11, %g6, -12
 	slli	%g3, %g26, 2
 	ld	%g3, %g11, %g3
-	jne	%g3, %g0, jeq_else.51897
-	jmp	jeq_cont.51898
-jeq_else.51897:
+	jne	%g3, %g0, jeq_else.44257
+	jmp	jeq_cont.44258
+jeq_else.44257:
 	ldi	%g7, %g7, -20
 	subi	%g3, %g4, 1
 	slli	%g3, %g3, 2
@@ -17054,12 +14002,12 @@ jeq_else.51897:
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
 	fsti	%f0, %g31, 584
-jeq_cont.51898:
+jeq_cont.44258:
 	addi	%g26, %g26, 1
-	jmp	try_exploit_neighbors.2942
-jge_else.51887:
+	jmp	try_exploit_neighbors.2959
+jge_else.44247:
 	return
-jle_else.51886:
+jle_else.44246:
 	return
 
 !==============================
@@ -17068,12 +14016,12 @@ jle_else.51886:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f31, %f30, %f3, %f29, %f28, %f27, %f26, %f25, %f24, %f23, %f22, %f21, %f20, %f2, %f19, %f18, %f17, %f16, %f15, %f10, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-pretrace_diffuse_rays.2955:
+pretrace_diffuse_rays.2972:
 	addi	%g3, %g0, 4
-	jlt	%g3, %g26, jle_else.51901
+	jlt	%g3, %g26, jle_else.44261
 	slli	%g3, %g26, 2
 	ld	%g3, %g11, %g3
-	jlt	%g3, %g0, jge_else.51902
+	jlt	%g3, %g0, jge_else.44262
 	slli	%g3, %g26, 2
 	ld	%g3, %g10, %g3
 	sti	%g25, %g1, 0
@@ -17082,9 +14030,9 @@ pretrace_diffuse_rays.2955:
 	sti	%g11, %g1, 12
 	sti	%g12, %g1, 16
 	sti	%g14, %g1, 20
-	jne	%g3, %g0, jeq_else.51903
-	jmp	jeq_cont.51904
-jeq_else.51903:
+	jne	%g3, %g0, jeq_else.44263
+	jmp	jeq_cont.44264
+jeq_else.44263:
 	ldi	%g3, %g25, 0
 	fsti	%f16, %g31, 580
 	fsti	%f16, %g31, 576
@@ -17104,7 +14052,7 @@ jeq_else.51903:
 	fsti	%f0, %g31, 628
 	ldi	%g3, %g31, 28
 	subi	%g7, %g3, 1
-	jlt	%g7, %g0, jge_else.51905
+	jlt	%g7, %g0, jge_else.44265
 	slli	%g3, %g7, 2
 	add	%g3, %g31, %g3
 	ldi	%g3, %g3, 272
@@ -17124,7 +14072,7 @@ jeq_else.51903:
 	fsub	%f0, %f1, %f0
 	fsti	%f0, %g6, -8
 	addi	%g4, %g0, 2
-	jne	%g5, %g4, jeq_else.51907
+	jne	%g5, %g4, jeq_else.44267
 	ldi	%g3, %g3, -16
 	fldi	%f1, %g6, 0
 	fldi	%f3, %g6, -4
@@ -17138,12 +14086,12 @@ jeq_else.51903:
 	fmul	%f0, %f0, %f2
 	fadd	%f0, %f1, %f0
 	fsti	%f0, %g6, -12
-	jmp	jeq_cont.51908
-jeq_else.51907:
+	jmp	jeq_cont.44268
+jeq_else.44267:
 	addi	%g4, %g0, 2
-	jlt	%g4, %g5, jle_else.51909
-	jmp	jle_cont.51910
-jle_else.51909:
+	jlt	%g4, %g5, jle_else.44269
+	jmp	jle_cont.44270
+jle_else.44269:
 	fldi	%f2, %g6, 0
 	fldi	%f1, %g6, -4
 	fldi	%f0, %g6, -8
@@ -17160,10 +14108,10 @@ jle_else.51909:
 	fmul	%f3, %f4, %f3
 	fadd	%f4, %f5, %f3
 	ldi	%g4, %g3, -12
-	jne	%g4, %g0, jeq_else.51911
+	jne	%g4, %g0, jeq_else.44271
 	fmov	%f3, %f4
-	jmp	jeq_cont.51912
-jeq_else.51911:
+	jmp	jeq_cont.44272
+jeq_else.44271:
 	fmul	%f5, %f1, %f0
 	ldi	%g3, %g3, -36
 	fldi	%f3, %g3, 0
@@ -17177,25 +14125,25 @@ jeq_else.51911:
 	fldi	%f0, %g3, -8
 	fmul	%f3, %f1, %f0
 	fadd	%f3, %f4, %f3
-jeq_cont.51912:
+jeq_cont.44272:
 	addi	%g3, %g0, 3
-	jne	%g5, %g3, jeq_else.51913
+	jne	%g5, %g3, jeq_else.44273
 	fsub	%f0, %f3, %f17
-	jmp	jeq_cont.51914
-jeq_else.51913:
+	jmp	jeq_cont.44274
+jeq_else.44273:
 	fmov	%f0, %f3
-jeq_cont.51914:
+jeq_cont.44274:
 	fsti	%f0, %g6, -12
-jle_cont.51910:
-jeq_cont.51908:
+jle_cont.44270:
+jeq_cont.44268:
 	subi	%g4, %g7, 1
 	mov	%g3, %g24
 	subi	%g1, %g1, 28
-	call	setup_startp_constants.2806
+	call	setup_startp_constants.2823
 	addi	%g1, %g1, 28
-	jmp	jge_cont.51906
-jge_else.51905:
-jge_cont.51906:
+	jmp	jge_cont.44266
+jge_else.44265:
+jge_cont.44266:
 	ldi	%g3, %g23, -472
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -17210,24 +14158,24 @@ jge_cont.51906:
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
 	sti	%g9, %g1, 24
-	fjlt	%f0, %f16, fjge_else.51915
+	fjlt	%f0, %f16, fjge_else.44275
 	ldi	%g4, %g23, -472
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 32
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 32
-	jmp	fjge_cont.51916
-fjge_else.51915:
+	jmp	fjge_cont.44276
+fjge_else.44275:
 	ldi	%g4, %g23, -476
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 32
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 32
-fjge_cont.51916:
+fjge_cont.44276:
 	ldi	%g3, %g23, -464
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -17241,24 +14189,24 @@ fjge_cont.51916:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51917
+	fjlt	%f0, %f16, fjge_else.44277
 	ldi	%g4, %g23, -464
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 32
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 32
-	jmp	fjge_cont.51918
-fjge_else.51917:
+	jmp	fjge_cont.44278
+fjge_else.44277:
 	ldi	%g4, %g23, -468
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 32
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 32
-fjge_cont.51918:
+fjge_cont.44278:
 	ldi	%g3, %g23, -456
 	ldi	%g3, %g3, 0
 	fldi	%f1, %g3, 0
@@ -17272,28 +14220,28 @@ fjge_cont.51918:
 	fldi	%f0, %g22, -8
 	fmul	%f0, %f1, %f0
 	fadd	%f0, %f2, %f0
-	fjlt	%f0, %f16, fjge_else.51919
+	fjlt	%f0, %f16, fjge_else.44279
 	ldi	%g4, %g23, -456
 	fdiv	%f10, %f0, %f18
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 32
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 32
-	jmp	fjge_cont.51920
-fjge_else.51919:
+	jmp	fjge_cont.44280
+fjge_else.44279:
 	ldi	%g4, %g23, -460
 	fdiv	%f10, %f0, %f19
 	ldi	%g3, %g4, -4
 	ldi	%g21, %g4, 0
 	subi	%g1, %g1, 32
-	call	trace_diffuse_ray.2901
+	call	trace_diffuse_ray.2918
 	addi	%g1, %g1, 32
-fjge_cont.51920:
+fjge_cont.44280:
 	addi	%g3, %g0, 112
 	mov	%g25, %g3
 	subi	%g1, %g1, 32
-	call	iter_trace_diffuse_rays.2904
+	call	iter_trace_diffuse_rays.2921
 	addi	%g1, %g1, 32
 	ldi	%g9, %g1, 24
 	slli	%g3, %g26, 2
@@ -17304,7 +14252,7 @@ fjge_cont.51920:
 	fsti	%f0, %g3, -4
 	fldi	%f0, %g31, 572
 	fsti	%f0, %g3, -8
-jeq_cont.51904:
+jeq_cont.44264:
 	addi	%g26, %g26, 1
 	ldi	%g14, %g1, 20
 	ldi	%g12, %g1, 16
@@ -17312,10 +14260,10 @@ jeq_cont.51904:
 	ldi	%g10, %g1, 8
 	ldi	%g13, %g1, 4
 	ldi	%g25, %g1, 0
-	jmp	pretrace_diffuse_rays.2955
-jge_else.51902:
+	jmp	pretrace_diffuse_rays.2972
+jge_else.44262:
 	return
-jle_else.51901:
+jle_else.44261:
 	return
 
 !==============================
@@ -17324,8 +14272,8 @@ jle_else.51901:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f31, %f30, %f3, %f29, %f28, %f27, %f26, %f25, %f24, %f23, %f22, %f21, %f20, %f2, %f19, %f18, %f17, %f16, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-pretrace_pixels.2958:
-	jlt	%g6, %g0, jge_else.51923
+pretrace_pixels.2975:
+	jlt	%g6, %g0, jge_else.44283
 	fldi	%f3, %g31, 612
 	ldi	%g3, %g31, 608
 	sub	%g3, %g6, %g3
@@ -17354,13 +14302,13 @@ pretrace_pixels.2958:
 	fmul	%f0, %f0, %f0
 	fadd	%f0, %f1, %f0
 	fsqrt	%f0, %f0
-	fjeq	%f0, %f16, fjne_else.51924
+	fjeq	%f0, %f16, fjne_else.44284
 	fdiv	%f1, %f17, %f0
-	jmp	fjne_cont.51925
-fjne_else.51924:
-	setL %g3, l.42509
+	jmp	fjne_cont.44285
+fjne_else.44284:
+	setL %g3, l.35959
 	fldi	%f1, %g3, 0
-fjne_cont.51925:
+fjne_cont.44285:
 	fmul	%f0, %f2, %f1
 	fsti	%f0, %g31, 684
 	fldi	%f0, %g31, 680
@@ -17399,7 +14347,7 @@ fjne_cont.51925:
 	fmov	%f14, %f16
 	fmov	%f13, %f17
 	subi	%g1, %g1, 28
-	call	trace_ray.2895
+	call	trace_ray.2912
 	addi	%g1, %g1, 28
 	ldi	%g6, %g1, 20
 	slli	%g3, %g6, 2
@@ -17429,40 +14377,40 @@ fjne_cont.51925:
 	ldi	%g12, %g3, -4
 	ldi	%g14, %g3, 0
 	subi	%g1, %g1, 28
-	call	pretrace_diffuse_rays.2955
+	call	pretrace_diffuse_rays.2972
 	addi	%g1, %g1, 28
 	ldi	%g6, %g1, 20
 	subi	%g6, %g6, 1
 	ldi	%g8, %g1, 12
 	addi	%g3, %g8, 1
 	addi	%g8, %g0, 5
-	jlt	%g3, %g8, jle_else.51926
+	jlt	%g3, %g8, jle_else.44286
 	subi	%g8, %g3, 5
-	jmp	jle_cont.51927
-jle_else.51926:
+	jmp	jle_cont.44287
+jle_else.44286:
 	mov	%g8, %g3
-jle_cont.51927:
+jle_cont.44287:
 	fldi	%f13, %g1, 8
 	fldi	%f12, %g1, 4
 	fldi	%f11, %g1, 0
 	ldi	%g7, %g1, 16
-	jmp	pretrace_pixels.2958
-jge_else.51923:
+	jmp	pretrace_pixels.2975
+jge_else.44283:
 	return
 
 !==============================
-! args = [%g14, %g15, %g17, %g16, %g18]
+! args = [%g6, %g10, %g9, %g7, %g8]
 ! fargs = []
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f31, %f30, %f3, %f29, %f28, %f27, %f26, %f25, %f24, %f23, %f22, %f21, %f20, %f2, %f19, %f18, %f17, %f16, %f15, %f10, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-scan_pixel.2969:
+scan_pixel.2986:
 	ldi	%g3, %g31, 600
-	jlt	%g14, %g3, jle_else.51929
+	jlt	%g6, %g3, jle_else.44289
 	return
-jle_else.51929:
-	slli	%g3, %g14, 2
-	ld	%g3, %g16, %g3
+jle_else.44289:
+	slli	%g3, %g6, 2
+	ld	%g3, %g7, %g3
 	ldi	%g3, %g3, 0
 	fldi	%f0, %g3, 0
 	fsti	%f0, %g31, 592
@@ -17471,157 +14419,151 @@ jle_else.51929:
 	fldi	%f0, %g3, -8
 	fsti	%f0, %g31, 584
 	ldi	%g4, %g31, 596
-	addi	%g3, %g15, 1
-	jlt	%g3, %g4, jle_else.51931
+	addi	%g3, %g10, 1
+	jlt	%g3, %g4, jle_else.44291
 	addi	%g3, %g0, 0
-	jmp	jle_cont.51932
-jle_else.51931:
-	jlt	%g0, %g15, jle_else.51933
+	jmp	jle_cont.44292
+jle_else.44291:
+	jlt	%g0, %g10, jle_else.44293
 	addi	%g3, %g0, 0
-	jmp	jle_cont.51934
-jle_else.51933:
+	jmp	jle_cont.44294
+jle_else.44293:
 	ldi	%g4, %g31, 600
-	addi	%g3, %g14, 1
-	jlt	%g3, %g4, jle_else.51935
+	addi	%g3, %g6, 1
+	jlt	%g3, %g4, jle_else.44295
 	addi	%g3, %g0, 0
-	jmp	jle_cont.51936
-jle_else.51935:
-	jlt	%g0, %g14, jle_else.51937
+	jmp	jle_cont.44296
+jle_else.44295:
+	jlt	%g0, %g6, jle_else.44297
 	addi	%g3, %g0, 0
-	jmp	jle_cont.51938
-jle_else.51937:
+	jmp	jle_cont.44298
+jle_else.44297:
 	addi	%g3, %g0, 1
-jle_cont.51938:
-jle_cont.51936:
-jle_cont.51934:
-jle_cont.51932:
-	sti	%g18, %g1, 0
-	sti	%g16, %g1, 4
-	sti	%g17, %g1, 8
-	sti	%g15, %g1, 12
-	sti	%g14, %g1, 16
-	jne	%g3, %g0, jeq_else.51939
-	slli	%g3, %g14, 2
-	ld	%g4, %g16, %g3
+jle_cont.44298:
+jle_cont.44296:
+jle_cont.44294:
+jle_cont.44292:
+	sti	%g8, %g1, 0
+	sti	%g7, %g1, 4
+	sti	%g9, %g1, 8
+	sti	%g10, %g1, 12
+	sti	%g6, %g1, 16
+	jne	%g3, %g0, jeq_else.44299
+	slli	%g3, %g6, 2
+	ld	%g5, %g7, %g3
 	addi	%g26, %g0, 0
-	ldi	%g25, %g4, -28
-	ldi	%g9, %g4, -24
-	ldi	%g10, %g4, -20
-	ldi	%g11, %g4, -16
-	ldi	%g12, %g4, -12
-	ldi	%g13, %g4, -8
-	ldi	%g3, %g4, -4
-	ldi	%g4, %g4, 0
-	mov	%g14, %g3
-	mov	%g15, %g4
+	ldi	%g25, %g5, -28
+	ldi	%g3, %g5, -24
+	ldi	%g4, %g5, -20
+	ldi	%g11, %g5, -16
+	ldi	%g12, %g5, -12
+	ldi	%g13, %g5, -8
+	ldi	%g14, %g5, -4
+	ldi	%g15, %g5, 0
+	mov	%g9, %g3
+	mov	%g10, %g4
 	subi	%g1, %g1, 24
-	call	do_without_neighbors.2926
+	call	do_without_neighbors.2943
 	addi	%g1, %g1, 24
-	jmp	jeq_cont.51940
-jeq_else.51939:
+	jmp	jeq_cont.44300
+jeq_else.44299:
 	addi	%g26, %g0, 0
-	mov	%g8, %g18
-	mov	%g5, %g16
-	mov	%g9, %g17
-	mov	%g10, %g15
-	mov	%g4, %g14
+	mov	%g5, %g7
+	mov	%g4, %g6
 	subi	%g1, %g1, 24
-	call	try_exploit_neighbors.2942
+	call	try_exploit_neighbors.2959
 	addi	%g1, %g1, 24
-jeq_cont.51940:
+jeq_cont.44300:
 	fldi	%f0, %g31, 592
 	subi	%g1, %g1, 24
 	call	min_caml_int_of_float
 	addi	%g1, %g1, 24
-	addi	%g4, %g0, 255
-	jlt	%g4, %g3, jle_else.51941
-	jlt	%g3, %g0, jge_else.51943
 	mov	%g4, %g3
-	jmp	jge_cont.51944
-jge_else.51943:
-	addi	%g4, %g0, 0
-jge_cont.51944:
-	jmp	jle_cont.51942
-jle_else.51941:
-	addi	%g4, %g0, 255
-jle_cont.51942:
-	subi	%g1, %g1, 24
-	call	print_int.2528
-	addi	%g3, %g0, 32
+	addi	%g3, %g0, 255
+	jlt	%g3, %g4, jle_else.44301
+	jlt	%g4, %g0, jge_else.44303
+	mov	%g3, %g4
+	jmp	jge_cont.44304
+jge_else.44303:
+	addi	%g3, %g0, 0
+jge_cont.44304:
+	jmp	jle_cont.44302
+jle_else.44301:
+	addi	%g3, %g0, 255
+jle_cont.44302:
 	output	%g3
 	fldi	%f0, %g31, 588
+	subi	%g1, %g1, 24
 	call	min_caml_int_of_float
 	addi	%g1, %g1, 24
-	addi	%g4, %g0, 255
-	jlt	%g4, %g3, jle_else.51945
-	jlt	%g3, %g0, jge_else.51947
 	mov	%g4, %g3
-	jmp	jge_cont.51948
-jge_else.51947:
-	addi	%g4, %g0, 0
-jge_cont.51948:
-	jmp	jle_cont.51946
-jle_else.51945:
-	addi	%g4, %g0, 255
-jle_cont.51946:
-	subi	%g1, %g1, 24
-	call	print_int.2528
-	addi	%g3, %g0, 32
+	addi	%g3, %g0, 255
+	jlt	%g3, %g4, jle_else.44305
+	jlt	%g4, %g0, jge_else.44307
+	mov	%g3, %g4
+	jmp	jge_cont.44308
+jge_else.44307:
+	addi	%g3, %g0, 0
+jge_cont.44308:
+	jmp	jle_cont.44306
+jle_else.44305:
+	addi	%g3, %g0, 255
+jle_cont.44306:
 	output	%g3
 	fldi	%f0, %g31, 584
+	subi	%g1, %g1, 24
 	call	min_caml_int_of_float
 	addi	%g1, %g1, 24
-	addi	%g4, %g0, 255
-	jlt	%g4, %g3, jle_else.51949
-	jlt	%g3, %g0, jge_else.51951
 	mov	%g4, %g3
-	jmp	jge_cont.51952
-jge_else.51951:
-	addi	%g4, %g0, 0
-jge_cont.51952:
-	jmp	jle_cont.51950
-jle_else.51949:
-	addi	%g4, %g0, 255
-jle_cont.51950:
-	subi	%g1, %g1, 24
-	call	print_int.2528
-	addi	%g1, %g1, 24
-	addi	%g3, %g0, 10
+	addi	%g3, %g0, 255
+	jlt	%g3, %g4, jle_else.44309
+	jlt	%g4, %g0, jge_else.44311
+	mov	%g3, %g4
+	jmp	jge_cont.44312
+jge_else.44311:
+	addi	%g3, %g0, 0
+jge_cont.44312:
+	jmp	jle_cont.44310
+jle_else.44309:
+	addi	%g3, %g0, 255
+jle_cont.44310:
 	output	%g3
-	ldi	%g14, %g1, 16
-	addi	%g14, %g14, 1
-	ldi	%g15, %g1, 12
-	ldi	%g17, %g1, 8
-	ldi	%g16, %g1, 4
-	ldi	%g18, %g1, 0
-	jmp	scan_pixel.2969
+	ldi	%g6, %g1, 16
+	addi	%g6, %g6, 1
+	ldi	%g10, %g1, 12
+	ldi	%g9, %g1, 8
+	ldi	%g7, %g1, 4
+	ldi	%g8, %g1, 0
+	jmp	scan_pixel.2986
 
 !==============================
-! args = [%g15, %g7, %g17, %g16, %g8]
+! args = [%g10, %g7, %g9, %g8, %g3]
 ! fargs = []
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f31, %f30, %f3, %f29, %f28, %f27, %f26, %f25, %f24, %f23, %f22, %f21, %f20, %f2, %f19, %f18, %f17, %f16, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-scan_line.2975:
-	ldi	%g3, %g31, 596
-	jlt	%g15, %g3, jle_else.51953
+scan_line.2992:
+	ldi	%g4, %g31, 596
+	jlt	%g10, %g4, jle_else.44313
 	return
-jle_else.51953:
-	subi	%g3, %g3, 1
-	sti	%g8, %g1, 0
-	sti	%g16, %g1, 4
-	sti	%g17, %g1, 8
+jle_else.44313:
+	subi	%g4, %g4, 1
+	sti	%g3, %g1, 0
+	sti	%g8, %g1, 4
+	sti	%g9, %g1, 8
 	sti	%g7, %g1, 12
-	sti	%g15, %g1, 16
-	jlt	%g15, %g3, jle_else.51955
-	jmp	jle_cont.51956
-jle_else.51955:
-	addi	%g4, %g15, 1
+	sti	%g10, %g1, 16
+	jlt	%g10, %g4, jle_else.44315
+	jmp	jle_cont.44316
+jle_else.44315:
+	addi	%g5, %g10, 1
 	fldi	%f3, %g31, 612
-	ldi	%g3, %g31, 604
-	sub	%g3, %g4, %g3
+	ldi	%g4, %g31, 604
+	sub	%g6, %g5, %g4
+	mov	%g3, %g6
 	subi	%g1, %g1, 24
 	call	min_caml_float_of_int
+	addi	%g1, %g1, 24
 	fmul	%f0, %f3, %f0
 	fldi	%f1, %g31, 660
 	fmul	%f2, %f0, %f1
@@ -17635,45 +14577,48 @@ jle_else.51955:
 	fmul	%f1, %f0, %f1
 	fldi	%f0, %g31, 664
 	fadd	%f11, %f1, %f0
-	ldi	%g3, %g31, 600
-	subi	%g6, %g3, 1
-	mov	%g7, %g16
-	call	pretrace_pixels.2958
+	ldi	%g4, %g31, 600
+	subi	%g6, %g4, 1
+	ldi	%g3, %g1, 0
+	mov	%g7, %g8
+	mov	%g8, %g3
+	subi	%g1, %g1, 24
+	call	pretrace_pixels.2975
 	addi	%g1, %g1, 24
-jle_cont.51956:
-	addi	%g14, %g0, 0
-	ldi	%g15, %g1, 16
+jle_cont.44316:
+	addi	%g6, %g0, 0
+	ldi	%g10, %g1, 16
 	ldi	%g7, %g1, 12
-	ldi	%g17, %g1, 8
-	ldi	%g16, %g1, 4
-	mov	%g18, %g16
-	mov	%g16, %g17
-	mov	%g17, %g7
+	ldi	%g9, %g1, 8
+	ldi	%g8, %g1, 4
+	mov	%g27, %g7
+	mov	%g7, %g9
+	mov	%g9, %g27
 	subi	%g1, %g1, 24
-	call	scan_pixel.2969
+	call	scan_pixel.2986
 	addi	%g1, %g1, 24
-	ldi	%g15, %g1, 16
-	addi	%g15, %g15, 1
-	ldi	%g8, %g1, 0
-	addi	%g3, %g8, 2
-	addi	%g8, %g0, 5
-	jlt	%g3, %g8, jle_else.51957
-	subi	%g8, %g3, 5
-	jmp	jle_cont.51958
-jle_else.51957:
-	mov	%g8, %g3
-jle_cont.51958:
+	ldi	%g10, %g1, 16
+	addi	%g10, %g10, 1
+	ldi	%g3, %g1, 0
+	addi	%g3, %g3, 2
+	addi	%g6, %g0, 5
+	jlt	%g3, %g6, jle_else.44317
+	subi	%g6, %g3, 5
+	jmp	jle_cont.44318
+jle_else.44317:
+	mov	%g6, %g3
+jle_cont.44318:
 	ldi	%g3, %g31, 596
-	jlt	%g15, %g3, jle_else.51959
+	jlt	%g10, %g3, jle_else.44319
 	return
-jle_else.51959:
+jle_else.44319:
 	subi	%g3, %g3, 1
-	sti	%g8, %g1, 20
-	sti	%g15, %g1, 24
-	jlt	%g15, %g3, jle_else.51961
-	jmp	jle_cont.51962
-jle_else.51961:
-	addi	%g4, %g15, 1
+	sti	%g6, %g1, 20
+	sti	%g10, %g1, 24
+	jlt	%g10, %g3, jle_else.44321
+	jmp	jle_cont.44322
+jle_else.44321:
+	addi	%g4, %g10, 1
 	fldi	%f3, %g31, 612
 	ldi	%g3, %g31, 604
 	sub	%g3, %g4, %g3
@@ -17694,41 +14639,45 @@ jle_else.51961:
 	fldi	%f0, %g31, 664
 	fadd	%f11, %f1, %f0
 	ldi	%g3, %g31, 600
-	subi	%g6, %g3, 1
+	subi	%g3, %g3, 1
 	ldi	%g7, %g1, 12
+	mov	%g8, %g6
+	mov	%g6, %g3
 	subi	%g1, %g1, 32
-	call	pretrace_pixels.2958
+	call	pretrace_pixels.2975
 	addi	%g1, %g1, 32
-jle_cont.51962:
-	addi	%g14, %g0, 0
-	ldi	%g15, %g1, 24
-	ldi	%g17, %g1, 8
-	ldi	%g16, %g1, 4
+jle_cont.44322:
+	addi	%g3, %g0, 0
+	ldi	%g10, %g1, 24
+	ldi	%g9, %g1, 8
+	ldi	%g8, %g1, 4
 	ldi	%g7, %g1, 12
-	mov	%g18, %g7
+	mov	%g6, %g3
+	mov	%g27, %g8
+	mov	%g8, %g7
+	mov	%g7, %g27
 	subi	%g1, %g1, 32
-	call	scan_pixel.2969
+	call	scan_pixel.2986
 	addi	%g1, %g1, 32
-	ldi	%g15, %g1, 24
-	addi	%g15, %g15, 1
-	ldi	%g8, %g1, 20
-	addi	%g4, %g8, 2
+	ldi	%g10, %g1, 24
+	addi	%g10, %g10, 1
+	ldi	%g6, %g1, 20
+	addi	%g4, %g6, 2
 	addi	%g3, %g0, 5
-	jlt	%g4, %g3, jle_else.51963
+	jlt	%g4, %g3, jle_else.44323
 	subi	%g3, %g4, 5
-	jmp	jle_cont.51964
-jle_else.51963:
+	jmp	jle_cont.44324
+jle_else.44323:
 	mov	%g3, %g4
-jle_cont.51964:
-	ldi	%g16, %g1, 4
+jle_cont.44324:
+	ldi	%g8, %g1, 4
 	ldi	%g7, %g1, 12
-	ldi	%g17, %g1, 8
-	mov	%g8, %g3
-	mov	%g27, %g16
-	mov	%g16, %g17
-	mov	%g17, %g7
+	ldi	%g9, %g1, 8
+	mov	%g27, %g8
+	mov	%g8, %g9
+	mov	%g9, %g7
 	mov	%g7, %g27
-	jmp	scan_line.2975
+	jmp	scan_line.2992
 
 !==============================
 ! args = [%g10, %g9]
@@ -17736,8 +14685,8 @@ jle_cont.51964:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g2, %g14, %g13, %g12, %g11, %g10, %f16, %f15, %f0, %dummy]
 ! ret type = Array((Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))))
 !================================
-init_line_elements.2985:
-	jlt	%g9, %g0, jge_else.51965
+init_line_elements.3002:
+	jlt	%g9, %g0, jge_else.44325
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
 	subi	%g1, %g1, 4
@@ -17861,8 +14810,8 @@ init_line_elements.2985:
 	slli	%g4, %g9, 2
 	st	%g3, %g10, %g4
 	subi	%g9, %g9, 1
-	jmp	init_line_elements.2985
-jge_else.51965:
+	jmp	init_line_elements.3002
+jge_else.44325:
 	mov	%g3, %g10
 	return
 
@@ -17872,11 +14821,11 @@ jge_else.51965:
 ! use_regs = [%g7, %g6, %g5, %g4, %g3, %g27, %f9, %f8, %f7, %f6, %f5, %f4, %f31, %f3, %f28, %f26, %f25, %f24, %f23, %f22, %f20, %f2, %f17, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-calc_dirvec.2993:
+calc_dirvec.3010:
 	fsti	%f0, %g1, 0
 	fsti	%f2, %g1, 4
 	addi	%g6, %g0, 5
-	jlt	%g4, %g6, jle_else.51966
+	jlt	%g4, %g6, jle_else.44326
 	fmul	%f2, %f5, %f5
 	fmul	%f0, %f1, %f1
 	fadd	%f0, %f2, %f0
@@ -17933,91 +14882,91 @@ calc_dirvec.2993:
 	fsti	%f2, %g3, -4
 	fsti	%f1, %g3, -8
 	return
-jle_else.51966:
+jle_else.44326:
 	fmul	%f0, %f1, %f1
-	setL %g6, l.42726
+	setL %g6, l.36040
 	fldi	%f6, %g6, 0
 	fadd	%f0, %f0, %f6
 	fsqrt	%f5, %f0
 	fdiv	%f0, %f17, %f5
-	fjlt	%f17, %f0, fjge_else.51968
-	fjlt	%f0, %f20, fjge_else.51970
+	fjlt	%f17, %f0, fjge_else.44328
+	fjlt	%f0, %f20, fjge_else.44330
 	addi	%g6, %g0, 0
-	jmp	fjge_cont.51971
-fjge_else.51970:
+	jmp	fjge_cont.44331
+fjge_else.44330:
 	addi	%g6, %g0, -1
-fjge_cont.51971:
-	jmp	fjge_cont.51969
-fjge_else.51968:
+fjge_cont.44331:
+	jmp	fjge_cont.44329
+fjge_else.44328:
 	addi	%g6, %g0, 1
-fjge_cont.51969:
-	jne	%g6, %g0, jeq_else.51972
+fjge_cont.44329:
+	jne	%g6, %g0, jeq_else.44332
 	fmov	%f4, %f0
-	jmp	jeq_cont.51973
-jeq_else.51972:
+	jmp	jeq_cont.44333
+jeq_else.44332:
 	fdiv	%f4, %f17, %f0
-jeq_cont.51973:
+jeq_cont.44333:
 	fmul	%f0, %f4, %f4
-	setL %g7, l.45192
+	setL %g7, l.37902
 	fldi	%f14, %g7, 0
 	fmul	%f1, %f14, %f0
-	setL %g7, l.45194
+	setL %g7, l.37904
 	fldi	%f15, %g7, 0
 	fdiv	%f3, %f1, %f15
-	setL %g7, l.45196
+	setL %g7, l.37906
 	fldi	%f1, %g7, 0
 	fsti	%f1, %g1, 8
 	fldi	%f1, %g1, 8
 	fmul	%f2, %f1, %f0
-	setL %g7, l.45198
+	setL %g7, l.37908
 	fldi	%f1, %g7, 0
 	fsti	%f1, %g1, 12
 	fldi	%f1, %g1, 12
 	fadd	%f1, %f1, %f3
 	fdiv	%f1, %f2, %f1
-	setL %g7, l.45200
+	setL %g7, l.37910
 	fldi	%f11, %g7, 0
 	fmul	%f2, %f11, %f0
-	setL %g7, l.45202
+	setL %g7, l.37912
 	fldi	%f13, %g7, 0
 	fadd	%f1, %f13, %f1
 	fdiv	%f2, %f2, %f1
-	setL %g7, l.45204
+	setL %g7, l.37914
 	fldi	%f12, %g7, 0
 	fmul	%f3, %f12, %f0
-	setL %g7, l.45206
+	setL %g7, l.37916
 	fldi	%f1, %g7, 0
 	fsti	%f1, %g1, 16
 	fldi	%f1, %g1, 16
 	fadd	%f1, %f1, %f2
 	fdiv	%f1, %f3, %f1
-	setL %g7, l.45208
+	setL %g7, l.37918
 	fldi	%f9, %g7, 0
 	fmul	%f2, %f9, %f0
 	fadd	%f1, %f28, %f1
 	fdiv	%f2, %f2, %f1
-	setL %g7, l.45211
+	setL %g7, l.37921
 	fldi	%f10, %g7, 0
 	fmul	%f3, %f10, %f0
-	setL %g7, l.45213
+	setL %g7, l.37923
 	fldi	%f1, %g7, 0
 	fsti	%f1, %g1, 20
 	fldi	%f1, %g1, 20
 	fadd	%f1, %f1, %f2
 	fdiv	%f2, %f3, %f1
-	setL %g7, l.45223
+	setL %g7, l.37933
 	fldi	%f1, %g7, 0
 	fsti	%f1, %g1, 24
-	setL %g7, l.45215
+	setL %g7, l.37925
 	fldi	%f8, %g7, 0
 	fmul	%f3, %f8, %f0
-	setL %g7, l.45217
+	setL %g7, l.37927
 	fldi	%f1, %g7, 0
 	fsti	%f1, %g1, 28
 	fldi	%f1, %g1, 28
 	fadd	%f1, %f1, %f2
 	fdiv	%f1, %f3, %f1
-	setL %g7, l.45219
+	setL %g7, l.37929
 	fldi	%f7, %g7, 0
 	fmul	%f2, %f7, %f0
 	fadd	%f1, %f25, %f1
@@ -18033,17 +14982,17 @@ jeq_cont.51973:
 	fdiv	%f0, %f0, %f1
 	fadd	%f0, %f17, %f0
 	fdiv	%f1, %f4, %f0
-	jlt	%g0, %g6, jle_else.51974
-	jlt	%g6, %g0, jge_else.51976
+	jlt	%g0, %g6, jle_else.44334
+	jlt	%g6, %g0, jge_else.44336
 	fmov	%f0, %f1
-	jmp	jge_cont.51977
-jge_else.51976:
+	jmp	jge_cont.44337
+jge_else.44336:
 	fsub	%f0, %f31, %f1
-jge_cont.51977:
-	jmp	jle_cont.51975
-jle_else.51974:
+jge_cont.44337:
+	jmp	jle_cont.44335
+jle_else.44334:
 	fsub	%f0, %f22, %f1
-jle_cont.51975:
+jle_cont.44335:
 	fldi	%f1, %g1, 4
 	fmul	%f1, %f0, %f1
 	fmul	%f0, %f1, %f1
@@ -18062,23 +15011,23 @@ jle_cont.51975:
 	fadd	%f0, %f0, %f6
 	fsqrt	%f6, %f0
 	fdiv	%f0, %f17, %f6
-	fjlt	%f17, %f0, fjge_else.51978
-	fjlt	%f0, %f20, fjge_else.51980
+	fjlt	%f17, %f0, fjge_else.44338
+	fjlt	%f0, %f20, fjge_else.44340
 	addi	%g6, %g0, 0
-	jmp	fjge_cont.51981
-fjge_else.51980:
+	jmp	fjge_cont.44341
+fjge_else.44340:
 	addi	%g6, %g0, -1
-fjge_cont.51981:
-	jmp	fjge_cont.51979
-fjge_else.51978:
+fjge_cont.44341:
+	jmp	fjge_cont.44339
+fjge_else.44338:
 	addi	%g6, %g0, 1
-fjge_cont.51979:
-	jne	%g6, %g0, jeq_else.51982
+fjge_cont.44339:
+	jne	%g6, %g0, jeq_else.44342
 	fmov	%f1, %f0
-	jmp	jeq_cont.51983
-jeq_else.51982:
+	jmp	jeq_cont.44343
+jeq_else.44342:
 	fdiv	%f1, %f17, %f0
-jeq_cont.51983:
+jeq_cont.44343:
 	fmul	%f0, %f1, %f1
 	fmul	%f2, %f14, %f0
 	fdiv	%f3, %f2, %f15
@@ -18119,17 +15068,17 @@ jeq_cont.51983:
 	fdiv	%f0, %f0, %f2
 	fadd	%f0, %f17, %f0
 	fdiv	%f1, %f1, %f0
-	jlt	%g0, %g6, jle_else.51984
-	jlt	%g6, %g0, jge_else.51986
+	jlt	%g0, %g6, jle_else.44344
+	jlt	%g6, %g0, jge_else.44346
 	fmov	%f0, %f1
-	jmp	jge_cont.51987
-jge_else.51986:
+	jmp	jge_cont.44347
+jge_else.44346:
 	fsub	%f0, %f31, %f1
-jge_cont.51987:
-	jmp	jle_cont.51985
-jle_else.51984:
+jge_cont.44347:
+	jmp	jle_cont.44345
+jle_else.44344:
 	fsub	%f0, %f22, %f1
-jle_cont.51985:
+jle_cont.44345:
 	fldi	%f1, %g1, 0
 	fmul	%f0, %f0, %f1
 	fmul	%f2, %f0, %f0
@@ -18145,7 +15094,7 @@ jle_cont.51985:
 	fmul	%f1, %f0, %f6
 	fldi	%f2, %g1, 4
 	fldi	%f0, %g1, 0
-	jmp	calc_dirvec.2993
+	jmp	calc_dirvec.3010
 
 !==============================
 ! args = [%g10, %g9, %g8]
@@ -18153,18 +15102,18 @@ jle_cont.51985:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f31, %f3, %f28, %f26, %f25, %f24, %f23, %f22, %f20, %f2, %f17, %f16, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-calc_dirvecs.3001:
-	jlt	%g10, %g0, jge_else.51988
+calc_dirvecs.3018:
+	jlt	%g10, %g0, jge_else.44348
 	fsti	%f0, %g1, 0
 	mov	%g3, %g10
 	subi	%g1, %g1, 8
 	call	min_caml_float_of_int
 	addi	%g1, %g1, 8
 	fmov	%f1, %f0
-	setL %g3, l.42722
+	setL %g3, l.36036
 	fldi	%f5, %g3, 0
 	fmul	%f1, %f1, %f5
-	setL %g3, l.42724
+	setL %g3, l.36038
 	fldi	%f4, %g3, 0
 	fsub	%f2, %f1, %f4
 	addi	%g4, %g0, 0
@@ -18177,9 +15126,9 @@ calc_dirvecs.3001:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 20
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 20
-	setL %g3, l.42726
+	setL %g3, l.36040
 	fldi	%f3, %g3, 0
 	fldi	%f1, %g1, 12
 	fadd	%f2, %f1, %f3
@@ -18192,18 +15141,18 @@ calc_dirvecs.3001:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 24
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 24
 	subi	%g10, %g10, 1
 	addi	%g3, %g9, 1
 	addi	%g9, %g0, 5
-	jlt	%g3, %g9, jle_else.51989
+	jlt	%g3, %g9, jle_else.44349
 	subi	%g9, %g3, 5
-	jmp	jle_cont.51990
-jle_else.51989:
+	jmp	jle_cont.44350
+jle_else.44349:
 	mov	%g9, %g3
-jle_cont.51990:
-	jlt	%g10, %g0, jge_else.51991
+jle_cont.44350:
+	jlt	%g10, %g0, jge_else.44351
 	mov	%g3, %g10
 	subi	%g1, %g1, 24
 	call	min_caml_float_of_int
@@ -18221,7 +15170,7 @@ jle_cont.51990:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 28
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 28
 	fldi	%f3, %g1, 16
 	fldi	%f1, %g1, 20
@@ -18233,18 +15182,18 @@ jle_cont.51990:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 28
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 28
 	subi	%g10, %g10, 1
 	addi	%g3, %g9, 1
 	addi	%g9, %g0, 5
-	jlt	%g3, %g9, jle_else.51992
+	jlt	%g3, %g9, jle_else.44352
 	subi	%g9, %g3, 5
-	jmp	jle_cont.51993
-jle_else.51992:
+	jmp	jle_cont.44353
+jle_else.44352:
 	mov	%g9, %g3
-jle_cont.51993:
-	jlt	%g10, %g0, jge_else.51994
+jle_cont.44353:
+	jlt	%g10, %g0, jge_else.44354
 	mov	%g3, %g10
 	subi	%g1, %g1, 28
 	call	min_caml_float_of_int
@@ -18262,7 +15211,7 @@ jle_cont.51993:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 32
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 32
 	fldi	%f3, %g1, 16
 	fldi	%f1, %g1, 24
@@ -18274,18 +15223,18 @@ jle_cont.51993:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 32
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 32
 	subi	%g10, %g10, 1
 	addi	%g3, %g9, 1
 	addi	%g9, %g0, 5
-	jlt	%g3, %g9, jle_else.51995
+	jlt	%g3, %g9, jle_else.44355
 	subi	%g9, %g3, 5
-	jmp	jle_cont.51996
-jle_else.51995:
+	jmp	jle_cont.44356
+jle_else.44355:
 	mov	%g9, %g3
-jle_cont.51996:
-	jlt	%g10, %g0, jge_else.51997
+jle_cont.44356:
+	jlt	%g10, %g0, jge_else.44357
 	mov	%g3, %g10
 	subi	%g1, %g1, 32
 	call	min_caml_float_of_int
@@ -18303,7 +15252,7 @@ jle_cont.51996:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 36
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 36
 	fldi	%f3, %g1, 16
 	fldi	%f1, %g1, 28
@@ -18315,27 +15264,27 @@ jle_cont.51996:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 36
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 36
 	subi	%g10, %g10, 1
 	addi	%g4, %g9, 1
 	addi	%g3, %g0, 5
-	jlt	%g4, %g3, jle_else.51998
+	jlt	%g4, %g3, jle_else.44358
 	subi	%g3, %g4, 5
-	jmp	jle_cont.51999
-jle_else.51998:
+	jmp	jle_cont.44359
+jle_else.44358:
 	mov	%g3, %g4
-jle_cont.51999:
+jle_cont.44359:
 	fldi	%f0, %g1, 0
 	mov	%g9, %g3
-	jmp	calc_dirvecs.3001
-jge_else.51997:
+	jmp	calc_dirvecs.3018
+jge_else.44357:
 	return
-jge_else.51994:
+jge_else.44354:
 	return
-jge_else.51991:
+jge_else.44351:
 	return
-jge_else.51988:
+jge_else.44348:
 	return
 
 !==============================
@@ -18344,16 +15293,16 @@ jge_else.51988:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f31, %f3, %f28, %f26, %f25, %f24, %f23, %f22, %f20, %f2, %f17, %f16, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-calc_dirvec_rows.3006:
-	jlt	%g13, %g0, jge_else.52004
+calc_dirvec_rows.3023:
+	jlt	%g13, %g0, jge_else.44364
 	mov	%g3, %g13
 	subi	%g1, %g1, 4
 	call	min_caml_float_of_int
 	addi	%g1, %g1, 4
-	setL %g3, l.42722
+	setL %g3, l.36036
 	fldi	%f4, %g3, 0
 	fmul	%f0, %f0, %f4
-	setL %g3, l.42724
+	setL %g3, l.36038
 	fldi	%f3, %g3, 0
 	fsub	%f0, %f0, %f3
 	addi	%g3, %g0, 4
@@ -18376,9 +15325,9 @@ calc_dirvec_rows.3006:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 24
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 24
-	setL %g3, l.42726
+	setL %g3, l.36040
 	fldi	%f5, %g3, 0
 	fldi	%f1, %g1, 16
 	fadd	%f9, %f1, %f5
@@ -18393,17 +15342,17 @@ calc_dirvec_rows.3006:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 32
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 32
 	addi	%g6, %g0, 3
 	addi	%g3, %g12, 1
 	addi	%g9, %g0, 5
-	jlt	%g3, %g9, jle_else.52005
+	jlt	%g3, %g9, jle_else.44365
 	subi	%g9, %g3, 5
-	jmp	jle_cont.52006
-jle_else.52005:
+	jmp	jle_cont.44366
+jle_else.44365:
 	mov	%g9, %g3
-jle_cont.52006:
+jle_cont.44366:
 	mov	%g3, %g6
 	subi	%g1, %g1, 32
 	call	min_caml_float_of_int
@@ -18423,7 +15372,7 @@ jle_cont.52006:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 40
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 40
 	fldi	%f5, %g1, 24
 	fldi	%f1, %g1, 32
@@ -18437,17 +15386,17 @@ jle_cont.52006:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 44
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 44
 	addi	%g6, %g0, 2
 	addi	%g3, %g9, 1
 	addi	%g9, %g0, 5
-	jlt	%g3, %g9, jle_else.52007
+	jlt	%g3, %g9, jle_else.44367
 	subi	%g9, %g3, 5
-	jmp	jle_cont.52008
-jle_else.52007:
+	jmp	jle_cont.44368
+jle_else.44367:
 	mov	%g9, %g3
-jle_cont.52008:
+jle_cont.44368:
 	mov	%g3, %g6
 	subi	%g1, %g1, 44
 	call	min_caml_float_of_int
@@ -18467,7 +15416,7 @@ jle_cont.52008:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 52
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 52
 	fldi	%f5, %g1, 24
 	fldi	%f1, %g1, 44
@@ -18480,17 +15429,17 @@ jle_cont.52008:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 56
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 56
 	addi	%g6, %g0, 1
 	addi	%g3, %g9, 1
 	addi	%g9, %g0, 5
-	jlt	%g3, %g9, jle_else.52009
+	jlt	%g3, %g9, jle_else.44369
 	subi	%g9, %g3, 5
-	jmp	jle_cont.52010
-jle_else.52009:
+	jmp	jle_cont.44370
+jle_else.44369:
 	mov	%g9, %g3
-jle_cont.52010:
+jle_cont.44370:
 	mov	%g3, %g6
 	subi	%g1, %g1, 56
 	call	min_caml_float_of_int
@@ -18509,7 +15458,7 @@ jle_cont.52010:
 	fmov	%f5, %f16
 	fmov	%f1, %f16
 	subi	%g1, %g1, 60
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 60
 	fldi	%f5, %g1, 24
 	fldi	%f11, %g1, 52
@@ -18522,34 +15471,34 @@ jle_cont.52010:
 	fmov	%f5, %f16
 	fmov	%f1, %f16
 	subi	%g1, %g1, 60
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 60
 	addi	%g10, %g0, 0
 	addi	%g3, %g9, 1
 	addi	%g9, %g0, 5
-	jlt	%g3, %g9, jle_else.52011
+	jlt	%g3, %g9, jle_else.44371
 	subi	%g9, %g3, 5
-	jmp	jle_cont.52012
-jle_else.52011:
+	jmp	jle_cont.44372
+jle_else.44371:
 	mov	%g9, %g3
-jle_cont.52012:
+jle_cont.44372:
 	fldi	%f0, %g1, 0
 	sti	%g8, %g1, 56
 	subi	%g1, %g1, 64
-	call	calc_dirvecs.3001
+	call	calc_dirvecs.3018
 	addi	%g1, %g1, 64
 	subi	%g14, %g13, 1
 	addi	%g3, %g12, 2
 	addi	%g12, %g0, 5
-	jlt	%g3, %g12, jle_else.52013
+	jlt	%g3, %g12, jle_else.44373
 	subi	%g12, %g3, 5
-	jmp	jle_cont.52014
-jle_else.52013:
+	jmp	jle_cont.44374
+jle_else.44373:
 	mov	%g12, %g3
-jle_cont.52014:
+jle_cont.44374:
 	ldi	%g8, %g1, 56
 	addi	%g13, %g8, 4
-	jlt	%g14, %g0, jge_else.52015
+	jlt	%g14, %g0, jge_else.44375
 	mov	%g3, %g14
 	subi	%g1, %g1, 64
 	call	min_caml_float_of_int
@@ -18567,7 +15516,7 @@ jle_cont.52014:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 68
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 68
 	addi	%g4, %g0, 0
 	addi	%g8, %g13, 2
@@ -18579,16 +15528,16 @@ jle_cont.52014:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 68
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 68
 	addi	%g3, %g12, 1
 	addi	%g5, %g0, 5
-	jlt	%g3, %g5, jle_else.52016
+	jlt	%g3, %g5, jle_else.44376
 	subi	%g5, %g3, 5
-	jmp	jle_cont.52017
-jle_else.52016:
+	jmp	jle_cont.44377
+jle_else.44376:
 	mov	%g5, %g3
-jle_cont.52017:
+jle_cont.44377:
 	addi	%g4, %g0, 0
 	fldi	%f8, %g1, 28
 	fldi	%f0, %g1, 60
@@ -18598,7 +15547,7 @@ jle_cont.52017:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 72
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 72
 	addi	%g4, %g0, 0
 	fldi	%f7, %g1, 36
@@ -18609,17 +15558,17 @@ jle_cont.52017:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 72
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 72
 	ldi	%g5, %g1, 64
 	addi	%g3, %g5, 1
 	addi	%g5, %g0, 5
-	jlt	%g3, %g5, jle_else.52018
+	jlt	%g3, %g5, jle_else.44378
 	subi	%g5, %g3, 5
-	jmp	jle_cont.52019
-jle_else.52018:
+	jmp	jle_cont.44379
+jle_else.44378:
 	mov	%g5, %g3
-jle_cont.52019:
+jle_cont.44379:
 	addi	%g4, %g0, 0
 	fldi	%f6, %g1, 40
 	fldi	%f0, %g1, 60
@@ -18629,7 +15578,7 @@ jle_cont.52019:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 76
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 76
 	addi	%g4, %g0, 0
 	fldi	%f2, %g1, 48
@@ -18639,38 +15588,38 @@ jle_cont.52019:
 	fmov	%f1, %f16
 	fmov	%f5, %f16
 	subi	%g1, %g1, 76
-	call	calc_dirvec.2993
+	call	calc_dirvec.3010
 	addi	%g1, %g1, 76
 	addi	%g10, %g0, 1
 	ldi	%g5, %g1, 68
 	addi	%g3, %g5, 1
 	addi	%g9, %g0, 5
-	jlt	%g3, %g9, jle_else.52020
+	jlt	%g3, %g9, jle_else.44380
 	subi	%g9, %g3, 5
-	jmp	jle_cont.52021
-jle_else.52020:
+	jmp	jle_cont.44381
+jle_else.44380:
 	mov	%g9, %g3
-jle_cont.52021:
+jle_cont.44381:
 	fldi	%f0, %g1, 60
 	mov	%g8, %g13
 	subi	%g1, %g1, 76
-	call	calc_dirvecs.3001
+	call	calc_dirvecs.3018
 	addi	%g1, %g1, 76
 	subi	%g4, %g14, 1
 	addi	%g3, %g12, 2
 	addi	%g12, %g0, 5
-	jlt	%g3, %g12, jle_else.52022
+	jlt	%g3, %g12, jle_else.44382
 	subi	%g12, %g3, 5
-	jmp	jle_cont.52023
-jle_else.52022:
+	jmp	jle_cont.44383
+jle_else.44382:
 	mov	%g12, %g3
-jle_cont.52023:
+jle_cont.44383:
 	addi	%g8, %g13, 4
 	mov	%g13, %g4
-	jmp	calc_dirvec_rows.3006
-jge_else.52015:
+	jmp	calc_dirvec_rows.3023
+jge_else.44375:
 	return
-jge_else.52004:
+jge_else.44364:
 	return
 
 !==============================
@@ -18679,8 +15628,8 @@ jge_else.52004:
 ! use_regs = [%g7, %g6, %g5, %g4, %g3, %g27, %g2, %f16, %f15, %f0, %dummy]
 ! ret type = Unit
 !================================
-create_dirvec_elements.3012:
-	jlt	%g7, %g0, jge_else.52026
+create_dirvec_elements.3029:
+	jlt	%g7, %g0, jge_else.44386
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
 	subi	%g1, %g1, 4
@@ -18701,7 +15650,7 @@ create_dirvec_elements.3012:
 	slli	%g4, %g7, 2
 	st	%g3, %g6, %g4
 	subi	%g7, %g7, 1
-	jlt	%g7, %g0, jge_else.52027
+	jlt	%g7, %g0, jge_else.44387
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
 	subi	%g1, %g1, 8
@@ -18722,7 +15671,7 @@ create_dirvec_elements.3012:
 	slli	%g4, %g7, 2
 	st	%g3, %g6, %g4
 	subi	%g7, %g7, 1
-	jlt	%g7, %g0, jge_else.52028
+	jlt	%g7, %g0, jge_else.44388
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
 	subi	%g1, %g1, 12
@@ -18743,7 +15692,7 @@ create_dirvec_elements.3012:
 	slli	%g4, %g7, 2
 	st	%g3, %g6, %g4
 	subi	%g7, %g7, 1
-	jlt	%g7, %g0, jge_else.52029
+	jlt	%g7, %g0, jge_else.44389
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
 	subi	%g1, %g1, 16
@@ -18764,14 +15713,14 @@ create_dirvec_elements.3012:
 	slli	%g4, %g7, 2
 	st	%g3, %g6, %g4
 	subi	%g7, %g7, 1
-	jmp	create_dirvec_elements.3012
-jge_else.52029:
+	jmp	create_dirvec_elements.3029
+jge_else.44389:
 	return
-jge_else.52028:
+jge_else.44388:
 	return
-jge_else.52027:
+jge_else.44387:
 	return
-jge_else.52026:
+jge_else.44386:
 	return
 
 !==============================
@@ -18780,8 +15729,8 @@ jge_else.52026:
 ! use_regs = [%g8, %g7, %g6, %g5, %g4, %g3, %g27, %g2, %f16, %f15, %f0, %dummy]
 ! ret type = Unit
 !================================
-create_dirvecs.3015:
-	jlt	%g8, %g0, jge_else.52034
+create_dirvecs.3032:
+	jlt	%g8, %g0, jge_else.44394
 	addi	%g6, %g0, 120
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
@@ -18883,10 +15832,10 @@ create_dirvecs.3015:
 	sti	%g3, %g6, -460
 	addi	%g7, %g0, 114
 	subi	%g1, %g1, 24
-	call	create_dirvec_elements.3012
+	call	create_dirvec_elements.3029
 	addi	%g1, %g1, 24
 	subi	%g8, %g8, 1
-	jlt	%g8, %g0, jge_else.52035
+	jlt	%g8, %g0, jge_else.44395
 	addi	%g6, %g0, 120
 	addi	%g3, %g0, 3
 	fmov	%f0, %f16
@@ -18970,13 +15919,13 @@ create_dirvecs.3015:
 	sti	%g3, %g6, -464
 	addi	%g7, %g0, 115
 	subi	%g1, %g1, 40
-	call	create_dirvec_elements.3012
+	call	create_dirvec_elements.3029
 	addi	%g1, %g1, 40
 	subi	%g8, %g8, 1
-	jmp	create_dirvecs.3015
-jge_else.52035:
+	jmp	create_dirvecs.3032
+jge_else.44395:
 	return
-jge_else.52034:
+jge_else.44394:
 	return
 
 !==============================
@@ -18985,8 +15934,8 @@ jge_else.52034:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g12, %g11, %g10, %f8, %f7, %f6, %f5, %f4, %f3, %f21, %f20, %f2, %f17, %f16, %f15, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-init_dirvec_constants.3017:
-	jlt	%g12, %g0, jge_else.52038
+init_dirvec_constants.3034:
+	jlt	%g12, %g0, jge_else.44398
 	slli	%g3, %g12, 2
 	ld	%g3, %g11, %g3
 	ldi	%g4, %g31, 28
@@ -18994,10 +15943,10 @@ init_dirvec_constants.3017:
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
 	subi	%g1, %g1, 4
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	addi	%g1, %g1, 4
 	subi	%g12, %g12, 1
-	jlt	%g12, %g0, jge_else.52039
+	jlt	%g12, %g0, jge_else.44399
 	slli	%g3, %g12, 2
 	ld	%g3, %g11, %g3
 	ldi	%g4, %g31, 28
@@ -19005,10 +15954,10 @@ init_dirvec_constants.3017:
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
 	subi	%g1, %g1, 4
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	addi	%g1, %g1, 4
 	subi	%g12, %g12, 1
-	jlt	%g12, %g0, jge_else.52040
+	jlt	%g12, %g0, jge_else.44400
 	slli	%g3, %g12, 2
 	ld	%g3, %g11, %g3
 	ldi	%g4, %g31, 28
@@ -19016,10 +15965,10 @@ init_dirvec_constants.3017:
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
 	subi	%g1, %g1, 4
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	addi	%g1, %g1, 4
 	subi	%g12, %g12, 1
-	jlt	%g12, %g0, jge_else.52041
+	jlt	%g12, %g0, jge_else.44401
 	slli	%g3, %g12, 2
 	ld	%g3, %g11, %g3
 	ldi	%g4, %g31, 28
@@ -19027,10 +15976,10 @@ init_dirvec_constants.3017:
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
 	subi	%g1, %g1, 4
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	addi	%g1, %g1, 4
 	subi	%g12, %g12, 1
-	jlt	%g12, %g0, jge_else.52042
+	jlt	%g12, %g0, jge_else.44402
 	slli	%g3, %g12, 2
 	ld	%g3, %g11, %g3
 	ldi	%g4, %g31, 28
@@ -19038,10 +15987,10 @@ init_dirvec_constants.3017:
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
 	subi	%g1, %g1, 4
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	addi	%g1, %g1, 4
 	subi	%g12, %g12, 1
-	jlt	%g12, %g0, jge_else.52043
+	jlt	%g12, %g0, jge_else.44403
 	slli	%g3, %g12, 2
 	ld	%g3, %g11, %g3
 	ldi	%g4, %g31, 28
@@ -19049,10 +15998,10 @@ init_dirvec_constants.3017:
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
 	subi	%g1, %g1, 4
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	addi	%g1, %g1, 4
 	subi	%g12, %g12, 1
-	jlt	%g12, %g0, jge_else.52044
+	jlt	%g12, %g0, jge_else.44404
 	slli	%g3, %g12, 2
 	ld	%g3, %g11, %g3
 	ldi	%g4, %g31, 28
@@ -19060,10 +16009,10 @@ init_dirvec_constants.3017:
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
 	subi	%g1, %g1, 4
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	addi	%g1, %g1, 4
 	subi	%g12, %g12, 1
-	jlt	%g12, %g0, jge_else.52045
+	jlt	%g12, %g0, jge_else.44405
 	slli	%g3, %g12, 2
 	ld	%g3, %g11, %g3
 	ldi	%g4, %g31, 28
@@ -19071,25 +16020,25 @@ init_dirvec_constants.3017:
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
 	subi	%g1, %g1, 4
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	addi	%g1, %g1, 4
 	subi	%g12, %g12, 1
-	jmp	init_dirvec_constants.3017
-jge_else.52045:
+	jmp	init_dirvec_constants.3034
+jge_else.44405:
 	return
-jge_else.52044:
+jge_else.44404:
 	return
-jge_else.52043:
+jge_else.44403:
 	return
-jge_else.52042:
+jge_else.44402:
 	return
-jge_else.52041:
+jge_else.44401:
 	return
-jge_else.52040:
+jge_else.44400:
 	return
-jge_else.52039:
+jge_else.44399:
 	return
-jge_else.52038:
+jge_else.44398:
 	return
 
 !==============================
@@ -19098,8 +16047,8 @@ jge_else.52038:
 ! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g13, %g12, %g11, %g10, %f8, %f7, %f6, %f5, %f4, %f3, %f21, %f20, %f2, %f17, %f16, %f15, %f1, %f0, %dummy]
 ! ret type = Unit
 !================================
-init_vecset_constants.3020:
-	jlt	%g13, %g0, jge_else.52054
+init_vecset_constants.3037:
+	jlt	%g13, %g0, jge_else.44414
 	slli	%g3, %g13, 2
 	add	%g3, %g31, %g3
 	ldi	%g11, %g3, 716
@@ -19109,54 +16058,54 @@ init_vecset_constants.3020:
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
 	subi	%g1, %g1, 4
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -472
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -468
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -464
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -460
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -456
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -452
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -448
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	addi	%g12, %g0, 111
-	call	init_dirvec_constants.3017
+	call	init_dirvec_constants.3034
 	addi	%g1, %g1, 4
 	subi	%g13, %g13, 1
-	jlt	%g13, %g0, jge_else.52055
+	jlt	%g13, %g0, jge_else.44415
 	slli	%g3, %g13, 2
 	add	%g3, %g31, %g3
 	ldi	%g11, %g3, 716
@@ -19166,49 +16115,49 @@ init_vecset_constants.3020:
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
 	subi	%g1, %g1, 4
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -472
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -468
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -464
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -460
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -456
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	ldi	%g3, %g11, -452
 	ldi	%g4, %g31, 28
 	subi	%g5, %g4, 1
 	ldi	%g6, %g3, -4
 	ldi	%g7, %g3, 0
-	call	iter_setup_dirvec_constants.2801
+	call	iter_setup_dirvec_constants.2818
 	addi	%g12, %g0, 112
-	call	init_dirvec_constants.3017
+	call	init_dirvec_constants.3034
 	addi	%g1, %g1, 4
 	subi	%g13, %g13, 1
-	jmp	init_vecset_constants.3020
-jge_else.52055:
+	jmp	init_vecset_constants.3037
+jge_else.44415:
 	return
-jge_else.52054:
+jge_else.44414:
 	return
diff --git a/ocore/tmpl/as/mymatmul.txt b/ocore/tmpl/as/mymatmul.txt
deleted file mode 100644
index 4930b5e..0000000
--- a/ocore/tmpl/as/mymatmul.txt
+++ /dev/null
@@ -1,116 +0,0 @@
-524284
-output ..//../compiler/test/matmul.lst
-simulate ..//../compiler/test/matmul
-0xC0
-0xE0
-0xE0
-0xE0
-0xE8
-0x00
-0xBC
-0x4C
-0x02
-0x03
-0xE8
-0x00
-0xB8
-0x78
-0x03
-0x02
-0x02
-0x54
-0xB4
-0xA8
-0x02
-0x02
-0x02
-0x84
-0xB0
-0xE4
-0x02
-0x03
-0x02
-0xCC
-0xB0
-0x74
-0xA8
-0xC4
-0x03
-0xCC
-
-
-
-0x35
-0x38
-0x0A
-0xB0
-0x74
-0xA8
-0xC4
-0x30
-0xCC
-0x36
-0x34
-0x0A
-
-0xB0
-0x74
-0xA8
-0xBC
-0x30
-0xCC
-0x31
-0x33
-0x39
-0x0A
-0xB0
-0x74
-0xBC
-0x09
-0x30
-0xCC
-0x31
-0x35
-0x34
-0x0A
-
-       b: 0.008475         26
-     mul: 0.045958        141
-     add: 0.048240        148
-     sub: 0.051173        157
-   callR: 0.002934          9
-     fld: 0.011734         36
-     fst: 0.003911         12
-    halt: 0.000326          1
-  output: 0.022164         68
-     jmp: 0.055737        171
-    mvlo: 0.010430         32
-    addi: 0.163625        502
-     jeq: 0.014993         46
-    mvhi: 0.010430         32
-    subi: 0.034224        105
-    fadd: 0.006519         20
-    fsub: 0.001304          4
-    fmul: 0.003911         12
-    fmov: 0.009126         28
-     jne: 0.033572        103
-      ld: 0.011734         36
-    muli: 0.003911         12
-     jlt: 0.106584        327
-      st: 0.002282          7
-     ldi: 0.116362        357
-    slli: 0.035202        108
-    srli: 0.039439        121
-     sti: 0.060952        187
-    call: 0.024120         74
-    fldi: 0.011082         34
-    fjeq: 0.002608          8
-  return: 0.027053         83
-    fsti: 0.013364         41
-    fjlt: 0.006519         20
-
-
-max_sbuf_count: 68
-
-CPU Simulator Results
-cnt:3068
diff --git a/ocore/tmpl/as/non-tail-if.s b/ocore/tmpl/as/non-tail-if.s
deleted file mode 100644
index 485e1bc..0000000
--- a/ocore/tmpl/as/non-tail-if.s
+++ /dev/null
@@ -1,558 +0,0 @@
-.init_heap_size	288
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-l.679:	! -7.890000
-	.long	0xc0fc7ae1
-l.677:	! 4.560000
-	.long	0x4091eb7d
-l.675:	! 1.230000
-	.long	0x3f9d70a3
-	jmp	min_caml_start
-
-!#####################################################################
-!
-! 		↓　ここから lib_asm.s
-!
-!#####################################################################
-
-! * create_array
-min_caml_create_array:
-	slli %g3, %g3, 2
-	add %g5, %g3, %g2
-	mov %g3, %g2
-CREATE_ARRAY_LOOP:
-	jlt %g5, %g2, CREATE_ARRAY_END
-	jeq %g5, %g2, CREATE_ARRAY_END
-	sti %g4, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_ARRAY_LOOP
-CREATE_ARRAY_END:
-	return
-
-! * create_float_array
-min_caml_create_float_array:
-	slli %g3, %g3, 2
-	add %g4, %g3, %g2
-	mov %g3, %g2
-CREATE_FLOAT_ARRAY_LOOP:
-	jlt %g4, %g2, CREATE_FLOAT_ARRAY_END
-	jeq %g4, %g2, CREATE_FLOAT_ARRAY_END
-	fsti %f0, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_FLOAT_ARRAY_LOOP
-CREATE_FLOAT_ARRAY_END:
-	return
-
-! * floor		%f0 + MAGICF - MAGICF
-min_caml_floor:
-	fmov %f1, %f0
-	! %f4 = 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f4, %g3, 0
-	fjlt %f4, %f0, FLOOR_POSITIVE	! if (%f4 <= %f0) goto FLOOR_PISITIVE
-	fjeq %f4, %f0, FLOOR_POSITIVE
-FLOOR_NEGATIVE:
-	fneg %f0, %f0
-	setL %g3, FLOAT_MAGICF
-	! %f2 = FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fjeq %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fneg %f0, %f0
-	return
-FLOOR_NEGATIVE_MAIN:
-	fadd %f0, %f0, %f2
-	fsub %f0, %f0, %f2
-	fneg %f1, %f1
-	fjlt %f1, %f0, FLOOR_RET2
-	fjeq %f1, %f0, FLOOR_RET2
-	fadd %f0, %f0, %f2
-	! %f3 = 1.0
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fadd %f0, %f0, %f3
-	fsub %f0, %f0, %f2
-	fneg %f0, %f0
-	return
-FLOOR_POSITIVE:
-	setL %g3, FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_POSITIVE_MAIN
-	fjeq %f0, %f2, FLOOR_POSITIVE_MAIN
-	return
-FLOOR_POSITIVE_MAIN:
-	fmov %f1, %f0
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fsub %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fjlt %f0, %f1, FLOOR_RET
-	fjeq %f0, %f1, FLOOR_RET
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fsub %f0, %f0, %f3
-FLOOR_RET:
-	return
-FLOOR_RET2:
-	fneg %f0, %f0
-	return
-	
-min_caml_ceil:
-	fneg %f0, %f0
-	call min_caml_floor
-	fneg %f0, %f0
-	return
-
-! * float_of_int
-min_caml_float_of_int:
-	jlt %g0, %g3, ITOF_MAIN		! if (%g0 <= %g3) goto ITOF_MAIN
-	jeq %g0, %g3, ITOF_MAIN
-	sub %g3, %g0, %g3
-	call ITOF_MAIN
-	fneg %f0, %f0
-	return
-ITOF_MAIN:
-
-	! %f1 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	! %g5 <= FLOAT_MAGICI
-
-	setL %g5, FLOAT_MAGICF
-	fldi %f1, %g5, 0
-	setL %g5, FLOAT_MAGICFHX
-	ldi %g4, %g5, 0
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	jlt %g5, %g3, ITOF_BIG
-	jeq %g5, %g3, ITOF_BIG
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	return
-ITOF_BIG:
-	setL %g4, FLOAT_ZERO
-	fldi %f2, %g4, 0
-ITOF_LOOP:
-	sub %g3, %g3, %g5
-	fadd %f2, %f2, %f1
-	jlt %g5, %g3, ITOF_LOOP
-	jeq %g5, %g3, ITOF_LOOP
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	fadd %f0, %f0, %f2
-	return
-
-! * int_of_float
-min_caml_int_of_float:
-	! %f1 <= 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f1, %g3, 0
-	fjlt %f1, %f0, FTOI_MAIN			! if (0.0 <= %f0) goto FTOI_MAIN
-	fjeq %f1, %f0, FTOI_MAIN
-	fneg %f0, %f0
-	call FTOI_MAIN
-	sub %g3, %g0, %g3
-	return
-FTOI_MAIN:
-	call min_caml_floor
-	! %f2 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	setL %g4, FLOAT_MAGICF
-	fldi %f2, %g4, 0
-	setL %g4, FLOAT_MAGICFHX
-	ldi %g4, %g4, 0
-	fjlt %f2, %f0, FTOI_BIG		! if (MAGICF <= %f0) goto FTOI_BIG
-	fjeq %f2, %f0, FTOI_BIG
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g3, %g1, 0
-	sub %g3, %g3, %g4
-	return
-FTOI_BIG:
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	mov %g3, %g0
-FTOI_LOOP:
-	fsub %f0, %f0, %f2
-	add %g3, %g3, %g5
-	fjlt %f2, %f0, FTOI_LOOP
-	fjeq %f2, %f0, FTOI_LOOP
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g5, %g1, 0
-	sub %g5, %g5, %g4
-	add %g3, %g5, %g3
-	return
-	
-! * truncate
-min_caml_truncate:
-	jmp min_caml_int_of_float
-
-
-!#####################################################################
-!
-! 		↑　ここまで lib_asm.s
-!
-!#####################################################################
-min_caml_start:
-	mov	%g31, %g1
-	subi	%g1, %g1, 32
-	addi	%g28, %g0, 1
-	addi	%g29, %g0, -1
-	setL %g27, l.679
-	fldi	%f16, %g27, 0
-	setL %g27, l.677
-	fldi	%f17, %g27, 0
-	setL %g27, l.675
-	fldi	%f18, %g27, 0
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 4
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 16
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 1
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 20
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 24
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	fmov	%f0, %f18
-	call	min_caml_truncate
-	mov	%g6, %g3
-	fmov	%f0, %f17
-	call	min_caml_truncate
-	mov	%g7, %g3
-	fmov	%f0, %f16
-	call	min_caml_truncate
-	addi	%g1, %g1, 4
-	mov	%g4, %g3
-	jlt	%g4, %g0, jge_else.696
-	mov	%g5, %g6
-	jmp	jge_cont.697
-jge_else.696:
-	mov	%g5, %g7
-jge_cont.697:
-	jlt	%g0, %g6, jle_else.698
-	mov	%g3, %g7
-	jmp	jle_cont.699
-jle_else.698:
-	mov	%g3, %g4
-jle_cont.699:
-	add	%g5, %g5, %g3
-	jlt	%g7, %g0, jge_else.700
-	mov	%g3, %g4
-	jmp	jge_cont.701
-jge_else.700:
-	mov	%g3, %g6
-jge_cont.701:
-	add	%g8, %g5, %g3
-	subi	%g1, %g1, 4
-	call	print_int.341
-	addi	%g1, %g1, 4
-	halt
-
-!==============================
-! args = [%g8, %g7, %g5, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %f15]
-! ret type = Int
-!================================
-div_binary_search.336:
-	add	%g3, %g5, %g6
-	srli	%g4, %g3, 1
-	mul	%g9, %g4, %g7
-	sub	%g3, %g6, %g5
-	jlt	%g28, %g3, jle_else.702
-	mov	%g3, %g5
-	return
-jle_else.702:
-	jlt	%g9, %g8, jle_else.703
-	jne	%g9, %g8, jeq_else.704
-	mov	%g3, %g4
-	return
-jeq_else.704:
-	mov	%g6, %g4
-	jmp	div_binary_search.336
-jle_else.703:
-	mov	%g5, %g4
-	jmp	div_binary_search.336
-
-!==============================
-! args = [%g8]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f15, %dummy]
-! ret type = Unit
-!================================
-print_int.341:
-	jlt	%g8, %g0, jge_else.705
-	mvhi	%g7, 1525
-	mvlo	%g7, 57600
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 3
-	sti	%g8, %g1, 0
-	subi	%g1, %g1, 8
-	call	div_binary_search.336
-	addi	%g1, %g1, 8
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 0
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.706
-	addi	%g10, %g0, 0
-	jmp	jle_cont.707
-jle_else.706:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.707:
-	mvhi	%g7, 152
-	mvlo	%g7, 38528
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 4
-	subi	%g1, %g1, 12
-	call	div_binary_search.336
-	addi	%g1, %g1, 12
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 4
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.708
-	jne	%g10, %g0, jeq_else.710
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.711
-jeq_else.710:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.711:
-	jmp	jle_cont.709
-jle_else.708:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.709:
-	mvhi	%g7, 15
-	mvlo	%g7, 16960
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 8
-	subi	%g1, %g1, 16
-	call	div_binary_search.336
-	addi	%g1, %g1, 16
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 8
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.712
-	jne	%g11, %g0, jeq_else.714
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.715
-jeq_else.714:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.715:
-	jmp	jle_cont.713
-jle_else.712:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.713:
-	mvhi	%g7, 1
-	mvlo	%g7, 34464
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 12
-	subi	%g1, %g1, 20
-	call	div_binary_search.336
-	addi	%g1, %g1, 20
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 12
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.716
-	jne	%g10, %g0, jeq_else.718
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.719
-jeq_else.718:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.719:
-	jmp	jle_cont.717
-jle_else.716:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.717:
-	addi	%g7, %g0, 10000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 16
-	subi	%g1, %g1, 24
-	call	div_binary_search.336
-	addi	%g1, %g1, 24
-	addi	%g4, %g0, 10000
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 16
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.720
-	jne	%g11, %g0, jeq_else.722
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.723
-jeq_else.722:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.723:
-	jmp	jle_cont.721
-jle_else.720:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.721:
-	addi	%g7, %g0, 1000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 20
-	subi	%g1, %g1, 28
-	call	div_binary_search.336
-	addi	%g1, %g1, 28
-	muli	%g4, %g3, 1000
-	ldi	%g8, %g1, 20
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.724
-	jne	%g10, %g0, jeq_else.726
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.727
-jeq_else.726:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.727:
-	jmp	jle_cont.725
-jle_else.724:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.725:
-	addi	%g7, %g0, 100
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 24
-	subi	%g1, %g1, 32
-	call	div_binary_search.336
-	addi	%g1, %g1, 32
-	muli	%g4, %g3, 100
-	ldi	%g8, %g1, 24
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.728
-	jne	%g11, %g0, jeq_else.730
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.731
-jeq_else.730:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.731:
-	jmp	jle_cont.729
-jle_else.728:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.729:
-	addi	%g7, %g0, 10
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 28
-	subi	%g1, %g1, 36
-	call	div_binary_search.336
-	addi	%g1, %g1, 36
-	muli	%g4, %g3, 10
-	ldi	%g8, %g1, 28
-	sub	%g4, %g8, %g4
-	jlt	%g0, %g3, jle_else.732
-	jne	%g10, %g0, jeq_else.734
-	addi	%g5, %g0, 0
-	jmp	jeq_cont.735
-jeq_else.734:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jeq_cont.735:
-	jmp	jle_cont.733
-jle_else.732:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jle_cont.733:
-	addi	%g3, %g0, 48
-	add	%g3, %g3, %g4
-	output	%g3
-	return
-jge_else.705:
-	addi	%g3, %g0, 45
-	output	%g3
-	sub	%g8, %g0, %g8
-	jmp	print_int.341
diff --git a/ocore/tmpl/as/test.s b/ocore/tmpl/as/test.s
deleted file mode 100644
index 294904d..0000000
--- a/ocore/tmpl/as/test.s
+++ /dev/null
@@ -1,6 +0,0 @@
-.init_heap_size	0
-
-Loop:
-	input %g3
-	output %g3
-	jmp Loop
diff --git a/ocore/tmpl/as/tmp.s b/ocore/tmpl/as/tmp.s
deleted file mode 100644
index 87f55d9..0000000
--- a/ocore/tmpl/as/tmp.s
+++ /dev/null
@@ -1,17 +0,0 @@
-.init_heap_size	128
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x40000000
-
-	setL	%g3, FLOAT_ONE
-	fld		%f0, %g3, %g0
-	fld		%f1, %g3, %g0
-	fadd	%f2, %f0, %f1
-	fmul	%f0, %f2, %f2
-	fmul	%f0, %f2, %f2
-	halt
diff --git a/ocore/tmpl/asmcho b/ocore/tmpl/asmcho
deleted file mode 100755
index 90a4c76..0000000
Binary files a/ocore/tmpl/asmcho and /dev/null differ
diff --git a/ocore/tmpl/asmcho2 b/ocore/tmpl/asmcho2
deleted file mode 100755
index f15d81b..0000000
Binary files a/ocore/tmpl/asmcho2 and /dev/null differ
diff --git a/ocore/tmpl/asmcho2_prom10 b/ocore/tmpl/asmcho2_prom10
deleted file mode 100755
index 2c25d69..0000000
Binary files a/ocore/tmpl/asmcho2_prom10 and /dev/null differ
diff --git a/ocore/tmpl/asmcho3 b/ocore/tmpl/asmcho3
deleted file mode 100755
index e4d4cc1..0000000
Binary files a/ocore/tmpl/asmcho3 and /dev/null differ
diff --git a/ocore/tmpl/asmcho_prom10 b/ocore/tmpl/asmcho_prom10
index a716e1c..2c25d69 100755
Binary files a/ocore/tmpl/asmcho_prom10 and b/ocore/tmpl/asmcho_prom10 differ
diff --git a/ocore/tmpl/asmcho_prom15 b/ocore/tmpl/asmcho_prom15
new file mode 100755
index 0000000..f15d81b
Binary files /dev/null and b/ocore/tmpl/asmcho_prom15 differ
diff --git a/ocore/tmpl/asmlog b/ocore/tmpl/asmlog
deleted file mode 100644
index e35502d..0000000
--- a/ocore/tmpl/asmlog
+++ /dev/null
@@ -1,738 +0,0 @@
-################################
-!!! ./test
-!!! BYTE ADDRESSING
-!!! ADDRESS_RADIX = HEX
-!!! DATA_RADIX = HEX
-################################
-
-   0: 0000004c
-FLOAT_ZERO:
-   1: 00000000
-FLOAT_ONE:
-   2: 3f800000
-FLOAT_MONE:
-   3: bf800000
-FLOAT_MAGICI:
-   4: 00800000
-FLOAT_MAGICF:
-   5: 4b000000
-FLOAT_MAGICFHX:
-   6: 4b000000
-l.735:
-   7: 3fc90fda
-l.731:
-   8: 3f000000
-l.726:
-   9: 41100000
-l.724:
-   a: 3f800000
-l.722:
-   b: 40000000
-l.720:
-   c: 40200000
-l.718:
-   d: 00000000
-l.698:
-   e: 42413381
-l.696:
-   f: 40900000
-l.694:
-  10: c144ccc4
-l.692:
-  11: 3fc90fda
-l.690:
-  12: 40c90fda
-l.688:
-  13: 40490fda
-  14: 08000098
-min_caml_create_array:
-  15: a0630002
-  16: 00622820
-  17: 20430000
-CREATE_ARRAY_LOOP:
-  18: 68a20005
-  19: 28a20004
-  1a: ac440000
-  1b: 20420004
-  1c: 08000018
-CREATE_ARRAY_END:
-  1d: e0000000
-min_caml_create_float_array:
-  1e: a0630002
-  1f: 00622020
-  20: 20430000
-CREATE_FLOAT_ARRAY_LOOP:
-  21: 68820005
-  22: 28820004
-  23: e4400000
-  24: 20420004
-  25: 08000021
-CREATE_FLOAT_ARRAY_END:
-  26: e0000000
-min_caml_floor:
-  27: 44000806
-  28: 20030000
-  29: c4640000
-  2a: e8800015
-  2b: c8800014
-FLOOR_NEGATIVE:
-  2c: 44000007
-  2d: 20030010
-  2e: c4620000
-  2f: e8020004
-  30: c8020003
-  31: 44000007
-  32: e0000000
-FLOOR_NEGATIVE_MAIN:
-  33: 44020000
-  34: 44020001
-  35: 44200807
-  36: e820001b
-  37: c820001a
-  38: 44020000
-  39: 20030004
-  3a: c4630000
-  3b: 44030000
-  3c: 44020001
-  3d: 44000007
-  3e: e0000000
-FLOOR_POSITIVE:
-  3f: 20030010
-  40: c4620000
-  41: e8020003
-  42: c8020002
-  43: e0000000
-FLOOR_POSITIVE_MAIN:
-  44: 44000806
-  45: 44020000
-  46: e4200000
-  47: 8c240000
-  48: 44020001
-  49: e4200000
-  4a: 8c240000
-  4b: e8010005
-  4c: c8010004
-  4d: 20030004
-  4e: c4630000
-  4f: 44030001
-FLOOR_RET:
-  50: e0000000
-FLOOR_RET2:
-  51: 44000007
-  52: e0000000
-min_caml_ceil:
-  53: 44000007
-  54: c0000027
-  55: 44000007
-  56: e0000000
-min_caml_float_of_int:
-  57: 68030006
-  58: 28030005
-  59: 00031822
-  5a: c000005d
-  5b: 44000007
-  5c: e0000000
-ITOF_MAIN:
-  5d: 20050010
-  5e: c4a10000
-  5f: 20050014
-  60: 8ca40000
-  61: 2005000c
-  62: 8ca50000
-  63: 68a30007
-  64: 28a30006
-  65: 00641820
-  66: ac230000
-  67: c4200000
-  68: 44010001
-  69: e0000000
-ITOF_BIG:
-  6a: 20040000
-  6b: c4820000
-ITOF_LOOP:
-  6c: 00651822
-  6d: 44411000
-  6e: 68a3fffe
-  6f: 28a3fffd
-  70: 00641820
-  71: ac230000
-  72: c4200000
-  73: 44010001
-  74: 44020000
-  75: e0000000
-min_caml_int_of_float:
-  76: 20030000
-  77: c4610000
-  78: e8200006
-  79: c8200005
-  7a: 44000007
-  7b: c000007e
-  7c: 00031822
-  7d: e0000000
-FTOI_MAIN:
-  7e: c0000027
-  7f: 20040010
-  80: c4820000
-  81: 20040014
-  82: 8c840000
-  83: e8400007
-  84: c8400006
-  85: 44020000
-  86: e4200000
-  87: 8c230000
-  88: 00641822
-  89: e0000000
-FTOI_BIG:
-  8a: 2005000c
-  8b: 8ca50000
-  8c: 20030000
-FTOI_LOOP:
-  8d: 44020001
-  8e: 00651820
-  8f: e840fffe
-  90: c840fffd
-  91: 44020000
-  92: e4200000
-  93: 8c250000
-  94: 00a42822
-  95: 00a31820
-  96: e0000000
-min_caml_truncate:
-  97: 08000076
-min_caml_start:
-  98: 203f0000
-  99: 40210020
-  9a: 201c0001
-  9b: 201dffff
-  9c: 201b0030
-  9d: c7700000
-  9e: 201b0024
-  9f: c7710000
-  a0: 201b0028
-  a1: c7720000
-  a2: 201b0018
-  a3: c7730000
-  a4: 201b001c
-  a5: c7740000
-  a6: 201b0020
-  a7: c7750000
-  a8: 201b002c
-  a9: c7760000
-  aa: 201b0034
-  ab: c7770000
-  ac: 201b0038
-  ad: c7780000
-  ae: 201b003c
-  af: c7790000
-  b0: 201b0040
-  b1: c77a0000
-  b2: 201b0044
-  b3: c77b0000
-  b4: 201b0048
-  b5: c77c0000
-  b6: 47800006
-  b7: 47600806
-  b8: 47401006
-  b9: 20430000
-  ba: 20420008
-  bb: 20040136
-  bc: ac640000
-  bd: e461fffc
-  be: 20440000
-  bf: 20420014
-  c0: 20050141
-  c1: ac850000
-  c2: ac83fff0
-  c3: e482fff4
-  c4: e481fff8
-  c5: e480fffc
-  c6: 20430000
-  c7: 20420008
-  c8: 20050179
-  c9: ac650000
-  ca: ac64fffc
-  cb: 20050001
-  cc: 20060000
-  cd: afe2001c
-  ce: 43e20004
-  cf: ac240000
-  d0: ac230004
-  d1: 20c40000
-  d2: 20a30000
-  d3: 4021000c
-  d4: c0000015
-  d5: 8fe2001c
-  d6: 20030001
-  d7: 20040000
-  d8: afe2001c
-  d9: 43e20008
-  da: c0000015
-  db: 8fe2001c
-  dc: 20030001
-  dd: 20040000
-  de: afe2001c
-  df: 43e2000c
-  e0: c0000015
-  e1: 8fe2001c
-  e2: 20030001
-  e3: 20040000
-  e4: afe2001c
-  e5: 43e20010
-  e6: c0000015
-  e7: 8fe2001c
-  e8: 20030001
-  e9: 20040001
-  ea: afe2001c
-  eb: 43e20014
-  ec: c0000015
-  ed: 8fe2001c
-  ee: 20030001
-  ef: 20040000
-  f0: afe2001c
-  f1: 43e20018
-  f2: c0000015
-  f3: 8fe2001c
-  f4: 47200006
-  f5: c0000118
-  f6: 2021000c
-  f7: 44000004
-  f8: 8c3e0004
-  f9: 8fdb0000
-  fa: 4021000c
-  fb: 03600030
-  fc: 2021000c
-  fd: 8c3e0000
-  fe: 8fdb0000
-  ff: 4021000c
- 100: 03600030
- 101: 2021000c
- 102: 47000806
- 103: 44010000
- 104: 46e00806
- 105: 44010001
- 106: 3c60000f
- 107: 1c604240
- 108: e4200008
- 109: 40210010
- 10a: c0000057
- 10b: 20210010
- 10c: c4210008
- 10d: 44200002
- 10e: 40210010
- 10f: c0000076
- 110: c000018d
- 111: 20210010
- 112: 0000003f
-fabs.297:
- 113: 46000806
- 114: e8010002
- 115: e0000000
-fjge_else.804:
- 116: 44000007
- 117: e0000000
-abs_float.299:
- 118: 08000113
-fneg.301:
- 119: 44000007
- 11a: e0000000
-tan_sub.636:
- 11b: 46c01806
- 11c: e8030007
- 11d: 46401806
- 11e: 44031801
- 11f: 44020001
- 120: 44201003
- 121: 44600006
- 122: 0800011b
-fjge_else.805:
- 123: 44400006
- 124: e0000000
-tan.316:
- 125: 46200806
- 126: 46a01006
- 127: 44001802
- 128: 46002006
- 129: e4200000
- 12a: e4210004
- 12b: 44600806
- 12c: 44400006
- 12d: 44801006
- 12e: 4021000c
- 12f: c000011b
- 130: 2021000c
- 131: c4210004
- 132: 44200001
- 133: c4210000
- 134: 44200003
- 135: e0000000
-sin_sub.318:
- 136: c7c1fffc
- 137: e8200007
- 138: 46001006
- 139: e8020002
- 13a: e0000000
-fjge_else.807:
- 13b: 44010000
- 13c: 8fdb0000
- 13d: 03600008
-fjge_else.806:
- 13e: 44010001
- 13f: 8fdb0000
- 140: 03600008
-sin.320:
- 141: 8fc3fff0
- 142: c7c1fff4
- 143: c7c2fff8
- 144: c7c3fffc
- 145: 46002006
- 146: e4210000
- 147: e4220004
- 148: e4240008
- 149: e420000c
- 14a: e4230010
- 14b: ac230014
- 14c: c0000113
- 14d: 8c3e0014
- 14e: 8fdb0000
- 14f: 4021001c
- 150: 03600030
- 151: 2021001c
- 152: c4210010
- 153: e8200008
- 154: c4220008
- 155: c423000c
- 156: e8430003
- 157: 20030000
- 158: 0800015a
-fjge_else.810:
- 159: 20030001
-fjge_cont.811:
- 15a: 08000161
-fjge_else.808:
- 15b: c4220008
- 15c: c423000c
- 15d: e8430003
- 15e: 20030001
- 15f: 08000161
-fjge_else.812:
- 160: 20030000
-fjge_cont.809:
-fjge_cont.813:
- 161: e8200002
- 162: 08000165
-fjge_else.814:
- 163: c4220004
- 164: 44400001
-fjge_cont.815:
- 165: c4220000
- 166: e8400002
- 167: 08000169
-fjge_else.816:
- 168: 44200001
-fjge_cont.817:
- 169: 46800806
- 16a: 44010002
- 16b: ac230018
- 16c: 40210020
- 16d: c0000125
- 16e: 20210020
- 16f: 46400806
- 170: 44200802
- 171: 46201006
- 172: 44000002
- 173: 44400000
- 174: 44200003
- 175: 8c230018
- 176: 48600002
- 177: 08000119
-jeq_else.818:
- 178: e0000000
-cos.322:
- 179: 8fdefffc
- 17a: 46600806
- 17b: 44200001
- 17c: 8fdb0000
- 17d: 03600008
-div_binary_search.344:
- 17e: 00a63820
- 17f: a8e70001
- 180: 00e44018
- 181: 00c54822
- 182: 6b890003
- 183: 20a30000
- 184: e0000000
-jle_else.819:
- 185: 69030006
- 186: 49030003
- 187: 20e30000
- 188: e0000000
-jeq_else.821:
- 189: 20e60000
- 18a: 0800017e
-jle_else.820:
- 18b: 20e50000
- 18c: 0800017e
-print_int.349:
- 18d: 686000e2
- 18e: 3c8005f5
- 18f: 1c80e100
- 190: 20050000
- 191: 20060003
- 192: ac230000
- 193: 40210008
- 194: c000017e
- 195: 20210008
- 196: 3c8005f5
- 197: 1c80e100
- 198: 00642018
- 199: 8c250000
- 19a: 00a42022
- 19b: ac240004
- 19c: 68030003
- 19d: 20030000
- 19e: 080001a3
-jle_else.823:
- 19f: 20050030
- 1a0: 00a31820
- 1a1: 04600001
- 1a2: 20030001
-jle_cont.824:
- 1a3: 3c800098
- 1a4: 1c809680
- 1a5: 20050000
- 1a6: 2006000a
- 1a7: 8c270004
- 1a8: ac230008
- 1a9: 20e30000
- 1aa: 40210010
- 1ab: c000017e
- 1ac: 20210010
- 1ad: 3c800098
- 1ae: 1c809680
- 1af: 00642018
- 1b0: 8c250004
- 1b1: 00a42022
- 1b2: ac24000c
- 1b3: 6803000a
- 1b4: 8c250008
- 1b5: 48a00003
- 1b6: 20030000
- 1b7: 080001bc
-jeq_else.827:
- 1b8: 20050030
- 1b9: 00a31820
- 1ba: 04600001
- 1bb: 20030001
-jeq_cont.828:
- 1bc: 080001c1
-jle_else.825:
- 1bd: 20050030
- 1be: 00a31820
- 1bf: 04600001
- 1c0: 20030001
-jle_cont.826:
- 1c1: 3c80000f
- 1c2: 1c804240
- 1c3: 20050000
- 1c4: 2006000a
- 1c5: 8c27000c
- 1c6: ac230010
- 1c7: 20e30000
- 1c8: 40210018
- 1c9: c000017e
- 1ca: 20210018
- 1cb: 3c80000f
- 1cc: 1c804240
- 1cd: 00642018
- 1ce: 8c25000c
- 1cf: 00a42022
- 1d0: ac240014
- 1d1: 6803000a
- 1d2: 8c250010
- 1d3: 48a00003
- 1d4: 20030000
- 1d5: 080001da
-jeq_else.831:
- 1d6: 20050030
- 1d7: 00a31820
- 1d8: 04600001
- 1d9: 20030001
-jeq_cont.832:
- 1da: 080001df
-jle_else.829:
- 1db: 20050030
- 1dc: 00a31820
- 1dd: 04600001
- 1de: 20030001
-jle_cont.830:
- 1df: 3c800001
- 1e0: 1c8086a0
- 1e1: 20050000
- 1e2: 2006000a
- 1e3: 8c270014
- 1e4: ac230018
- 1e5: 20e30000
- 1e6: 40210020
- 1e7: c000017e
- 1e8: 20210020
- 1e9: 3c800001
- 1ea: 1c8086a0
- 1eb: 00642018
- 1ec: 8c250014
- 1ed: 00a42022
- 1ee: ac24001c
- 1ef: 6803000a
- 1f0: 8c250018
- 1f1: 48a00003
- 1f2: 20030000
- 1f3: 080001f8
-jeq_else.835:
- 1f4: 20050030
- 1f5: 00a31820
- 1f6: 04600001
- 1f7: 20030001
-jeq_cont.836:
- 1f8: 080001fd
-jle_else.833:
- 1f9: 20050030
- 1fa: 00a31820
- 1fb: 04600001
- 1fc: 20030001
-jle_cont.834:
- 1fd: 20042710
- 1fe: 20050000
- 1ff: 2006000a
- 200: 8c27001c
- 201: ac230020
- 202: 20e30000
- 203: 40210028
- 204: c000017e
- 205: 20210028
- 206: 20042710
- 207: 00642018
- 208: 8c25001c
- 209: 00a42022
- 20a: ac240024
- 20b: 6803000a
- 20c: 8c250020
- 20d: 48a00003
- 20e: 20030000
- 20f: 08000214
-jeq_else.839:
- 210: 20050030
- 211: 00a31820
- 212: 04600001
- 213: 20030001
-jeq_cont.840:
- 214: 08000219
-jle_else.837:
- 215: 20050030
- 216: 00a31820
- 217: 04600001
- 218: 20030001
-jle_cont.838:
- 219: 200403e8
- 21a: 20050000
- 21b: 2006000a
- 21c: 8c270024
- 21d: ac230028
- 21e: 20e30000
- 21f: 40210030
- 220: c000017e
- 221: 20210030
- 222: 606403e8
- 223: 8c250024
- 224: 00a42022
- 225: ac24002c
- 226: 6803000a
- 227: 8c250028
- 228: 48a00003
- 229: 20030000
- 22a: 0800022f
-jeq_else.843:
- 22b: 20050030
- 22c: 00a31820
- 22d: 04600001
- 22e: 20030001
-jeq_cont.844:
- 22f: 08000234
-jle_else.841:
- 230: 20050030
- 231: 00a31820
- 232: 04600001
- 233: 20030001
-jle_cont.842:
- 234: 20040064
- 235: 20050000
- 236: 2006000a
- 237: 8c27002c
- 238: ac230030
- 239: 20e30000
- 23a: 40210038
- 23b: c000017e
- 23c: 20210038
- 23d: 60640064
- 23e: 8c25002c
- 23f: 00a42022
- 240: ac240034
- 241: 6803000a
- 242: 8c250030
- 243: 48a00003
- 244: 20030000
- 245: 0800024a
-jeq_else.847:
- 246: 20050030
- 247: 00a31820
- 248: 04600001
- 249: 20030001
-jeq_cont.848:
- 24a: 0800024f
-jle_else.845:
- 24b: 20050030
- 24c: 00a31820
- 24d: 04600001
- 24e: 20030001
-jle_cont.846:
- 24f: 2004000a
- 250: 20050000
- 251: 2006000a
- 252: 8c270034
- 253: ac230038
- 254: 20e30000
- 255: 40210040
- 256: c000017e
- 257: 20210040
- 258: 6064000a
- 259: 8c250034
- 25a: 00a42022
- 25b: ac24003c
- 25c: 6803000a
- 25d: 8c250038
- 25e: 48a00003
- 25f: 20030000
- 260: 08000265
-jeq_else.851:
- 261: 20050030
- 262: 00a31820
- 263: 04600001
- 264: 20030001
-jeq_cont.852:
- 265: 0800026a
-jle_else.849:
- 266: 20050030
- 267: 00a31820
- 268: 04600001
- 269: 20030001
-jle_cont.850:
- 26a: 20030030
- 26b: 8c24003c
- 26c: 00641820
- 26d: 04600001
- 26e: e0000000
-jge_else.822:
- 26f: 2004002d
- 270: ac230000
- 271: 04800001
- 272: 8c230000
- 273: 00031822
- 274: 0800018d
diff --git a/ocore/tmpl/backup_io_dev.tmp b/ocore/tmpl/backup_io_dev.tmp
index 57193e7..b587757 100644
--- a/ocore/tmpl/backup_io_dev.tmp
+++ b/ocore/tmpl/backup_io_dev.tmp
@@ -11,11 +11,12 @@ architecture RTL of io_dev is
 
 	subtype buf_rec_t is std_logic_vector(7 downto 0);
 
-	type sendbuf_t is array (0 to 16383) of buf_rec_t;
+	type sendbuf_t is array (0 to 65535) of buf_rec_t;
 	signal sendbuf : sendbuf_t;
-	signal send_head	: std_logic_vector(13 downto 0) := (others=>'0');
-	signal send_tail	: std_logic_vector(13 downto 0) := (others=>'0');
-	signal send_empty : std_logic := '0';
+	signal send_head	: std_logic_vector(15 downto 0) := (others=>'0');
+	signal send_tail	: std_logic_vector(15 downto 0) := (others=>'0');
+
+	signal send_empty : std_logic := '1';
 
 	signal recv_head	: std_logic_vector(10 downto 0) := (others=>'0');
 	signal recv_tail	: std_logic_vector(10 downto 0) := ${oc.io_rtail()};
@@ -40,20 +41,29 @@ begin
 				   u232c_i, recv_ready, RS_RX);
 
 ------------------------------------------------------------------------
----- send
+---- send (write first)
 ------------------------------------------------------------------------
-	send_empty <= '1' when send_head=send_tail else '0';
+-- ma : increment send_tail
+-- wb : change send_empty
+-- ft : send_go
+-- async : send_head
 	send: process(CLK)
 	begin
 		if rising_edge(CLK) then
-			if CPU_WR="10" then
+			if send_head=send_tail then
+				send_empty<='1';
+			else 
+				send_empty<='0';
+			end if;
+			
+			if CPU_WR='1' then
 				sendbuf(conv_integer(send_tail)) <= CPU_OUT(7 downto 0);
-				send_tail <= send_tail + 1;
+				send_tail <= send_tail+1;
 			end if;
 
 			if send_busy='0' and send_go='0' then
 				u232c_o <= sendbuf(conv_integer(send_head));
-				send_go<=not send_empty;
+				send_go<= not send_empty;
 				send_head <= send_head + conv_integer(not send_empty);
 			else
 				send_go<='0';
@@ -64,15 +74,22 @@ begin
 ------------------------------------------------------------------------
 ---- recv
 ------------------------------------------------------------------------
-	NYET <= "10" when recv_head=recv_tail else "00";
+-- ma : increment recv_head
+-- wb : change NYET, IO_IN(mem_acc)
+-- async : recv_tail --> NYET
 	receive : process(CLK)
 	begin
 		if rising_edge(CLK) then
-			if CPU_RD="10" then
+			if recv_head=recv_tail then
+				NYET<='1';
+			else 
+				NYET<='0';
+			end if;
+
+			if CPU_RD='1' then
 				CPU_IN <= x"000000"&recvbuf(conv_integer(recv_head));
 				recv_head <= recv_head+1;
 			end if;
-
 			if recv_ready='1' then
 				recvbuf(conv_integer(recv_tail))<=u232c_i;
 				recv_tail <= recv_tail+1;
diff --git a/ocore/tmpl/clk_gen.tmp b/ocore/tmpl/clk_gen.tmp
index 8683fb1..a42b8a6 100644
--- a/ocore/tmpl/clk_gen.tmp
+++ b/ocore/tmpl/clk_gen.tmp
@@ -8,12 +8,8 @@ end clk_gen;
 architecture RTL of clk_gen is
 
 	signal count : std_logic_vector (2 downto 0) := "000";
-	signal nyetb : std_logic;
-	signal nyetw : std_logic;
 
 begin
-	nyetw <= NYET(1);
-	nyetb <= NYET(0);
 
 	cascade: process(CLK)
 	begin
@@ -34,8 +30,7 @@ begin
 					CLK_WB <= '0';
 					count <= count + 1;
 				when "010" =>
-					if (INPUT_FLAG="01" and nyetb='1') or
-					   (INPUT_FLAG="10" and nyetw='1') then
+					if INPUT_FLAG='1' and NYET='1' then
 						CLK_FT <= '0';
 						CLK_DC <= '1';
 						CLK_EX <= '0';
diff --git a/ocore/tmpl/contest_sldbin.txt b/ocore/tmpl/contest_sldbin.txt
new file mode 100644
index 0000000..83f84ba
--- /dev/null
+++ b/ocore/tmpl/contest_sldbin.txt
@@ -0,0 +1,256 @@
+x"c2", x"8c", x"00", x"00", x"42", x"0c", x"00", x"00", 
+x"c1", x"a0", x"00", x"00", x"41", x"a0", x"00", x"00", 
+x"41", x"f0", x"00", x"00", x"3f", x"80", x"00", x"00", 
+x"42", x"48", x"00", x"00", x"42", x"48", x"00", x"00", 
+x"43", x"7f", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"01", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"00", x"41", x"a0", x"00", x"00", 
+x"41", x"a0", x"00", x"00", x"42", x"82", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"41", x"a0", x"00", x"00", 
+x"42", x"34", x"00", x"00", x"3f", x"80", x"00", x"00", 
+x"3f", x"80", x"00", x"00", x"43", x"7a", x"00", x"00", 
+x"43", x"00", x"00", x"00", x"43", x"52", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"03", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"00", x"41", x"c8", x"00", x"00", 
+x"42", x"20", x"00", x"00", x"42", x"8c", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"42", x"20", x"00", x"00", x"3f", x"80", x"00", x"00", 
+x"3f", x"80", x"00", x"00", x"43", x"7a", x"00", x"00", 
+x"43", x"00", x"00", x"00", x"43", x"52", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"03", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"41", x"f0", x"00", x"00", x"41", x"f0", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"c0", x"a0", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"bf", x"80", x"00", x"00", 
+x"3f", x"80", x"00", x"00", x"43", x"7a", x"00", x"00", 
+x"43", x"00", x"00", x"00", x"43", x"53", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"01", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"00", x"41", x"a0", x"00", x"00", 
+x"41", x"20", x"00", x"00", x"41", x"f0", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"c1", x"20", x"00", x"00", 
+x"42", x"a0", x"00", x"00", x"3f", x"80", x"00", x"00", 
+x"3f", x"80", x"00", x"00", x"43", x"7a", x"00", x"00", 
+x"43", x"00", x"00", x"00", x"43", x"53", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"02", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"bf", x"c0", x"00", x"00", x"bf", x"80", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"42", x"48", x"00", x"00", x"3f", x"80", x"00", x"00", 
+x"3f", x"80", x"00", x"00", x"43", x"7a", x"00", x"00", 
+x"43", x"00", x"00", x"00", x"43", x"53", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"01", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"00", x"41", x"b0", x"00", x"00", 
+x"41", x"e0", x"00", x"00", x"41", x"e0", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"c0", x"a0", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"3f", x"80", x"00", x"00", 
+x"3f", x"80", x"00", x"00", x"43", x"7a", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"43", x"53", x"00", x"00", 
+x"43", x"53", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"03", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"00", x"42", x"20", x"00", x"00", 
+x"41", x"e0", x"00", x"00", x"41", x"e0", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"c0", x"a0", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"3f", x"80", x"00", x"00", 
+x"3f", x"80", x"00", x"00", x"43", x"7a", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"43", x"53", x"00", x"00", 
+x"43", x"53", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"03", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"41", x"70", x"00", x"00", x"41", x"70", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"c0", x"a0", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"bf", x"80", x"00", x"00", 
+x"3f", x"80", x"00", x"00", x"43", x"7a", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"43", x"53", x"00", x"00", 
+x"43", x"53", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"03", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"00", x"41", x"70", x"00", x"00", 
+x"41", x"c8", x"00", x"00", x"41", x"c8", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"c0", x"a0", x"00", x"00", 
+x"42", x"8c", x"00", x"00", x"3f", x"80", x"00", x"00", 
+x"3f", x"80", x"00", x"00", x"43", x"7a", x"00", x"00", 
+x"43", x"53", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"01", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"00", x"40", x"a0", x"00", x"00", 
+x"41", x"30", x"00", x"00", x"42", x"34", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"42", x"0c", x"00", x"00", 
+x"42", x"20", x"00", x"00", x"3f", x"80", x"00", x"00", 
+x"3f", x"80", x"00", x"00", x"43", x"7a", x"00", x"00", 
+x"43", x"53", x"00", x"00", x"43", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"03", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"00", x"41", x"f0", x"00", x"00", 
+x"42", x"34", x"00", x"00", x"42", x"96", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"42", x"20", x"00", x"00", x"3f", x"80", x"00", x"00", 
+x"3f", x"80", x"00", x"00", x"43", x"7a", x"00", x"00", 
+x"43", x"53", x"00", x"00", x"43", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"01", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"00", x"41", x"c8", x"00", x"00", 
+x"42", x"24", x"00", x"00", x"42", x"8c", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"40", x"a0", x"00", x"00", 
+x"42", x"20", x"00", x"00", x"3f", x"80", x"00", x"00", 
+x"3f", x"80", x"00", x"00", x"43", x"7a", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"01", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"00", x"42", x"c8", x"00", x"00", 
+x"40", x"a0", x"00", x"00", x"43", x"48", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"c2", x"0c", x"00", x"00", 
+x"43", x"16", x"00", x"00", x"3f", x"80", x"00", x"00", 
+x"3f", x"80", x"00", x"00", x"43", x"7a", x"00", x"00", 
+x"43", x"48", x"00", x"00", x"43", x"48", x"00", x"00", 
+x"43", x"48", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"03", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"00", x"41", x"c8", x"00", x"00", 
+x"41", x"20", x"00", x"00", x"41", x"20", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"c0", x"a0", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"3f", x"80", x"00", x"00", 
+x"3f", x"80", x"00", x"00", x"43", x"7a", x"00", x"00", 
+x"43", x"53", x"00", x"00", x"43", x"00", x"00", x"00", 
+x"43", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"03", x"00", x"00", x"00", x"02", 
+x"00", x"00", x"00", x"00", x"41", x"c8", x"00", x"00", 
+x"41", x"a0", x"00", x"00", x"41", x"a0", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"42", x"8c", x"00", x"00", x"3f", x"80", x"00", x"00", 
+x"3e", x"99", x"99", x"9a", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"43", x"7f", x"00", x"00", x"00", x"00", x"00", x"02", 
+x"00", x"00", x"00", x"03", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"00", x"41", x"a0", x"00", x"00", 
+x"41", x"a0", x"00", x"00", x"41", x"a0", x"00", x"00", 
+x"42", x"c8", x"00", x"00", x"42", x"20", x"00", x"00", 
+x"42", x"f0", x"00", x"00", x"3f", x"80", x"00", x"00", 
+x"3f", x"80", x"00", x"00", x"43", x"16", x"00", x"00", 
+x"43", x"7f", x"00", x"00", x"43", x"7f", x"00", x"00", 
+x"43", x"7f", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"02", x"00", x"00", x"00", x"02", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"bf", x"80", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"43", x"48", x"00", x"00", x"3f", x"80", x"00", x"00", 
+x"3e", x"4c", x"cc", x"cd", x"00", x"00", x"00", x"00", 
+x"43", x"7f", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"ff", x"ff", x"ff", x"ff", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"02", x"ff", x"ff", x"ff", x"ff", 
+x"00", x"00", x"00", x"03", x"00", x"00", x"00", x"01", 
+x"00", x"00", x"00", x"04", x"ff", x"ff", x"ff", x"ff", 
+x"00", x"00", x"00", x"05", x"00", x"00", x"00", x"06", 
+x"00", x"00", x"00", x"07", x"ff", x"ff", x"ff", x"ff", 
+x"00", x"00", x"00", x"08", x"ff", x"ff", x"ff", x"ff", 
+x"00", x"00", x"00", x"09", x"00", x"00", x"00", x"0a", 
+x"ff", x"ff", x"ff", x"ff", x"00", x"00", x"00", x"0c", 
+x"ff", x"ff", x"ff", x"ff", x"00", x"00", x"00", x"0d", 
+x"ff", x"ff", x"ff", x"ff", x"00", x"00", x"00", x"0e", 
+x"ff", x"ff", x"ff", x"ff", x"00", x"00", x"00", x"0f", 
+x"ff", x"ff", x"ff", x"ff", x"00", x"00", x"00", x"10", 
+x"ff", x"ff", x"ff", x"ff", x"ff", x"ff", x"ff", x"ff", 
+x"00", x"00", x"00", x"0b", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"01", x"00", x"00", x"00", x"02", 
+x"00", x"00", x"00", x"03", x"00", x"00", x"00", x"04", 
+x"00", x"00", x"00", x"06", x"ff", x"ff", x"ff", x"ff", 
+x"00", x"00", x"00", x"63", x"00", x"00", x"00", x"09", 
+x"00", x"00", x"00", x"08", x"00", x"00", x"00", x"07", 
+x"00", x"00", x"00", x"05", x"ff", x"ff", x"ff", x"ff", 
+x"ff", x"ff", x"ff", x"ff", x"00", x"00", x"00", x"00",
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", 
+x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00"
diff --git a/ocore/tmpl/cpu.tmp b/ocore/tmpl/cpu.tmp
deleted file mode 100644
index 2caae45..0000000
--- a/ocore/tmpl/cpu.tmp
+++ /dev/null
@@ -1,103 +0,0 @@
-## -*- coding: utf-8 -*-
-<%inherit file="skeleton.tmp"/>
-entity cpu is
-<%include file="cpu_entity.tmp"/>
-end cpu;
-architecture RTL of cpu is
-component clk_gen			
-<%include file="clk_gen_entity.tmp"/>
-end component;			
-component fetch			
-<%include file="fetch_entity.tmp"/>
-end component;			
-component decode			
-<%include file="decode_entity.tmp"/>
-end component;			
-component reg_dc			
-<%include file="reg_dc_entity.tmp"/>
-end component;			
-component exec
-<%include file="exec_entity.tmp"/>
-end component;
-component reg_wb			
-<%include file="reg_wb_entity.tmp"/>
-end component;
-component ram is
-<%include file="ram_entity.tmp"/>
-end component;
-
-	signal	CLK_FT	:	std_logic;
-	signal	CLK_DC	:	std_logic;
-	signal	CLK_EX	:	std_logic;
-	signal	CLK_MA	:	std_logic;
-	signal	CLK_WB	:	std_logic;
-
-	signal	PC	:	${oc.pc_t()};
-	signal	PROM_OUT	:	${oc.ir_t()};
-	signal	IR	:	${oc.ir_t()};
-
-	signal	FramePointer	: ${oc.ram_addr_t()};
-	signal	N_REG	:	std_logic_vector (4 downto 0);
-	signal	REG_IN	:	std_logic_vector (31 downto 0);
-	signal	REG_S	:	std_logic_vector (31 downto 0);
-	signal	REG_T	:	std_logic_vector (31 downto 0);
-	signal	REG_D	:	std_logic_vector (31 downto 0);
-	signal	REG_COND	:	std_logic_vector (3 downto 0);
-<% num_list = map ((lambda x : '%02d' % x), xrange(32)) %>
-%for x in num_list:
-	signal	REG_${x}	:	${oc.reg_t()};
-%endfor
-	signal	RAM_ADDR	:	std_logic_vector (19 downto 0);
-	signal	RAM_IN	:	std_logic_vector (31 downto 0);
-	signal	RAM_OUT	:	std_logic_vector (31 downto 0);
-	signal	RAM_WEN	:	std_logic;
-
-	signal	LR_IN	:	${oc.pc_t()};
-	signal	LR_OUT	:	${oc.pc_t()};
-	signal	LinkRegister	:	${oc.pc_t()};
-
-begin			
-
--- clk(state machine)
-	clk_u	:	clk_gen port map(CLK, CLK_FT, CLK_DC, CLK_EX, CLK_MA, CLK_WB);
-
--- fetch phase
-	fetch_u	:	fetch port map(CLK_FT, PC, PROM_OUT);
-
--- decode phase
-	dec_u	:	decode port map(CLK_DC,
-					PROM_OUT, REG_01, LR_OUT,
-					IR, FramePointer, LinkRegister);
-
-	regdec_rs	:	reg_dc port map(CLK_DC, 
-		${REGs()}, PROM_OUT(25 downto 21), REG_S);
-	regdec_rt	:	reg_dc port map(CLK_DC, 
-		${REGs()}, PROM_OUT(20 downto 16), REG_T);
-	regdec_rd	:	reg_dc port map(CLK_DC, 
-		${REGs()}, PROM_OUT(15 downto 11), REG_D);
-
--- exec phase
-	exec_u	:	exec port map(CLK_EX, RESET, IR, PC,
-		 REG_S, REG_T, REG_D, FramePointer, LinkRegister,
-		 LR_IN, PC, N_REG, REG_IN, RAM_ADDR, RAM_IN, REG_COND,
-		 RAM_WEN);
-
--- memory access phase
-	ram_u	: ram port map (CLK_MA, RAM_WEN, RAM_ADDR, RAM_IN,
-							RAM_OUT, IO65_IN, IO64_OUT);
-	
--- write back phase
-	regwb_u	:	reg_wb port map(CLK_WB, RESET,
-		 N_REG, REG_IN, LR_IN, RAM_OUT, REG_COND,
-		 ${REGs()}, LR_OUT);
-
-end RTL;			
-
-<%namespace name="oc" file="macro.tmp"/>
-<%def name="REGs()">
-		 REG_00, REG_01, REG_02, REG_03, REG_04, REG_05, REG_06, REG_07, 
-		 REG_08, REG_09, REG_10, REG_11, REG_12, REG_13, REG_14, REG_15, 
-		 REG_16, REG_17, REG_18, REG_19, REG_20, REG_21, REG_22, REG_23, 
-		 REG_24, REG_25, REG_26, REG_27, REG_28, REG_29, REG_30, REG_31
-</%def>
-
diff --git a/ocore/tmpl/cpu_entity.tmp b/ocore/tmpl/cpu_entity.tmp
deleted file mode 100644
index 6dbd373..0000000
--- a/ocore/tmpl/cpu_entity.tmp
+++ /dev/null
@@ -1,10 +0,0 @@
-## -*- coding: utf-8 -*-
-	port
-	(			
-	CLK	:	in	std_logic;
-	RESET	:	in	std_logic;
-	IO65_IN	:	in	std_logic_vector (31 downto 0);
-	IO64_OUT	:	out	std_logic_vector (31 downto 0)
-	);				
-<%namespace name="oc" file="macro.tmp"/>
-
diff --git a/ocore/tmpl/decode.tmp b/ocore/tmpl/decode.tmp
index 755d242..b89ba0b 100644
--- a/ocore/tmpl/decode.tmp
+++ b/ocore/tmpl/decode.tmp
@@ -20,17 +20,10 @@ begin
 			FP <= FP_OUT(19 downto 0);
 			LR <= LINK_OUT;
 
-			if opcode="000001" then -- I/O
-				case funct is
-					when "000000" => -- input byte
-						INPUT_FLAG <= "01";
-					when "001000" => -- input long
-						INPUT_FLAG <= "10";
-					when "010000" => -- input float
-						INPUT_FLAG <= "10";
-					when others =>
-						INPUT_FLAG <= "00";
-				end case;
+			if opcode="000001" and funct="000000" then -- I/O
+				INPUT_FLAG <= '1';
+			else
+				INPUT_FLAG <= '0';
 			end if;
 
 		end if;
diff --git a/ocore/tmpl/decode_entity.tmp b/ocore/tmpl/decode_entity.tmp
index bdefa0f..1500278 100644
--- a/ocore/tmpl/decode_entity.tmp
+++ b/ocore/tmpl/decode_entity.tmp
@@ -4,7 +4,7 @@ port (
 	PROM_OUT	:	in ${oc.ir_t()};
 	FP_OUT	:	in ${oc.reg_t()};
 	LINK_OUT	:	in ${oc.pc_t()};
-	INPUT_FLAG	:	out ${oc.io_flag_t()} := "00";
+	INPUT_FLAG	:	out ${oc.io_flag_t()} := '0';
 	IR	: out ${oc.ir_t()};
 	FP	:	out ${oc.ram_addr_t()};
 	LR	:	out ${oc.pc_t()}
diff --git a/ocore/tmpl/exec.tmp b/ocore/tmpl/exec.tmp
index 5eef0d3..9aa8956 100644
--- a/ocore/tmpl/exec.tmp
+++ b/ocore/tmpl/exec.tmp
@@ -195,35 +195,6 @@ begin
 								RAM_ADDR <= x"80000";
 								FR_FLAG <= '0';
 								PC_OUT <= PC_IN + 1;	
-							when "001000" => -- INPUTW (WORD)
-								REG_COND <= "1100";
-								N_REG <= n_reg_d;
-								RAM_WEN <= '0';
-								RAM_ADDR <= x"80001";
-								FR_FLAG <= '0';
-								PC_OUT <= PC_IN + 1;	
-							when "001001" => -- OUTPUTW (WORD)
-								REG_COND <= "0000";
-								RAM_WEN <= '1'; 
-								RAM_IN <= REG_S;
-								RAM_ADDR <= x"80001";
-								FR_FLAG <= '0';
-								PC_OUT <= PC_IN + 1;	
-							when "010000" => -- INPUTF (LONG)
-								REG_COND <= "1100";
-								N_REG <= n_reg_d;
-								RAM_WEN <= '0';
-								RAM_ADDR <= x"80001";
-								FR_FLAG <= '1';
-								PC_OUT <= PC_IN + 1;	
-							when "010001" => -- OUTPUTF (LONG)
-								REG_COND <= "0000";
-								RAM_WEN <= '1'; 
-								RAM_IN <= FREG_S;
-								RAM_ADDR <= x"80001";
-								FR_FLAG <= '1';
-								PC_OUT <= PC_IN + 1;	
-
 							when others =>
 						end case;
 					when "010001" => -- FPI
diff --git a/ocore/tmpl/fetch b/ocore/tmpl/fetch
deleted file mode 100644
index e69de29..0000000
diff --git a/ocore/tmpl/fib.lst b/ocore/tmpl/fib.lst
deleted file mode 100644
index d5a6569..0000000
--- a/ocore/tmpl/fib.lst
+++ /dev/null
@@ -1,749 +0,0 @@
-#### ..//../compiler/test/fib.lst
-
-     0.[  1c] jmp	22c
-     1.[ 22c] addi	g1=4194300 g31=4194300 0
-     2.[ 230] subi	g1=4194300 g1=4194300 32
-     3.[ 234] addi	g0=0 g28=0 1
-     4.[ 238] addi	g0=0 g29=0 -1
-     5.[ 23c] addi	g0=0 g3=0 1
-     6.[ 240] addi	g0=0 g4=0 0
-     7.[ 244] sti	g31=4194300 g2=24 28
-     8.[ 248] subi	g31=4194300 g2=24 4
-     9.[ 24c] subi	g1=4194268 g1=4194268 4
-    10.[ 250] call	20
-    11.[  20] slli	g3=1 g3=1 2
-    12.[  24] add	g5=0 g3=4 g2=4194296
-    13.[  28] addi	g2=4194296 g3=4 0
-    14.[  2c] jlt	g5=4194300 g2=4194296 14
-    15.[  30] jeq	g5=4194300 g2=4194296 10
-    16.[  34] sti	g2=4194296 g4=0 0
-    17.[  38] addi	g2=4194296 g2=4194296 4
-    18.[  3c] jmp	2c
-    19.[  2c] jlt	g5=4194300 g2=4194300 14
-    20.[  30] jeq	g5=4194300 g2=4194300 10
-    21.[  40] return
-    22.[ 254] ldi	g31=4194300 g2=4194300 28
-    23.[ 258] addi	g0=0 g3=4194296 1
-    24.[ 25c] addi	g0=0 g4=0 0
-    25.[ 260] sti	g31=4194300 g2=24 28
-    26.[ 264] subi	g31=4194300 g2=24 8
-    27.[ 268] call	20
-    28.[  20] slli	g3=1 g3=1 2
-    29.[  24] add	g5=4194300 g3=4 g2=4194292
-    30.[  28] addi	g2=4194292 g3=4 0
-    31.[  2c] jlt	g5=4194296 g2=4194292 14
-    32.[  30] jeq	g5=4194296 g2=4194292 10
-    33.[  34] sti	g2=4194292 g4=0 0
-    34.[  38] addi	g2=4194292 g2=4194292 4
-    35.[  3c] jmp	2c
-    36.[  2c] jlt	g5=4194296 g2=4194296 14
-    37.[  30] jeq	g5=4194296 g2=4194296 10
-    38.[  40] return
-    39.[ 26c] ldi	g31=4194300 g2=4194296 28
-    40.[ 270] addi	g0=0 g3=4194292 1
-    41.[ 274] addi	g0=0 g4=0 0
-    42.[ 278] sti	g31=4194300 g2=24 28
-    43.[ 27c] subi	g31=4194300 g2=24 12
-    44.[ 280] call	20
-    45.[  20] slli	g3=1 g3=1 2
-    46.[  24] add	g5=4194296 g3=4 g2=4194288
-    47.[  28] addi	g2=4194288 g3=4 0
-    48.[  2c] jlt	g5=4194292 g2=4194288 14
-    49.[  30] jeq	g5=4194292 g2=4194288 10
-    50.[  34] sti	g2=4194288 g4=0 0
-    51.[  38] addi	g2=4194288 g2=4194288 4
-    52.[  3c] jmp	2c
-    53.[  2c] jlt	g5=4194292 g2=4194292 14
-    54.[  30] jeq	g5=4194292 g2=4194292 10
-    55.[  40] return
-    56.[ 284] ldi	g31=4194300 g2=4194292 28
-    57.[ 288] addi	g0=0 g3=4194288 1
-    58.[ 28c] addi	g0=0 g4=0 0
-    59.[ 290] sti	g31=4194300 g2=24 28
-    60.[ 294] subi	g31=4194300 g2=24 16
-    61.[ 298] call	20
-    62.[  20] slli	g3=1 g3=1 2
-    63.[  24] add	g5=4194292 g3=4 g2=4194284
-    64.[  28] addi	g2=4194284 g3=4 0
-    65.[  2c] jlt	g5=4194288 g2=4194284 14
-    66.[  30] jeq	g5=4194288 g2=4194284 10
-    67.[  34] sti	g2=4194284 g4=0 0
-    68.[  38] addi	g2=4194284 g2=4194284 4
-    69.[  3c] jmp	2c
-    70.[  2c] jlt	g5=4194288 g2=4194288 14
-    71.[  30] jeq	g5=4194288 g2=4194288 10
-    72.[  40] return
-    73.[ 29c] ldi	g31=4194300 g2=4194288 28
-    74.[ 2a0] addi	g0=0 g3=4194284 1
-    75.[ 2a4] addi	g0=0 g4=0 1
-    76.[ 2a8] sti	g31=4194300 g2=24 28
-    77.[ 2ac] subi	g31=4194300 g2=24 20
-    78.[ 2b0] call	20
-    79.[  20] slli	g3=1 g3=1 2
-    80.[  24] add	g5=4194288 g3=4 g2=4194280
-    81.[  28] addi	g2=4194280 g3=4 0
-    82.[  2c] jlt	g5=4194284 g2=4194280 14
-    83.[  30] jeq	g5=4194284 g2=4194280 10
-    84.[  34] sti	g2=4194280 g4=1 0
-    85.[  38] addi	g2=4194280 g2=4194280 4
-    86.[  3c] jmp	2c
-    87.[  2c] jlt	g5=4194284 g2=4194284 14
-    88.[  30] jeq	g5=4194284 g2=4194284 10
-    89.[  40] return
-    90.[ 2b4] ldi	g31=4194300 g2=4194284 28
-    91.[ 2b8] addi	g0=0 g3=4194280 1
-    92.[ 2bc] addi	g0=0 g4=1 0
-    93.[ 2c0] sti	g31=4194300 g2=24 28
-    94.[ 2c4] subi	g31=4194300 g2=24 24
-    95.[ 2c8] call	20
-    96.[  20] slli	g3=1 g3=1 2
-    97.[  24] add	g5=4194284 g3=4 g2=4194276
-    98.[  28] addi	g2=4194276 g3=4 0
-    99.[  2c] jlt	g5=4194280 g2=4194276 14
-   100.[  30] jeq	g5=4194280 g2=4194276 10
-   101.[  34] sti	g2=4194276 g4=0 0
-   102.[  38] addi	g2=4194276 g2=4194276 4
-   103.[  3c] jmp	2c
-   104.[  2c] jlt	g5=4194280 g2=4194280 14
-   105.[  30] jeq	g5=4194280 g2=4194280 10
-   106.[  40] return
-   107.[ 2cc] ldi	g31=4194300 g2=4194280 28
-   108.[ 2d0] addi	g0=0 g4=0 6
-   109.[ 2d4] call	644
-   110.[ 644] jlt	g28=1 g4=6 c
-   111.[ 650] subi	g4=6 g3=4194276 1
-   112.[ 654] sti	g1=4194260 g4=6 0
-   113.[ 658] addi	g3=5 g4=6 0
-   114.[ 65c] subi	g1=4194260 g1=4194260 8
-   115.[ 660] call	644
-   116.[ 644] jlt	g28=1 g4=5 c
-   117.[ 650] subi	g4=5 g3=5 1
-   118.[ 654] sti	g1=4194248 g4=5 0
-   119.[ 658] addi	g3=4 g4=5 0
-   120.[ 65c] subi	g1=4194248 g1=4194248 8
-   121.[ 660] call	644
-   122.[ 644] jlt	g28=1 g4=4 c
-   123.[ 650] subi	g4=4 g3=4 1
-   124.[ 654] sti	g1=4194236 g4=4 0
-   125.[ 658] addi	g3=3 g4=4 0
-   126.[ 65c] subi	g1=4194236 g1=4194236 8
-   127.[ 660] call	644
-   128.[ 644] jlt	g28=1 g4=3 c
-   129.[ 650] subi	g4=3 g3=3 1
-   130.[ 654] sti	g1=4194224 g4=3 0
-   131.[ 658] addi	g3=2 g4=3 0
-   132.[ 65c] subi	g1=4194224 g1=4194224 8
-   133.[ 660] call	644
-   134.[ 644] jlt	g28=1 g4=2 c
-   135.[ 650] subi	g4=2 g3=2 1
-   136.[ 654] sti	g1=4194212 g4=2 0
-   137.[ 658] addi	g3=1 g4=2 0
-   138.[ 65c] subi	g1=4194212 g1=4194212 8
-   139.[ 660] call	644
-   140.[ 644] jlt	g28=1 g4=1 c
-   141.[ 648] addi	g4=1 g3=1 0
-   142.[ 64c] return
-   143.[ 664] addi	g1=4194204 g1=4194204 8
-   144.[ 668] addi	g3=1 g5=4194280 0
-   145.[ 66c] ldi	g1=4194212 g4=1 0
-   146.[ 670] subi	g4=2 g4=2 2
-   147.[ 674] sti	g1=4194212 g5=1 4
-   148.[ 678] subi	g1=4194212 g1=4194212 12
-   149.[ 67c] call	644
-   150.[ 644] jlt	g28=1 g4=0 c
-   151.[ 648] addi	g4=0 g3=1 0
-   152.[ 64c] return
-   153.[ 680] addi	g1=4194200 g1=4194200 12
-   154.[ 684] ldi	g1=4194212 g5=1 4
-   155.[ 688] add	g3=0 g5=1 g3=0
-   156.[ 68c] return
-   157.[ 664] addi	g1=4194216 g1=4194216 8
-   158.[ 668] addi	g3=1 g5=1 0
-   159.[ 66c] ldi	g1=4194224 g4=0 0
-   160.[ 670] subi	g4=3 g4=3 2
-   161.[ 674] sti	g1=4194224 g5=1 4
-   162.[ 678] subi	g1=4194224 g1=4194224 12
-   163.[ 67c] call	644
-   164.[ 644] jlt	g28=1 g4=1 c
-   165.[ 648] addi	g4=1 g3=1 0
-   166.[ 64c] return
-   167.[ 680] addi	g1=4194212 g1=4194212 12
-   168.[ 684] ldi	g1=4194224 g5=1 4
-   169.[ 688] add	g3=1 g5=1 g3=1
-   170.[ 68c] return
-   171.[ 664] addi	g1=4194228 g1=4194228 8
-   172.[ 668] addi	g3=2 g5=1 0
-   173.[ 66c] ldi	g1=4194236 g4=1 0
-   174.[ 670] subi	g4=4 g4=4 2
-   175.[ 674] sti	g1=4194236 g5=2 4
-   176.[ 678] subi	g1=4194236 g1=4194236 12
-   177.[ 67c] call	644
-   178.[ 644] jlt	g28=1 g4=2 c
-   179.[ 650] subi	g4=2 g3=2 1
-   180.[ 654] sti	g1=4194220 g4=2 0
-   181.[ 658] addi	g3=1 g4=2 0
-   182.[ 65c] subi	g1=4194220 g1=4194220 8
-   183.[ 660] call	644
-   184.[ 644] jlt	g28=1 g4=1 c
-   185.[ 648] addi	g4=1 g3=1 0
-   186.[ 64c] return
-   187.[ 664] addi	g1=4194212 g1=4194212 8
-   188.[ 668] addi	g3=1 g5=2 0
-   189.[ 66c] ldi	g1=4194220 g4=1 0
-   190.[ 670] subi	g4=2 g4=2 2
-   191.[ 674] sti	g1=4194220 g5=1 4
-   192.[ 678] subi	g1=4194220 g1=4194220 12
-   193.[ 67c] call	644
-   194.[ 644] jlt	g28=1 g4=0 c
-   195.[ 648] addi	g4=0 g3=1 0
-   196.[ 64c] return
-   197.[ 680] addi	g1=4194208 g1=4194208 12
-   198.[ 684] ldi	g1=4194220 g5=1 4
-   199.[ 688] add	g3=0 g5=1 g3=0
-   200.[ 68c] return
-   201.[ 680] addi	g1=4194224 g1=4194224 12
-   202.[ 684] ldi	g1=4194236 g5=1 4
-   203.[ 688] add	g3=1 g5=2 g3=1
-   204.[ 68c] return
-   205.[ 664] addi	g1=4194240 g1=4194240 8
-   206.[ 668] addi	g3=3 g5=2 0
-   207.[ 66c] ldi	g1=4194248 g4=0 0
-   208.[ 670] subi	g4=5 g4=5 2
-   209.[ 674] sti	g1=4194248 g5=3 4
-   210.[ 678] subi	g1=4194248 g1=4194248 12
-   211.[ 67c] call	644
-   212.[ 644] jlt	g28=1 g4=3 c
-   213.[ 650] subi	g4=3 g3=3 1
-   214.[ 654] sti	g1=4194232 g4=3 0
-   215.[ 658] addi	g3=2 g4=3 0
-   216.[ 65c] subi	g1=4194232 g1=4194232 8
-   217.[ 660] call	644
-   218.[ 644] jlt	g28=1 g4=2 c
-   219.[ 650] subi	g4=2 g3=2 1
-   220.[ 654] sti	g1=4194220 g4=2 0
-   221.[ 658] addi	g3=1 g4=2 0
-   222.[ 65c] subi	g1=4194220 g1=4194220 8
-   223.[ 660] call	644
-   224.[ 644] jlt	g28=1 g4=1 c
-   225.[ 648] addi	g4=1 g3=1 0
-   226.[ 64c] return
-   227.[ 664] addi	g1=4194212 g1=4194212 8
-   228.[ 668] addi	g3=1 g5=3 0
-   229.[ 66c] ldi	g1=4194220 g4=1 0
-   230.[ 670] subi	g4=2 g4=2 2
-   231.[ 674] sti	g1=4194220 g5=1 4
-   232.[ 678] subi	g1=4194220 g1=4194220 12
-   233.[ 67c] call	644
-   234.[ 644] jlt	g28=1 g4=0 c
-   235.[ 648] addi	g4=0 g3=1 0
-   236.[ 64c] return
-   237.[ 680] addi	g1=4194208 g1=4194208 12
-   238.[ 684] ldi	g1=4194220 g5=1 4
-   239.[ 688] add	g3=0 g5=1 g3=0
-   240.[ 68c] return
-   241.[ 664] addi	g1=4194224 g1=4194224 8
-   242.[ 668] addi	g3=1 g5=1 0
-   243.[ 66c] ldi	g1=4194232 g4=0 0
-   244.[ 670] subi	g4=3 g4=3 2
-   245.[ 674] sti	g1=4194232 g5=1 4
-   246.[ 678] subi	g1=4194232 g1=4194232 12
-   247.[ 67c] call	644
-   248.[ 644] jlt	g28=1 g4=1 c
-   249.[ 648] addi	g4=1 g3=1 0
-   250.[ 64c] return
-   251.[ 680] addi	g1=4194220 g1=4194220 12
-   252.[ 684] ldi	g1=4194232 g5=1 4
-   253.[ 688] add	g3=1 g5=1 g3=1
-   254.[ 68c] return
-   255.[ 680] addi	g1=4194236 g1=4194236 12
-   256.[ 684] ldi	g1=4194248 g5=1 4
-   257.[ 688] add	g3=2 g5=3 g3=2
-   258.[ 68c] return
-   259.[ 664] addi	g1=4194252 g1=4194252 8
-   260.[ 668] addi	g3=5 g5=3 0
-   261.[ 66c] ldi	g1=4194260 g4=1 0
-   262.[ 670] subi	g4=6 g4=6 2
-   263.[ 674] sti	g1=4194260 g5=5 4
-   264.[ 678] subi	g1=4194260 g1=4194260 12
-   265.[ 67c] call	644
-   266.[ 644] jlt	g28=1 g4=4 c
-   267.[ 650] subi	g4=4 g3=5 1
-   268.[ 654] sti	g1=4194244 g4=4 0
-   269.[ 658] addi	g3=3 g4=4 0
-   270.[ 65c] subi	g1=4194244 g1=4194244 8
-   271.[ 660] call	644
-   272.[ 644] jlt	g28=1 g4=3 c
-   273.[ 650] subi	g4=3 g3=3 1
-   274.[ 654] sti	g1=4194232 g4=3 0
-   275.[ 658] addi	g3=2 g4=3 0
-   276.[ 65c] subi	g1=4194232 g1=4194232 8
-   277.[ 660] call	644
-   278.[ 644] jlt	g28=1 g4=2 c
-   279.[ 650] subi	g4=2 g3=2 1
-   280.[ 654] sti	g1=4194220 g4=2 0
-   281.[ 658] addi	g3=1 g4=2 0
-   282.[ 65c] subi	g1=4194220 g1=4194220 8
-   283.[ 660] call	644
-   284.[ 644] jlt	g28=1 g4=1 c
-   285.[ 648] addi	g4=1 g3=1 0
-   286.[ 64c] return
-   287.[ 664] addi	g1=4194212 g1=4194212 8
-   288.[ 668] addi	g3=1 g5=5 0
-   289.[ 66c] ldi	g1=4194220 g4=1 0
-   290.[ 670] subi	g4=2 g4=2 2
-   291.[ 674] sti	g1=4194220 g5=1 4
-   292.[ 678] subi	g1=4194220 g1=4194220 12
-   293.[ 67c] call	644
-   294.[ 644] jlt	g28=1 g4=0 c
-   295.[ 648] addi	g4=0 g3=1 0
-   296.[ 64c] return
-   297.[ 680] addi	g1=4194208 g1=4194208 12
-   298.[ 684] ldi	g1=4194220 g5=1 4
-   299.[ 688] add	g3=0 g5=1 g3=0
-   300.[ 68c] return
-   301.[ 664] addi	g1=4194224 g1=4194224 8
-   302.[ 668] addi	g3=1 g5=1 0
-   303.[ 66c] ldi	g1=4194232 g4=0 0
-   304.[ 670] subi	g4=3 g4=3 2
-   305.[ 674] sti	g1=4194232 g5=1 4
-   306.[ 678] subi	g1=4194232 g1=4194232 12
-   307.[ 67c] call	644
-   308.[ 644] jlt	g28=1 g4=1 c
-   309.[ 648] addi	g4=1 g3=1 0
-   310.[ 64c] return
-   311.[ 680] addi	g1=4194220 g1=4194220 12
-   312.[ 684] ldi	g1=4194232 g5=1 4
-   313.[ 688] add	g3=1 g5=1 g3=1
-   314.[ 68c] return
-   315.[ 664] addi	g1=4194236 g1=4194236 8
-   316.[ 668] addi	g3=2 g5=1 0
-   317.[ 66c] ldi	g1=4194244 g4=1 0
-   318.[ 670] subi	g4=4 g4=4 2
-   319.[ 674] sti	g1=4194244 g5=2 4
-   320.[ 678] subi	g1=4194244 g1=4194244 12
-   321.[ 67c] call	644
-   322.[ 644] jlt	g28=1 g4=2 c
-   323.[ 650] subi	g4=2 g3=2 1
-   324.[ 654] sti	g1=4194228 g4=2 0
-   325.[ 658] addi	g3=1 g4=2 0
-   326.[ 65c] subi	g1=4194228 g1=4194228 8
-   327.[ 660] call	644
-   328.[ 644] jlt	g28=1 g4=1 c
-   329.[ 648] addi	g4=1 g3=1 0
-   330.[ 64c] return
-   331.[ 664] addi	g1=4194220 g1=4194220 8
-   332.[ 668] addi	g3=1 g5=2 0
-   333.[ 66c] ldi	g1=4194228 g4=1 0
-   334.[ 670] subi	g4=2 g4=2 2
-   335.[ 674] sti	g1=4194228 g5=1 4
-   336.[ 678] subi	g1=4194228 g1=4194228 12
-   337.[ 67c] call	644
-   338.[ 644] jlt	g28=1 g4=0 c
-   339.[ 648] addi	g4=0 g3=1 0
-   340.[ 64c] return
-   341.[ 680] addi	g1=4194216 g1=4194216 12
-   342.[ 684] ldi	g1=4194228 g5=1 4
-   343.[ 688] add	g3=0 g5=1 g3=0
-   344.[ 68c] return
-   345.[ 680] addi	g1=4194232 g1=4194232 12
-   346.[ 684] ldi	g1=4194244 g5=1 4
-   347.[ 688] add	g3=1 g5=2 g3=1
-   348.[ 68c] return
-   349.[ 680] addi	g1=4194248 g1=4194248 12
-   350.[ 684] ldi	g1=4194260 g5=2 4
-   351.[ 688] add	g3=3 g5=5 g3=3
-   352.[ 68c] return
-   353.[ 2d8] addi	g3=8 g8=0 0
-   354.[ 2dc] call	324
-   355.[ 324] jlt	g8=8 g0=0 310
-   356.[ 328] mvhi	g7=0 1525
-   357.[ 32c] mvlo	g7=99942400 -7936
-   358.[ 330] addi	g0=0 g5=5 0
-   359.[ 334] addi	g0=0 g6=0 3
-   360.[ 338] sti	g1=4194260 g8=8 0
-   361.[ 33c] subi	g1=4194260 g1=4194260 8
-   362.[ 340] call	2e8
-   363.[ 2e8] add	g3=8 g5=0 g6=3
-   364.[ 2ec] srli	g3=3 g4=0 1
-   365.[ 2f0] mul	g9=0 g4=1 g7=100000000
-   366.[ 2f4] sub	g3=3 g6=3 g5=0
-   367.[ 2f8] jlt	g28=1 g3=3 c
-   368.[ 304] jlt	g9=100000000 g8=8 18
-   369.[ 308] jne	g9=100000000 g8=8 c
-   370.[ 314] addi	g4=1 g6=3 0
-   371.[ 318] jmp	2e8
-   372.[ 2e8] add	g3=3 g5=0 g6=1
-   373.[ 2ec] srli	g3=1 g4=1 1
-   374.[ 2f0] mul	g9=100000000 g4=0 g7=100000000
-   375.[ 2f4] sub	g3=1 g6=1 g5=0
-   376.[ 2f8] jlt	g28=1 g3=1 c
-   377.[ 2fc] addi	g5=0 g3=1 0
-   378.[ 300] return
-   379.[ 344] addi	g1=4194252 g1=4194252 8
-   380.[ 348] mvhi	g4=0 1525
-   381.[ 34c] mvlo	g4=99942400 -7936
-   382.[ 350] mul	g4=100000000 g3=0 g4=100000000
-   383.[ 354] ldi	g1=4194260 g8=8 0
-   384.[ 358] sub	g8=8 g8=8 g4=0
-   385.[ 35c] jlt	g0=0 g3=0 c
-   386.[ 360] addi	g0=0 g10=0 0
-   387.[ 364] jmp	378
-   388.[ 378] mvhi	g7=100000000 152
-   389.[ 37c] mvlo	g7=10019072 -27008
-   390.[ 380] addi	g0=0 g5=0 0
-   391.[ 384] addi	g0=0 g6=1 10
-   392.[ 388] sti	g1=4194260 g8=8 4
-   393.[ 38c] subi	g1=4194260 g1=4194260 12
-   394.[ 390] call	2e8
-   395.[ 2e8] add	g3=0 g5=0 g6=10
-   396.[ 2ec] srli	g3=10 g4=0 1
-   397.[ 2f0] mul	g9=0 g4=5 g7=10000000
-   398.[ 2f4] sub	g3=10 g6=10 g5=0
-   399.[ 2f8] jlt	g28=1 g3=10 c
-   400.[ 304] jlt	g9=50000000 g8=8 18
-   401.[ 308] jne	g9=50000000 g8=8 c
-   402.[ 314] addi	g4=5 g6=10 0
-   403.[ 318] jmp	2e8
-   404.[ 2e8] add	g3=10 g5=0 g6=5
-   405.[ 2ec] srli	g3=5 g4=5 1
-   406.[ 2f0] mul	g9=50000000 g4=2 g7=10000000
-   407.[ 2f4] sub	g3=5 g6=5 g5=0
-   408.[ 2f8] jlt	g28=1 g3=5 c
-   409.[ 304] jlt	g9=20000000 g8=8 18
-   410.[ 308] jne	g9=20000000 g8=8 c
-   411.[ 314] addi	g4=2 g6=5 0
-   412.[ 318] jmp	2e8
-   413.[ 2e8] add	g3=5 g5=0 g6=2
-   414.[ 2ec] srli	g3=2 g4=2 1
-   415.[ 2f0] mul	g9=20000000 g4=1 g7=10000000
-   416.[ 2f4] sub	g3=2 g6=2 g5=0
-   417.[ 2f8] jlt	g28=1 g3=2 c
-   418.[ 304] jlt	g9=10000000 g8=8 18
-   419.[ 308] jne	g9=10000000 g8=8 c
-   420.[ 314] addi	g4=1 g6=2 0
-   421.[ 318] jmp	2e8
-   422.[ 2e8] add	g3=2 g5=0 g6=1
-   423.[ 2ec] srli	g3=1 g4=1 1
-   424.[ 2f0] mul	g9=10000000 g4=0 g7=10000000
-   425.[ 2f4] sub	g3=1 g6=1 g5=0
-   426.[ 2f8] jlt	g28=1 g3=1 c
-   427.[ 2fc] addi	g5=0 g3=1 0
-   428.[ 300] return
-   429.[ 394] addi	g1=4194248 g1=4194248 12
-   430.[ 398] mvhi	g4=0 152
-   431.[ 39c] mvlo	g4=9961472 -27008
-   432.[ 3a0] mul	g4=10000000 g3=0 g4=10000000
-   433.[ 3a4] ldi	g1=4194260 g8=8 4
-   434.[ 3a8] sub	g8=8 g8=8 g4=0
-   435.[ 3ac] jlt	g0=0 g3=0 24
-   436.[ 3b0] jne	g10=0 g0=0 c
-   437.[ 3b4] addi	g0=0 g11=0 0
-   438.[ 3b8] jmp	3cc
-   439.[ 3cc] jmp	3e0
-   440.[ 3e0] mvhi	g7=10000000 15
-   441.[ 3e4] mvlo	g7=1021568 16960
-   442.[ 3e8] addi	g0=0 g5=0 0
-   443.[ 3ec] addi	g0=0 g6=1 10
-   444.[ 3f0] sti	g1=4194260 g8=8 8
-   445.[ 3f4] subi	g1=4194260 g1=4194260 16
-   446.[ 3f8] call	2e8
-   447.[ 2e8] add	g3=0 g5=0 g6=10
-   448.[ 2ec] srli	g3=10 g4=0 1
-   449.[ 2f0] mul	g9=0 g4=5 g7=1000000
-   450.[ 2f4] sub	g3=10 g6=10 g5=0
-   451.[ 2f8] jlt	g28=1 g3=10 c
-   452.[ 304] jlt	g9=5000000 g8=8 18
-   453.[ 308] jne	g9=5000000 g8=8 c
-   454.[ 314] addi	g4=5 g6=10 0
-   455.[ 318] jmp	2e8
-   456.[ 2e8] add	g3=10 g5=0 g6=5
-   457.[ 2ec] srli	g3=5 g4=5 1
-   458.[ 2f0] mul	g9=5000000 g4=2 g7=1000000
-   459.[ 2f4] sub	g3=5 g6=5 g5=0
-   460.[ 2f8] jlt	g28=1 g3=5 c
-   461.[ 304] jlt	g9=2000000 g8=8 18
-   462.[ 308] jne	g9=2000000 g8=8 c
-   463.[ 314] addi	g4=2 g6=5 0
-   464.[ 318] jmp	2e8
-   465.[ 2e8] add	g3=5 g5=0 g6=2
-   466.[ 2ec] srli	g3=2 g4=2 1
-   467.[ 2f0] mul	g9=2000000 g4=1 g7=1000000
-   468.[ 2f4] sub	g3=2 g6=2 g5=0
-   469.[ 2f8] jlt	g28=1 g3=2 c
-   470.[ 304] jlt	g9=1000000 g8=8 18
-   471.[ 308] jne	g9=1000000 g8=8 c
-   472.[ 314] addi	g4=1 g6=2 0
-   473.[ 318] jmp	2e8
-   474.[ 2e8] add	g3=2 g5=0 g6=1
-   475.[ 2ec] srli	g3=1 g4=1 1
-   476.[ 2f0] mul	g9=1000000 g4=0 g7=1000000
-   477.[ 2f4] sub	g3=1 g6=1 g5=0
-   478.[ 2f8] jlt	g28=1 g3=1 c
-   479.[ 2fc] addi	g5=0 g3=1 0
-   480.[ 300] return
-   481.[ 3fc] addi	g1=4194244 g1=4194244 16
-   482.[ 400] mvhi	g4=0 15
-   483.[ 404] mvlo	g4=983040 16960
-   484.[ 408] mul	g4=1000000 g3=0 g4=1000000
-   485.[ 40c] ldi	g1=4194260 g8=8 8
-   486.[ 410] sub	g8=8 g8=8 g4=0
-   487.[ 414] jlt	g0=0 g3=0 24
-   488.[ 418] jne	g11=0 g0=0 c
-   489.[ 41c] addi	g0=0 g10=0 0
-   490.[ 420] jmp	434
-   491.[ 434] jmp	448
-   492.[ 448] mvhi	g7=1000000 1
-   493.[ 44c] mvlo	g7=82496 -31072
-   494.[ 450] addi	g0=0 g5=0 0
-   495.[ 454] addi	g0=0 g6=1 10
-   496.[ 458] sti	g1=4194260 g8=8 12
-   497.[ 45c] subi	g1=4194260 g1=4194260 20
-   498.[ 460] call	2e8
-   499.[ 2e8] add	g3=0 g5=0 g6=10
-   500.[ 2ec] srli	g3=10 g4=0 1
-   501.[ 2f0] mul	g9=0 g4=5 g7=100000
-   502.[ 2f4] sub	g3=10 g6=10 g5=0
-   503.[ 2f8] jlt	g28=1 g3=10 c
-   504.[ 304] jlt	g9=500000 g8=8 18
-   505.[ 308] jne	g9=500000 g8=8 c
-   506.[ 314] addi	g4=5 g6=10 0
-   507.[ 318] jmp	2e8
-   508.[ 2e8] add	g3=10 g5=0 g6=5
-   509.[ 2ec] srli	g3=5 g4=5 1
-   510.[ 2f0] mul	g9=500000 g4=2 g7=100000
-   511.[ 2f4] sub	g3=5 g6=5 g5=0
-   512.[ 2f8] jlt	g28=1 g3=5 c
-   513.[ 304] jlt	g9=200000 g8=8 18
-   514.[ 308] jne	g9=200000 g8=8 c
-   515.[ 314] addi	g4=2 g6=5 0
-   516.[ 318] jmp	2e8
-   517.[ 2e8] add	g3=5 g5=0 g6=2
-   518.[ 2ec] srli	g3=2 g4=2 1
-   519.[ 2f0] mul	g9=200000 g4=1 g7=100000
-   520.[ 2f4] sub	g3=2 g6=2 g5=0
-   521.[ 2f8] jlt	g28=1 g3=2 c
-   522.[ 304] jlt	g9=100000 g8=8 18
-   523.[ 308] jne	g9=100000 g8=8 c
-   524.[ 314] addi	g4=1 g6=2 0
-   525.[ 318] jmp	2e8
-   526.[ 2e8] add	g3=2 g5=0 g6=1
-   527.[ 2ec] srli	g3=1 g4=1 1
-   528.[ 2f0] mul	g9=100000 g4=0 g7=100000
-   529.[ 2f4] sub	g3=1 g6=1 g5=0
-   530.[ 2f8] jlt	g28=1 g3=1 c
-   531.[ 2fc] addi	g5=0 g3=1 0
-   532.[ 300] return
-   533.[ 464] addi	g1=4194240 g1=4194240 20
-   534.[ 468] mvhi	g4=0 1
-   535.[ 46c] mvlo	g4=65536 -31072
-   536.[ 470] mul	g4=100000 g3=0 g4=100000
-   537.[ 474] ldi	g1=4194260 g8=8 12
-   538.[ 478] sub	g8=8 g8=8 g4=0
-   539.[ 47c] jlt	g0=0 g3=0 24
-   540.[ 480] jne	g10=0 g0=0 c
-   541.[ 484] addi	g0=0 g11=0 0
-   542.[ 488] jmp	49c
-   543.[ 49c] jmp	4b0
-   544.[ 4b0] addi	g0=0 g7=100000 10000
-   545.[ 4b4] addi	g0=0 g5=0 0
-   546.[ 4b8] addi	g0=0 g6=1 10
-   547.[ 4bc] sti	g1=4194260 g8=8 16
-   548.[ 4c0] subi	g1=4194260 g1=4194260 24
-   549.[ 4c4] call	2e8
-   550.[ 2e8] add	g3=0 g5=0 g6=10
-   551.[ 2ec] srli	g3=10 g4=0 1
-   552.[ 2f0] mul	g9=0 g4=5 g7=10000
-   553.[ 2f4] sub	g3=10 g6=10 g5=0
-   554.[ 2f8] jlt	g28=1 g3=10 c
-   555.[ 304] jlt	g9=50000 g8=8 18
-   556.[ 308] jne	g9=50000 g8=8 c
-   557.[ 314] addi	g4=5 g6=10 0
-   558.[ 318] jmp	2e8
-   559.[ 2e8] add	g3=10 g5=0 g6=5
-   560.[ 2ec] srli	g3=5 g4=5 1
-   561.[ 2f0] mul	g9=50000 g4=2 g7=10000
-   562.[ 2f4] sub	g3=5 g6=5 g5=0
-   563.[ 2f8] jlt	g28=1 g3=5 c
-   564.[ 304] jlt	g9=20000 g8=8 18
-   565.[ 308] jne	g9=20000 g8=8 c
-   566.[ 314] addi	g4=2 g6=5 0
-   567.[ 318] jmp	2e8
-   568.[ 2e8] add	g3=5 g5=0 g6=2
-   569.[ 2ec] srli	g3=2 g4=2 1
-   570.[ 2f0] mul	g9=20000 g4=1 g7=10000
-   571.[ 2f4] sub	g3=2 g6=2 g5=0
-   572.[ 2f8] jlt	g28=1 g3=2 c
-   573.[ 304] jlt	g9=10000 g8=8 18
-   574.[ 308] jne	g9=10000 g8=8 c
-   575.[ 314] addi	g4=1 g6=2 0
-   576.[ 318] jmp	2e8
-   577.[ 2e8] add	g3=2 g5=0 g6=1
-   578.[ 2ec] srli	g3=1 g4=1 1
-   579.[ 2f0] mul	g9=10000 g4=0 g7=10000
-   580.[ 2f4] sub	g3=1 g6=1 g5=0
-   581.[ 2f8] jlt	g28=1 g3=1 c
-   582.[ 2fc] addi	g5=0 g3=1 0
-   583.[ 300] return
-   584.[ 4c8] addi	g1=4194236 g1=4194236 24
-   585.[ 4cc] addi	g0=0 g4=0 10000
-   586.[ 4d0] mul	g4=10000 g3=0 g4=10000
-   587.[ 4d4] ldi	g1=4194260 g8=8 16
-   588.[ 4d8] sub	g8=8 g8=8 g4=0
-   589.[ 4dc] jlt	g0=0 g3=0 24
-   590.[ 4e0] jne	g11=0 g0=0 c
-   591.[ 4e4] addi	g0=0 g10=0 0
-   592.[ 4e8] jmp	4fc
-   593.[ 4fc] jmp	510
-   594.[ 510] addi	g0=0 g7=10000 1000
-   595.[ 514] addi	g0=0 g5=0 0
-   596.[ 518] addi	g0=0 g6=1 10
-   597.[ 51c] sti	g1=4194260 g8=8 20
-   598.[ 520] subi	g1=4194260 g1=4194260 28
-   599.[ 524] call	2e8
-   600.[ 2e8] add	g3=0 g5=0 g6=10
-   601.[ 2ec] srli	g3=10 g4=0 1
-   602.[ 2f0] mul	g9=0 g4=5 g7=1000
-   603.[ 2f4] sub	g3=10 g6=10 g5=0
-   604.[ 2f8] jlt	g28=1 g3=10 c
-   605.[ 304] jlt	g9=5000 g8=8 18
-   606.[ 308] jne	g9=5000 g8=8 c
-   607.[ 314] addi	g4=5 g6=10 0
-   608.[ 318] jmp	2e8
-   609.[ 2e8] add	g3=10 g5=0 g6=5
-   610.[ 2ec] srli	g3=5 g4=5 1
-   611.[ 2f0] mul	g9=5000 g4=2 g7=1000
-   612.[ 2f4] sub	g3=5 g6=5 g5=0
-   613.[ 2f8] jlt	g28=1 g3=5 c
-   614.[ 304] jlt	g9=2000 g8=8 18
-   615.[ 308] jne	g9=2000 g8=8 c
-   616.[ 314] addi	g4=2 g6=5 0
-   617.[ 318] jmp	2e8
-   618.[ 2e8] add	g3=5 g5=0 g6=2
-   619.[ 2ec] srli	g3=2 g4=2 1
-   620.[ 2f0] mul	g9=2000 g4=1 g7=1000
-   621.[ 2f4] sub	g3=2 g6=2 g5=0
-   622.[ 2f8] jlt	g28=1 g3=2 c
-   623.[ 304] jlt	g9=1000 g8=8 18
-   624.[ 308] jne	g9=1000 g8=8 c
-   625.[ 314] addi	g4=1 g6=2 0
-   626.[ 318] jmp	2e8
-   627.[ 2e8] add	g3=2 g5=0 g6=1
-   628.[ 2ec] srli	g3=1 g4=1 1
-   629.[ 2f0] mul	g9=1000 g4=0 g7=1000
-   630.[ 2f4] sub	g3=1 g6=1 g5=0
-   631.[ 2f8] jlt	g28=1 g3=1 c
-   632.[ 2fc] addi	g5=0 g3=1 0
-   633.[ 300] return
-   634.[ 528] addi	g1=4194232 g1=4194232 28
-   635.[ 52c] muli	g3=0 g4=0 1000
-   636.[ 530] ldi	g1=4194260 g8=8 20
-   637.[ 534] sub	g8=8 g8=8 g4=0
-   638.[ 538] jlt	g0=0 g3=0 24
-   639.[ 53c] jne	g10=0 g0=0 c
-   640.[ 540] addi	g0=0 g11=0 0
-   641.[ 544] jmp	558
-   642.[ 558] jmp	56c
-   643.[ 56c] addi	g0=0 g7=1000 100
-   644.[ 570] addi	g0=0 g5=0 0
-   645.[ 574] addi	g0=0 g6=1 10
-   646.[ 578] sti	g1=4194260 g8=8 24
-   647.[ 57c] subi	g1=4194260 g1=4194260 32
-   648.[ 580] call	2e8
-   649.[ 2e8] add	g3=0 g5=0 g6=10
-   650.[ 2ec] srli	g3=10 g4=0 1
-   651.[ 2f0] mul	g9=0 g4=5 g7=100
-   652.[ 2f4] sub	g3=10 g6=10 g5=0
-   653.[ 2f8] jlt	g28=1 g3=10 c
-   654.[ 304] jlt	g9=500 g8=8 18
-   655.[ 308] jne	g9=500 g8=8 c
-   656.[ 314] addi	g4=5 g6=10 0
-   657.[ 318] jmp	2e8
-   658.[ 2e8] add	g3=10 g5=0 g6=5
-   659.[ 2ec] srli	g3=5 g4=5 1
-   660.[ 2f0] mul	g9=500 g4=2 g7=100
-   661.[ 2f4] sub	g3=5 g6=5 g5=0
-   662.[ 2f8] jlt	g28=1 g3=5 c
-   663.[ 304] jlt	g9=200 g8=8 18
-   664.[ 308] jne	g9=200 g8=8 c
-   665.[ 314] addi	g4=2 g6=5 0
-   666.[ 318] jmp	2e8
-   667.[ 2e8] add	g3=5 g5=0 g6=2
-   668.[ 2ec] srli	g3=2 g4=2 1
-   669.[ 2f0] mul	g9=200 g4=1 g7=100
-   670.[ 2f4] sub	g3=2 g6=2 g5=0
-   671.[ 2f8] jlt	g28=1 g3=2 c
-   672.[ 304] jlt	g9=100 g8=8 18
-   673.[ 308] jne	g9=100 g8=8 c
-   674.[ 314] addi	g4=1 g6=2 0
-   675.[ 318] jmp	2e8
-   676.[ 2e8] add	g3=2 g5=0 g6=1
-   677.[ 2ec] srli	g3=1 g4=1 1
-   678.[ 2f0] mul	g9=100 g4=0 g7=100
-   679.[ 2f4] sub	g3=1 g6=1 g5=0
-   680.[ 2f8] jlt	g28=1 g3=1 c
-   681.[ 2fc] addi	g5=0 g3=1 0
-   682.[ 300] return
-   683.[ 584] addi	g1=4194228 g1=4194228 32
-   684.[ 588] muli	g3=0 g4=0 100
-   685.[ 58c] ldi	g1=4194260 g8=8 24
-   686.[ 590] sub	g8=8 g8=8 g4=0
-   687.[ 594] jlt	g0=0 g3=0 24
-   688.[ 598] jne	g11=0 g0=0 c
-   689.[ 59c] addi	g0=0 g10=0 0
-   690.[ 5a0] jmp	5b4
-   691.[ 5b4] jmp	5c8
-   692.[ 5c8] addi	g0=0 g7=100 10
-   693.[ 5cc] addi	g0=0 g5=0 0
-   694.[ 5d0] addi	g0=0 g6=1 10
-   695.[ 5d4] sti	g1=4194260 g8=8 28
-   696.[ 5d8] subi	g1=4194260 g1=4194260 36
-   697.[ 5dc] call	2e8
-   698.[ 2e8] add	g3=0 g5=0 g6=10
-   699.[ 2ec] srli	g3=10 g4=0 1
-   700.[ 2f0] mul	g9=0 g4=5 g7=10
-   701.[ 2f4] sub	g3=10 g6=10 g5=0
-   702.[ 2f8] jlt	g28=1 g3=10 c
-   703.[ 304] jlt	g9=50 g8=8 18
-   704.[ 308] jne	g9=50 g8=8 c
-   705.[ 314] addi	g4=5 g6=10 0
-   706.[ 318] jmp	2e8
-   707.[ 2e8] add	g3=10 g5=0 g6=5
-   708.[ 2ec] srli	g3=5 g4=5 1
-   709.[ 2f0] mul	g9=50 g4=2 g7=10
-   710.[ 2f4] sub	g3=5 g6=5 g5=0
-   711.[ 2f8] jlt	g28=1 g3=5 c
-   712.[ 304] jlt	g9=20 g8=8 18
-   713.[ 308] jne	g9=20 g8=8 c
-   714.[ 314] addi	g4=2 g6=5 0
-   715.[ 318] jmp	2e8
-   716.[ 2e8] add	g3=5 g5=0 g6=2
-   717.[ 2ec] srli	g3=2 g4=2 1
-   718.[ 2f0] mul	g9=20 g4=1 g7=10
-   719.[ 2f4] sub	g3=2 g6=2 g5=0
-   720.[ 2f8] jlt	g28=1 g3=2 c
-   721.[ 304] jlt	g9=10 g8=8 18
-   722.[ 308] jne	g9=10 g8=8 c
-   723.[ 314] addi	g4=1 g6=2 0
-   724.[ 318] jmp	2e8
-   725.[ 2e8] add	g3=2 g5=0 g6=1
-   726.[ 2ec] srli	g3=1 g4=1 1
-   727.[ 2f0] mul	g9=10 g4=0 g7=10
-   728.[ 2f4] sub	g3=1 g6=1 g5=0
-   729.[ 2f8] jlt	g28=1 g3=1 c
-   730.[ 2fc] addi	g5=0 g3=1 0
-   731.[ 300] return
-   732.[ 5e0] addi	g1=4194224 g1=4194224 36
-   733.[ 5e4] muli	g3=0 g4=0 10
-   734.[ 5e8] ldi	g1=4194260 g8=8 28
-   735.[ 5ec] sub	g4=0 g8=8 g4=0
-   736.[ 5f0] jlt	g0=0 g3=0 24
-   737.[ 5f4] jne	g10=0 g0=0 c
-   738.[ 5f8] addi	g0=0 g5=0 0
-   739.[ 5fc] jmp	610
-   740.[ 610] jmp	624
-   741.[ 624] addi	g0=0 g3=0 48
-   742.[ 628] add	g3=48 g3=48 g4=8
-   743.[ 62c] output	g3=56
-   744.[ 630] return
-   745.[ 2e0] addi	g1=4194264 g1=4194264 4
-   746.[ 2e4] halt
diff --git a/ocore/tmpl/fib.s b/ocore/tmpl/fib.s
deleted file mode 100644
index a4063ac..0000000
--- a/ocore/tmpl/fib.s
+++ /dev/null
@@ -1,546 +0,0 @@
-.init_heap_size	192
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-	jmp	min_caml_start
-
-!#####################################################################
-!
-! 		↓　ここから lib_asm.s
-!
-!#####################################################################
-
-! * create_array
-min_caml_create_array:
-	slli %g3, %g3, 2
-	add %g5, %g3, %g2
-	mov %g3, %g2
-CREATE_ARRAY_LOOP:
-	jlt %g5, %g2, CREATE_ARRAY_END
-	jeq %g5, %g2, CREATE_ARRAY_END
-	sti %g4, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_ARRAY_LOOP
-CREATE_ARRAY_END:
-	return
-
-! * create_float_array
-min_caml_create_float_array:
-	slli %g3, %g3, 2
-	add %g4, %g3, %g2
-	mov %g3, %g2
-CREATE_FLOAT_ARRAY_LOOP:
-	jlt %g4, %g2, CREATE_FLOAT_ARRAY_END
-	jeq %g4, %g2, CREATE_FLOAT_ARRAY_END
-	fsti %f0, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_FLOAT_ARRAY_LOOP
-CREATE_FLOAT_ARRAY_END:
-	return
-
-! * floor		%f0 + MAGICF - MAGICF
-min_caml_floor:
-	fmov %f1, %f0
-	! %f4 = 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f4, %g3, 0
-	fjlt %f4, %f0, FLOOR_POSITIVE	! if (%f4 <= %f0) goto FLOOR_PISITIVE
-	fjeq %f4, %f0, FLOOR_POSITIVE
-FLOOR_NEGATIVE:
-	fneg %f0, %f0
-	setL %g3, FLOAT_MAGICF
-	! %f2 = FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fjeq %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fneg %f0, %f0
-	return
-FLOOR_NEGATIVE_MAIN:
-	fadd %f0, %f0, %f2
-	fsub %f0, %f0, %f2
-	fneg %f1, %f1
-	fjlt %f1, %f0, FLOOR_RET2
-	fjeq %f1, %f0, FLOOR_RET2
-	fadd %f0, %f0, %f2
-	! %f3 = 1.0
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fadd %f0, %f0, %f3
-	fsub %f0, %f0, %f2
-	fneg %f0, %f0
-	return
-FLOOR_POSITIVE:
-	setL %g3, FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_POSITIVE_MAIN
-	fjeq %f0, %f2, FLOOR_POSITIVE_MAIN
-	return
-FLOOR_POSITIVE_MAIN:
-	fmov %f1, %f0
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fsub %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fjlt %f0, %f1, FLOOR_RET
-	fjeq %f0, %f1, FLOOR_RET
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fsub %f0, %f0, %f3
-FLOOR_RET:
-	return
-FLOOR_RET2:
-	fneg %f0, %f0
-	return
-	
-min_caml_ceil:
-	fneg %f0, %f0
-	call min_caml_floor
-	fneg %f0, %f0
-	return
-
-! * float_of_int
-min_caml_float_of_int:
-	jlt %g0, %g3, ITOF_MAIN		! if (%g0 <= %g3) goto ITOF_MAIN
-	jeq %g0, %g3, ITOF_MAIN
-	sub %g3, %g0, %g3
-	call ITOF_MAIN
-	fneg %f0, %f0
-	return
-ITOF_MAIN:
-
-	! %f1 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	! %g5 <= FLOAT_MAGICI
-
-	setL %g5, FLOAT_MAGICF
-	fldi %f1, %g5, 0
-	setL %g5, FLOAT_MAGICFHX
-	ldi %g4, %g5, 0
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	jlt %g5, %g3, ITOF_BIG
-	jeq %g5, %g3, ITOF_BIG
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	return
-ITOF_BIG:
-	setL %g4, FLOAT_ZERO
-	fldi %f2, %g4, 0
-ITOF_LOOP:
-	sub %g3, %g3, %g5
-	fadd %f2, %f2, %f1
-	jlt %g5, %g3, ITOF_LOOP
-	jeq %g5, %g3, ITOF_LOOP
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	fadd %f0, %f0, %f2
-	return
-
-! * int_of_float
-min_caml_int_of_float:
-	! %f1 <= 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f1, %g3, 0
-	fjlt %f1, %f0, FTOI_MAIN			! if (0.0 <= %f0) goto FTOI_MAIN
-	fjeq %f1, %f0, FTOI_MAIN
-	fneg %f0, %f0
-	call FTOI_MAIN
-	sub %g3, %g0, %g3
-	return
-FTOI_MAIN:
-	call min_caml_floor
-	! %f2 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	setL %g4, FLOAT_MAGICF
-	fldi %f2, %g4, 0
-	setL %g4, FLOAT_MAGICFHX
-	ldi %g4, %g4, 0
-	fjlt %f2, %f0, FTOI_BIG		! if (MAGICF <= %f0) goto FTOI_BIG
-	fjeq %f2, %f0, FTOI_BIG
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g3, %g1, 0
-	sub %g3, %g3, %g4
-	return
-FTOI_BIG:
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	mov %g3, %g0
-FTOI_LOOP:
-	fsub %f0, %f0, %f2
-	add %g3, %g3, %g5
-	fjlt %f2, %f0, FTOI_LOOP
-	fjeq %f2, %f0, FTOI_LOOP
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g5, %g1, 0
-	sub %g5, %g5, %g4
-	add %g3, %g5, %g3
-	return
-	
-! * truncate
-min_caml_truncate:
-	jmp min_caml_int_of_float
-
-
-!#####################################################################
-!
-! 		↑　ここまで lib_asm.s
-!
-!#####################################################################
-min_caml_start:
-	mov	%g31, %g1
-	subi	%g1, %g1, 32
-	addi	%g28, %g0, 1
-	addi	%g29, %g0, -1
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 4
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 16
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 1
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 20
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 24
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g4, %g0, 30
-	call	fib.342
-	mov	%g8, %g3
-	call	print_int.340
-	addi	%g1, %g1, 4
-	halt
-
-!==============================
-! args = [%g8, %g7, %g5, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %f15]
-! ret type = Int
-!================================
-div_binary_search.335:
-	add	%g3, %g5, %g6
-	srli	%g4, %g3, 1
-	mul	%g9, %g4, %g7
-	sub	%g3, %g6, %g5
-	jlt	%g28, %g3, jle_else.689
-	mov	%g3, %g5
-	return
-jle_else.689:
-	jlt	%g9, %g8, jle_else.690
-	jne	%g9, %g8, jeq_else.691
-	mov	%g3, %g4
-	return
-jeq_else.691:
-	mov	%g6, %g4
-	jmp	div_binary_search.335
-jle_else.690:
-	mov	%g5, %g4
-	jmp	div_binary_search.335
-
-!==============================
-! args = [%g8]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f15, %dummy]
-! ret type = Unit
-!================================
-print_int.340:
-	jlt	%g8, %g0, jge_else.692
-	mvhi	%g7, 1525
-	mvlo	%g7, 57600
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 3
-	sti	%g8, %g1, 0
-	subi	%g1, %g1, 8
-	call	div_binary_search.335
-	addi	%g1, %g1, 8
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 0
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.693
-	addi	%g10, %g0, 0
-	jmp	jle_cont.694
-jle_else.693:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.694:
-	mvhi	%g7, 152
-	mvlo	%g7, 38528
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 4
-	subi	%g1, %g1, 12
-	call	div_binary_search.335
-	addi	%g1, %g1, 12
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 4
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.695
-	jne	%g10, %g0, jeq_else.697
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.698
-jeq_else.697:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.698:
-	jmp	jle_cont.696
-jle_else.695:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.696:
-	mvhi	%g7, 15
-	mvlo	%g7, 16960
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 8
-	subi	%g1, %g1, 16
-	call	div_binary_search.335
-	addi	%g1, %g1, 16
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 8
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.699
-	jne	%g11, %g0, jeq_else.701
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.702
-jeq_else.701:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.702:
-	jmp	jle_cont.700
-jle_else.699:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.700:
-	mvhi	%g7, 1
-	mvlo	%g7, 34464
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 12
-	subi	%g1, %g1, 20
-	call	div_binary_search.335
-	addi	%g1, %g1, 20
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 12
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.703
-	jne	%g10, %g0, jeq_else.705
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.706
-jeq_else.705:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.706:
-	jmp	jle_cont.704
-jle_else.703:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.704:
-	addi	%g7, %g0, 10000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 16
-	subi	%g1, %g1, 24
-	call	div_binary_search.335
-	addi	%g1, %g1, 24
-	addi	%g4, %g0, 10000
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 16
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.707
-	jne	%g11, %g0, jeq_else.709
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.710
-jeq_else.709:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.710:
-	jmp	jle_cont.708
-jle_else.707:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.708:
-	addi	%g7, %g0, 1000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 20
-	subi	%g1, %g1, 28
-	call	div_binary_search.335
-	addi	%g1, %g1, 28
-	muli	%g4, %g3, 1000
-	ldi	%g8, %g1, 20
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.711
-	jne	%g10, %g0, jeq_else.713
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.714
-jeq_else.713:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.714:
-	jmp	jle_cont.712
-jle_else.711:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.712:
-	addi	%g7, %g0, 100
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 24
-	subi	%g1, %g1, 32
-	call	div_binary_search.335
-	addi	%g1, %g1, 32
-	muli	%g4, %g3, 100
-	ldi	%g8, %g1, 24
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.715
-	jne	%g11, %g0, jeq_else.717
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.718
-jeq_else.717:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.718:
-	jmp	jle_cont.716
-jle_else.715:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.716:
-	addi	%g7, %g0, 10
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 28
-	subi	%g1, %g1, 36
-	call	div_binary_search.335
-	addi	%g1, %g1, 36
-	muli	%g4, %g3, 10
-	ldi	%g8, %g1, 28
-	sub	%g4, %g8, %g4
-	jlt	%g0, %g3, jle_else.719
-	jne	%g10, %g0, jeq_else.721
-	addi	%g5, %g0, 0
-	jmp	jeq_cont.722
-jeq_else.721:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jeq_cont.722:
-	jmp	jle_cont.720
-jle_else.719:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jle_cont.720:
-	addi	%g3, %g0, 48
-	add	%g3, %g3, %g4
-	output	%g3
-	return
-jge_else.692:
-	addi	%g3, %g0, 45
-	output	%g3
-	sub	%g8, %g0, %g8
-	jmp	print_int.340
-
-!==============================
-! args = [%g4]
-! fargs = []
-! use_regs = [%g5, %g4, %g3, %g27, %f15]
-! ret type = Int
-!================================
-fib.342:
-	jlt	%g28, %g4, jle_else.723
-	mov	%g3, %g4
-	return
-jle_else.723:
-	subi	%g3, %g4, 1
-	sti	%g4, %g1, 0
-	mov	%g4, %g3
-	subi	%g1, %g1, 8
-	call	fib.342
-	addi	%g1, %g1, 8
-	mov	%g5, %g3
-	ldi	%g4, %g1, 0
-	subi	%g4, %g4, 2
-	sti	%g5, %g1, 4
-	subi	%g1, %g1, 12
-	call	fib.342
-	addi	%g1, %g1, 12
-	ldi	%g5, %g1, 4
-	add	%g3, %g5, %g3
-	return
diff --git a/ocore/tmpl/float.s b/ocore/tmpl/float.s
deleted file mode 100644
index 5d56a31..0000000
--- a/ocore/tmpl/float.s
+++ /dev/null
@@ -1,465 +0,0 @@
-.init_heap_size	576
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-l.466:	! 1.570796
-	.long	0x3fc90fda
-l.464:	! 0.500000
-	.long	0x3f000000
-l.460:	! 3.141593
-	.long	0x40490fda
-l.457:	! 6.283185
-	.long	0x40c90fda
-l.454:	! 9.000000
-	.long	0x41100000
-l.452:	! 1.000000
-	.long	0x3f800000
-l.450:	! 2.000000
-	.long	0x40000000
-l.448:	! 2.500000
-	.long	0x40200000
-l.446:	! 0.000000
-	.long	0x0
-l.438:	! 48.300300
-	.long	0x42413381
-l.436:	! 4.500000
-	.long	0x40900000
-l.434:	! -12.300000
-	.long	0xc144ccc4
-	jmp	min_caml_start
-
-!#####################################################################
-!
-! 		↓　ここから lib_asm.s
-!
-!#####################################################################
-
-! * create_array
-min_caml_create_array:
-	slli %g3, %g3, 2
-	add %g5, %g3, %g2
-	mov %g3, %g2
-CREATE_ARRAY_LOOP:
-	jlt %g5, %g2, CREATE_ARRAY_END
-	jeq %g5, %g2, CREATE_ARRAY_END
-	sti %g4, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_ARRAY_LOOP
-CREATE_ARRAY_END:
-	return
-
-! * create_float_array
-min_caml_create_float_array:
-	slli %g3, %g3, 2
-	add %g4, %g3, %g2
-	mov %g3, %g2
-CREATE_FLOAT_ARRAY_LOOP:
-	jlt %g4, %g2, CREATE_FLOAT_ARRAY_END
-	jeq %g4, %g2, CREATE_FLOAT_ARRAY_END
-	fsti %f0, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_FLOAT_ARRAY_LOOP
-CREATE_FLOAT_ARRAY_END:
-	return
-
-! * floor		%f0 + MAGICF - MAGICF
-min_caml_floor:
-	fmov %f1, %f0
-	! %f4 = 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f4, %g3, 0
-	fjlt %f4, %f0, FLOOR_POSITIVE	! if (%f4 <= %f0) goto FLOOR_PISITIVE
-	fjeq %f4, %f0, FLOOR_POSITIVE
-FLOOR_NEGATIVE:
-	fneg %f0, %f0
-	setL %g3, FLOAT_MAGICF
-	! %f2 = FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fjeq %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fneg %f0, %f0
-	return
-FLOOR_NEGATIVE_MAIN:
-	fadd %f0, %f0, %f2
-	fsub %f0, %f0, %f2
-	fneg %f1, %f1
-	fjlt %f1, %f0, FLOOR_RET2
-	fjeq %f1, %f0, FLOOR_RET2
-	fadd %f0, %f0, %f2
-	! %f3 = 1.0
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fadd %f0, %f0, %f3
-	fsub %f0, %f0, %f2
-	fneg %f0, %f0
-	return
-FLOOR_POSITIVE:
-	setL %g3, FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_POSITIVE_MAIN
-	fjeq %f0, %f2, FLOOR_POSITIVE_MAIN
-	return
-FLOOR_POSITIVE_MAIN:
-	fmov %f1, %f0
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fsub %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fjlt %f0, %f1, FLOOR_RET
-	fjeq %f0, %f1, FLOOR_RET
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fsub %f0, %f0, %f3
-FLOOR_RET:
-	return
-FLOOR_RET2:
-	fneg %f0, %f0
-	return
-	
-min_caml_ceil:
-	fneg %f0, %f0
-	call min_caml_floor
-	fneg %f0, %f0
-	return
-
-! * float_of_int
-min_caml_float_of_int:
-	jlt %g0, %g3, ITOF_MAIN		! if (%g0 <= %g3) goto ITOF_MAIN
-	jeq %g0, %g3, ITOF_MAIN
-	sub %g3, %g0, %g3
-	call ITOF_MAIN
-	fneg %f0, %f0
-	return
-ITOF_MAIN:
-
-	! %f1 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	! %g5 <= FLOAT_MAGICI
-
-	setL %g5, FLOAT_MAGICF
-	fldi %f1, %g5, 0
-	setL %g5, FLOAT_MAGICFHX
-	ldi %g4, %g5, 0
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	jlt %g5, %g3, ITOF_BIG
-	jeq %g5, %g3, ITOF_BIG
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	return
-ITOF_BIG:
-	setL %g4, FLOAT_ZERO
-	fldi %f2, %g4, 0
-ITOF_LOOP:
-	sub %g3, %g3, %g5
-	fadd %f2, %f2, %f1
-	jlt %g5, %g3, ITOF_LOOP
-	jeq %g5, %g3, ITOF_LOOP
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	fadd %f0, %f0, %f2
-	return
-
-! * int_of_float
-min_caml_int_of_float:
-	! %f1 <= 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f1, %g3, 0
-	fjlt %f1, %f0, FTOI_MAIN			! if (0.0 <= %f0) goto FTOI_MAIN
-	fjeq %f1, %f0, FTOI_MAIN
-	fneg %f0, %f0
-	call FTOI_MAIN
-	sub %g3, %g0, %g3
-	return
-FTOI_MAIN:
-	call min_caml_floor
-	! %f2 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	setL %g4, FLOAT_MAGICF
-	fldi %f2, %g4, 0
-	setL %g4, FLOAT_MAGICFHX
-	ldi %g4, %g4, 0
-	fjlt %f2, %f0, FTOI_BIG		! if (MAGICF <= %f0) goto FTOI_BIG
-	fjeq %f2, %f0, FTOI_BIG
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g3, %g1, 0
-	sub %g3, %g3, %g4
-	return
-FTOI_BIG:
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	mov %g3, %g0
-FTOI_LOOP:
-	fsub %f0, %f0, %f2
-	add %g3, %g3, %g5
-	fjlt %f2, %f0, FTOI_LOOP
-	fjeq %f2, %f0, FTOI_LOOP
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g5, %g1, 0
-	sub %g5, %g5, %g4
-	add %g3, %g5, %g3
-	return
-	
-! * truncate
-min_caml_truncate:
-	jmp min_caml_int_of_float
-
-
-!#####################################################################
-!
-! 		↑　ここまで lib_asm.s
-!
-!#####################################################################
-min_caml_start:
-	mov	%g31, %g1
-	subi	%g1, %g1, 32
-	addi	%g28, %g0, 1
-	addi	%g29, %g0, -1
-	setL %g27, l.446
-	fldi	%f16, %g27, 0
-	setL %g27, l.466
-	fldi	%f17, %g27, 0
-	setL %g27, l.457
-	fldi	%f18, %g27, 0
-	setL %g27, l.452
-	fldi	%f19, %g27, 0
-	setL %g27, l.450
-	fldi	%f20, %g27, 0
-	setL %g27, l.464
-	fldi	%f21, %g27, 0
-	setL %g27, l.460
-	fldi	%f22, %g27, 0
-	setL %g27, l.454
-	fldi	%f23, %g27, 0
-	setL %g27, l.448
-	fldi	%f24, %g27, 0
-	setL %g27, l.438
-	fldi	%f25, %g27, 0
-	setL %g27, l.436
-	fldi	%f26, %g27, 0
-	setL %g27, l.434
-	fldi	%f27, %g27, 0
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 4
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 16
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 1
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 20
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 24
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	fmov	%f1, %f27
-	call	abs_float.201
-	fsqrt	%f0, %f0
-	call	cos.224
-	fmov	%f2, %f0
-	call	sin.222
-	fadd	%f0, %f0, %f26
-	fsub	%f3, %f0, %f25
-	mvhi	%g3, 15
-	mvlo	%g3, 16960
-	call	min_caml_float_of_int
-	fmul	%f0, %f3, %f0
-	call	min_caml_int_of_float
-	addi	%g1, %g1, 4
-	outputw	%g3
-	halt
-
-!==============================
-! args = []
-! fargs = [%f1]
-! use_regs = [%g27, %f16, %f15, %f1, %f0]
-! ret type = Float
-!================================
-fabs.199:
-	fjlt	%f1, %f16, fjge_else.476
-	fmov	%f0, %f1
-	return
-fjge_else.476:
-	fneg	%f0, %f1
-	return
-
-!==============================
-! args = []
-! fargs = [%f1]
-! use_regs = [%g27, %f16, %f15, %f1, %f0]
-! ret type = Float
-!================================
-abs_float.201:
-	jmp	fabs.199
-
-!==============================
-! args = []
-! fargs = [%f0]
-! use_regs = [%g27, %f15, %f0]
-! ret type = Float
-!================================
-fneg.203:
-	fneg	%f0, %f0
-	return
-
-!==============================
-! args = []
-! fargs = [%f2, %f3, %f1]
-! use_regs = [%g27, %f3, %f24, %f20, %f2, %f15, %f1, %f0]
-! ret type = Float
-!================================
-tan_sub.385:
-	fjlt	%f2, %f24, fjge_else.477
-	fsub	%f0, %f2, %f20
-	fsub	%f1, %f2, %f1
-	fdiv	%f1, %f3, %f1
-	fmov	%f2, %f0
-	jmp	tan_sub.385
-fjge_else.477:
-	fmov	%f0, %f1
-	return
-
-!==============================
-! args = []
-! fargs = [%f0]
-! use_regs = [%g27, %f3, %f24, %f23, %f20, %f2, %f19, %f16, %f15, %f1, %f0]
-! ret type = Float
-!================================
-tan.218:
-	fmul	%f3, %f0, %f0
-	fsti	%f0, %g1, 0
-	fmov	%f1, %f16
-	fmov	%f2, %f23
-	subi	%g1, %g1, 8
-	call	tan_sub.385
-	addi	%g1, %g1, 8
-	fmov	%f1, %f0
-	fsub	%f1, %f19, %f1
-	fldi	%f0, %g1, 0
-	fdiv	%f0, %f0, %f1
-	return
-
-!==============================
-! args = []
-! fargs = [%f1]
-! use_regs = [%g27, %f18, %f16, %f15, %f1, %f0]
-! ret type = Float
-!================================
-sin_sub.220:
-	fjlt	%f18, %f1, fjge_else.478
-	fjlt	%f1, %f16, fjge_else.479
-	fmov	%f0, %f1
-	return
-fjge_else.479:
-	fadd	%f1, %f1, %f18
-	jmp	sin_sub.220
-fjge_else.478:
-	fsub	%f1, %f1, %f18
-	jmp	sin_sub.220
-
-!==============================
-! args = []
-! fargs = [%f2]
-! use_regs = [%g3, %g27, %f3, %f24, %f23, %f22, %f21, %f20, %f2, %f19, %f18, %f17, %f16, %f15, %f1, %f0]
-! ret type = Float
-!================================
-sin.222:
-	fmov	%f1, %f2
-	call	fabs.199
-	fmov	%f1, %f0
-	subi	%g1, %g1, 4
-	call	sin_sub.220
-	addi	%g1, %g1, 4
-	fjlt	%f22, %f0, fjge_else.480
-	fjlt	%f16, %f2, fjge_else.482
-	addi	%g3, %g0, 0
-	jmp	fjge_cont.483
-fjge_else.482:
-	addi	%g3, %g0, 1
-fjge_cont.483:
-	jmp	fjge_cont.481
-fjge_else.480:
-	fjlt	%f16, %f2, fjge_else.484
-	addi	%g3, %g0, 1
-	jmp	fjge_cont.485
-fjge_else.484:
-	addi	%g3, %g0, 0
-fjge_cont.485:
-fjge_cont.481:
-	fjlt	%f22, %f0, fjge_else.486
-	fmov	%f1, %f0
-	jmp	fjge_cont.487
-fjge_else.486:
-	fsub	%f1, %f18, %f0
-fjge_cont.487:
-	fjlt	%f17, %f1, fjge_else.488
-	fmov	%f0, %f1
-	jmp	fjge_cont.489
-fjge_else.488:
-	fsub	%f0, %f22, %f1
-fjge_cont.489:
-	fmul	%f0, %f0, %f21
-	subi	%g1, %g1, 4
-	call	tan.218
-	addi	%g1, %g1, 4
-	fmul	%f1, %f20, %f0
-	fmul	%f0, %f0, %f0
-	fadd	%f0, %f19, %f0
-	fdiv	%f1, %f1, %f0
-	jne	%g3, %g0, jeq_else.490
-	fmov	%f0, %f1
-	jmp	fneg.203
-jeq_else.490:
-	fmov	%f0, %f1
-	return
-
-!==============================
-! args = []
-! fargs = [%f0]
-! use_regs = [%g3, %g27, %f3, %f24, %f23, %f22, %f21, %f20, %f2, %f19, %f18, %f17, %f16, %f15, %f1, %f0]
-! ret type = Float
-!================================
-cos.224:
-	fsub	%f2, %f17, %f0
-	jmp	sin.222
diff --git a/ocore/tmpl/float.txt b/ocore/tmpl/float.txt
deleted file mode 100644
index 7cc351e..0000000
--- a/ocore/tmpl/float.txt
+++ /dev/null
@@ -1,12 +0,0 @@
-output ./test.lst
-simulate ./test
-
-     ldi: 0.047253         43
-     sti: 0.045055         41
-    fldi: 0.043956         40
-    fsti: 0.021978         20
-
-
-CPU Simulator Results
-cnt:910
-g1_min: 524156(dec)
diff --git a/ocore/tmpl/floor_debug.s b/ocore/tmpl/floor_debug.s
deleted file mode 100644
index ef64e09..0000000
--- a/ocore/tmpl/floor_debug.s
+++ /dev/null
@@ -1,416 +0,0 @@
-.init_heap_size	448
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-l.722:	! 260.000000
-	.long	0x43820000
-l.720:	! 257.000000
-	.long	0x43808000
-l.718:	! 256.000000
-	.long	0x43800000
-l.716:	! 255.000000
-	.long	0x437f0000
-l.714:	! 250.000000
-	.long	0x437a0000
-l.712:	! 0.100000
-	.long	0x3dccccc4
-l.710:	! 0.100000
-	.long	0xffffffff
-l.708:	! 0.100000
-	.long	0x11111111
-	jmp	min_caml_start
-
-!#####################################################################
-!
-! 		↓　ここから lib_asm.s
-!
-!#####################################################################
-! use f15, g15
-debug_print:
-	fsti %f15, %g1, 4
-	ldi	%g15, %g1, 4
-	output %g15
-	srli	%g15, %g15, 8
-	output %g15
-	srli	%g15, %g15, 8
-	output %g15
-	srli	%g15, %g15, 8
-	output %g15
-	return
-	
-
-! * create_array
-min_caml_create_array:
-	slli %g3, %g3, 2
-	add %g5, %g3, %g2
-	mov %g3, %g2
-CREATE_ARRAY_LOOP:
-	jlt %g5, %g2, CREATE_ARRAY_END
-	jeq %g5, %g2, CREATE_ARRAY_END
-	sti %g4, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_ARRAY_LOOP
-CREATE_ARRAY_END:
-	return
-
-! * create_float_array
-min_caml_create_float_array:
-	slli %g3, %g3, 2
-	add %g4, %g3, %g2
-	mov %g3, %g2
-CREATE_FLOAT_ARRAY_LOOP:
-	jlt %g4, %g2, CREATE_FLOAT_ARRAY_END
-	jeq %g4, %g2, CREATE_FLOAT_ARRAY_END
-	fsti %f0, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_FLOAT_ARRAY_LOOP
-CREATE_FLOAT_ARRAY_END:
-	return
-
-! * floor		%f0 + MAGICF - MAGICF
-min_caml_floor:
-	fmov %f1, %f0
-	! %f4 = 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f4, %g3, 0
-
-	!fmov %f15, %f4
-	!call debug_print
-	!fmov %f15, %f0
-	!call debug_print
-	!ok
-
-	fjlt %f4, %f0, FLOOR_POSITIVE	! if (%f4 <= %f0) goto FLOOR_PISITIVE
-	fjeq %f4, %f0, FLOOR_POSITIVE
-
-	!ok
-	!fmov %f15, %f22
-	!call debug_print
-
-FLOOR_NEGATIVE:
-	fneg %f0, %f0
-	setL %g3, FLOAT_MAGICF
-	! %f2 = FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fjeq %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fneg %f0, %f0
-	return
-FLOOR_NEGATIVE_MAIN:
-	fadd %f0, %f0, %f2
-	fsub %f0, %f0, %f2
-	fneg %f1, %f1
-	fjlt %f1, %f0, FLOOR_RET2
-	fjeq %f1, %f0, FLOOR_RET2
-	fadd %f0, %f0, %f2
-	! %f3 = 1.0
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fadd %f0, %f0, %f3
-	fsub %f0, %f0, %f2
-	fneg %f0, %f0
-	return
-FLOOR_POSITIVE:
-
-	!fmov %f15, %f23
-	!call debug_print
-	!ok
-
-	setL %g3, FLOAT_MAGICF
-	fldi %f2, %g3, 0
-
-	!fmov %f15, %f2
-	!call debug_print
-
-	!fmov %f15, %f0
-	!call debug_print
-	!ok
-
-	fjlt %f0, %f2, FLOOR_POSITIVE_MAIN
-	fjeq %f0, %f2, FLOOR_POSITIVE_MAIN
-
-	!fmov %f15, %f22
-	!call debug_print
-	!ok not come here
-
-	return
-FLOOR_POSITIVE_MAIN:
-
-	!fmov %f15, %f23
-	!call debug_print
-	!ok
-
-	fmov %f1, %f0
-
-	!fmov %f15, %f0
-	!call debug_print
-	!ok
-
-	fadd %f0, %f0, %f2
-
-	!fmov %f15, %f0
-	!call debug_print
-	!ok
-
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-
-	fmov %f15, %f0
-	call debug_print
-	fmov %f15, %f2
-	call debug_print
-
-	fsub %f0, %f0, %f2
-
-	!out
-	fmov %f15, %f0
-	call debug_print
-
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-
-	!fmov %f15, %f0
-	!call debug_print
-
-	!fmov %f15, %f1
-	!call debug_print
-
-	fjlt %f0, %f1, FLOOR_RET
-	fjeq %f0, %f1, FLOOR_RET
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-
-	fmov %f15, %f23
-	call debug_print
-
-	fmov %f15, %f0
-	call debug_print
-
-	fsub %f0, %f0, %f3
-
-	fmov %f15, %f0
-	call debug_print
-
-FLOOR_RET:
-	return
-FLOOR_RET2:
-	fneg %f0, %f0
-	return
-	
-min_caml_ceil:
-	fneg %f0, %f0
-	call min_caml_floor
-	fneg %f0, %f0
-	return
-
-! * float_of_int
-min_caml_float_of_int:
-	jlt %g0, %g3, ITOF_MAIN		! if (%g0 <= %g3) goto ITOF_MAIN
-	jeq %g0, %g3, ITOF_MAIN
-	sub %g3, %g0, %g3
-	call ITOF_MAIN
-	fneg %f0, %f0
-	return
-ITOF_MAIN:
-
-	! %f1 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	! %g5 <= FLOAT_MAGICI
-
-	setL %g5, FLOAT_MAGICF
-	fldi %f1, %g5, 0
-	setL %g5, FLOAT_MAGICFHX
-	ldi %g4, %g5, 0
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	jlt %g5, %g3, ITOF_BIG
-	jeq %g5, %g3, ITOF_BIG
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	return
-ITOF_BIG:
-	setL %g4, FLOAT_ZERO
-	fldi %f2, %g4, 0
-ITOF_LOOP:
-	sub %g3, %g3, %g5
-	fadd %f2, %f2, %f1
-	jlt %g5, %g3, ITOF_LOOP
-	jeq %g5, %g3, ITOF_LOOP
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	fadd %f0, %f0, %f2
-	return
-
-! * int_of_float
-min_caml_int_of_float:
-	! %f1 <= 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f1, %g3, 0
-	!ok
-	fjlt %f1, %f0, FTOI_MAIN			! if (0.0 <= %f0) goto FTOI_MAIN
-	fjeq %f1, %f0, FTOI_MAIN
-	fneg %f0, %f0
-	call FTOI_MAIN
-	sub %g3, %g0, %g3
-	return
-FTOI_MAIN:
-
-	!ok
-	call min_caml_floor
-	!outtttttttttttttttttttttttt
-
-	! %f2 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	setL %g4, FLOAT_MAGICF
-	fldi %f2, %g4, 0
-	setL %g4, FLOAT_MAGICFHX
-	ldi %g4, %g4, 0
-	fjlt %f2, %f0, FTOI_BIG		! if (MAGICF <= %f0) goto FTOI_BIG
-	fjeq %f2, %f0, FTOI_BIG
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g3, %g1, 0
-	sub %g3, %g3, %g4
-	return
-FTOI_BIG:
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	mov %g3, %g0
-FTOI_LOOP:
-	fsub %f0, %f0, %f2
-	add %g3, %g3, %g5
-	fjlt %f2, %f0, FTOI_LOOP
-	fjeq %f2, %f0, FTOI_LOOP
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g5, %g1, 0
-	sub %g5, %g5, %g4
-	add %g3, %g5, %g3
-	return
-	
-! * truncate
-min_caml_truncate:
-
-	jmp min_caml_int_of_float
-
-
-!#####################################################################
-!
-! 		↑　ここまで lib_asm.s
-!
-!#####################################################################
-min_caml_start:
-	mov	%g31, %g1
-	subi	%g1, %g1, 32
-	addi	%g28, %g0, 1
-	addi	%g29, %g0, -1
-	setL %g27, l.722
-	fldi	%f16, %g27, 0
-	setL %g27, l.720
-	fldi	%f17, %g27, 0
-	setL %g27, l.718
-	fldi	%f18, %g27, 0
-	setL %g27, l.716
-	fldi	%f19, %g27, 0
-	setL %g27, l.714
-	fldi	%f20, %g27, 0
-	setL %g27, l.712
-	fldi	%f21, %g27, 0
-	setL %g27, l.710
-	fldi	%f22, %g27, 0
-	setL %g27, l.708
-	fldi	%f23, %g27, 0
-
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 4
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 16
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 1
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 20
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 24
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-
-	!fmov %f15, %f18
-	!call debug_print
-	!fmov %f15, %f20
-	!call debug_print
-	!ok
-
-	fmov	%f0, %f20
-	!subi	%g1, %g1, 4
-	call	min_caml_truncate
-	mov	%g8, %g3
-	!call	print_int.361
-	addi	%g1, %g1, 4
-	sti	%g3, %g1, 4
-	ldi	%g3, %g1, 4
-
-	halt
-
-!==============================
-! args = [%g8, %g7, %g5, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %f15]
-! ret type = Int
-!================================
-div_binary_search.356:
-	add	%g3, %g5, %g6
-	srli	%g4, %g3, 1
-	mul	%g9, %g4, %g7
-	sub	%g3, %g6, %g5
-	jlt	%g28, %g3, jle_else.739
-	mov	%g3, %g5
-	return
-jle_else.739:
-	jlt	%g9, %g8, jle_else.740
-	jne	%g9, %g8, jeq_else.741
-	mov	%g3, %g4
-	return
-jeq_else.741:
-	mov	%g6, %g4
-	jmp	div_binary_search.356
-jle_else.740:
-	mov	%g5, %g4
-	jmp	div_binary_search.356
diff --git a/ocore/tmpl/fmul.s b/ocore/tmpl/fmul.s
deleted file mode 100644
index a0f7f82..0000000
--- a/ocore/tmpl/fmul.s
+++ /dev/null
@@ -1,522 +0,0 @@
-.init_heap_size	224
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-l.667:	! 16826400.000000
-	.long	0x4b806010
-	jmp	min_caml_start
-
-!#####################################################################
-!
-! 		↓　ここから lib_asm.s
-!
-!#####################################################################
-
-! * create_array
-min_caml_create_array:
-	slli %g3, %g3, 2
-	add %g5, %g3, %g2
-	mov %g3, %g2
-CREATE_ARRAY_LOOP:
-	jlt %g5, %g2, CREATE_ARRAY_END
-	jeq %g5, %g2, CREATE_ARRAY_END
-	sti %g4, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_ARRAY_LOOP
-CREATE_ARRAY_END:
-	return
-
-! * create_float_array
-min_caml_create_float_array:
-	slli %g3, %g3, 2
-	add %g4, %g3, %g2
-	mov %g3, %g2
-CREATE_FLOAT_ARRAY_LOOP:
-	jlt %g4, %g2, CREATE_FLOAT_ARRAY_END
-	jeq %g4, %g2, CREATE_FLOAT_ARRAY_END
-	fsti %f0, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_FLOAT_ARRAY_LOOP
-CREATE_FLOAT_ARRAY_END:
-	return
-
-! * floor		%f0 + MAGICF - MAGICF
-min_caml_floor:
-	fmov %f1, %f0
-	! %f4 = 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f4, %g3, 0
-	fjlt %f4, %f0, FLOOR_POSITIVE	! if (%f4 <= %f0) goto FLOOR_PISITIVE
-	fjeq %f4, %f0, FLOOR_POSITIVE
-FLOOR_NEGATIVE:
-	fneg %f0, %f0
-	setL %g3, FLOAT_MAGICF
-	! %f2 = FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fjeq %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fneg %f0, %f0
-	return
-FLOOR_NEGATIVE_MAIN:
-	fadd %f0, %f0, %f2
-	fsub %f0, %f0, %f2
-	fneg %f1, %f1
-	fjlt %f1, %f0, FLOOR_RET2
-	fjeq %f1, %f0, FLOOR_RET2
-	fadd %f0, %f0, %f2
-	! %f3 = 1.0
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fadd %f0, %f0, %f3
-	fsub %f0, %f0, %f2
-	fneg %f0, %f0
-	return
-FLOOR_POSITIVE:
-	setL %g3, FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_POSITIVE_MAIN
-	fjeq %f0, %f2, FLOOR_POSITIVE_MAIN
-	return
-FLOOR_POSITIVE_MAIN:
-	fmov %f1, %f0
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fsub %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fjlt %f0, %f1, FLOOR_RET
-	fjeq %f0, %f1, FLOOR_RET
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fsub %f0, %f0, %f3
-FLOOR_RET:
-	return
-FLOOR_RET2:
-	fneg %f0, %f0
-	return
-	
-min_caml_ceil:
-	fneg %f0, %f0
-	call min_caml_floor
-	fneg %f0, %f0
-	return
-
-! * float_of_int
-min_caml_float_of_int:
-	jlt %g0, %g3, ITOF_MAIN		! if (%g0 <= %g3) goto ITOF_MAIN
-	jeq %g0, %g3, ITOF_MAIN
-	sub %g3, %g0, %g3
-	call ITOF_MAIN
-	fneg %f0, %f0
-	return
-ITOF_MAIN:
-
-	! %f1 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	! %g5 <= FLOAT_MAGICI
-
-	setL %g5, FLOAT_MAGICF
-	fldi %f1, %g5, 0
-	setL %g5, FLOAT_MAGICFHX
-	ldi %g4, %g5, 0
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	jlt %g5, %g3, ITOF_BIG
-	jeq %g5, %g3, ITOF_BIG
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	return
-ITOF_BIG:
-	setL %g4, FLOAT_ZERO
-	fldi %f2, %g4, 0
-ITOF_LOOP:
-	sub %g3, %g3, %g5
-	fadd %f2, %f2, %f1
-	jlt %g5, %g3, ITOF_LOOP
-	jeq %g5, %g3, ITOF_LOOP
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	fadd %f0, %f0, %f2
-	return
-
-! * int_of_float
-min_caml_int_of_float:
-	! %f1 <= 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f1, %g3, 0
-	fjlt %f1, %f0, FTOI_MAIN			! if (0.0 <= %f0) goto FTOI_MAIN
-	fjeq %f1, %f0, FTOI_MAIN
-	fneg %f0, %f0
-	call FTOI_MAIN
-	sub %g3, %g0, %g3
-	return
-FTOI_MAIN:
-	call min_caml_floor
-	! %f2 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	setL %g4, FLOAT_MAGICF
-	fldi %f2, %g4, 0
-	setL %g4, FLOAT_MAGICFHX
-	ldi %g4, %g4, 0
-	fjlt %f2, %f0, FTOI_BIG		! if (MAGICF <= %f0) goto FTOI_BIG
-	fjeq %f2, %f0, FTOI_BIG
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g3, %g1, 0
-	sub %g3, %g3, %g4
-	return
-FTOI_BIG:
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	mov %g3, %g0
-FTOI_LOOP:
-	fsub %f0, %f0, %f2
-	add %g3, %g3, %g5
-	fjlt %f2, %f0, FTOI_LOOP
-	fjeq %f2, %f0, FTOI_LOOP
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g5, %g1, 0
-	sub %g5, %g5, %g4
-	add %g3, %g5, %g3
-	return
-	
-! * truncate
-min_caml_truncate:
-	jmp min_caml_int_of_float
-
-
-!#####################################################################
-!
-! 		↑　ここまで lib_asm.s
-!
-!#####################################################################
-min_caml_start:
-	mov	%g31, %g1
-	subi	%g1, %g1, 32
-	addi	%g28, %g0, 1
-	addi	%g29, %g0, -1
-	setL %g27, l.667
-	fldi	%f16, %g27, 0
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 4
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 16
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 1
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 20
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 24
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	fmov	%f0, %f16
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.337
-	addi	%g1, %g1, 4
-	halt
-
-!==============================
-! args = [%g8, %g7, %g5, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %f15]
-! ret type = Int
-!================================
-div_binary_search.332:
-	add	%g3, %g5, %g6
-	srli	%g4, %g3, 1
-	mul	%g9, %g4, %g7
-	sub	%g3, %g6, %g5
-	jlt	%g28, %g3, jle_else.684
-	mov	%g3, %g5
-	return
-jle_else.684:
-	jlt	%g9, %g8, jle_else.685
-	jne	%g9, %g8, jeq_else.686
-	mov	%g3, %g4
-	return
-jeq_else.686:
-	mov	%g6, %g4
-	jmp	div_binary_search.332
-jle_else.685:
-	mov	%g5, %g4
-	jmp	div_binary_search.332
-
-!==============================
-! args = [%g8]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f15, %dummy]
-! ret type = Unit
-!================================
-print_int.337:
-	jlt	%g8, %g0, jge_else.687
-	mvhi	%g7, 1525
-	mvlo	%g7, 57600
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 3
-	sti	%g8, %g1, 0
-	subi	%g1, %g1, 8
-	call	div_binary_search.332
-	addi	%g1, %g1, 8
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 0
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.688
-	addi	%g10, %g0, 0
-	jmp	jle_cont.689
-jle_else.688:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.689:
-	mvhi	%g7, 152
-	mvlo	%g7, 38528
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 4
-	subi	%g1, %g1, 12
-	call	div_binary_search.332
-	addi	%g1, %g1, 12
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 4
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.690
-	jne	%g10, %g0, jeq_else.692
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.693
-jeq_else.692:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.693:
-	jmp	jle_cont.691
-jle_else.690:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.691:
-	mvhi	%g7, 15
-	mvlo	%g7, 16960
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 8
-	subi	%g1, %g1, 16
-	call	div_binary_search.332
-	addi	%g1, %g1, 16
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 8
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.694
-	jne	%g11, %g0, jeq_else.696
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.697
-jeq_else.696:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.697:
-	jmp	jle_cont.695
-jle_else.694:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.695:
-	mvhi	%g7, 1
-	mvlo	%g7, 34464
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 12
-	subi	%g1, %g1, 20
-	call	div_binary_search.332
-	addi	%g1, %g1, 20
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 12
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.698
-	jne	%g10, %g0, jeq_else.700
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.701
-jeq_else.700:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.701:
-	jmp	jle_cont.699
-jle_else.698:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.699:
-	addi	%g7, %g0, 10000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 16
-	subi	%g1, %g1, 24
-	call	div_binary_search.332
-	addi	%g1, %g1, 24
-	addi	%g4, %g0, 10000
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 16
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.702
-	jne	%g11, %g0, jeq_else.704
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.705
-jeq_else.704:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.705:
-	jmp	jle_cont.703
-jle_else.702:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.703:
-	addi	%g7, %g0, 1000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 20
-	subi	%g1, %g1, 28
-	call	div_binary_search.332
-	addi	%g1, %g1, 28
-	muli	%g4, %g3, 1000
-	ldi	%g8, %g1, 20
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.706
-	jne	%g10, %g0, jeq_else.708
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.709
-jeq_else.708:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.709:
-	jmp	jle_cont.707
-jle_else.706:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.707:
-	addi	%g7, %g0, 100
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 24
-	subi	%g1, %g1, 32
-	call	div_binary_search.332
-	addi	%g1, %g1, 32
-	muli	%g4, %g3, 100
-	ldi	%g8, %g1, 24
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.710
-	jne	%g11, %g0, jeq_else.712
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.713
-jeq_else.712:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.713:
-	jmp	jle_cont.711
-jle_else.710:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.711:
-	addi	%g7, %g0, 10
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 28
-	subi	%g1, %g1, 36
-	call	div_binary_search.332
-	addi	%g1, %g1, 36
-	muli	%g4, %g3, 10
-	ldi	%g8, %g1, 28
-	sub	%g4, %g8, %g4
-	jlt	%g0, %g3, jle_else.714
-	jne	%g10, %g0, jeq_else.716
-	addi	%g5, %g0, 0
-	jmp	jeq_cont.717
-jeq_else.716:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jeq_cont.717:
-	jmp	jle_cont.715
-jle_else.714:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jle_cont.715:
-	addi	%g3, %g0, 48
-	add	%g3, %g3, %g4
-	output	%g3
-	return
-jge_else.687:
-	addi	%g3, %g0, 45
-	output	%g3
-	sub	%g8, %g0, %g8
-	jmp	print_int.337
diff --git a/ocore/tmpl/fpadd_test.s b/ocore/tmpl/fpadd_test.s
deleted file mode 100644
index f8c1d72..0000000
--- a/ocore/tmpl/fpadd_test.s
+++ /dev/null
@@ -1,29 +0,0 @@
-.init_heap_size	224
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-l.667:	! 16826400.000000
-	.long	0x4b806010
-
-	setL %g3, FLOAT_ONE
-	fld %f4, %g3, %g0
-	fmov %f5, %f4
-	fsti %f4, %g1, 8
-	fldi %f6, %g1, 8
-	fadd %f3, %f3, %f3
-	addi %g4, %g0, 48
-	fneg %f6, %f6
-	fjlt %f5, %f6, llll
-	output %g4
-llll:
-	halt
-
diff --git a/ocore/tmpl/inprod-loop.s b/ocore/tmpl/inprod-loop.s
deleted file mode 100644
index b6bb04b..0000000
--- a/ocore/tmpl/inprod-loop.s
+++ /dev/null
@@ -1,622 +0,0 @@
-.init_heap_size	352
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-l.763:	! 10000.000000
-	.long	0x461c4000
-l.751:	! 0.000000
-	.long	0x0
-l.749:	! 1000000.000000
-	.long	0x49742400
-l.747:	! 4.560000
-	.long	0x4091eb7d
-l.745:	! 1.230000
-	.long	0x3f9d70a3
-	jmp	min_caml_start
-
-!#####################################################################
-!
-! 		↓　ここから lib_asm.s
-!
-!#####################################################################
-
-! * create_array
-min_caml_create_array:
-	slli %g3, %g3, 2
-	add %g5, %g3, %g2
-	mov %g3, %g2
-CREATE_ARRAY_LOOP:
-	jlt %g5, %g2, CREATE_ARRAY_END
-	jeq %g5, %g2, CREATE_ARRAY_END
-	sti %g4, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_ARRAY_LOOP
-CREATE_ARRAY_END:
-	return
-
-! * create_float_array
-min_caml_create_float_array:
-	slli %g3, %g3, 2
-	add %g4, %g3, %g2
-	mov %g3, %g2
-CREATE_FLOAT_ARRAY_LOOP:
-	jlt %g4, %g2, CREATE_FLOAT_ARRAY_END
-	jeq %g4, %g2, CREATE_FLOAT_ARRAY_END
-	fsti %f0, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_FLOAT_ARRAY_LOOP
-CREATE_FLOAT_ARRAY_END:
-	return
-
-! * floor		%f0 + MAGICF - MAGICF
-min_caml_floor:
-	fmov %f1, %f0
-	! %f4 = 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f4, %g3, 0
-	fjlt %f4, %f0, FLOOR_POSITIVE	! if (%f4 <= %f0) goto FLOOR_PISITIVE
-	fjeq %f4, %f0, FLOOR_POSITIVE
-FLOOR_NEGATIVE:
-	fneg %f0, %f0
-	setL %g3, FLOAT_MAGICF
-	! %f2 = FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fjeq %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fneg %f0, %f0
-	return
-FLOOR_NEGATIVE_MAIN:
-	fadd %f0, %f0, %f2
-	fsub %f0, %f0, %f2
-	fneg %f1, %f1
-	fjlt %f1, %f0, FLOOR_RET2
-	fjeq %f1, %f0, FLOOR_RET2
-	fadd %f0, %f0, %f2
-	! %f3 = 1.0
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fadd %f0, %f0, %f3
-	fsub %f0, %f0, %f2
-	fneg %f0, %f0
-	return
-FLOOR_POSITIVE:
-	setL %g3, FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_POSITIVE_MAIN
-	fjeq %f0, %f2, FLOOR_POSITIVE_MAIN
-	return
-FLOOR_POSITIVE_MAIN:
-	fmov %f1, %f0
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fsub %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fjlt %f0, %f1, FLOOR_RET
-	fjeq %f0, %f1, FLOOR_RET
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fsub %f0, %f0, %f3
-FLOOR_RET:
-	return
-FLOOR_RET2:
-	fneg %f0, %f0
-	return
-	
-min_caml_ceil:
-	fneg %f0, %f0
-	call min_caml_floor
-	fneg %f0, %f0
-	return
-
-! * float_of_int
-min_caml_float_of_int:
-	jlt %g0, %g3, ITOF_MAIN		! if (%g0 <= %g3) goto ITOF_MAIN
-	jeq %g0, %g3, ITOF_MAIN
-	sub %g3, %g0, %g3
-	call ITOF_MAIN
-	fneg %f0, %f0
-	return
-ITOF_MAIN:
-
-	! %f1 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	! %g5 <= FLOAT_MAGICI
-
-	setL %g5, FLOAT_MAGICF
-	fldi %f1, %g5, 0
-	setL %g5, FLOAT_MAGICFHX
-	ldi %g4, %g5, 0
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	jlt %g5, %g3, ITOF_BIG
-	jeq %g5, %g3, ITOF_BIG
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	return
-ITOF_BIG:
-	setL %g4, FLOAT_ZERO
-	fldi %f2, %g4, 0
-ITOF_LOOP:
-	sub %g3, %g3, %g5
-	fadd %f2, %f2, %f1
-	jlt %g5, %g3, ITOF_LOOP
-	jeq %g5, %g3, ITOF_LOOP
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	fadd %f0, %f0, %f2
-	return
-
-! * int_of_float
-min_caml_int_of_float:
-	! %f1 <= 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f1, %g3, 0
-	fjlt %f1, %f0, FTOI_MAIN			! if (0.0 <= %f0) goto FTOI_MAIN
-	fjeq %f1, %f0, FTOI_MAIN
-	fneg %f0, %f0
-	call FTOI_MAIN
-	sub %g3, %g0, %g3
-	return
-FTOI_MAIN:
-	call min_caml_floor
-	! %f2 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	setL %g4, FLOAT_MAGICF
-	fldi %f2, %g4, 0
-	setL %g4, FLOAT_MAGICFHX
-	ldi %g4, %g4, 0
-	fjlt %f2, %f0, FTOI_BIG		! if (MAGICF <= %f0) goto FTOI_BIG
-	fjeq %f2, %f0, FTOI_BIG
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g3, %g1, 0
-	sub %g3, %g3, %g4
-	return
-FTOI_BIG:
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	mov %g3, %g0
-FTOI_LOOP:
-	fsub %f0, %f0, %f2
-	add %g3, %g3, %g5
-	fjlt %f2, %f0, FTOI_LOOP
-	fjeq %f2, %f0, FTOI_LOOP
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g5, %g1, 0
-	sub %g5, %g5, %g4
-	add %g3, %g5, %g3
-	return
-	
-! * truncate
-min_caml_truncate:
-	jmp min_caml_int_of_float
-
-
-!#####################################################################
-!
-! 		↑　ここまで lib_asm.s
-!
-!#####################################################################
-min_caml_start:
-	mov	%g31, %g1
-	subi	%g1, %g1, 56
-	addi	%g28, %g0, 1
-	addi	%g29, %g0, -1
-	setL %g27, l.763
-	fldi	%f16, %g27, 0
-	setL %g27, l.751
-	fldi	%f17, %g27, 0
-	setL %g27, l.749
-	fldi	%f18, %g27, 0
-	setL %g27, l.747
-	fldi	%f19, %g27, 0
-	setL %g27, l.745
-	fldi	%f20, %g27, 0
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 52
-	subi	%g2, %g31, 4
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	ldi	%g2, %g31, 52
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 52
-	subi	%g2, %g31, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 52
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 52
-	subi	%g2, %g31, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 52
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 52
-	subi	%g2, %g31, 16
-	call	min_caml_create_array
-	ldi	%g2, %g31, 52
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 1
-	sti	%g2, %g31, 52
-	subi	%g2, %g31, 20
-	call	min_caml_create_array
-	ldi	%g2, %g31, 52
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 52
-	subi	%g2, %g31, 24
-	call	min_caml_create_array
-	ldi	%g2, %g31, 52
-	addi	%g3, %g0, 3
-	sti	%g2, %g31, 52
-	subi	%g2, %g31, 36
-	fmov	%f0, %f20
-	call	min_caml_create_float_array
-	ldi	%g2, %g31, 52
-	addi	%g3, %g0, 3
-	sti	%g2, %g31, 52
-	subi	%g2, %g31, 48
-	fmov	%f0, %f19
-	call	min_caml_create_float_array
-	ldi	%g2, %g31, 52
-	addi	%g14, %g0, 2
-	subi	%g12, %g31, 48
-	subi	%g13, %g31, 36
-	fmov	%f5, %f17
-	call	inprod.376
-	fmul	%f0, %f18, %f0
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.374
-	addi	%g1, %g1, 4
-	halt
-
-!==============================
-! args = [%g8, %g7, %g5, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %f15]
-! ret type = Int
-!================================
-div_binary_search.369:
-	add	%g3, %g5, %g6
-	srli	%g4, %g3, 1
-	mul	%g9, %g4, %g7
-	sub	%g3, %g6, %g5
-	jlt	%g28, %g3, jle_else.787
-	mov	%g3, %g5
-	return
-jle_else.787:
-	jlt	%g9, %g8, jle_else.788
-	jne	%g9, %g8, jeq_else.789
-	mov	%g3, %g4
-	return
-jeq_else.789:
-	mov	%g6, %g4
-	jmp	div_binary_search.369
-jle_else.788:
-	mov	%g5, %g4
-	jmp	div_binary_search.369
-
-!==============================
-! args = [%g8]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f15, %dummy]
-! ret type = Unit
-!================================
-print_int.374:
-	jlt	%g8, %g0, jge_else.790
-	mvhi	%g7, 1525
-	mvlo	%g7, 57600
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 3
-	sti	%g8, %g1, 0
-	subi	%g1, %g1, 8
-	call	div_binary_search.369
-	addi	%g1, %g1, 8
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 0
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.791
-	addi	%g10, %g0, 0
-	jmp	jle_cont.792
-jle_else.791:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.792:
-	mvhi	%g7, 152
-	mvlo	%g7, 38528
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 4
-	subi	%g1, %g1, 12
-	call	div_binary_search.369
-	addi	%g1, %g1, 12
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 4
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.793
-	jne	%g10, %g0, jeq_else.795
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.796
-jeq_else.795:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.796:
-	jmp	jle_cont.794
-jle_else.793:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.794:
-	mvhi	%g7, 15
-	mvlo	%g7, 16960
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 8
-	subi	%g1, %g1, 16
-	call	div_binary_search.369
-	addi	%g1, %g1, 16
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 8
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.797
-	jne	%g11, %g0, jeq_else.799
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.800
-jeq_else.799:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.800:
-	jmp	jle_cont.798
-jle_else.797:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.798:
-	mvhi	%g7, 1
-	mvlo	%g7, 34464
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 12
-	subi	%g1, %g1, 20
-	call	div_binary_search.369
-	addi	%g1, %g1, 20
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 12
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.801
-	jne	%g10, %g0, jeq_else.803
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.804
-jeq_else.803:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.804:
-	jmp	jle_cont.802
-jle_else.801:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.802:
-	addi	%g7, %g0, 10000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 16
-	subi	%g1, %g1, 24
-	call	div_binary_search.369
-	addi	%g1, %g1, 24
-	addi	%g4, %g0, 10000
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 16
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.805
-	jne	%g11, %g0, jeq_else.807
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.808
-jeq_else.807:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.808:
-	jmp	jle_cont.806
-jle_else.805:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.806:
-	addi	%g7, %g0, 1000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 20
-	subi	%g1, %g1, 28
-	call	div_binary_search.369
-	addi	%g1, %g1, 28
-	muli	%g4, %g3, 1000
-	ldi	%g8, %g1, 20
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.809
-	jne	%g10, %g0, jeq_else.811
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.812
-jeq_else.811:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.812:
-	jmp	jle_cont.810
-jle_else.809:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.810:
-	addi	%g7, %g0, 100
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 24
-	subi	%g1, %g1, 32
-	call	div_binary_search.369
-	addi	%g1, %g1, 32
-	muli	%g4, %g3, 100
-	ldi	%g8, %g1, 24
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.813
-	jne	%g11, %g0, jeq_else.815
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.816
-jeq_else.815:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.816:
-	jmp	jle_cont.814
-jle_else.813:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.814:
-	addi	%g7, %g0, 10
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 28
-	subi	%g1, %g1, 36
-	call	div_binary_search.369
-	addi	%g1, %g1, 36
-	muli	%g4, %g3, 10
-	ldi	%g8, %g1, 28
-	sub	%g4, %g8, %g4
-	jlt	%g0, %g3, jle_else.817
-	jne	%g10, %g0, jeq_else.819
-	addi	%g5, %g0, 0
-	jmp	jeq_cont.820
-jeq_else.819:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jeq_cont.820:
-	jmp	jle_cont.818
-jle_else.817:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jle_cont.818:
-	addi	%g3, %g0, 48
-	add	%g3, %g3, %g4
-	output	%g3
-	return
-jge_else.790:
-	addi	%g3, %g0, 45
-	output	%g3
-	sub	%g8, %g0, %g8
-	jmp	print_int.374
-
-!==============================
-! args = [%g13, %g12, %g14]
-! fargs = [%f5]
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g14, %g13, %g12, %g11, %g10, %f5, %f4, %f3, %f2, %f16, %f15, %f1, %f0, %dummy]
-! ret type = Float
-!================================
-inprod.376:
-	jlt	%g14, %g0, jge_else.821
-	mov	%g8, %g14
-	subi	%g1, %g1, 4
-	call	print_int.374
-	addi	%g1, %g1, 4
-	sti	%g3, %g1, 4
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 4
-	slli	%g3, %g14, 2
-	fld	%f0, %g13, %g3
-	fmul	%f0, %f16, %f0
-	subi	%g1, %g1, 4
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.374
-	addi	%g1, %g1, 4
-	sti	%g3, %g1, 4
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 4
-	slli	%g3, %g14, 2
-	fld	%f0, %g12, %g3
-	fmul	%f0, %f16, %f0
-	subi	%g1, %g1, 4
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.374
-	addi	%g1, %g1, 4
-	sti	%g3, %g1, 4
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 4
-	slli	%g3, %g14, 2
-	fld	%f0, %g13, %g3
-	fmul	%f1, %f16, %f0
-	slli	%g3, %g14, 2
-	fld	%f0, %g12, %g3
-	fmul	%f0, %f1, %f0
-	subi	%g1, %g1, 4
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.374
-	addi	%g1, %g1, 4
-	sti	%g3, %g1, 4
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 4
-	slli	%g3, %g14, 2
-	fld	%f1, %g13, %g3
-	slli	%g3, %g14, 2
-	fld	%f0, %g12, %g3
-	fmul	%f0, %f1, %f0
-	fadd	%f5, %f5, %f0
-	subi	%g14, %g14, 1
-	jmp	inprod.376
-jge_else.821:
-	fmov	%f0, %f5
-	return
diff --git a/ocore/tmpl/inprod.s b/ocore/tmpl/inprod.s
deleted file mode 100644
index 68475b3..0000000
--- a/ocore/tmpl/inprod.s
+++ /dev/null
@@ -1,618 +0,0 @@
-.init_heap_size	416
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-l.732:	! 6.000000
-	.long	0x40c00000
-l.730:	! 5.000000
-	.long	0x40a00000
-l.728:	! 4.000000
-	.long	0x40800000
-l.722:	! 3.000000
-	.long	0x40400000
-l.720:	! 1.000000
-	.long	0x3f800000
-l.718:	! 1000000.000000
-	.long	0x49742400
-l.716:	! 2.000000
-	.long	0x40000000
-	jmp	min_caml_start
-
-!#####################################################################
-!
-! 		↓　ここから lib_asm.s
-!
-!#####################################################################
-
-! * create_array
-min_caml_create_array:
-	slli %g3, %g3, 2
-	add %g5, %g3, %g2
-	mov %g3, %g2
-CREATE_ARRAY_LOOP:
-	jlt %g5, %g2, CREATE_ARRAY_END
-	jeq %g5, %g2, CREATE_ARRAY_END
-	sti %g4, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_ARRAY_LOOP
-CREATE_ARRAY_END:
-	return
-
-! * create_float_array
-min_caml_create_float_array:
-	slli %g3, %g3, 2
-	add %g4, %g3, %g2
-	mov %g3, %g2
-CREATE_FLOAT_ARRAY_LOOP:
-	jlt %g4, %g2, CREATE_FLOAT_ARRAY_END
-	jeq %g4, %g2, CREATE_FLOAT_ARRAY_END
-	fsti %f0, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_FLOAT_ARRAY_LOOP
-CREATE_FLOAT_ARRAY_END:
-	return
-
-! * floor		%f0 + MAGICF - MAGICF
-min_caml_floor:
-	fmov %f1, %f0
-	! %f4 = 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f4, %g3, 0
-	fjlt %f4, %f0, FLOOR_POSITIVE	! if (%f4 <= %f0) goto FLOOR_PISITIVE
-	fjeq %f4, %f0, FLOOR_POSITIVE
-FLOOR_NEGATIVE:
-	fneg %f0, %f0
-	setL %g3, FLOAT_MAGICF
-	! %f2 = FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fjeq %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fneg %f0, %f0
-	return
-FLOOR_NEGATIVE_MAIN:
-	fadd %f0, %f0, %f2
-	fsub %f0, %f0, %f2
-	fneg %f1, %f1
-	fjlt %f1, %f0, FLOOR_RET2
-	fjeq %f1, %f0, FLOOR_RET2
-	fadd %f0, %f0, %f2
-	! %f3 = 1.0
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fadd %f0, %f0, %f3
-	fsub %f0, %f0, %f2
-	fneg %f0, %f0
-	return
-FLOOR_POSITIVE:
-	setL %g3, FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_POSITIVE_MAIN
-	fjeq %f0, %f2, FLOOR_POSITIVE_MAIN
-	return
-FLOOR_POSITIVE_MAIN:
-	fmov %f1, %f0
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fsub %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fjlt %f0, %f1, FLOOR_RET
-	fjeq %f0, %f1, FLOOR_RET
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fsub %f0, %f0, %f3
-FLOOR_RET:
-	return
-FLOOR_RET2:
-	fneg %f0, %f0
-	return
-	
-min_caml_ceil:
-	fneg %f0, %f0
-	call min_caml_floor
-	fneg %f0, %f0
-	return
-
-! * float_of_int
-min_caml_float_of_int:
-	jlt %g0, %g3, ITOF_MAIN		! if (%g0 <= %g3) goto ITOF_MAIN
-	jeq %g0, %g3, ITOF_MAIN
-	sub %g3, %g0, %g3
-	call ITOF_MAIN
-	fneg %f0, %f0
-	return
-ITOF_MAIN:
-
-	! %f1 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	! %g5 <= FLOAT_MAGICI
-
-	setL %g5, FLOAT_MAGICF
-	fldi %f1, %g5, 0
-	setL %g5, FLOAT_MAGICFHX
-	ldi %g4, %g5, 0
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	jlt %g5, %g3, ITOF_BIG
-	jeq %g5, %g3, ITOF_BIG
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	return
-ITOF_BIG:
-	setL %g4, FLOAT_ZERO
-	fldi %f2, %g4, 0
-ITOF_LOOP:
-	sub %g3, %g3, %g5
-	fadd %f2, %f2, %f1
-	jlt %g5, %g3, ITOF_LOOP
-	jeq %g5, %g3, ITOF_LOOP
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	fadd %f0, %f0, %f2
-	return
-
-! * int_of_float
-min_caml_int_of_float:
-	! %f1 <= 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f1, %g3, 0
-	fjlt %f1, %f0, FTOI_MAIN			! if (0.0 <= %f0) goto FTOI_MAIN
-	fjeq %f1, %f0, FTOI_MAIN
-	fneg %f0, %f0
-	call FTOI_MAIN
-	sub %g3, %g0, %g3
-	return
-FTOI_MAIN:
-	call min_caml_floor
-	! %f2 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	setL %g4, FLOAT_MAGICF
-	fldi %f2, %g4, 0
-	setL %g4, FLOAT_MAGICFHX
-	ldi %g4, %g4, 0
-	fjlt %f2, %f0, FTOI_BIG		! if (MAGICF <= %f0) goto FTOI_BIG
-	fjeq %f2, %f0, FTOI_BIG
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g3, %g1, 0
-	sub %g3, %g3, %g4
-	return
-FTOI_BIG:
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	mov %g3, %g0
-FTOI_LOOP:
-	fsub %f0, %f0, %f2
-	add %g3, %g3, %g5
-	fjlt %f2, %f0, FTOI_LOOP
-	fjeq %f2, %f0, FTOI_LOOP
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g5, %g1, 0
-	sub %g5, %g5, %g4
-	add %g3, %g5, %g3
-	return
-	
-! * truncate
-min_caml_truncate:
-	jmp min_caml_int_of_float
-
-
-!#####################################################################
-!
-! 		↑　ここまで lib_asm.s
-!
-!#####################################################################
-min_caml_start:
-	mov	%g31, %g1
-	subi	%g1, %g1, 32
-	addi	%g28, %g0, 1
-	addi	%g29, %g0, -1
-	setL %g27, l.732
-	fldi	%f16, %g27, 0
-	setL %g27, l.730
-	fldi	%f17, %g27, 0
-	setL %g27, l.728
-	fldi	%f18, %g27, 0
-	setL %g27, l.722
-	fldi	%f19, %g27, 0
-	setL %g27, l.720
-	fldi	%f20, %g27, 0
-	setL %g27, l.718
-	fldi	%f21, %g27, 0
-	setL %g27, l.716
-	fldi	%f22, %g27, 0
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 4
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 16
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 1
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 20
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 28
-	subi	%g2, %g31, 24
-	call	min_caml_create_array
-	ldi	%g2, %g31, 28
-	mov	%g4, %g2
-	addi	%g2, %g2, 12
-	fsti	%f19, %g4, -8
-	fsti	%f22, %g4, -4
-	fsti	%f20, %g4, 0
-	mov	%g3, %g2
-	addi	%g2, %g2, 12
-	fsti	%f16, %g3, -8
-	fsti	%f17, %g3, -4
-	fsti	%f18, %g3, 0
-	mov	%g5, %g4
-	mov	%g4, %g3
-	call	inprod.362
-	fmul	%f0, %f21, %f0
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.354
-	addi	%g1, %g1, 4
-	halt
-
-!==============================
-! args = [%g8, %g7, %g5, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %f15]
-! ret type = Int
-!================================
-div_binary_search.349:
-	add	%g3, %g5, %g6
-	srli	%g4, %g3, 1
-	mul	%g9, %g4, %g7
-	sub	%g3, %g6, %g5
-	jlt	%g28, %g3, jle_else.754
-	mov	%g3, %g5
-	return
-jle_else.754:
-	jlt	%g9, %g8, jle_else.755
-	jne	%g9, %g8, jeq_else.756
-	mov	%g3, %g4
-	return
-jeq_else.756:
-	mov	%g6, %g4
-	jmp	div_binary_search.349
-jle_else.755:
-	mov	%g5, %g4
-	jmp	div_binary_search.349
-
-!==============================
-! args = [%g8]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f15, %dummy]
-! ret type = Unit
-!================================
-print_int.354:
-	jlt	%g8, %g0, jge_else.757
-	mvhi	%g7, 1525
-	mvlo	%g7, 57600
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 3
-	sti	%g8, %g1, 0
-	subi	%g1, %g1, 8
-	call	div_binary_search.349
-	addi	%g1, %g1, 8
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 0
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.758
-	addi	%g10, %g0, 0
-	jmp	jle_cont.759
-jle_else.758:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.759:
-	mvhi	%g7, 152
-	mvlo	%g7, 38528
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 4
-	subi	%g1, %g1, 12
-	call	div_binary_search.349
-	addi	%g1, %g1, 12
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 4
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.760
-	jne	%g10, %g0, jeq_else.762
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.763
-jeq_else.762:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.763:
-	jmp	jle_cont.761
-jle_else.760:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.761:
-	mvhi	%g7, 15
-	mvlo	%g7, 16960
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 8
-	subi	%g1, %g1, 16
-	call	div_binary_search.349
-	addi	%g1, %g1, 16
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 8
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.764
-	jne	%g11, %g0, jeq_else.766
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.767
-jeq_else.766:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.767:
-	jmp	jle_cont.765
-jle_else.764:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.765:
-	mvhi	%g7, 1
-	mvlo	%g7, 34464
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 12
-	subi	%g1, %g1, 20
-	call	div_binary_search.349
-	addi	%g1, %g1, 20
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 12
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.768
-	jne	%g10, %g0, jeq_else.770
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.771
-jeq_else.770:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.771:
-	jmp	jle_cont.769
-jle_else.768:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.769:
-	addi	%g7, %g0, 10000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 16
-	subi	%g1, %g1, 24
-	call	div_binary_search.349
-	addi	%g1, %g1, 24
-	addi	%g4, %g0, 10000
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 16
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.772
-	jne	%g11, %g0, jeq_else.774
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.775
-jeq_else.774:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.775:
-	jmp	jle_cont.773
-jle_else.772:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.773:
-	addi	%g7, %g0, 1000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 20
-	subi	%g1, %g1, 28
-	call	div_binary_search.349
-	addi	%g1, %g1, 28
-	muli	%g4, %g3, 1000
-	ldi	%g8, %g1, 20
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.776
-	jne	%g10, %g0, jeq_else.778
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.779
-jeq_else.778:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.779:
-	jmp	jle_cont.777
-jle_else.776:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.777:
-	addi	%g7, %g0, 100
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 24
-	subi	%g1, %g1, 32
-	call	div_binary_search.349
-	addi	%g1, %g1, 32
-	muli	%g4, %g3, 100
-	ldi	%g8, %g1, 24
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.780
-	jne	%g11, %g0, jeq_else.782
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.783
-jeq_else.782:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.783:
-	jmp	jle_cont.781
-jle_else.780:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.781:
-	addi	%g7, %g0, 10
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 28
-	subi	%g1, %g1, 36
-	call	div_binary_search.349
-	addi	%g1, %g1, 36
-	muli	%g4, %g3, 10
-	ldi	%g8, %g1, 28
-	sub	%g4, %g8, %g4
-	jlt	%g0, %g3, jle_else.784
-	jne	%g10, %g0, jeq_else.786
-	addi	%g5, %g0, 0
-	jmp	jeq_cont.787
-jeq_else.786:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jeq_cont.787:
-	jmp	jle_cont.785
-jle_else.784:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jle_cont.785:
-	addi	%g3, %g0, 48
-	add	%g3, %g3, %g4
-	output	%g3
-	return
-jge_else.757:
-	addi	%g3, %g0, 45
-	output	%g3
-	sub	%g8, %g0, %g8
-	jmp	print_int.354
-
-!==============================
-! args = [%g3]
-! fargs = []
-! use_regs = [%g3, %g27, %f15, %f0]
-! ret type = Float
-!================================
-getx.356:
-	fldi	%f0, %g3, 0
-	return
-
-!==============================
-! args = [%g3]
-! fargs = []
-! use_regs = [%g3, %g27, %f15, %f0]
-! ret type = Float
-!================================
-gety.358:
-	fldi	%f0, %g3, -4
-	return
-
-!==============================
-! args = [%g3]
-! fargs = []
-! use_regs = [%g3, %g27, %f15, %f0]
-! ret type = Float
-!================================
-getz.360:
-	fldi	%f0, %g3, -8
-	return
-
-!==============================
-! args = [%g5, %g4]
-! fargs = []
-! use_regs = [%g5, %g4, %g3, %g27, %f2, %f15, %f1, %f0]
-! ret type = Float
-!================================
-inprod.362:
-	mov	%g3, %g5
-	call	getx.356
-	fmov	%f1, %f0
-	mov	%g3, %g4
-	call	getx.356
-	fmul	%f2, %f1, %f0
-	mov	%g3, %g5
-	call	gety.358
-	fmov	%f1, %f0
-	mov	%g3, %g4
-	call	gety.358
-	fmul	%f0, %f1, %f0
-	fadd	%f2, %f2, %f0
-	mov	%g3, %g5
-	call	getz.360
-	fmov	%f1, %f0
-	mov	%g3, %g4
-	call	getz.360
-	fmul	%f0, %f1, %f0
-	fadd	%f0, %f2, %f0
-	return
diff --git a/ocore/tmpl/input.s b/ocore/tmpl/input.s
deleted file mode 100644
index 210d2b2..0000000
--- a/ocore/tmpl/input.s
+++ /dev/null
@@ -1,24 +0,0 @@
-
-.init_heap_size	0
-
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	input %g3
-	output %g3
-	halt
diff --git a/ocore/tmpl/input_word_test.s b/ocore/tmpl/input_word_test.s
deleted file mode 100644
index 324a619..0000000
--- a/ocore/tmpl/input_word_test.s
+++ /dev/null
@@ -1,11 +0,0 @@
-.init_heap_size	0
-
-	input %g3
-	input %g4
-	input %g5
-	input %g6
-	input %g7
-	input %g8
-	input %g9
-	input %g10
-	halt
diff --git a/ocore/tmpl/io_dev.tmp b/ocore/tmpl/io_dev.tmp
index 529ea60..54fd651 100644
--- a/ocore/tmpl/io_dev.tmp
+++ b/ocore/tmpl/io_dev.tmp
@@ -1,4 +1,4 @@
 ## -*- coding: utf-8 -*-
 <%inherit file="skeleton_io_dev.tmp"/>
-<%def name="wtime()">${oc.io_wtime()}</%def>
+<%def name="wtime()">x"0000"</%def>
 <%namespace name="oc" file="macro.tmp"/>
diff --git a/ocore/tmpl/io_dev_word.tmp b/ocore/tmpl/io_dev_word.tmp
deleted file mode 100644
index eef5a15..0000000
--- a/ocore/tmpl/io_dev_word.tmp
+++ /dev/null
@@ -1,111 +0,0 @@
-## -*- coding: utf-8 -*-
-<%inherit file="skeleton.tmp"/>
-entity io_dev is
-<%include file="io_dev_entity.tmp"/>
-end io_dev;
-
-architecture arch of io_dev is
-	component u232c is
-  generic (wtime: std_logic_vector(15 downto 0) := x"1ADB");
-  Port ( clk  : in  std_logic;
-		 send_data : in  std_logic_vector (7 downto 0);
-		 send_go   : in  std_logic;
-		 send_busy : out std_logic;
-		 tx   : out std_logic;
-		 recv_data : out std_logic_vector (7 downto 0);
-		 recv_busy : out std_logic;
-		 rx   : in std_logic
-		);
-	end component;
-
-	subtype buf_rec_t is ${oc.ram_t()};
-
-	type sendbuf_t is array (0 to ${oc.io_sbufsize()}) of buf_rec_t;
-	signal sendbuf : sendbuf_t;
-	signal send_head	: integer range 0 to ${oc.io_sbufsize()} := 0;
-	signal send_tail	: integer range 0 to ${oc.io_sbufsize()} := 0;
-	signal send_empty : std_logic := '0';
-
-	--signal recv_head	: integer range 0 to ${oc.io_rbufsize()} := 0;
-	--signal recv_tail	: integer range 0 to ${oc.io_rbufsize()} := 0;
-	signal recv_head	: integer range 0 to ${oc.io_rbufsize()} := 0;
-	signal recv_tail	: integer range 0 to ${oc.io_rbufsize()} := 1137;
-	type recvbuf_t is array (0 to ${oc.io_rbufsize()}) of buf_rec_t;
-	--signal recvbuf : recvbuf_t;
-	signal recvbuf : recvbuf_t :=
-	(
-<%include file="contest_sld.txt"/>
-	);
-
-
-	signal u232c_o : std_logic_vector(7 downto 0);
-	signal u232c_i : std_logic_vector(7 downto 0);
-
-	signal send_go : std_logic;
-	signal send_busy : std_logic := '0';
-
-	signal recv_busy : std_logic := '0';
-
-	
-begin
-	rs232c: u232c generic map (wtime=>${oc.io_wtime()})
-	port map (clk, u232c_o, send_go, send_busy, RS_TX, u232c_i, recv_busy, RS_RX);
-------------------------------------------------------------------------
----- send
-------------------------------------------------------------------------
-	send_enqueue : process(clk, CPU_WR, CPU_OUT)
-	begin
-		if rising_edge(clk) then
-			if CPU_WR='1' then
-				-- little endian
-				sendbuf(send_tail+0) <= CPU_OUT(7  downto  0);
-				sendbuf(send_tail+1) <= CPU_OUT(15 downto  8);
-				sendbuf(send_tail+2) <= CPU_OUT(23 downto 16);
-				sendbuf(send_tail+3) <= CPU_OUT(31 downto 24);
-				send_tail <= send_tail + 4;
-			end if;
-		end if;
-	end process;
-
-	send_empty <= '1' when send_head=send_tail else '0';
-	send_dequeue: process(clk, send_busy)
-	begin
-		if rising_edge(clk) then
-			u232c_o <= sendbuf(send_head);
-			if send_busy='0' and send_go='0' then
-				send_go<=not send_empty;
-				send_head <= send_head + conv_integer(not send_empty);
-			else
-				send_go<='0';
-			end if;
-		end if;
-	end process;
-
-------------------------------------------------------------------------
----- recv
-------------------------------------------------------------------------
-
-	NYET <= '1' when (recv_head+4)>recv_tail else '0';
-	-- little endian
-	CPU_IN(7  downto  0) <= recvbuf(recv_head+0);
-	CPU_IN(15 downto  8) <= recvbuf(recv_head+1);
-	CPU_IN(23 downto 16) <= recvbuf(recv_head+2);
-	CPU_IN(31 downto 24) <= recvbuf(recv_head+3);
-
-	recv_enqueue : process(recv_busy, u232c_i)
-	begin
-		if falling_edge(recv_busy) then
-			recvbuf(recv_tail)<=u232c_i;
-			recv_tail <= recv_tail+1;
-		end if;
-	end process;
-
-	recv_dequeue : process(CPU_RD)
-	begin
-		if rising_edge(CPU_RD) then
-			recv_head <= recv_head+4;
-		end if;
-	end process;
-
-end arch;
-<%namespace name="oc" file="macro.tmp"/>
diff --git a/ocore/tmpl/io_dev_word_entity.tmp b/ocore/tmpl/io_dev_word_entity.tmp
deleted file mode 100644
index 7f9aaa4..0000000
--- a/ocore/tmpl/io_dev_word_entity.tmp
+++ /dev/null
@@ -1,13 +0,0 @@
-## -*- coding: utf-8 -*-
-	port(
-		CLK		:	in	std_logic;
-		CPU_WR	:	in	std_logic;
-		CPU_RD	:	in	std_logic;
-		CPU_OUT	:	in	${oc.reg_t()};
-		CPU_IN	:	out	${oc.reg_t()};
-		NYET	:	out std_logic;
-		RS_RX	:	in	std_logic;
-		RS_TX	:	out	std_logic
-	);
-<%namespace name="oc" file="macro.tmp"/>
-
diff --git a/ocore/tmpl/log b/ocore/tmpl/log
deleted file mode 100644
index 3e42128..0000000
Binary files a/ocore/tmpl/log and /dev/null differ
diff --git a/ocore/tmpl/loopback.s b/ocore/tmpl/loopback.s
deleted file mode 100644
index 3aba265..0000000
--- a/ocore/tmpl/loopback.s
+++ /dev/null
@@ -1,16 +0,0 @@
-.init_heap_size	0
-
-	addi	%g3, %g0, 48
-	addi	%g3, %g0, 48
-	addi	%g3, %g0, 48
-Loop:
-	inputw	%g4
-	outputw %g4
-	inputf	%f0
-	outputf %f0
-	input	%g4
-	output %g4
-	output %g3
-	addi	%g3, %g3 1
-	jmp Loop
-
diff --git a/ocore/tmpl/macro.tmp b/ocore/tmpl/macro.tmp
index f89b39e..da2d304 100644
--- a/ocore/tmpl/macro.tmp
+++ b/ocore/tmpl/macro.tmp
@@ -7,28 +7,28 @@
 ##  4 * 1024 =   4096 (12 bit)
 ##  1 * 1024 =   1024 (10 bit)
 
-##<%def name="reg1_init()">524284</%def>
-##<%def name="sim_sramsize()">131071</%def>
-##<%def name="sim_sramaddr()">ZA(16 downto 0)</%def>
-##<%def name="mem_acc_sram_addr()">"000"&ADDR(18 downto 2)</%def>
+<%def name="reg1_init()">524284</%def>
+<%def name="sim_sramsize()">131071</%def>
+<%def name="sim_sramaddr()">ZA(16 downto 0)</%def>
+<%def name="mem_acc_sram_addr()">"000"&ADDR(18 downto 2)</%def>
 
-<%def name="reg1_init()">16380</%def>
-<%def name="sim_sramsize()">4095</%def>
-<%def name="sim_sramaddr()">ZA(11 downto 0)</%def>
-<%def name="mem_acc_sram_addr()">"00000000"&ADDR(13 downto 2)</%def>
+##<%def name="reg1_init()">16380</%def>
+##<%def name="sim_sramsize()">4095</%def>
+##<%def name="sim_sramaddr()">ZA(11 downto 0)</%def>
+##<%def name="mem_acc_sram_addr()">"00000000"&ADDR(13 downto 2)</%def>
 
-<%def name="io_wtime()">x"0000"</%def>
-<%def name="io_rtail()">(others=>'0')</%def>
-##<%def name="io_rtail()">conv_std_logic_vector(2000, 11)</%def>
-##<%def name="io_rtail()">conv_std_logic_vector(7, 11)</%def>
+##<%def name="io_rtail()">(others=>'0')</%def>
+##<%def name="rx_en()">RS_RX</%def>
+<%def name="rx_en()">'1'</%def>
+<%def name="io_rtail()">conv_std_logic_vector(2000, 11)</%def>
 
 ## sim_prom_msb_max=14
 <%def name="pc_t()">${V32()}</%def>
-##<%def name="sim_prom_max()">32767</%def>
-##<%def name="prom_msb()">13</%def>
+<%def name="sim_prom_max()">32767</%def>
+<%def name="prom_msb()">13</%def>
 
-<%def name="sim_prom_max()">1023</%def>
-<%def name="prom_msb()">9</%def>
+##<%def name="sim_prom_max()">1023</%def>
+##<%def name="prom_msb()">9</%def>
 
 <%def name="io_bus_t()">${V32()}</%def>
 <%def name="reg_t()">${V32()}</%def>
@@ -36,7 +36,8 @@
 <%def name="ir_t()">${V32()}</%def>
 <%def name="reg_index_t()">${V5()}</%def>
 <%def name="ram_addr_t()">${V20()}</%def>
-<%def name="io_flag_t()">${V('1 downto 0')}</%def>
+##<%def name="io_flag_t()">${V('1 downto 0')}</%def>
+<%def name="io_flag_t()">std_logic</%def>
 
 <%def name="V(size)">std_logic_vector(${size})</%def>
 <%def name="V32()">${V('31 downto 0')}</%def>
diff --git a/ocore/tmpl/matmul-flat.s b/ocore/tmpl/matmul-flat.s
deleted file mode 100644
index 98238b6..0000000
--- a/ocore/tmpl/matmul-flat.s
+++ /dev/null
@@ -1,808 +0,0 @@
-.init_heap_size	608
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-l.1027:	! 12.000000
-	.long	0x41400000
-l.1022:	! 11.000000
-	.long	0x41300000
-l.1017:	! 10.000000
-	.long	0x41200000
-l.1012:	! 9.000000
-	.long	0x41100000
-l.1007:	! 8.000000
-	.long	0x41000000
-l.1002:	! 7.000000
-	.long	0x40e00000
-l.997:	! 6.000000
-	.long	0x40c00000
-l.992:	! 5.000000
-	.long	0x40a00000
-l.987:	! 4.000000
-	.long	0x40800000
-l.982:	! 3.000000
-	.long	0x40400000
-l.974:	! 1.000000
-	.long	0x3f800000
-l.967:	! 0.000000
-	.long	0x0
-l.965:	! 2.000000
-	.long	0x40000000
-	jmp	min_caml_start
-
-!#####################################################################
-!
-! 		↓　ここから lib_asm.s
-!
-!#####################################################################
-
-! * create_array
-min_caml_create_array:
-	slli %g3, %g3, 2
-	add %g5, %g3, %g2
-	mov %g3, %g2
-CREATE_ARRAY_LOOP:
-	jlt %g5, %g2, CREATE_ARRAY_END
-	jeq %g5, %g2, CREATE_ARRAY_END
-	sti %g4, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_ARRAY_LOOP
-CREATE_ARRAY_END:
-	return
-
-! * create_float_array
-min_caml_create_float_array:
-	slli %g3, %g3, 2
-	add %g4, %g3, %g2
-	mov %g3, %g2
-CREATE_FLOAT_ARRAY_LOOP:
-	jlt %g4, %g2, CREATE_FLOAT_ARRAY_END
-	jeq %g4, %g2, CREATE_FLOAT_ARRAY_END
-	fsti %f0, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_FLOAT_ARRAY_LOOP
-CREATE_FLOAT_ARRAY_END:
-	return
-
-! * floor		%f0 + MAGICF - MAGICF
-min_caml_floor:
-	fmov %f1, %f0
-	! %f4 = 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f4, %g3, 0
-	fjlt %f4, %f0, FLOOR_POSITIVE	! if (%f4 <= %f0) goto FLOOR_PISITIVE
-	fjeq %f4, %f0, FLOOR_POSITIVE
-FLOOR_NEGATIVE:
-	fneg %f0, %f0
-	setL %g3, FLOAT_MAGICF
-	! %f2 = FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fjeq %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fneg %f0, %f0
-	return
-FLOOR_NEGATIVE_MAIN:
-	fadd %f0, %f0, %f2
-	fsub %f0, %f0, %f2
-	fneg %f1, %f1
-	fjlt %f1, %f0, FLOOR_RET2
-	fjeq %f1, %f0, FLOOR_RET2
-	fadd %f0, %f0, %f2
-	! %f3 = 1.0
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fadd %f0, %f0, %f3
-	fsub %f0, %f0, %f2
-	fneg %f0, %f0
-	return
-FLOOR_POSITIVE:
-	setL %g3, FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_POSITIVE_MAIN
-	fjeq %f0, %f2, FLOOR_POSITIVE_MAIN
-	return
-FLOOR_POSITIVE_MAIN:
-	fmov %f1, %f0
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fsub %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fjlt %f0, %f1, FLOOR_RET
-	fjeq %f0, %f1, FLOOR_RET
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fsub %f0, %f0, %f3
-FLOOR_RET:
-	return
-FLOOR_RET2:
-	fneg %f0, %f0
-	return
-	
-min_caml_ceil:
-	fneg %f0, %f0
-	call min_caml_floor
-	fneg %f0, %f0
-	return
-
-! * float_of_int
-min_caml_float_of_int:
-	jlt %g0, %g3, ITOF_MAIN		! if (%g0 <= %g3) goto ITOF_MAIN
-	jeq %g0, %g3, ITOF_MAIN
-	sub %g3, %g0, %g3
-	call ITOF_MAIN
-	fneg %f0, %f0
-	return
-ITOF_MAIN:
-
-	! %f1 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	! %g5 <= FLOAT_MAGICI
-
-	setL %g5, FLOAT_MAGICF
-	fldi %f1, %g5, 0
-	setL %g5, FLOAT_MAGICFHX
-	ldi %g4, %g5, 0
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	jlt %g5, %g3, ITOF_BIG
-	jeq %g5, %g3, ITOF_BIG
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	return
-ITOF_BIG:
-	setL %g4, FLOAT_ZERO
-	fldi %f2, %g4, 0
-ITOF_LOOP:
-	sub %g3, %g3, %g5
-	fadd %f2, %f2, %f1
-	jlt %g5, %g3, ITOF_LOOP
-	jeq %g5, %g3, ITOF_LOOP
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	fadd %f0, %f0, %f2
-	return
-
-! * int_of_float
-min_caml_int_of_float:
-	! %f1 <= 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f1, %g3, 0
-	fjlt %f1, %f0, FTOI_MAIN			! if (0.0 <= %f0) goto FTOI_MAIN
-	fjeq %f1, %f0, FTOI_MAIN
-	fneg %f0, %f0
-	call FTOI_MAIN
-	sub %g3, %g0, %g3
-	return
-FTOI_MAIN:
-	call min_caml_floor
-	! %f2 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	setL %g4, FLOAT_MAGICF
-	fldi %f2, %g4, 0
-	setL %g4, FLOAT_MAGICFHX
-	ldi %g4, %g4, 0
-	fjlt %f2, %f0, FTOI_BIG		! if (MAGICF <= %f0) goto FTOI_BIG
-	fjeq %f2, %f0, FTOI_BIG
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g3, %g1, 0
-	sub %g3, %g3, %g4
-	return
-FTOI_BIG:
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	mov %g3, %g0
-FTOI_LOOP:
-	fsub %f0, %f0, %f2
-	add %g3, %g3, %g5
-	fjlt %f2, %f0, FTOI_LOOP
-	fjeq %f2, %f0, FTOI_LOOP
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g5, %g1, 0
-	sub %g5, %g5, %g4
-	add %g3, %g5, %g3
-	return
-	
-! * truncate
-min_caml_truncate:
-	jmp min_caml_int_of_float
-
-
-!#####################################################################
-!
-! 		↑　ここまで lib_asm.s
-!
-!#####################################################################
-min_caml_start:
-	mov	%g31, %g1
-	subi	%g1, %g1, 48
-	addi	%g28, %g0, 1
-	addi	%g29, %g0, -1
-	setL %g27, l.967
-	fldi	%f16, %g27, 0
-	setL %g27, l.997
-	fldi	%f17, %g27, 0
-	setL %g27, l.992
-	fldi	%f18, %g27, 0
-	setL %g27, l.987
-	fldi	%f19, %g27, 0
-	setL %g27, l.982
-	fldi	%f20, %g27, 0
-	setL %g27, l.974
-	fldi	%f21, %g27, 0
-	setL %g27, l.965
-	fldi	%f22, %g27, 0
-	setL %g27, l.1027
-	fldi	%f23, %g27, 0
-	setL %g27, l.1022
-	fldi	%f24, %g27, 0
-	setL %g27, l.1017
-	fldi	%f25, %g27, 0
-	setL %g27, l.1012
-	fldi	%f26, %g27, 0
-	setL %g27, l.1007
-	fldi	%f27, %g27, 0
-	setL %g27, l.1002
-	fldi	%f28, %g27, 0
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 4
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 16
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 1
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 20
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 24
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 28
-	fmov	%f0, %f16
-	call	min_caml_create_float_array
-	ldi	%g2, %g31, 44
-	addi	%g6, %g0, 2
-	addi	%g8, %g0, 3
-	subi	%g4, %g31, 28
-	call	make.502
-	addi	%g1, %g1, 4
-	mov	%g15, %g3
-	sti	%g15, %g31, 32
-	addi	%g6, %g0, 3
-	addi	%g8, %g0, 2
-	subi	%g4, %g31, 28
-	sti	%g15, %g1, 0
-	subi	%g1, %g1, 8
-	call	make.502
-	addi	%g1, %g1, 8
-	mov	%g7, %g3
-	sti	%g7, %g31, 36
-	addi	%g6, %g0, 2
-	addi	%g8, %g0, 2
-	subi	%g4, %g31, 28
-	sti	%g7, %g1, 4
-	subi	%g1, %g1, 12
-	call	make.502
-	addi	%g1, %g1, 12
-	mov	%g14, %g3
-	sti	%g14, %g31, 40
-	ldi	%g15, %g1, 0
-	ldi	%g3, %g15, 0
-	fsti	%f21, %g3, 0
-	ldi	%g3, %g15, 0
-	fsti	%f22, %g3, -4
-	ldi	%g3, %g15, 0
-	fsti	%f20, %g3, -8
-	ldi	%g3, %g15, -4
-	fsti	%f19, %g3, 0
-	ldi	%g3, %g15, -4
-	fsti	%f18, %g3, -4
-	ldi	%g3, %g15, -4
-	fsti	%f17, %g3, -8
-	ldi	%g7, %g1, 4
-	ldi	%g3, %g7, 0
-	fsti	%f28, %g3, 0
-	ldi	%g3, %g7, 0
-	fsti	%f27, %g3, -4
-	ldi	%g3, %g7, -4
-	fsti	%f26, %g3, 0
-	ldi	%g3, %g7, -4
-	fsti	%f25, %g3, -4
-	ldi	%g3, %g7, -8
-	fsti	%f24, %g3, 0
-	ldi	%g3, %g7, -8
-	fsti	%f23, %g3, -4
-	addi	%g3, %g0, 2
-	addi	%g12, %g0, 3
-	addi	%g13, %g0, 2
-	mov	%g6, %g14
-	mov	%g8, %g15
-	subi	%g1, %g1, 12
-	call	mul.490
-	ldi	%g3, %g14, 0
-	fldi	%f0, %g3, 0
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.467
-	addi	%g1, %g1, 12
-	sti	%g3, %g1, 12
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 12
-	ldi	%g3, %g14, 0
-	fldi	%f0, %g3, -4
-	subi	%g1, %g1, 12
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.467
-	addi	%g1, %g1, 12
-	sti	%g3, %g1, 12
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 12
-	ldi	%g3, %g14, -4
-	fldi	%f0, %g3, 0
-	subi	%g1, %g1, 12
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.467
-	addi	%g1, %g1, 12
-	sti	%g3, %g1, 12
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 12
-	ldi	%g3, %g14, -4
-	fldi	%f0, %g3, -4
-	subi	%g1, %g1, 12
-	call	min_caml_truncate
-	mov	%g8, %g3
-	call	print_int.467
-	addi	%g1, %g1, 12
-	sti	%g3, %g1, 12
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 12
-	halt
-
-!==============================
-! args = [%g8, %g7, %g5, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %f15]
-! ret type = Int
-!================================
-div_binary_search.462:
-	add	%g3, %g5, %g6
-	srli	%g4, %g3, 1
-	mul	%g9, %g4, %g7
-	sub	%g3, %g6, %g5
-	jlt	%g28, %g3, jle_else.1095
-	mov	%g3, %g5
-	return
-jle_else.1095:
-	jlt	%g9, %g8, jle_else.1096
-	jne	%g9, %g8, jeq_else.1097
-	mov	%g3, %g4
-	return
-jeq_else.1097:
-	mov	%g6, %g4
-	jmp	div_binary_search.462
-jle_else.1096:
-	mov	%g5, %g4
-	jmp	div_binary_search.462
-
-!==============================
-! args = [%g8]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f15, %dummy]
-! ret type = Unit
-!================================
-print_int.467:
-	jlt	%g8, %g0, jge_else.1098
-	mvhi	%g7, 1525
-	mvlo	%g7, 57600
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 3
-	sti	%g8, %g1, 0
-	subi	%g1, %g1, 8
-	call	div_binary_search.462
-	addi	%g1, %g1, 8
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 0
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.1099
-	addi	%g10, %g0, 0
-	jmp	jle_cont.1100
-jle_else.1099:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.1100:
-	mvhi	%g7, 152
-	mvlo	%g7, 38528
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 4
-	subi	%g1, %g1, 12
-	call	div_binary_search.462
-	addi	%g1, %g1, 12
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 4
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.1101
-	jne	%g10, %g0, jeq_else.1103
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.1104
-jeq_else.1103:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.1104:
-	jmp	jle_cont.1102
-jle_else.1101:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.1102:
-	mvhi	%g7, 15
-	mvlo	%g7, 16960
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 8
-	subi	%g1, %g1, 16
-	call	div_binary_search.462
-	addi	%g1, %g1, 16
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 8
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.1105
-	jne	%g11, %g0, jeq_else.1107
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.1108
-jeq_else.1107:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.1108:
-	jmp	jle_cont.1106
-jle_else.1105:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.1106:
-	mvhi	%g7, 1
-	mvlo	%g7, 34464
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 12
-	subi	%g1, %g1, 20
-	call	div_binary_search.462
-	addi	%g1, %g1, 20
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 12
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.1109
-	jne	%g10, %g0, jeq_else.1111
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.1112
-jeq_else.1111:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.1112:
-	jmp	jle_cont.1110
-jle_else.1109:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.1110:
-	addi	%g7, %g0, 10000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 16
-	subi	%g1, %g1, 24
-	call	div_binary_search.462
-	addi	%g1, %g1, 24
-	addi	%g4, %g0, 10000
-	mul	%g4, %g3, %g4
-	ldi	%g8, %g1, 16
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.1113
-	jne	%g11, %g0, jeq_else.1115
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.1116
-jeq_else.1115:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.1116:
-	jmp	jle_cont.1114
-jle_else.1113:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.1114:
-	addi	%g7, %g0, 1000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 20
-	subi	%g1, %g1, 28
-	call	div_binary_search.462
-	addi	%g1, %g1, 28
-	muli	%g4, %g3, 1000
-	ldi	%g8, %g1, 20
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.1117
-	jne	%g10, %g0, jeq_else.1119
-	addi	%g11, %g0, 0
-	jmp	jeq_cont.1120
-jeq_else.1119:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jeq_cont.1120:
-	jmp	jle_cont.1118
-jle_else.1117:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g11, %g0, 1
-jle_cont.1118:
-	addi	%g7, %g0, 100
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 24
-	subi	%g1, %g1, 32
-	call	div_binary_search.462
-	addi	%g1, %g1, 32
-	muli	%g4, %g3, 100
-	ldi	%g8, %g1, 24
-	sub	%g8, %g8, %g4
-	jlt	%g0, %g3, jle_else.1121
-	jne	%g11, %g0, jeq_else.1123
-	addi	%g10, %g0, 0
-	jmp	jeq_cont.1124
-jeq_else.1123:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jeq_cont.1124:
-	jmp	jle_cont.1122
-jle_else.1121:
-	addi	%g4, %g0, 48
-	add	%g3, %g4, %g3
-	output	%g3
-	addi	%g10, %g0, 1
-jle_cont.1122:
-	addi	%g7, %g0, 10
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	sti	%g8, %g1, 28
-	subi	%g1, %g1, 36
-	call	div_binary_search.462
-	addi	%g1, %g1, 36
-	muli	%g4, %g3, 10
-	ldi	%g8, %g1, 28
-	sub	%g4, %g8, %g4
-	jlt	%g0, %g3, jle_else.1125
-	jne	%g10, %g0, jeq_else.1127
-	addi	%g5, %g0, 0
-	jmp	jeq_cont.1128
-jeq_else.1127:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jeq_cont.1128:
-	jmp	jle_cont.1126
-jle_else.1125:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g5, %g0, 1
-jle_cont.1126:
-	addi	%g3, %g0, 48
-	add	%g3, %g3, %g4
-	output	%g3
-	return
-jge_else.1098:
-	addi	%g3, %g0, 45
-	output	%g3
-	sub	%g8, %g0, %g8
-	jmp	print_int.467
-
-!==============================
-! args = [%g5, %g3, %g4, %g8, %g7, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g11, %g10, %f2, %f15, %f1, %f0, %dummy]
-! ret type = Unit
-!================================
-loop3.469:
-	jlt	%g3, %g0, jge_else.1129
-	slli	%g9, %g5, 2
-	ld	%g11, %g6, %g9
-	slli	%g9, %g4, 2
-	fld	%f2, %g11, %g9
-	slli	%g9, %g5, 2
-	ld	%g10, %g8, %g9
-	slli	%g9, %g3, 2
-	fld	%f1, %g10, %g9
-	slli	%g9, %g3, 2
-	ld	%g10, %g7, %g9
-	slli	%g9, %g4, 2
-	fld	%f0, %g10, %g9
-	fmul	%f0, %f1, %f0
-	fadd	%f0, %f2, %f0
-	slli	%g9, %g4, 2
-	fst	%f0, %g11, %g9
-	subi	%g3, %g3, 1
-	jmp	loop3.469
-jge_else.1129:
-	return
-
-!==============================
-! args = [%g5, %g12, %g4, %g8, %g7, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g12, %g11, %g10, %f2, %f15, %f1, %f0, %dummy]
-! ret type = Unit
-!================================
-loop2.476:
-	jlt	%g4, %g0, jge_else.1131
-	subi	%g3, %g12, 1
-	sti	%g6, %g1, 0
-	sti	%g7, %g1, 4
-	sti	%g8, %g1, 8
-	sti	%g5, %g1, 12
-	sti	%g4, %g1, 16
-	subi	%g1, %g1, 24
-	call	loop3.469
-	addi	%g1, %g1, 24
-	ldi	%g4, %g1, 16
-	subi	%g4, %g4, 1
-	ldi	%g5, %g1, 12
-	ldi	%g8, %g1, 8
-	ldi	%g7, %g1, 4
-	ldi	%g6, %g1, 0
-	jmp	loop2.476
-jge_else.1131:
-	return
-
-!==============================
-! args = [%g5, %g12, %g13, %g8, %g7, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g13, %g12, %g11, %g10, %f2, %f15, %f1, %f0, %dummy]
-! ret type = Unit
-!================================
-loop1.483:
-	jlt	%g5, %g0, jge_else.1133
-	subi	%g4, %g13, 1
-	sti	%g6, %g1, 0
-	sti	%g7, %g1, 4
-	sti	%g8, %g1, 8
-	sti	%g12, %g1, 12
-	sti	%g5, %g1, 16
-	subi	%g1, %g1, 24
-	call	loop2.476
-	addi	%g1, %g1, 24
-	ldi	%g5, %g1, 16
-	subi	%g5, %g5, 1
-	ldi	%g12, %g1, 12
-	ldi	%g8, %g1, 8
-	ldi	%g7, %g1, 4
-	ldi	%g6, %g1, 0
-	jmp	loop1.483
-jge_else.1133:
-	return
-
-!==============================
-! args = [%g3, %g12, %g13, %g8, %g7, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g3, %g27, %g13, %g12, %g11, %g10, %f2, %f15, %f1, %f0, %dummy]
-! ret type = Unit
-!================================
-mul.490:
-	subi	%g5, %g3, 1
-	jmp	loop1.483
-
-!==============================
-! args = [%g5, %g3, %g6]
-! fargs = []
-! use_regs = [%g7, %g6, %g5, %g4, %g3, %g27, %f16, %f15, %f0, %dummy]
-! ret type = Unit
-!================================
-init.498:
-	jlt	%g5, %g0, jge_else.1135
-	sti	%g3, %g1, 0
-	fmov	%f0, %f16
-	subi	%g1, %g1, 8
-	call	min_caml_create_float_array
-	addi	%g1, %g1, 8
-	mov	%g4, %g3
-	slli	%g7, %g5, 2
-	st	%g4, %g6, %g7
-	subi	%g5, %g5, 1
-	ldi	%g3, %g1, 0
-	jmp	init.498
-jge_else.1135:
-	return
-
-!==============================
-! args = [%g6, %g8, %g4]
-! fargs = []
-! use_regs = [%g8, %g7, %g6, %g5, %g4, %g3, %g27, %f16, %f15, %f0, %dummy]
-! ret type = Array(Array(Float))
-!================================
-make.502:
-	mov	%g3, %g6
-	subi	%g1, %g1, 4
-	call	min_caml_create_array
-	addi	%g1, %g1, 4
-	subi	%g5, %g6, 1
-	sti	%g3, %g1, 0
-	mov	%g6, %g3
-	mov	%g3, %g8
-	subi	%g1, %g1, 8
-	call	init.498
-	addi	%g1, %g1, 8
-	ldi	%g3, %g1, 0
-	return
diff --git a/ocore/tmpl/matmul.s b/ocore/tmpl/matmul.s
deleted file mode 100644
index 0acf4bb..0000000
--- a/ocore/tmpl/matmul.s
+++ /dev/null
@@ -1,912 +0,0 @@
-.init_heap_size	608
-FLOAT_ZERO:		! 0.0
-	.long 0x0
-FLOAT_ONE:		! 1.0
-	.long 0x3f800000
-FLOAT_MONE:		! -1.0
-	.long 0xbf800000
-FLOAT_MAGICI:	! 8388608
-	.long 0x800000
-FLOAT_MAGICF:	! 8388608.0
-	.long 0x4b000000
-FLOAT_MAGICFHX:	! 1258291200
-	.long 0x4b000000
-l.1006:	! 12.000000
-	.long	0x41400000
-l.1001:	! 11.000000
-	.long	0x41300000
-l.996:	! 10.000000
-	.long	0x41200000
-l.991:	! 9.000000
-	.long	0x41100000
-l.986:	! 8.000000
-	.long	0x41000000
-l.981:	! 7.000000
-	.long	0x40e00000
-l.976:	! 6.000000
-	.long	0x40c00000
-l.971:	! 5.000000
-	.long	0x40a00000
-l.966:	! 4.000000
-	.long	0x40800000
-l.961:	! 3.000000
-	.long	0x40400000
-l.953:	! 1.000000
-	.long	0x3f800000
-l.949:	! 0.000000
-	.long	0x0
-l.947:	! 2.000000
-	.long	0x40000000
-	jmp	min_caml_start
-
-!#####################################################################
-!
-! 		↓　ここから lib_asm.s
-!
-!#####################################################################
-
-! * create_array
-min_caml_create_array:
-	slli %g3, %g3, 2
-	add %g5, %g3, %g2
-	mov %g3, %g2
-CREATE_ARRAY_LOOP:
-	jlt %g5, %g2, CREATE_ARRAY_END
-	jeq %g5, %g2, CREATE_ARRAY_END
-	sti %g4, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_ARRAY_LOOP
-CREATE_ARRAY_END:
-	return
-
-! * create_float_array
-min_caml_create_float_array:
-	slli %g3, %g3, 2
-	add %g4, %g3, %g2
-	mov %g3, %g2
-CREATE_FLOAT_ARRAY_LOOP:
-	jlt %g4, %g2, CREATE_FLOAT_ARRAY_END
-	jeq %g4, %g2, CREATE_FLOAT_ARRAY_END
-	fsti %f0, %g2, 0
-	addi %g2, %g2, 4
-	jmp CREATE_FLOAT_ARRAY_LOOP
-CREATE_FLOAT_ARRAY_END:
-	return
-
-! * floor		%f0 + MAGICF - MAGICF
-min_caml_floor:
-	fmov %f1, %f0
-	! %f4 = 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f4, %g3, 0
-	fjlt %f4, %f0, FLOOR_POSITIVE	! if (%f4 <= %f0) goto FLOOR_PISITIVE
-	fjeq %f4, %f0, FLOOR_POSITIVE
-FLOOR_NEGATIVE:
-	fneg %f0, %f0
-	setL %g3, FLOAT_MAGICF
-	! %f2 = FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fjeq %f0, %f2, FLOOR_NEGATIVE_MAIN
-	fneg %f0, %f0
-	return
-FLOOR_NEGATIVE_MAIN:
-	fadd %f0, %f0, %f2
-	fsub %f0, %f0, %f2
-	fneg %f1, %f1
-	fjlt %f1, %f0, FLOOR_RET2
-	fjeq %f1, %f0, FLOOR_RET2
-	fadd %f0, %f0, %f2
-	! %f3 = 1.0
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fadd %f0, %f0, %f3
-	fsub %f0, %f0, %f2
-	fneg %f0, %f0
-	return
-FLOOR_POSITIVE:
-	setL %g3, FLOAT_MAGICF
-	fldi %f2, %g3, 0
-	fjlt %f0, %f2, FLOOR_POSITIVE_MAIN
-	fjeq %f0, %f2, FLOOR_POSITIVE_MAIN
-	return
-FLOOR_POSITIVE_MAIN:
-	fmov %f1, %f0
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fsub %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g4, %g1, 0
-	fjlt %f0, %f1, FLOOR_RET
-	fjeq %f0, %f1, FLOOR_RET
-	setL %g3, FLOAT_ONE
-	fldi %f3, %g3, 0
-	fsub %f0, %f0, %f3
-FLOOR_RET:
-	return
-FLOOR_RET2:
-	fneg %f0, %f0
-	return
-	
-min_caml_ceil:
-	fneg %f0, %f0
-	call min_caml_floor
-	fneg %f0, %f0
-	return
-
-! * float_of_int
-min_caml_float_of_int:
-	jlt %g0, %g3, ITOF_MAIN		! if (%g0 <= %g3) goto ITOF_MAIN
-	jeq %g0, %g3, ITOF_MAIN
-	sub %g3, %g0, %g3
-	call ITOF_MAIN
-	fneg %f0, %f0
-	return
-ITOF_MAIN:
-
-	! %f1 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	! %g5 <= FLOAT_MAGICI
-
-	setL %g5, FLOAT_MAGICF
-	fldi %f1, %g5, 0
-	setL %g5, FLOAT_MAGICFHX
-	ldi %g4, %g5, 0
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	jlt %g5, %g3, ITOF_BIG
-	jeq %g5, %g3, ITOF_BIG
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	return
-ITOF_BIG:
-	setL %g4, FLOAT_ZERO
-	fldi %f2, %g4, 0
-ITOF_LOOP:
-	sub %g3, %g3, %g5
-	fadd %f2, %f2, %f1
-	jlt %g5, %g3, ITOF_LOOP
-	jeq %g5, %g3, ITOF_LOOP
-	add %g3, %g3, %g4
-	sti %g3, %g1, 0
-	fldi %f0, %g1, 0
-	fsub %f0, %f0, %f1
-	fadd %f0, %f0, %f2
-	return
-
-! * int_of_float
-min_caml_int_of_float:
-	! %f1 <= 0.0
-	setL %g3, FLOAT_ZERO
-	fldi %f1, %g3, 0
-	fjlt %f1, %f0, FTOI_MAIN			! if (0.0 <= %f0) goto FTOI_MAIN
-	fjeq %f1, %f0, FTOI_MAIN
-	fneg %f0, %f0
-	call FTOI_MAIN
-	sub %g3, %g0, %g3
-	return
-FTOI_MAIN:
-	call min_caml_floor
-	! %f2 <= FLOAT_MAGICF
-	! %g4 <= FLOAT_MAGICFHX
-	setL %g4, FLOAT_MAGICF
-	fldi %f2, %g4, 0
-	setL %g4, FLOAT_MAGICFHX
-	ldi %g4, %g4, 0
-	fjlt %f2, %f0, FTOI_BIG		! if (MAGICF <= %f0) goto FTOI_BIG
-	fjeq %f2, %f0, FTOI_BIG
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g3, %g1, 0
-	sub %g3, %g3, %g4
-	return
-FTOI_BIG:
-	setL %g5, FLOAT_MAGICI
-	ldi %g5, %g5, 0
-	mov %g3, %g0
-FTOI_LOOP:
-	fsub %f0, %f0, %f2
-	add %g3, %g3, %g5
-	fjlt %f2, %f0, FTOI_LOOP
-	fjeq %f2, %f0, FTOI_LOOP
-	fadd %f0, %f0, %f2
-	fsti %f0, %g1, 0
-	ldi %g5, %g1, 0
-	sub %g5, %g5, %g4
-	add %g3, %g5, %g3
-	return
-	
-! * truncate
-min_caml_truncate:
-	jmp min_caml_int_of_float
-
-
-!#####################################################################
-!
-! 		↑　ここまで lib_asm.s
-!
-!#####################################################################
-min_caml_start:
-	mov	%g31, %g1
-	subi	%g1, %g1, 48
-	addi	%g28, %g0, 1
-	addi	%g29, %g0, -1
-	setL %g27, l.949
-	fldi	%f16, %g27, 0
-	setL %g27, l.996
-	fldi	%f17, %g27, 0
-	setL %g27, l.991
-	fldi	%f18, %g27, 0
-	setL %g27, l.986
-	fldi	%f19, %g27, 0
-	setL %g27, l.981
-	fldi	%f20, %g27, 0
-	setL %g27, l.976
-	fldi	%f21, %g27, 0
-	setL %g27, l.971
-	fldi	%f22, %g27, 0
-	setL %g27, l.966
-	fldi	%f23, %g27, 0
-	setL %g27, l.961
-	fldi	%f24, %g27, 0
-	setL %g27, l.953
-	fldi	%f25, %g27, 0
-	setL %g27, l.947
-	fldi	%f26, %g27, 0
-	setL %g27, l.1006
-	fldi	%f27, %g27, 0
-	setL %g27, l.1001
-	fldi	%f28, %g27, 0
-	fmov	%f0, %f26
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 4
-	fsti	%f0, %g1, 0
-	subi	%g1, %g1, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 8
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 12
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 16
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 1
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 20
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 1
-	addi	%g4, %g0, 0
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 24
-	call	min_caml_create_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 0
-	fmov	%f0, %f16
-	sti	%g2, %g31, 44
-	subi	%g2, %g31, 28
-	call	min_caml_create_float_array
-	ldi	%g2, %g31, 44
-	addi	%g3, %g0, 2
-	addi	%g4, %g0, 3
-	call	make.477
-	addi	%g1, %g1, 8
-	sti	%g3, %g31, 32
-	addi	%g4, %g0, 3
-	addi	%g5, %g0, 2
-	sti	%g3, %g1, 4
-	mov	%g3, %g4
-	mov	%g4, %g5
-	subi	%g1, %g1, 12
-	call	make.477
-	addi	%g1, %g1, 12
-	sti	%g3, %g31, 36
-	addi	%g4, %g0, 2
-	addi	%g5, %g0, 2
-	sti	%g3, %g1, 8
-	mov	%g3, %g4
-	mov	%g4, %g5
-	subi	%g1, %g1, 16
-	call	make.477
-	addi	%g1, %g1, 16
-	mov	%g8, %g3
-	sti	%g8, %g31, 40
-	ldi	%g6, %g1, 4
-	ldi	%g3, %g6, 0
-	fmov	%f0, %f25
-	fsti	%f0, %g3, 0
-	ldi	%g3, %g6, 0
-	fldi	%f0, %g1, 0
-	fsti	%f0, %g3, -4
-	ldi	%g3, %g6, 0
-	fmov	%f0, %f24
-	fsti	%f0, %g3, -8
-	ldi	%g3, %g6, -4
-	fmov	%f0, %f23
-	fsti	%f0, %g3, 0
-	ldi	%g3, %g6, -4
-	fmov	%f0, %f22
-	fsti	%f0, %g3, -4
-	ldi	%g3, %g6, -4
-	fmov	%f0, %f21
-	fsti	%f0, %g3, -8
-	ldi	%g7, %g1, 8
-	ldi	%g3, %g7, 0
-	fmov	%f0, %f20
-	fsti	%f0, %g3, 0
-	ldi	%g3, %g7, 0
-	fmov	%f0, %f19
-	fsti	%f0, %g3, -4
-	ldi	%g3, %g7, -4
-	fmov	%f0, %f18
-	fsti	%f0, %g3, 0
-	ldi	%g3, %g7, -4
-	fmov	%f0, %f17
-	fsti	%f0, %g3, -4
-	ldi	%g3, %g7, -8
-	fmov	%f0, %f28
-	fsti	%f0, %g3, 0
-	ldi	%g3, %g7, -8
-	fmov	%f0, %f27
-	fsti	%f0, %g3, -4
-	addi	%g3, %g0, 2
-	addi	%g4, %g0, 3
-	addi	%g5, %g0, 2
-	sti	%g8, %g1, 12
-	subi	%g1, %g1, 20
-	call	mul.469
-	addi	%g1, %g1, 20
-	ldi	%g3, %g1, 12
-	ldi	%g4, %g3, 0
-	fldi	%f0, %g4, 0
-	subi	%g1, %g1, 20
-	call	min_caml_truncate
-	call	print_int.467
-	addi	%g1, %g1, 20
-	sti	%g3, %g1, 20
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 20
-	ldi	%g3, %g1, 12
-	ldi	%g4, %g3, 0
-	fldi	%f0, %g4, -4
-	subi	%g1, %g1, 20
-	call	min_caml_truncate
-	call	print_int.467
-	addi	%g1, %g1, 20
-	sti	%g3, %g1, 20
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 20
-	ldi	%g3, %g1, 12
-	ldi	%g4, %g3, -4
-	fldi	%f0, %g4, 0
-	subi	%g1, %g1, 20
-	call	min_caml_truncate
-	call	print_int.467
-	addi	%g1, %g1, 20
-	sti	%g3, %g1, 20
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 20
-	ldi	%g3, %g1, 12
-	ldi	%g3, %g3, -4
-	fldi	%f0, %g3, -4
-	subi	%g1, %g1, 20
-	call	min_caml_truncate
-	call	print_int.467
-	addi	%g1, %g1, 20
-	sti	%g3, %g1, 20
-	addi	%g3, %g0, 10
-	output	%g3
-	ldi	%g3, %g1, 20
-	halt
-
-!==============================
-! args = [%g3, %g4, %g5, %g6]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Int
-!================================
-div_binary_search.462:
-	add	%g7, %g5, %g6
-	srli	%g7, %g7, 1
-	mul	%g8, %g7, %g4
-	sub	%g9, %g6, %g5
-	jlt	%g28, %g9, jle_else.1153
-	mov	%g3, %g5
-	return
-jle_else.1153:
-	jlt	%g8, %g3, jle_else.1154
-	jne	%g8, %g3, jeq_else.1155
-	mov	%g3, %g7
-	return
-jeq_else.1155:
-	mov	%g6, %g7
-	jmp	div_binary_search.462
-jle_else.1154:
-	mov	%g5, %g7
-	jmp	div_binary_search.462
-
-!==============================
-! args = [%g3]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Unit
-!================================
-print_int.467:
-	jlt	%g3, %g0, jge_else.1156
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 3
-	sti	%g3, %g1, 0
-	subi	%g1, %g1, 8
-	call	div_binary_search.462
-	addi	%g1, %g1, 8
-	mvhi	%g4, 1525
-	mvlo	%g4, 57600
-	mul	%g4, %g3, %g4
-	ldi	%g5, %g1, 0
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 4
-	jlt	%g0, %g3, jle_else.1157
-	addi	%g3, %g0, 0
-	jmp	jle_cont.1158
-jle_else.1157:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.1158:
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 4
-	sti	%g3, %g1, 8
-	mov	%g3, %g7
-	subi	%g1, %g1, 16
-	call	div_binary_search.462
-	addi	%g1, %g1, 16
-	mvhi	%g4, 152
-	mvlo	%g4, 38528
-	mul	%g4, %g3, %g4
-	ldi	%g5, %g1, 4
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 12
-	jlt	%g0, %g3, jle_else.1159
-	ldi	%g5, %g1, 8
-	jne	%g5, %g0, jeq_else.1161
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.1162
-jeq_else.1161:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.1162:
-	jmp	jle_cont.1160
-jle_else.1159:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.1160:
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 12
-	sti	%g3, %g1, 16
-	mov	%g3, %g7
-	subi	%g1, %g1, 24
-	call	div_binary_search.462
-	addi	%g1, %g1, 24
-	mvhi	%g4, 15
-	mvlo	%g4, 16960
-	mul	%g4, %g3, %g4
-	ldi	%g5, %g1, 12
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 20
-	jlt	%g0, %g3, jle_else.1163
-	ldi	%g5, %g1, 16
-	jne	%g5, %g0, jeq_else.1165
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.1166
-jeq_else.1165:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.1166:
-	jmp	jle_cont.1164
-jle_else.1163:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.1164:
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 20
-	sti	%g3, %g1, 24
-	mov	%g3, %g7
-	subi	%g1, %g1, 32
-	call	div_binary_search.462
-	addi	%g1, %g1, 32
-	mvhi	%g4, 1
-	mvlo	%g4, 34464
-	mul	%g4, %g3, %g4
-	ldi	%g5, %g1, 20
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 28
-	jlt	%g0, %g3, jle_else.1167
-	ldi	%g5, %g1, 24
-	jne	%g5, %g0, jeq_else.1169
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.1170
-jeq_else.1169:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.1170:
-	jmp	jle_cont.1168
-jle_else.1167:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.1168:
-	addi	%g4, %g0, 10000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 28
-	sti	%g3, %g1, 32
-	mov	%g3, %g7
-	subi	%g1, %g1, 40
-	call	div_binary_search.462
-	addi	%g1, %g1, 40
-	addi	%g4, %g0, 10000
-	mul	%g4, %g3, %g4
-	ldi	%g5, %g1, 28
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 36
-	jlt	%g0, %g3, jle_else.1171
-	ldi	%g5, %g1, 32
-	jne	%g5, %g0, jeq_else.1173
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.1174
-jeq_else.1173:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.1174:
-	jmp	jle_cont.1172
-jle_else.1171:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.1172:
-	addi	%g4, %g0, 1000
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 36
-	sti	%g3, %g1, 40
-	mov	%g3, %g7
-	subi	%g1, %g1, 48
-	call	div_binary_search.462
-	addi	%g1, %g1, 48
-	muli	%g4, %g3, 1000
-	ldi	%g5, %g1, 36
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 44
-	jlt	%g0, %g3, jle_else.1175
-	ldi	%g5, %g1, 40
-	jne	%g5, %g0, jeq_else.1177
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.1178
-jeq_else.1177:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.1178:
-	jmp	jle_cont.1176
-jle_else.1175:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.1176:
-	addi	%g4, %g0, 100
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 44
-	sti	%g3, %g1, 48
-	mov	%g3, %g7
-	subi	%g1, %g1, 56
-	call	div_binary_search.462
-	addi	%g1, %g1, 56
-	muli	%g4, %g3, 100
-	ldi	%g5, %g1, 44
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 52
-	jlt	%g0, %g3, jle_else.1179
-	ldi	%g5, %g1, 48
-	jne	%g5, %g0, jeq_else.1181
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.1182
-jeq_else.1181:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.1182:
-	jmp	jle_cont.1180
-jle_else.1179:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.1180:
-	addi	%g4, %g0, 10
-	addi	%g5, %g0, 0
-	addi	%g6, %g0, 10
-	ldi	%g7, %g1, 52
-	sti	%g3, %g1, 56
-	mov	%g3, %g7
-	subi	%g1, %g1, 64
-	call	div_binary_search.462
-	addi	%g1, %g1, 64
-	muli	%g4, %g3, 10
-	ldi	%g5, %g1, 52
-	sub	%g4, %g5, %g4
-	sti	%g4, %g1, 60
-	jlt	%g0, %g3, jle_else.1183
-	ldi	%g5, %g1, 56
-	jne	%g5, %g0, jeq_else.1185
-	addi	%g3, %g0, 0
-	jmp	jeq_cont.1186
-jeq_else.1185:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jeq_cont.1186:
-	jmp	jle_cont.1184
-jle_else.1183:
-	addi	%g5, %g0, 48
-	add	%g3, %g5, %g3
-	output	%g3
-	addi	%g3, %g0, 1
-jle_cont.1184:
-	addi	%g3, %g0, 48
-	ldi	%g4, %g1, 60
-	add	%g3, %g3, %g4
-	output	%g3
-	return
-jge_else.1156:
-	addi	%g4, %g0, 45
-	sti	%g3, %g1, 0
-	output	%g4
-	ldi	%g3, %g1, 0
-	sub	%g3, %g0, %g3
-	jmp	print_int.467
-
-!==============================
-! args = [%g3]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Unit
-!================================
-loop3.608:
-	ldi	%g4, %g30, -20
-	ldi	%g5, %g30, -16
-	ldi	%g6, %g30, -12
-	ldi	%g7, %g30, -8
-	ldi	%g8, %g30, -4
-	jlt	%g3, %g0, jge_else.1187
-	slli	%g9, %g5, 2
-	ld	%g6, %g6, %g9
-	slli	%g9, %g4, 2
-	fld	%f0, %g6, %g9
-	slli	%g5, %g5, 2
-	ld	%g5, %g8, %g5
-	slli	%g8, %g3, 2
-	fld	%f1, %g5, %g8
-	slli	%g5, %g3, 2
-	ld	%g5, %g7, %g5
-	slli	%g7, %g4, 2
-	fld	%f2, %g5, %g7
-	fmul	%f1, %f1, %f2
-	fadd	%f0, %f0, %f1
-	slli	%g4, %g4, 2
-	fst	%f0, %g6, %g4
-	subi	%g3, %g3, 1
-	ldi	%g27, %g30, 0
-	b	%g27
-jge_else.1187:
-	return
-
-!==============================
-! args = [%g3]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Unit
-!================================
-loop2.601:
-	ldi	%g4, %g30, -20
-	ldi	%g5, %g30, -16
-	ldi	%g6, %g30, -12
-	ldi	%g7, %g30, -8
-	ldi	%g8, %g30, -4
-	jlt	%g3, %g0, jge_else.1189
-	mov	%g9, %g2
-	addi	%g2, %g2, 24
-	setL %g10, loop3.608
-	sti	%g10, %g9, 0
-	sti	%g3, %g9, -20
-	sti	%g5, %g9, -16
-	sti	%g6, %g9, -12
-	sti	%g7, %g9, -8
-	sti	%g8, %g9, -4
-	subi	%g4, %g4, 1
-	sti	%g30, %g1, 0
-	sti	%g3, %g1, 4
-	mov	%g3, %g4
-	mov	%g30, %g9
-	ldi	%g27, %g30, 0
-	subi	%g1, %g1, 12
-	callR	%g27
-	addi	%g1, %g1, 12
-	ldi	%g3, %g1, 4
-	subi	%g3, %g3, 1
-	ldi	%g30, %g1, 0
-	ldi	%g27, %g30, 0
-	b	%g27
-jge_else.1189:
-	return
-
-!==============================
-! args = [%g3]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Unit
-!================================
-loop1.597:
-	ldi	%g4, %g30, -20
-	ldi	%g5, %g30, -16
-	ldi	%g6, %g30, -12
-	ldi	%g7, %g30, -8
-	ldi	%g8, %g30, -4
-	jlt	%g3, %g0, jge_else.1191
-	mov	%g9, %g2
-	addi	%g2, %g2, 24
-	setL %g10, loop2.601
-	sti	%g10, %g9, 0
-	sti	%g5, %g9, -20
-	sti	%g3, %g9, -16
-	sti	%g6, %g9, -12
-	sti	%g7, %g9, -8
-	sti	%g8, %g9, -4
-	subi	%g4, %g4, 1
-	sti	%g30, %g1, 0
-	sti	%g3, %g1, 4
-	mov	%g3, %g4
-	mov	%g30, %g9
-	ldi	%g27, %g30, 0
-	subi	%g1, %g1, 12
-	callR	%g27
-	addi	%g1, %g1, 12
-	ldi	%g3, %g1, 4
-	subi	%g3, %g3, 1
-	ldi	%g30, %g1, 0
-	ldi	%g27, %g30, 0
-	b	%g27
-jge_else.1191:
-	return
-
-!==============================
-! args = [%g3, %g4, %g5, %g6, %g7, %g8]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Unit
-!================================
-mul.469:
-	mov	%g30, %g2
-	addi	%g2, %g2, 24
-	setL %g9, loop1.597
-	sti	%g9, %g30, 0
-	sti	%g5, %g30, -20
-	sti	%g4, %g30, -16
-	sti	%g8, %g30, -12
-	sti	%g7, %g30, -8
-	sti	%g6, %g30, -4
-	subi	%g3, %g3, 1
-	ldi	%g27, %g30, 0
-	b	%g27
-
-!==============================
-! args = [%g3]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Unit
-!================================
-init.585:
-	ldi	%g4, %g30, -8
-	ldi	%g5, %g30, -4
-	jlt	%g3, %g0, jge_else.1193
-	fmov	%f0, %f16
-	sti	%g30, %g1, 0
-	sti	%g5, %g1, 4
-	sti	%g3, %g1, 8
-	mov	%g3, %g4
-	subi	%g1, %g1, 16
-	call	min_caml_create_float_array
-	addi	%g1, %g1, 16
-	ldi	%g4, %g1, 8
-	slli	%g5, %g4, 2
-	ldi	%g6, %g1, 4
-	st	%g3, %g6, %g5
-	subi	%g3, %g4, 1
-	ldi	%g30, %g1, 0
-	ldi	%g27, %g30, 0
-	b	%g27
-jge_else.1193:
-	return
-
-!==============================
-! args = [%g3, %g4]
-! fargs = []
-! use_regs = [%g9, %g8, %g7, %g6, %g5, %g4, %g30, %g3, %g27, %g26, %g25, %g24, %g23, %g22, %g21, %g20, %g19, %g18, %g17, %g16, %g15, %g14, %g13, %g12, %g11, %g10, %f9, %f8, %f7, %f6, %f5, %f4, %f3, %f2, %f15, %f14, %f13, %f12, %f11, %f10, %f1, %f0]
-! ret type = Array(Array(Float))
-!================================
-make.477:
-	subi	%g5, %g31, 28
-	sti	%g3, %g1, 0
-	sti	%g4, %g1, 4
-	mov	%g4, %g5
-	subi	%g1, %g1, 12
-	call	min_caml_create_array
-	addi	%g1, %g1, 12
-	mov	%g30, %g2
-	addi	%g2, %g2, 12
-	setL %g4, init.585
-	sti	%g4, %g30, 0
-	ldi	%g4, %g1, 4
-	sti	%g4, %g30, -8
-	sti	%g3, %g30, -4
-	ldi	%g4, %g1, 0
-	subi	%g4, %g4, 1
-	sti	%g3, %g1, 8
-	mov	%g3, %g4
-	ldi	%g27, %g30, 0
-	subi	%g1, %g1, 16
-	callR	%g27
-	addi	%g1, %g1, 16
-	ldi	%g3, %g1, 8
-	return
diff --git a/ocore/tmpl/matmul.txt b/ocore/tmpl/matmul.txt
deleted file mode 100644
index 9a0a974..0000000
--- a/ocore/tmpl/matmul.txt
+++ /dev/null
@@ -1,16 +0,0 @@
-output ./test.lst
-simulate ./test
-
-     fld: 0.012016         36
-     fst: 0.004005         12
-      ld: 0.012016         36
-      st: 0.002336          7
-     ldi: 0.119159        357
-     sti: 0.062417        187
-    fldi: 0.011348         34
-    fsti: 0.013685         41
-
-
-CPU Simulator Results
-cnt:2996
-g1_min: 524136(dec)
diff --git a/ocore/tmpl/mem_acc.tmp b/ocore/tmpl/mem_acc.tmp
index 807de52..a7f10d1 100644
--- a/ocore/tmpl/mem_acc.tmp
+++ b/ocore/tmpl/mem_acc.tmp
@@ -10,8 +10,7 @@ architecture behavior of mem_acc is
 	signal io_read : std_logic := '0';
 	signal io_en : std_logic;
 
-	signal xwa : std_logic;
-	signal long_flag : std_logic;
+	signal xwa,pre_xwa : std_logic;
 
 
 begin
@@ -22,23 +21,18 @@ begin
 
 	DATA_OUT <= IO_IN when io_read='1' else SRAM_ZD;
 
-	IO_WR <= "11" when io_write='1' and CLK_EX_DLY='1' and long_flag='1' else
-			 "10" when io_write='1' and CLK_EX_DLY='1' and long_flag='0' else 
-			 "00";
-
-	IO_RD <= "11" when io_read ='1' and CLK_EX_DLY='1' and long_flag='1' else 
-			 "10" when io_read ='1' and CLK_EX_DLY='1' and long_flag='0' else 
-			 "00";
+	IO_WR <= io_write and CLK_EX_DLY;
+	IO_RD <= io_read and CLK_EX_DLY;
 
 	process(CLK_EX_DLY)
 	begin
 		if rising_edge(CLK_EX_DLY) then
 			io_read  <= io_en and (not RAM_WEN);
 			io_write <= io_en and RAM_WEN;
-			long_flag <= ADDR(0); --
 
 			SRAM_ZA <= ${oc.mem_acc_sram_addr()};
 			SRAM_XWA <= xwa;
+			pre_xwa <= xwa;
 
 			if io_en='1' and RAM_WEN='1' then
 				IO_OUT <= DATA_IN;
@@ -50,7 +44,7 @@ begin
 	process(CLK_MA)
 	begin
 		if rising_edge(CLK_MA) then
-			if xwa='0' then -- write
+			if pre_xwa='0' then -- write
 				SRAM_ZD <= DATA_IN;
 			else
 				SRAM_ZD <= (others=>'Z');
diff --git a/ocore/tmpl/mem_acc_entity.tmp b/ocore/tmpl/mem_acc_entity.tmp
index bf9b93d..44bbdaa 100644
--- a/ocore/tmpl/mem_acc_entity.tmp
+++ b/ocore/tmpl/mem_acc_entity.tmp
@@ -7,8 +7,8 @@
 		DATA_IN		: in	${oc.reg_t()};
 		DATA_OUT	: out	${oc.reg_t()};
 		IO_IN		: in	${oc.io_bus_t()};
-		IO_WR		: out	${oc.io_flag_t()} := "00";
-		IO_RD		: out	${oc.io_flag_t()} := "00";
+		IO_WR		: out	${oc.io_flag_t()} := '0';
+		IO_RD		: out	${oc.io_flag_t()} := '0';
 		IO_OUT	: out	${oc.io_bus_t()};
 		SRAM_ZA	:	out std_logic_vector(19 downto 0);
 		SRAM_XWA:	out std_logic := '1';
diff --git a/ocore/tmpl/skeleton_io_dev.tmp b/ocore/tmpl/skeleton_io_dev.tmp
index 2f61daf..a15efa0 100644
--- a/ocore/tmpl/skeleton_io_dev.tmp
+++ b/ocore/tmpl/skeleton_io_dev.tmp
@@ -8,43 +8,32 @@ architecture RTL of io_dev is
 	component u232c is
 <%include file="u232c_entity.tmp"/>
 	end component;
+
 	subtype buf_rec_t is std_logic_vector(7 downto 0);
 
-	-- (4 * 4096) = 16384 bytes
-	type sendbuf_t is array (0 to 4095) of buf_rec_t;
-	signal sendbuf0 : sendbuf_t;
-	signal sendbuf1 : sendbuf_t;
-	signal sendbuf2 : sendbuf_t;
-	signal sendbuf3 : sendbuf_t;
+	type sendbuf_t is array (0 to 16383) of buf_rec_t;
+	signal sendbuf : sendbuf_t;
 	signal send_head	: std_logic_vector(13 downto 0) := (others=>'0');
 	signal send_tail	: std_logic_vector(13 downto 0) := (others=>'0');
-	signal sheadi	: integer range 0 to 4095;
-	signal staili	: integer range 0 to 4095;
+
 	signal send_empty : std_logic := '0';
 
-	-- (4 * 512) = 2048 bytes
-	type recvbuf_t is array (0 to 511) of buf_rec_t;
 	signal recv_head	: std_logic_vector(10 downto 0) := (others=>'0');
 	signal recv_tail	: std_logic_vector(10 downto 0) := ${oc.io_rtail()};
-	signal rheadi	: integer range 0 to 511;
-	signal rtaili	: integer range 0 to 511;
-	signal recvbuf0 : recvbuf_t;
-	signal recvbuf1 : recvbuf_t;
-	signal recvbuf2 : recvbuf_t;
-	signal recvbuf3 : recvbuf_t;
-	--signal recvbuf : recvbuf_t := (
-##<%include file="contest_sld.txt"/>
-	--);
+	type recvbuf_t is array (0 to 2047) of buf_rec_t;
 
+	--signal recvbuf : recvbuf_t;
+	signal recvbuf : recvbuf_t := (
+<%include file="contest_sld.txt"/>
+	);
 	signal u232c_o : std_logic_vector(7 downto 0);
 	signal u232c_i : std_logic_vector(7 downto 0);
 
-	signal send_go : std_logic := '0';
+	signal send_go : std_logic;
 	signal send_busy : std_logic := '0';
+
 	signal recv_ready : std_logic;
 
-	signal nyetb : std_logic;
-	signal nyetw : std_logic;
 	
 begin
 	
@@ -55,66 +44,18 @@ begin
 ------------------------------------------------------------------------
 ---- send
 ------------------------------------------------------------------------
-	sheadi <= conv_integer(send_head(13 downto 2));
-	staili <= conv_integer(send_tail(13 downto 2));
-
 	send_empty <= '1' when send_head=send_tail else '0';
 	send: process(CLK)
 	begin
 		if rising_edge(CLK) then
-			if CPU_WR="10" then
+			if CPU_WR='1' then
+				sendbuf(conv_integer(send_tail)) <= CPU_OUT(7 downto 0);
 				send_tail <= send_tail + 1;
-				case send_tail(1 downto 0) is
-					when "00" =>
-						sendbuf0(staili) <= CPU_OUT(7 downto 0);
-					when "01" =>
-						sendbuf1(staili) <= CPU_OUT(7 downto 0);
-					when "10" =>
-						sendbuf2(staili) <= CPU_OUT(7 downto 0);
-					when "11" =>
-						sendbuf3(staili) <= CPU_OUT(7 downto 0);
-					when others =>
-				end case;
-			elsif CPU_WR="11" then
-				send_tail <= send_tail + 4;
-				case send_tail(1 downto 0) is
-					when "00" =>
-						sendbuf0(staili) <= CPU_OUT(7 downto 0);
-						sendbuf1(staili) <= CPU_OUT(15 downto 8);
-						sendbuf2(staili) <= CPU_OUT(23 downto 16);
-						sendbuf3(staili) <= CPU_OUT(31 downto 24);
-					when "01" =>
-						sendbuf0(staili+1) <= CPU_OUT(7 downto 0);
-						sendbuf1(staili)   <= CPU_OUT(15 downto 8);
-						sendbuf2(staili)   <= CPU_OUT(23 downto 16);
-						sendbuf3(staili)   <= CPU_OUT(31 downto 24);
-					when "10" =>
-						sendbuf0(staili+1) <= CPU_OUT(7 downto 0);
-						sendbuf1(staili+1) <= CPU_OUT(15 downto 8);
-						sendbuf2(staili)   <= CPU_OUT(23 downto 16);
-						sendbuf3(staili)   <= CPU_OUT(31 downto 24);
-					when "11" =>
-						sendbuf0(staili+1) <= CPU_OUT(7 downto 0);
-						sendbuf1(staili+1) <= CPU_OUT(15 downto 8);
-						sendbuf2(staili+1) <= CPU_OUT(23 downto 16);
-						sendbuf3(staili)   <= CPU_OUT(31 downto 24);
-					when others =>
-				end case;
 			end if;
 
 			if send_busy='0' and send_go='0' then
-				case send_head(1 downto 0) is
-					when "00" =>
-						u232c_o <= sendbuf0(sheadi);
-					when "01" =>
-						u232c_o <= sendbuf1(sheadi);
-					when "10" =>
-						u232c_o <= sendbuf2(sheadi);
-					when "11" =>
-						u232c_o <= sendbuf3(sheadi);
-					when others =>
-				end case;
-				send_go <= not send_empty;
+				u232c_o <= sendbuf(conv_integer(send_head));
+				send_go<=not send_empty;
 				send_head <= send_head + conv_integer(not send_empty);
 			else
 				send_go<='0';
@@ -125,73 +66,17 @@ begin
 ------------------------------------------------------------------------
 ---- recv
 ------------------------------------------------------------------------
-	rheadi <= conv_integer(recv_head(10 downto 2));
-	rtaili <= conv_integer(recv_tail(10 downto 2));
-
-	NYET(1)	<= nyetw;
-	NYET(0)	<= nyetb;
-	nyetw	<= '1' when 
-					  recv_head   =recv_tail or
-					 (recv_head+1)=recv_tail or
-					 (recv_head+2)=recv_tail or
-					 (recv_head+3)=recv_tail
-				   else '0';
-	nyetb	<= '1' when recv_head=recv_tail else '0';
+	NYET <= '1' when recv_head=recv_tail else '0';
 	receive : process(CLK)
 	begin
 		if rising_edge(CLK) then
-			if CPU_RD="10" then
+			if CPU_RD='1' then
+				CPU_IN <= x"000000"&recvbuf(conv_integer(recv_head));
 				recv_head <= recv_head+1;
-				case recv_head(1 downto 0) is
-					when "00" =>
-						CPU_IN <= x"000000"&recvbuf0(rheadi);
-					when "01" =>
-						CPU_IN <= x"000000"&recvbuf1(rheadi);
-					when "10" =>
-						CPU_IN <= x"000000"&recvbuf2(rheadi);
-					when "11" =>
-						CPU_IN <= x"000000"&recvbuf3(rheadi);
-					when others =>
-				end case;
-			elsif CPU_RD="11" then
-				recv_head <= recv_head+4;
-				case recv_head(1 downto 0) is
-					when "00" =>
-						CPU_IN(7  downto 0)  <= recvbuf0(rheadi);
-						CPU_IN(15 downto 8)  <= recvbuf1(rheadi);
-						CPU_IN(23 downto 16) <= recvbuf2(rheadi);
-						CPU_IN(31 downto 24) <= recvbuf3(rheadi);
-					when "01" =>
-						CPU_IN(7  downto 0)  <= recvbuf1(rheadi);
-						CPU_IN(15 downto 8)  <= recvbuf2(rheadi);
-						CPU_IN(23 downto 16) <= recvbuf3(rheadi);
-						CPU_IN(31 downto 24) <= recvbuf0(rheadi+1);
-					when "10" =>
-						CPU_IN(7  downto 0)  <= recvbuf2(rheadi);
-						CPU_IN(15 downto 8)  <= recvbuf3(rheadi);
-						CPU_IN(23 downto 16) <= recvbuf0(rheadi+1);
-						CPU_IN(31 downto 24) <= recvbuf1(rheadi+1);
-					when "11" =>
-						CPU_IN(7  downto 0)  <= recvbuf3(rheadi);
-						CPU_IN(15 downto 8)  <= recvbuf0(rheadi+1);
-						CPU_IN(23 downto 16) <= recvbuf1(rheadi+1);
-						CPU_IN(31 downto 24) <= recvbuf2(rheadi+1);
-					when others =>
-				end case;
 			end if;
 
 			if recv_ready='1' then
-				case recv_tail(1 downto 0) is
-					when "00" =>
-						recvbuf0(rtaili)<=u232c_i;
-					when "01" =>
-						recvbuf1(rtaili)<=u232c_i;
-					when "10" =>
-						recvbuf2(rtaili)<=u232c_i;
-					when "11" =>
-						recvbuf3(rtaili)<=u232c_i;
-					when others =>
-				end case;
+				recvbuf(conv_integer(recv_tail))<=u232c_i;
 				recv_tail <= recv_tail+1;
 			end if;
 		end if;
diff --git a/ocore/tmpl/skeleton_top.tmp b/ocore/tmpl/skeleton_top.tmp
index daa4ce3..8938440 100644
--- a/ocore/tmpl/skeleton_top.tmp
+++ b/ocore/tmpl/skeleton_top.tmp
@@ -44,10 +44,7 @@ ${next.body()}
 
 	cpunit : core_c port map(clk, clk2x, reset, nyet, cpu_in, 
 		cpu_wr, cpu_rd, cpu_out, ZA, XWA, ZD);
-	iounit : io_dev port map (clk, cpu_wr, cpu_rd, cpu_out, cpu_in, nyet, RS_RX, RS_TX);
-			-- normal style.
-	--iounit : io_dev port map (clk, cpu_wr, cpu_rd, cpu_out, cpu_in, nyet, '1', RS_TX);  
-			-- no input. recvbuf is already filled with sld data.
+	iounit : io_dev port map (clk, cpu_wr, cpu_rd, cpu_out, cpu_in, nyet, ${oc.rx_en()}, RS_TX);
 	--iounit : io_dev port map (clk, cpu_wr, cpu_rd, cpu_out, cpu_in, nyet, pipe, pipe);
 			-- like loopback.
 
diff --git a/ocore/tmpl/test b/ocore/tmpl/test
deleted file mode 100644
index 97421de..0000000
--- a/ocore/tmpl/test
+++ /dev/null
@@ -1,32768 +0,0 @@
-x"0000004C",
-x"00000000",
-x"3F800000",
-x"BF800000",
-x"00800000",
-x"4B000000",
-x"4B000000",
-x"3FC90FDA",
-x"3F000000",
-x"41100000",
-x"3F800000",
-x"40000000",
-x"40200000",
-x"00000000",
-x"42413381",
-x"40900000",
-x"C144CCC4",
-x"3FC90FDA",
-x"40C90FDA",
-x"40490FDA",
-x"08000098",
-x"A0630002",
-x"00622820",
-x"20430000",
-x"68A20005",
-x"28A20004",
-x"AC440000",
-x"20420004",
-x"08000018",
-x"E0000000",
-x"A0630002",
-x"00622020",
-x"20430000",
-x"68820005",
-x"28820004",
-x"E4400000",
-x"20420004",
-x"08000021",
-x"E0000000",
-x"44000806",
-x"20030000",
-x"C4640000",
-x"E8800015",
-x"C8800014",
-x"44000007",
-x"20030010",
-x"C4620000",
-x"E8020004",
-x"C8020003",
-x"44000007",
-x"E0000000",
-x"44020000",
-x"44020001",
-x"44200807",
-x"E820001B",
-x"C820001A",
-x"44020000",
-x"20030004",
-x"C4630000",
-x"44030000",
-x"44020001",
-x"44000007",
-x"E0000000",
-x"20030010",
-x"C4620000",
-x"E8020003",
-x"C8020002",
-x"E0000000",
-x"44000806",
-x"44020000",
-x"E4200000",
-x"8C240000",
-x"44020001",
-x"E4200000",
-x"8C240000",
-x"E8010005",
-x"C8010004",
-x"20030004",
-x"C4630000",
-x"44030001",
-x"E0000000",
-x"44000007",
-x"E0000000",
-x"44000007",
-x"C0000027",
-x"44000007",
-x"E0000000",
-x"68030006",
-x"28030005",
-x"00031822",
-x"C000005D",
-x"44000007",
-x"E0000000",
-x"20050010",
-x"C4A10000",
-x"20050014",
-x"8CA40000",
-x"2005000C",
-x"8CA50000",
-x"68A30007",
-x"28A30006",
-x"00641820",
-x"AC230000",
-x"C4200000",
-x"44010001",
-x"E0000000",
-x"20040000",
-x"C4820000",
-x"00651822",
-x"44411000",
-x"68A3FFFE",
-x"28A3FFFD",
-x"00641820",
-x"AC230000",
-x"C4200000",
-x"44010001",
-x"44020000",
-x"E0000000",
-x"20030000",
-x"C4610000",
-x"E8200006",
-x"C8200005",
-x"44000007",
-x"C000007E",
-x"00031822",
-x"E0000000",
-x"C0000027",
-x"20040010",
-x"C4820000",
-x"20040014",
-x"8C840000",
-x"E8400007",
-x"C8400006",
-x"44020000",
-x"E4200000",
-x"8C230000",
-x"00641822",
-x"E0000000",
-x"2005000C",
-x"8CA50000",
-x"20030000",
-x"44020001",
-x"00651820",
-x"E840FFFE",
-x"C840FFFD",
-x"44020000",
-x"E4200000",
-x"8C250000",
-x"00A42822",
-x"00A31820",
-x"E0000000",
-x"08000076",
-x"203F0000",
-x"40210020",
-x"201C0001",
-x"201DFFFF",
-x"201B0030",
-x"C7700000",
-x"201B0024",
-x"C7710000",
-x"201B0028",
-x"C7720000",
-x"201B0018",
-x"C7730000",
-x"201B001C",
-x"C7740000",
-x"201B0020",
-x"C7750000",
-x"201B002C",
-x"C7760000",
-x"201B0034",
-x"C7770000",
-x"201B0038",
-x"C7780000",
-x"201B003C",
-x"C7790000",
-x"201B0040",
-x"C77A0000",
-x"201B0044",
-x"C77B0000",
-x"201B0048",
-x"C77C0000",
-x"47800006",
-x"47600806",
-x"47401006",
-x"20430000",
-x"20420008",
-x"20040136",
-x"AC640000",
-x"E461FFFC",
-x"20440000",
-x"20420014",
-x"20050141",
-x"AC850000",
-x"AC83FFF0",
-x"E482FFF4",
-x"E481FFF8",
-x"E480FFFC",
-x"20430000",
-x"20420008",
-x"20050179",
-x"AC650000",
-x"AC64FFFC",
-x"20050001",
-x"20060000",
-x"AFE2001C",
-x"43E20004",
-x"AC240000",
-x"AC230004",
-x"20C40000",
-x"20A30000",
-x"4021000C",
-x"C0000015",
-x"8FE2001C",
-x"20030001",
-x"20040000",
-x"AFE2001C",
-x"43E20008",
-x"C0000015",
-x"8FE2001C",
-x"20030001",
-x"20040000",
-x"AFE2001C",
-x"43E2000C",
-x"C0000015",
-x"8FE2001C",
-x"20030001",
-x"20040000",
-x"AFE2001C",
-x"43E20010",
-x"C0000015",
-x"8FE2001C",
-x"20030001",
-x"20040001",
-x"AFE2001C",
-x"43E20014",
-x"C0000015",
-x"8FE2001C",
-x"20030001",
-x"20040000",
-x"AFE2001C",
-x"43E20018",
-x"C0000015",
-x"8FE2001C",
-x"47200006",
-x"C0000118",
-x"2021000C",
-x"44000004",
-x"8C3E0004",
-x"8FDB0000",
-x"4021000C",
-x"03600030",
-x"2021000C",
-x"8C3E0000",
-x"8FDB0000",
-x"4021000C",
-x"03600030",
-x"2021000C",
-x"47000806",
-x"44010000",
-x"46E00806",
-x"44010001",
-x"3C60000F",
-x"1C604240",
-x"E4200008",
-x"40210010",
-x"C0000057",
-x"20210010",
-x"C4210008",
-x"44200002",
-x"40210010",
-x"C0000076",
-x"C000018D",
-x"20210010",
-x"0000003F",
-x"46000806",
-x"E8010002",
-x"E0000000",
-x"44000007",
-x"E0000000",
-x"08000113",
-x"44000007",
-x"E0000000",
-x"46C01806",
-x"E8030007",
-x"46401806",
-x"44031801",
-x"44020001",
-x"44201003",
-x"44600006",
-x"0800011B",
-x"44400006",
-x"E0000000",
-x"46200806",
-x"46A01006",
-x"44001802",
-x"46002006",
-x"E4200000",
-x"E4210004",
-x"44600806",
-x"44400006",
-x"44801006",
-x"4021000C",
-x"C000011B",
-x"2021000C",
-x"C4210004",
-x"44200001",
-x"C4210000",
-x"44200003",
-x"E0000000",
-x"C7C1FFFC",
-x"E8200007",
-x"46001006",
-x"E8020002",
-x"E0000000",
-x"44010000",
-x"8FDB0000",
-x"03600008",
-x"44010001",
-x"8FDB0000",
-x"03600008",
-x"8FC3FFF0",
-x"C7C1FFF4",
-x"C7C2FFF8",
-x"C7C3FFFC",
-x"46002006",
-x"E4210000",
-x"E4220004",
-x"E4240008",
-x"E420000C",
-x"E4230010",
-x"AC230014",
-x"C0000113",
-x"8C3E0014",
-x"8FDB0000",
-x"4021001C",
-x"03600030",
-x"2021001C",
-x"C4210010",
-x"E8200008",
-x"C4220008",
-x"C423000C",
-x"E8430003",
-x"20030000",
-x"0800015A",
-x"20030001",
-x"08000161",
-x"C4220008",
-x"C423000C",
-x"E8430003",
-x"20030001",
-x"08000161",
-x"20030000",
-x"E8200002",
-x"08000165",
-x"C4220004",
-x"44400001",
-x"C4220000",
-x"E8400002",
-x"08000169",
-x"44200001",
-x"46800806",
-x"44010002",
-x"AC230018",
-x"40210020",
-x"C0000125",
-x"20210020",
-x"46400806",
-x"44200802",
-x"46201006",
-x"44000002",
-x"44400000",
-x"44200003",
-x"8C230018",
-x"48600002",
-x"08000119",
-x"E0000000",
-x"8FDEFFFC",
-x"46600806",
-x"44200001",
-x"8FDB0000",
-x"03600008",
-x"00A63820",
-x"A8E70001",
-x"00E44018",
-x"00C54822",
-x"6B890003",
-x"20A30000",
-x"E0000000",
-x"69030006",
-x"49030003",
-x"20E30000",
-x"E0000000",
-x"20E60000",
-x"0800017E",
-x"20E50000",
-x"0800017E",
-x"686000E2",
-x"3C8005F5",
-x"1C80E100",
-x"20050000",
-x"20060003",
-x"AC230000",
-x"40210008",
-x"C000017E",
-x"20210008",
-x"3C8005F5",
-x"1C80E100",
-x"00642018",
-x"8C250000",
-x"00A42022",
-x"AC240004",
-x"68030003",
-x"20030000",
-x"080001A3",
-x"20050030",
-x"00A31820",
-x"04600001",
-x"20030001",
-x"3C800098",
-x"1C809680",
-x"20050000",
-x"2006000A",
-x"8C270004",
-x"AC230008",
-x"20E30000",
-x"40210010",
-x"C000017E",
-x"20210010",
-x"3C800098",
-x"1C809680",
-x"00642018",
-x"8C250004",
-x"00A42022",
-x"AC24000C",
-x"6803000A",
-x"8C250008",
-x"48A00003",
-x"20030000",
-x"080001BC",
-x"20050030",
-x"00A31820",
-x"04600001",
-x"20030001",
-x"080001C1",
-x"20050030",
-x"00A31820",
-x"04600001",
-x"20030001",
-x"3C80000F",
-x"1C804240",
-x"20050000",
-x"2006000A",
-x"8C27000C",
-x"AC230010",
-x"20E30000",
-x"40210018",
-x"C000017E",
-x"20210018",
-x"3C80000F",
-x"1C804240",
-x"00642018",
-x"8C25000C",
-x"00A42022",
-x"AC240014",
-x"6803000A",
-x"8C250010",
-x"48A00003",
-x"20030000",
-x"080001DA",
-x"20050030",
-x"00A31820",
-x"04600001",
-x"20030001",
-x"080001DF",
-x"20050030",
-x"00A31820",
-x"04600001",
-x"20030001",
-x"3C800001",
-x"1C8086A0",
-x"20050000",
-x"2006000A",
-x"8C270014",
-x"AC230018",
-x"20E30000",
-x"40210020",
-x"C000017E",
-x"20210020",
-x"3C800001",
-x"1C8086A0",
-x"00642018",
-x"8C250014",
-x"00A42022",
-x"AC24001C",
-x"6803000A",
-x"8C250018",
-x"48A00003",
-x"20030000",
-x"080001F8",
-x"20050030",
-x"00A31820",
-x"04600001",
-x"20030001",
-x"080001FD",
-x"20050030",
-x"00A31820",
-x"04600001",
-x"20030001",
-x"20042710",
-x"20050000",
-x"2006000A",
-x"8C27001C",
-x"AC230020",
-x"20E30000",
-x"40210028",
-x"C000017E",
-x"20210028",
-x"20042710",
-x"00642018",
-x"8C25001C",
-x"00A42022",
-x"AC240024",
-x"6803000A",
-x"8C250020",
-x"48A00003",
-x"20030000",
-x"08000214",
-x"20050030",
-x"00A31820",
-x"04600001",
-x"20030001",
-x"08000219",
-x"20050030",
-x"00A31820",
-x"04600001",
-x"20030001",
-x"200403E8",
-x"20050000",
-x"2006000A",
-x"8C270024",
-x"AC230028",
-x"20E30000",
-x"40210030",
-x"C000017E",
-x"20210030",
-x"606403E8",
-x"8C250024",
-x"00A42022",
-x"AC24002C",
-x"6803000A",
-x"8C250028",
-x"48A00003",
-x"20030000",
-x"0800022F",
-x"20050030",
-x"00A31820",
-x"04600001",
-x"20030001",
-x"08000234",
-x"20050030",
-x"00A31820",
-x"04600001",
-x"20030001",
-x"20040064",
-x"20050000",
-x"2006000A",
-x"8C27002C",
-x"AC230030",
-x"20E30000",
-x"40210038",
-x"C000017E",
-x"20210038",
-x"60640064",
-x"8C25002C",
-x"00A42022",
-x"AC240034",
-x"6803000A",
-x"8C250030",
-x"48A00003",
-x"20030000",
-x"0800024A",
-x"20050030",
-x"00A31820",
-x"04600001",
-x"20030001",
-x"0800024F",
-x"20050030",
-x"00A31820",
-x"04600001",
-x"20030001",
-x"2004000A",
-x"20050000",
-x"2006000A",
-x"8C270034",
-x"AC230038",
-x"20E30000",
-x"40210040",
-x"C000017E",
-x"20210040",
-x"6064000A",
-x"8C250034",
-x"00A42022",
-x"AC24003C",
-x"6803000A",
-x"8C250038",
-x"48A00003",
-x"20030000",
-x"08000265",
-x"20050030",
-x"00A31820",
-x"04600001",
-x"20030001",
-x"0800026A",
-x"20050030",
-x"00A31820",
-x"04600001",
-x"20030001",
-x"20030030",
-x"8C24003C",
-x"00641820",
-x"04600001",
-x"E0000000",
-x"2004002D",
-x"AC230000",
-x"04800001",
-x"8C230000",
-x"00031822",
-x"0800018D",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000",
-x"00000000"
diff --git a/ocore/tmpl/test.coe b/ocore/tmpl/test.coe
deleted file mode 100644
index 012265b..0000000
--- a/ocore/tmpl/test.coe
+++ /dev/null
@@ -1,422 +0,0 @@
-memory_initialization_radix=16;
-memory_initialization_vector=
-00000018,
-00000000,
-3f800000,
-bf800000,
-00800000,
-4b000000,
-4b000000,
-0800008b,
-a0630002,
-00622820,
-20430000,
-68a20005,
-28a20004,
-ac440000,
-20420004,
-0800000b,
-e0000000,
-a0630002,
-00622020,
-20430000,
-68820005,
-28820004,
-e4400000,
-20420004,
-08000014,
-e0000000,
-44000806,
-20030000,
-c4640000,
-e8800015,
-c8800014,
-44000007,
-20030010,
-c4620000,
-e8020004,
-c8020003,
-44000007,
-e0000000,
-44020000,
-44020001,
-44200807,
-e820001b,
-c820001a,
-44020000,
-20030004,
-c4630000,
-44030000,
-44020001,
-44000007,
-e0000000,
-20030010,
-c4620000,
-e8020003,
-c8020002,
-e0000000,
-44000806,
-44020000,
-e4200000,
-8c240000,
-44020001,
-e4200000,
-8c240000,
-e8010005,
-c8010004,
-20030004,
-c4630000,
-44030001,
-e0000000,
-44000007,
-e0000000,
-44000007,
-c000001a,
-44000007,
-e0000000,
-68030006,
-28030005,
-00031822,
-c0000050,
-44000007,
-e0000000,
-20050010,
-c4a10000,
-20050014,
-8ca40000,
-2005000c,
-8ca50000,
-68a30007,
-28a30006,
-00641820,
-ac230000,
-c4200000,
-44010001,
-e0000000,
-20040000,
-c4820000,
-00651822,
-44411000,
-68a3fffe,
-28a3fffd,
-00641820,
-ac230000,
-c4200000,
-44010001,
-44020000,
-e0000000,
-20030000,
-c4610000,
-e8200006,
-c8200005,
-44000007,
-c0000071,
-00031822,
-e0000000,
-c000001a,
-20040010,
-c4820000,
-20040014,
-8c840000,
-e8400007,
-c8400006,
-44020000,
-e4200000,
-8c230000,
-00641822,
-e0000000,
-2005000c,
-8ca50000,
-20030000,
-44020001,
-00651820,
-e840fffe,
-c840fffd,
-44020000,
-e4200000,
-8c250000,
-00a42822,
-00a31820,
-e0000000,
-08000069,
-203f0000,
-40210020,
-201c0001,
-201dffff,
-20030001,
-20040000,
-afe2001c,
-43e20004,
-40210004,
-c0000008,
-8fe2001c,
-20030001,
-20040000,
-afe2001c,
-43e20008,
-c0000008,
-8fe2001c,
-20030001,
-20040000,
-afe2001c,
-43e2000c,
-c0000008,
-8fe2001c,
-20030001,
-20040000,
-afe2001c,
-43e20010,
-c0000008,
-8fe2001c,
-20030001,
-20040001,
-afe2001c,
-43e20014,
-c0000008,
-8fe2001c,
-20030001,
-20040000,
-afe2001c,
-43e20018,
-c0000008,
-8fe2001c,
-2004001e,
-c0000191,
-20680000,
-c00000c9,
-20210004,
-0000003f,
-00a61820,
-a8640001,
-00874818,
-00c51822,
-6b830003,
-20a30000,
-e0000000,
-69280006,
-49280003,
-20830000,
-e0000000,
-20860000,
-080000ba,
-20850000,
-080000ba,
-690000c4,
-3ce005f5,
-1ce0e100,
-20050000,
-20060003,
-ac280000,
-40210008,
-c00000ba,
-20210008,
-3c8005f5,
-1c80e100,
-00642018,
-8c280000,
-01044022,
-68030003,
-200a0000,
-080000de,
-20040030,
-00831820,
-04600001,
-200a0001,
-3ce00098,
-1ce09680,
-20050000,
-2006000a,
-ac280004,
-4021000c,
-c00000ba,
-2021000c,
-3c800098,
-1c809680,
-00642018,
-8c280004,
-01044022,
-68030009,
-49400003,
-200b0000,
-080000f3,
-20040030,
-00831820,
-04600001,
-200b0001,
-080000f8,
-20040030,
-00831820,
-04600001,
-200b0001,
-3ce0000f,
-1ce04240,
-20050000,
-2006000a,
-ac280008,
-40210010,
-c00000ba,
-20210010,
-3c80000f,
-1c804240,
-00642018,
-8c280008,
-01044022,
-68030009,
-49600003,
-200a0000,
-0800010d,
-20040030,
-00831820,
-04600001,
-200a0001,
-08000112,
-20040030,
-00831820,
-04600001,
-200a0001,
-3ce00001,
-1ce086a0,
-20050000,
-2006000a,
-ac28000c,
-40210014,
-c00000ba,
-20210014,
-3c800001,
-1c8086a0,
-00642018,
-8c28000c,
-01044022,
-68030009,
-49400003,
-200b0000,
-08000127,
-20040030,
-00831820,
-04600001,
-200b0001,
-0800012c,
-20040030,
-00831820,
-04600001,
-200b0001,
-20072710,
-20050000,
-2006000a,
-ac280010,
-40210018,
-c00000ba,
-20210018,
-20042710,
-00642018,
-8c280010,
-01044022,
-68030009,
-49600003,
-200a0000,
-0800013f,
-20040030,
-00831820,
-04600001,
-200a0001,
-08000144,
-20040030,
-00831820,
-04600001,
-200a0001,
-200703e8,
-20050000,
-2006000a,
-ac280014,
-4021001c,
-c00000ba,
-2021001c,
-606403e8,
-8c280014,
-01044022,
-68030009,
-49400003,
-200b0000,
-08000156,
-20040030,
-00831820,
-04600001,
-200b0001,
-0800015b,
-20040030,
-00831820,
-04600001,
-200b0001,
-20070064,
-20050000,
-2006000a,
-ac280018,
-40210020,
-c00000ba,
-20210020,
-60640064,
-8c280018,
-01044022,
-68030009,
-49600003,
-200a0000,
-0800016d,
-20040030,
-00831820,
-04600001,
-200a0001,
-08000172,
-20040030,
-00831820,
-04600001,
-200a0001,
-2007000a,
-20050000,
-2006000a,
-ac28001c,
-40210024,
-c00000ba,
-20210024,
-6064000a,
-8c28001c,
-01042022,
-68030009,
-49400003,
-20050000,
-08000184,
-20050030,
-00a31820,
-04600001,
-20050001,
-08000189,
-20050030,
-00a31820,
-04600001,
-20050001,
-20030030,
-00641820,
-04600001,
-e0000000,
-2003002d,
-04600001,
-00084022,
-080000c9,
-6b840003,
-20830000,
-e0000000,
-40830001,
-ac240000,
-20640000,
-40210008,
-c0000191,
-20210008,
-20650000,
-8c240000,
-40840002,
-ac250004,
-4021000c,
-c0000191,
-2021000c,
-8c250004,
-00a31820,
-e0000000;
diff --git a/ocore/tmpl/test.lst b/ocore/tmpl/test.lst
deleted file mode 100644
index 5f9dd85..0000000
--- a/ocore/tmpl/test.lst
+++ /dev/null
@@ -1,912 +0,0 @@
-#### ./test.lst
-
-   1.[  14] x08000098 jmp	98
-   2.[  98] x203F0000 addi	g1=524276 g31=524276 0
-   3.[  99] x40210020 subi	g1=524276 g1=524276 32
-   4.[  9a] x201C0001 addi	g0=0 g28=0 1
-   5.[  9b] x201DFFFF addi	g0=0 g29=0 -1
-   6.[  9c] x201B0030 addi	g0=0 g27=0 48
-   7.[  9d] xC7700000 fldi	f16=00000000 g27=48 0
-   8.[  9e] x201B0024 addi	g0=0 g27=48 36
-   9.[  9f] xC7710000 fldi	f17=00000000 g27=36 0
-   a.[  a0] x201B0028 addi	g0=0 g27=36 40
-   b.[  a1] xC7720000 fldi	f18=00000000 g27=40 0
-   c.[  a2] x201B0018 addi	g0=0 g27=40 24
-   d.[  a3] xC7730000 fldi	f19=00000000 g27=24 0
-   e.[  a4] x201B001C addi	g0=0 g27=24 28
-   f.[  a5] xC7740000 fldi	f20=00000000 g27=28 0
-  10.[  a6] x201B0020 addi	g0=0 g27=28 32
-  11.[  a7] xC7750000 fldi	f21=00000000 g27=32 0
-  12.[  a8] x201B002C addi	g0=0 g27=32 44
-  13.[  a9] xC7760000 fldi	f22=00000000 g27=44 0
-  14.[  aa] x201B0034 addi	g0=0 g27=44 52
-  15.[  ab] xC7770000 fldi	f23=00000000 g27=52 0
-  16.[  ac] x201B0038 addi	g0=0 g27=52 56
-  17.[  ad] xC7780000 fldi	f24=00000000 g27=56 0
-  18.[  ae] x201B003C addi	g0=0 g27=56 60
-  19.[  af] xC7790000 fldi	f25=00000000 g27=60 0
-  1a.[  b0] x201B0040 addi	g0=0 g27=60 64
-  1b.[  b1] xC77A0000 fldi	f26=00000000 g27=64 0
-  1c.[  b2] x201B0044 addi	g0=0 g27=64 68
-  1d.[  b3] xC77B0000 fldi	f27=00000000 g27=68 0
-  1e.[  b4] x201B0048 addi	g0=0 g27=68 72
-  1f.[  b5] xC77C0000 fldi	f28=00000000 g27=72 0
-  20.[  b6] x47800006 fmov	f0=00000000 f28=40490FDA
-  21.[  b7] x47600806 fmov	f1=00000000 f27=40C90FDA
-  22.[  b8] x47401006 fmov	f2=00000000 f26=3FC90FDA
-  23.[  b9] x20430000 addi	g2=76 g3=0 0
-  24.[  ba] x20420008 addi	g2=76 g2=76 8
-  25.[  bb] x20040136 addi	g0=0 g4=0 310
-  26.[  bc] xAC640000 sti	g3=76 g4=310 0
-  27.[  bd] xE461FFFC fsti	f1=40C90FDA g3=76 -4
-  28.[  be] x20440000 addi	g2=84 g4=310 0
-  29.[  bf] x20420014 addi	g2=84 g2=84 20
-  2a.[  c0] x20050141 addi	g0=0 g5=0 321
-  2b.[  c1] xAC850000 sti	g4=84 g5=321 0
-  2c.[  c2] xAC83FFF0 sti	g4=84 g3=76 -16
-  2d.[  c3] xE482FFF4 fsti	f2=3FC90FDA g4=84 -12
-  2e.[  c4] xE481FFF8 fsti	f1=40C90FDA g4=84 -8
-  2f.[  c5] xE480FFFC fsti	f0=40490FDA g4=84 -4
-  30.[  c6] x20430000 addi	g2=104 g3=76 0
-  31.[  c7] x20420008 addi	g2=104 g2=104 8
-  32.[  c8] x20050179 addi	g0=0 g5=321 377
-  33.[  c9] xAC650000 sti	g3=104 g5=377 0
-  34.[  ca] xAC64FFFC sti	g3=104 g4=84 -4
-  35.[  cb] x20050001 addi	g0=0 g5=377 1
-  36.[  cc] x20060000 addi	g0=0 g6=0 0
-  37.[  cd] xAFE2001C sti	g31=524276 g2=112 28
-  38.[  ce] x43E20004 subi	g31=524276 g2=112 4
-  39.[  cf] xAC240000 sti	g1=524244 g4=84 0
-  3a.[  d0] xAC230004 sti	g1=524244 g3=104 4
-  3b.[  d1] x20C40000 addi	g6=0 g4=84 0
-  3c.[  d2] x20A30000 addi	g5=1 g3=104 0
-  3d.[  d3] x4021000C subi	g1=524244 g1=524244 12
-  3e.[  d4] xC0000015 call	15
-  3f.[  15] xA0630002 slli	g3=1 g3=1 2
-  40.[  16] x00622820 add	g5=1 g3=4 g2=524272
-  41.[  17] x20430000 addi	g2=524272 g3=4 0
-  42.[  18] x68A20005 jlt	g5=524276 g2=524272 5
-  43.[  19] x28A20004 jeq	g5=524276 g2=524272 4
-  44.[  1a] xAC440000 sti	g2=524272 g4=0 0
-  45.[  1b] x20420004 addi	g2=524272 g2=524272 4
-  46.[  1c] x08000018 jmp	18
-  47.[  18] x68A20005 jlt	g5=524276 g2=524276 5
-  48.[  19] x28A20004 jeq	g5=524276 g2=524276 4
-  49.[  1d] xE0000000 return
-  4a.[  d5] x8FE2001C ldi	g31=524276 g2=524276 28
-  4b.[  d6] x20030001 addi	g0=0 g3=524272 1
-  4c.[  d7] x20040000 addi	g0=0 g4=0 0
-  4d.[  d8] xAFE2001C sti	g31=524276 g2=112 28
-  4e.[  d9] x43E20008 subi	g31=524276 g2=112 8
-  4f.[  da] xC0000015 call	15
-  50.[  15] xA0630002 slli	g3=1 g3=1 2
-  51.[  16] x00622820 add	g5=524276 g3=4 g2=524268
-  52.[  17] x20430000 addi	g2=524268 g3=4 0
-  53.[  18] x68A20005 jlt	g5=524272 g2=524268 5
-  54.[  19] x28A20004 jeq	g5=524272 g2=524268 4
-  55.[  1a] xAC440000 sti	g2=524268 g4=0 0
-  56.[  1b] x20420004 addi	g2=524268 g2=524268 4
-  57.[  1c] x08000018 jmp	18
-  58.[  18] x68A20005 jlt	g5=524272 g2=524272 5
-  59.[  19] x28A20004 jeq	g5=524272 g2=524272 4
-  5a.[  1d] xE0000000 return
-  5b.[  db] x8FE2001C ldi	g31=524276 g2=524272 28
-  5c.[  dc] x20030001 addi	g0=0 g3=524268 1
-  5d.[  dd] x20040000 addi	g0=0 g4=0 0
-  5e.[  de] xAFE2001C sti	g31=524276 g2=112 28
-  5f.[  df] x43E2000C subi	g31=524276 g2=112 12
-  60.[  e0] xC0000015 call	15
-  61.[  15] xA0630002 slli	g3=1 g3=1 2
-  62.[  16] x00622820 add	g5=524272 g3=4 g2=524264
-  63.[  17] x20430000 addi	g2=524264 g3=4 0
-  64.[  18] x68A20005 jlt	g5=524268 g2=524264 5
-  65.[  19] x28A20004 jeq	g5=524268 g2=524264 4
-  66.[  1a] xAC440000 sti	g2=524264 g4=0 0
-  67.[  1b] x20420004 addi	g2=524264 g2=524264 4
-  68.[  1c] x08000018 jmp	18
-  69.[  18] x68A20005 jlt	g5=524268 g2=524268 5
-  6a.[  19] x28A20004 jeq	g5=524268 g2=524268 4
-  6b.[  1d] xE0000000 return
-  6c.[  e1] x8FE2001C ldi	g31=524276 g2=524268 28
-  6d.[  e2] x20030001 addi	g0=0 g3=524264 1
-  6e.[  e3] x20040000 addi	g0=0 g4=0 0
-  6f.[  e4] xAFE2001C sti	g31=524276 g2=112 28
-  70.[  e5] x43E20010 subi	g31=524276 g2=112 16
-  71.[  e6] xC0000015 call	15
-  72.[  15] xA0630002 slli	g3=1 g3=1 2
-  73.[  16] x00622820 add	g5=524268 g3=4 g2=524260
-  74.[  17] x20430000 addi	g2=524260 g3=4 0
-  75.[  18] x68A20005 jlt	g5=524264 g2=524260 5
-  76.[  19] x28A20004 jeq	g5=524264 g2=524260 4
-  77.[  1a] xAC440000 sti	g2=524260 g4=0 0
-  78.[  1b] x20420004 addi	g2=524260 g2=524260 4
-  79.[  1c] x08000018 jmp	18
-  7a.[  18] x68A20005 jlt	g5=524264 g2=524264 5
-  7b.[  19] x28A20004 jeq	g5=524264 g2=524264 4
-  7c.[  1d] xE0000000 return
-  7d.[  e7] x8FE2001C ldi	g31=524276 g2=524264 28
-  7e.[  e8] x20030001 addi	g0=0 g3=524260 1
-  7f.[  e9] x20040001 addi	g0=0 g4=0 1
-  80.[  ea] xAFE2001C sti	g31=524276 g2=112 28
-  81.[  eb] x43E20014 subi	g31=524276 g2=112 20
-  82.[  ec] xC0000015 call	15
-  83.[  15] xA0630002 slli	g3=1 g3=1 2
-  84.[  16] x00622820 add	g5=524264 g3=4 g2=524256
-  85.[  17] x20430000 addi	g2=524256 g3=4 0
-  86.[  18] x68A20005 jlt	g5=524260 g2=524256 5
-  87.[  19] x28A20004 jeq	g5=524260 g2=524256 4
-  88.[  1a] xAC440000 sti	g2=524256 g4=1 0
-  89.[  1b] x20420004 addi	g2=524256 g2=524256 4
-  8a.[  1c] x08000018 jmp	18
-  8b.[  18] x68A20005 jlt	g5=524260 g2=524260 5
-  8c.[  19] x28A20004 jeq	g5=524260 g2=524260 4
-  8d.[  1d] xE0000000 return
-  8e.[  ed] x8FE2001C ldi	g31=524276 g2=524260 28
-  8f.[  ee] x20030001 addi	g0=0 g3=524256 1
-  90.[  ef] x20040000 addi	g0=0 g4=1 0
-  91.[  f0] xAFE2001C sti	g31=524276 g2=112 28
-  92.[  f1] x43E20018 subi	g31=524276 g2=112 24
-  93.[  f2] xC0000015 call	15
-  94.[  15] xA0630002 slli	g3=1 g3=1 2
-  95.[  16] x00622820 add	g5=524260 g3=4 g2=524252
-  96.[  17] x20430000 addi	g2=524252 g3=4 0
-  97.[  18] x68A20005 jlt	g5=524256 g2=524252 5
-  98.[  19] x28A20004 jeq	g5=524256 g2=524252 4
-  99.[  1a] xAC440000 sti	g2=524252 g4=0 0
-  9a.[  1b] x20420004 addi	g2=524252 g2=524252 4
-  9b.[  1c] x08000018 jmp	18
-  9c.[  18] x68A20005 jlt	g5=524256 g2=524256 5
-  9d.[  19] x28A20004 jeq	g5=524256 g2=524256 4
-  9e.[  1d] xE0000000 return
-  9f.[  f3] x8FE2001C ldi	g31=524276 g2=524256 28
-  a0.[  f4] x47200006 fmov	f0=40490FDA f25=C144CCC4
-  a1.[  f5] xC0000118 call	118
-  a2.[ 118] x08000113 jmp	113
-  a3.[ 113] x46000806 fmov	f1=40C90FDA f16=00000000
-  a4.[ 114] xE8010002 fjlt	f0=C144CCC4 f1=00000000 2
-  a5.[ 116] x44000007 fneg	f0=C144CCC4 f0=C144CCC4
-  a6.[ 117] xE0000000 return
-  a7.[  f6] x2021000C addi	g1=524232 g1=524232 12
-  a8.[  f7] x44000004 fsqrt	f0=4144CCC4 f0=4144CCC4
-  a9.[  f8] x8C3E0004 ldi	g1=524244 g30=0 4
-  aa.[  f9] x8FDB0000 ldi	g30=104 g27=72 0
-  ab.[  fa] x4021000C subi	g1=524244 g1=524244 12
-  ac.[  fb] x03600030 callR	g27=377
-  ad.[ 179] x8FDEFFFC ldi	g30=104 g30=104 -4
-  ae.[ 17a] x46600806 fmov	f1=00000000 f19=3FC90FDA
-  af.[ 17b] x44200001 fsub	f0=406074E4 f1=3FC90FDA f0=406074E4
-  b0.[ 17c] x8FDB0000 ldi	g30=84 g27=377 0
-  b1.[ 17d] x03600008 b	g27=321
-  b2.[ 141] x8FC3FFF0 ldi	g30=84 g3=524252 -16
-  b3.[ 142] xC7C1FFF4 fldi	f1=3FC90FDA g30=84 -12
-  b4.[ 143] xC7C2FFF8 fldi	f2=3FC90FDA g30=84 -8
-  b5.[ 144] xC7C3FFFC fldi	f3=00000000 g30=84 -4
-  b6.[ 145] x46002006 fmov	f4=00000000 f16=00000000
-  b7.[ 146] xE4210000 fsti	f1=3FC90FDA g1=524228 0
-  b8.[ 147] xE4220004 fsti	f2=40C90FDA g1=524228 4
-  b9.[ 148] xE4240008 fsti	f4=00000000 g1=524228 8
-  ba.[ 149] xE420000C fsti	f0=BFF7D9EE g1=524228 12
-  bb.[ 14a] xE4230010 fsti	f3=40490FDA g1=524228 16
-  bc.[ 14b] xAC230014 sti	g1=524228 g3=76 20
-  bd.[ 14c] xC0000113 call	113
-  be.[ 113] x46000806 fmov	f1=3FC90FDA f16=00000000
-  bf.[ 114] xE8010002 fjlt	f0=BFF7D9EE f1=00000000 2
-  c0.[ 116] x44000007 fneg	f0=BFF7D9EE f0=BFF7D9EE
-  c1.[ 117] xE0000000 return
-  c2.[ 14d] x8C3E0014 ldi	g1=524228 g30=84 20
-  c3.[ 14e] x8FDB0000 ldi	g30=76 g27=321 0
-  c4.[ 14f] x4021001C subi	g1=524228 g1=524228 28
-  c5.[ 150] x03600030 callR	g27=310
-  c6.[ 136] xC7C1FFFC fldi	f1=00000000 g30=76 -4
-  c7.[ 137] xE8200007 fjlt	f1=40C90FDA f0=3FF7D9EE 7
-  c8.[ 138] x46001006 fmov	f2=40C90FDA f16=00000000
-  c9.[ 139] xE8020002 fjlt	f0=3FF7D9EE f2=00000000 2
-  ca.[ 13a] xE0000000 return
-  cb.[ 151] x2021001C addi	g1=524200 g1=524200 28
-  cc.[ 152] xC4210010 fldi	f1=40C90FDA g1=524228 16
-  cd.[ 153] xE8200008 fjlt	f1=40490FDA f0=3FF7D9EE 8
-  ce.[ 154] xC4220008 fldi	f2=00000000 g1=524228 8
-  cf.[ 155] xC423000C fldi	f3=40490FDA g1=524228 12
-  d0.[ 156] xE8430003 fjlt	f2=00000000 f3=BFF7D9EE 3
-  d1.[ 157] x20030000 addi	g0=0 g3=76 0
-  d2.[ 158] x0800015A jmp	15a
-  d3.[ 15a] x08000161 jmp	161
-  d4.[ 161] xE8200002 fjlt	f1=40490FDA f0=3FF7D9EE 2
-  d5.[ 162] x08000165 jmp	165
-  d6.[ 165] xC4220000 fldi	f2=00000000 g1=524228 0
-  d7.[ 166] xE8400002 fjlt	f2=000000FC f0=3FF7D9EE 2
-  d8.[ 168] x44200001 fsub	f0=3FF7D9EE f1=40490FDA f0=3FF7D9EE
-  d9.[ 169] x46800806 fmov	f1=40490FDA f20=3F000000
-  da.[ 16a] x44010002 fmul	f0=3F9A45C6 f0=3F9A45C6 f1=3F000000
-  db.[ 16b] xAC230018 sti	g1=524228 g3=0 24
-  dc.[ 16c] x40210020 subi	g1=524228 g1=524228 32
-  dd.[ 16d] xC0000125 call	125
-  de.[ 125] x46200806 fmov	f1=3F000000 f17=3F800000
-  df.[ 126] x46A01006 fmov	f2=000000FC f21=41100000
-  e0.[ 127] x44001802 fmul	f3=BFF7D9EE f0=3F1A45C6 f0=3F1A45C6
-  e1.[ 128] x46002006 fmov	f4=00000000 f16=00000000
-  e2.[ 129] xE4200000 fsti	f0=3F1A45C6 g1=524192 0
-  e3.[ 12a] xE4210004 fsti	f1=3F800000 g1=524192 4
-  e4.[ 12b] x44600806 fmov	f1=3F800000 f3=3EB9F00A
-  e5.[ 12c] x44400006 fmov	f0=3F1A45C6 f2=41100000
-  e6.[ 12d] x44801006 fmov	f2=41100000 f4=00000000
-  e7.[ 12e] x4021000C subi	g1=524192 g1=524192 12
-  e8.[ 12f] xC000011B call	11b
-  e9.[ 11b] x46C01806 fmov	f3=3EB9F00A f22=40200000
-  ea.[ 11c] xE8030007 fjlt	f0=41100000 f3=40200000 7
-  eb.[ 11d] x46401806 fmov	f3=40200000 f18=40000000
-  ec.[ 11e] x44031801 fsub	f3=40000000 f0=41100000 f3=40000000
-  ed.[ 11f] x44020001 fsub	f0=41100000 f0=41100000 f2=00000000
-  ee.[ 120] x44201003 fdiv	f2=00000000 f1=3EB9F00A f0=41100000
-  ef.[ 121] x44600006 fmov	f0=41100000 f3=40E00000
-  f0.[ 122] x0800011B jmp	11b
-  f1.[ 11b] x46C01806 fmov	f3=40E00000 f22=40200000
-  f2.[ 11c] xE8030007 fjlt	f0=40E00000 f3=40200000 7
-  f3.[ 11d] x46401806 fmov	f3=40200000 f18=40000000
-  f4.[ 11e] x44031801 fsub	f3=40000000 f0=40E00000 f3=40000000
-  f5.[ 11f] x44020001 fsub	f0=40E00000 f0=40E00000 f2=3D254723
-  f6.[ 120] x44201003 fdiv	f2=3D254723 f1=3EB9F00A f0=40DEB572
-  f7.[ 121] x44600006 fmov	f0=40DEB572 f3=40A00000
-  f8.[ 122] x0800011B jmp	11b
-  f9.[ 11b] x46C01806 fmov	f3=40A00000 f22=40200000
-  fa.[ 11c] xE8030007 fjlt	f0=40A00000 f3=40200000 7
-  fb.[ 11d] x46401806 fmov	f3=40200000 f18=40000000
-  fc.[ 11e] x44031801 fsub	f3=40000000 f0=40A00000 f3=40000000
-  fd.[ 11f] x44020001 fsub	f0=40A00000 f0=40A00000 f2=3D55BB72
-  fe.[ 120] x44201003 fdiv	f2=3D55BB72 f1=3EB9F00A f0=409E5489
-  ff.[ 121] x44600006 fmov	f0=409E5489 f3=40400000
- 100.[ 122] x0800011B jmp	11b
- 101.[ 11b] x46C01806 fmov	f3=40400000 f22=40200000
- 102.[ 11c] xE8030007 fjlt	f0=40400000 f3=40200000 7
- 103.[ 11d] x46401806 fmov	f3=40200000 f18=40000000
- 104.[ 11e] x44031801 fsub	f3=40000000 f0=40400000 f3=40000000
- 105.[ 11f] x44020001 fsub	f0=40400000 f0=40400000 f2=3D9651A3
- 106.[ 120] x44201003 fdiv	f2=3D9651A3 f1=3EB9F00A f0=403B4D73
- 107.[ 121] x44600006 fmov	f0=403B4D73 f3=3F800000
- 108.[ 122] x0800011B jmp	11b
- 109.[ 11b] x46C01806 fmov	f3=3F800000 f22=40200000
- 10a.[ 11c] xE8030007 fjlt	f0=3F800000 f3=40200000 7
- 10b.[ 123] x44400006 fmov	f0=3F800000 f2=3DFE2270
- 10c.[ 124] xE0000000 return
- 10d.[ 130] x2021000C addi	g1=524180 g1=524180 12
- 10e.[ 131] xC4210004 fldi	f1=3EB9F00A g1=524192 4
- 10f.[ 132] x44200001 fsub	f0=3DFE2270 f1=3F800000 f0=3DFE2270
- 110.[ 133] xC4210000 fldi	f1=3F800000 g1=524192 0
- 111.[ 134] x44200003 fdiv	f0=3F603BB2 f1=3F1A45C6 f0=3F603BB2
- 112.[ 135] xE0000000 return
- 113.[ 16e] x20210020 addi	g1=524196 g1=524196 32
- 114.[ 16f] x46400806 fmov	f1=3F1A45C6 f18=40000000
- 115.[ 170] x44200802 fmul	f1=40000000 f1=40000000 f0=3F3020CE
- 116.[ 171] x46201006 fmov	f2=3DFE2270 f17=3F800000
- 117.[ 172] x44000002 fmul	f0=3F3020CE f0=3F3020CE f0=3F3020CE
- 118.[ 173] x44400000 fadd	f0=3EF25A3F f2=3F800000 f0=3EF25A3F
- 119.[ 174] x44200003 fdiv	f0=3FBC9690 f1=3FB020CE f0=3FBC9690
- 11a.[ 175] x8C230018 ldi	g1=524228 g3=0 24
- 11b.[ 176] x48600002 jne	g3=0 g0=0 2
- 11c.[ 177] x08000119 jmp	119
- 11d.[ 119] x44000007 fneg	f0=3F6F160C f0=3F6F160C
- 11e.[ 11a] xE0000000 return
- 11f.[  fc] x2021000C addi	g1=524232 g1=524232 12
- 120.[  fd] x8C3E0000 ldi	g1=524244 g30=76 0
- 121.[  fe] x8FDB0000 ldi	g30=84 g27=310 0
- 122.[  ff] x4021000C subi	g1=524244 g1=524244 12
- 123.[ 100] x03600030 callR	g27=321
- 124.[ 141] x8FC3FFF0 ldi	g30=84 g3=0 -16
- 125.[ 142] xC7C1FFF4 fldi	f1=3FB020CE g30=84 -12
- 126.[ 143] xC7C2FFF8 fldi	f2=3F800000 g30=84 -8
- 127.[ 144] xC7C3FFFC fldi	f3=40200000 g30=84 -4
- 128.[ 145] x46002006 fmov	f4=00000000 f16=00000000
- 129.[ 146] xE4210000 fsti	f1=3FC90FDA g1=524228 0
- 12a.[ 147] xE4220004 fsti	f2=40C90FDA g1=524228 4
- 12b.[ 148] xE4240008 fsti	f4=00000000 g1=524228 8
- 12c.[ 149] xE420000C fsti	f0=BF6F160C g1=524228 12
- 12d.[ 14a] xE4230010 fsti	f3=40490FDA g1=524228 16
- 12e.[ 14b] xAC230014 sti	g1=524228 g3=76 20
- 12f.[ 14c] xC0000113 call	113
- 130.[ 113] x46000806 fmov	f1=3FC90FDA f16=00000000
- 131.[ 114] xE8010002 fjlt	f0=BF6F160C f1=00000000 2
- 132.[ 116] x44000007 fneg	f0=BF6F160C f0=BF6F160C
- 133.[ 117] xE0000000 return
- 134.[ 14d] x8C3E0014 ldi	g1=524228 g30=84 20
- 135.[ 14e] x8FDB0000 ldi	g30=76 g27=321 0
- 136.[ 14f] x4021001C subi	g1=524228 g1=524228 28
- 137.[ 150] x03600030 callR	g27=310
- 138.[ 136] xC7C1FFFC fldi	f1=00000000 g30=76 -4
- 139.[ 137] xE8200007 fjlt	f1=40C90FDA f0=3F6F160C 7
- 13a.[ 138] x46001006 fmov	f2=40C90FDA f16=00000000
- 13b.[ 139] xE8020002 fjlt	f0=3F6F160C f2=00000000 2
- 13c.[ 13a] xE0000000 return
- 13d.[ 151] x2021001C addi	g1=524200 g1=524200 28
- 13e.[ 152] xC4210010 fldi	f1=40C90FDA g1=524228 16
- 13f.[ 153] xE8200008 fjlt	f1=40490FDA f0=3F6F160C 8
- 140.[ 154] xC4220008 fldi	f2=00000000 g1=524228 8
- 141.[ 155] xC423000C fldi	f3=40490FDA g1=524228 12
- 142.[ 156] xE8430003 fjlt	f2=00000000 f3=BF6F160C 3
- 143.[ 157] x20030000 addi	g0=0 g3=76 0
- 144.[ 158] x0800015A jmp	15a
- 145.[ 15a] x08000161 jmp	161
- 146.[ 161] xE8200002 fjlt	f1=40490FDA f0=3F6F160C 2
- 147.[ 162] x08000165 jmp	165
- 148.[ 165] xC4220000 fldi	f2=00000000 g1=524228 0
- 149.[ 166] xE8400002 fjlt	f2=00000101 f0=3F6F160C 2
- 14a.[ 168] x44200001 fsub	f0=3F6F160C f1=40490FDA f0=3F6F160C
- 14b.[ 169] x46800806 fmov	f1=40490FDA f20=3F000000
- 14c.[ 16a] x44010002 fmul	f0=400D4A57 f0=400D4A57 f1=3F000000
- 14d.[ 16b] xAC230018 sti	g1=524228 g3=0 24
- 14e.[ 16c] x40210020 subi	g1=524228 g1=524228 32
- 14f.[ 16d] xC0000125 call	125
- 150.[ 125] x46200806 fmov	f1=3F000000 f17=3F800000
- 151.[ 126] x46A01006 fmov	f2=00000101 f21=41100000
- 152.[ 127] x44001802 fmul	f3=BF6F160C f0=3F8D4A57 f0=3F8D4A57
- 153.[ 128] x46002006 fmov	f4=00000000 f16=00000000
- 154.[ 129] xE4200000 fsti	f0=3F8D4A57 g1=524192 0
- 155.[ 12a] xE4210004 fsti	f1=3F800000 g1=524192 4
- 156.[ 12b] x44600806 fmov	f1=3F800000 f3=3F9BF5F3
- 157.[ 12c] x44400006 fmov	f0=3F8D4A57 f2=41100000
- 158.[ 12d] x44801006 fmov	f2=41100000 f4=00000000
- 159.[ 12e] x4021000C subi	g1=524192 g1=524192 12
- 15a.[ 12f] xC000011B call	11b
- 15b.[ 11b] x46C01806 fmov	f3=3F9BF5F3 f22=40200000
- 15c.[ 11c] xE8030007 fjlt	f0=41100000 f3=40200000 7
- 15d.[ 11d] x46401806 fmov	f3=40200000 f18=40000000
- 15e.[ 11e] x44031801 fsub	f3=40000000 f0=41100000 f3=40000000
- 15f.[ 11f] x44020001 fsub	f0=41100000 f0=41100000 f2=00000000
- 160.[ 120] x44201003 fdiv	f2=00000000 f1=3F9BF5F3 f0=41100000
- 161.[ 121] x44600006 fmov	f0=41100000 f3=40E00000
- 162.[ 122] x0800011B jmp	11b
- 163.[ 11b] x46C01806 fmov	f3=40E00000 f22=40200000
- 164.[ 11c] xE8030007 fjlt	f0=40E00000 f3=40200000 7
- 165.[ 11d] x46401806 fmov	f3=40200000 f18=40000000
- 166.[ 11e] x44031801 fsub	f3=40000000 f0=40E00000 f3=40000000
- 167.[ 11f] x44020001 fsub	f0=40E00000 f0=40E00000 f2=3E0AA1BA
- 168.[ 120] x44201003 fdiv	f2=3E0AA1BA f1=3F9BF5F3 f0=40DBAAF2
- 169.[ 121] x44600006 fmov	f0=40DBAAF2 f3=40A00000
- 16a.[ 122] x0800011B jmp	11b
- 16b.[ 11b] x46C01806 fmov	f3=40A00000 f22=40200000
- 16c.[ 11c] xE8030007 fjlt	f0=40A00000 f3=40200000 7
- 16d.[ 11d] x46401806 fmov	f3=40200000 f18=40000000
- 16e.[ 11e] x44031801 fsub	f3=40000000 f0=40A00000 f3=40000000
- 16f.[ 11f] x44020001 fsub	f0=40A00000 f0=40A00000 f2=3E35C18E
- 170.[ 120] x44201003 fdiv	f2=3E35C18E f1=3F9BF5F3 f0=409A51F4
- 171.[ 121] x44600006 fmov	f0=409A51F4 f3=40400000
- 172.[ 122] x0800011B jmp	11b
- 173.[ 11b] x46C01806 fmov	f3=40400000 f22=40200000
- 174.[ 11c] xE8030007 fjlt	f0=40400000 f3=40200000 7
- 175.[ 11d] x46401806 fmov	f3=40200000 f18=40000000
- 176.[ 11e] x44031801 fsub	f3=40000000 f0=40400000 f3=40000000
- 177.[ 11f] x44020001 fsub	f0=40400000 f0=40400000 f2=3E815C5E
- 178.[ 120] x44201003 fdiv	f2=3E815C5E f1=3F9BF5F3 f0=402FD474
- 179.[ 121] x44600006 fmov	f0=402FD474 f3=3F800000
- 17a.[ 122] x0800011B jmp	11b
- 17b.[ 11b] x46C01806 fmov	f3=3F800000 f22=40200000
- 17c.[ 11c] xE8030007 fjlt	f0=3F800000 f3=40200000 7
- 17d.[ 123] x44400006 fmov	f0=3F800000 f2=3EE3124B
- 17e.[ 124] xE0000000 return
- 17f.[ 130] x2021000C addi	g1=524180 g1=524180 12
- 180.[ 131] xC4210004 fldi	f1=3F9BF5F3 g1=524192 4
- 181.[ 132] x44200001 fsub	f0=3EE3124B f1=3F800000 f0=3EE3124B
- 182.[ 133] xC4210000 fldi	f1=3F800000 g1=524192 0
- 183.[ 134] x44200003 fdiv	f0=3F0E76DA f1=3F8D4A57 f0=3F0E76DA
- 184.[ 135] xE0000000 return
- 185.[ 16e] x20210020 addi	g1=524196 g1=524196 32
- 186.[ 16f] x46400806 fmov	f1=3F8D4A57 f18=40000000
- 187.[ 170] x44200802 fmul	f1=40000000 f1=40000000 f0=3FFDE401
- 188.[ 171] x46201006 fmov	f2=3EE3124B f17=3F800000
- 189.[ 172] x44000002 fmul	f0=3FFDE401 f0=3FFDE401 f0=3FFDE401
- 18a.[ 173] x44400000 fadd	f0=407BCC75 f2=3F800000 f0=407BCC75
- 18b.[ 174] x44200003 fdiv	f0=409DE63A f1=407DE401 f0=409DE63A
- 18c.[ 175] x8C230018 ldi	g1=524228 g3=0 24
- 18d.[ 176] x48600002 jne	g3=0 g0=0 2
- 18e.[ 177] x08000119 jmp	119
- 18f.[ 119] x44000007 fneg	f0=3F4DD08F f0=3F4DD08F
- 190.[ 11a] xE0000000 return
- 191.[ 101] x2021000C addi	g1=524232 g1=524232 12
- 192.[ 102] x47000806 fmov	f1=407DE401 f24=40900000
- 193.[ 103] x44010000 fadd	f0=BF4DD08F f0=BF4DD08F f1=40900000
- 194.[ 104] x46E00806 fmov	f1=40900000 f23=42413381
- 195.[ 105] x44010001 fsub	f0=406C8BDC f0=406C8BDC f1=42413381
- 196.[ 106] x3C60000F mvhi	g3=0 15
- 197.[ 107] x1C604240 mvlo	g3=983040 16960
- 198.[ 108] xE4200008 fsti	f0=C2326AC3 g1=524244 8
- 199.[ 109] x40210010 subi	g1=524244 g1=524244 16
- 19a.[ 10a] xC0000057 call	57
- 19b.[  57] x68030006 jlt	g0=0 g3=1000000 6
- 19c.[  5d] x20050010 addi	g0=0 g5=524256 16
- 19d.[  5e] xC4A10000 fldi	f1=42413381 g5=16 0
- 19e.[  5f] x20050014 addi	g0=0 g5=16 20
- 19f.[  60] x8CA40000 ldi	g5=20 g4=0 0
- 1a0.[  61] x2005000C addi	g0=0 g5=20 12
- 1a1.[  62] x8CA50000 ldi	g5=12 g5=12 0
- 1a2.[  63] x68A30007 jlt	g5=8388608 g3=1000000 7
- 1a3.[  64] x28A30006 jeq	g5=8388608 g3=1000000 6
- 1a4.[  65] x00641820 add	g3=1000000 g3=1000000 g4=1258291200
- 1a5.[  66] xAC230000 sti	g1=524224 g3=1259291200 0
- 1a6.[  67] xC4200000 fldi	f0=C2326AC3 g1=524224 0
- 1a7.[  68] x44010001 fsub	f0=4B0F4240 f0=4B0F4240 f1=4B000000
- 1a8.[  69] xE0000000 return
- 1a9.[ 10b] x20210010 addi	g1=524228 g1=524228 16
- 1aa.[ 10c] xC4210008 fldi	f1=4B000000 g1=524244 8
- 1ab.[ 10d] x44200002 fmul	f0=49742400 f1=C2326AC3 f0=49742400
- 1ac.[ 10e] x40210010 subi	g1=524244 g1=524244 16
- 1ad.[ 10f] xC0000076 call	76
- 1ae.[  76] x20030000 addi	g0=0 g3=1259291200 0
- 1af.[  77] xC4610000 fldi	f1=C2326AC3 g3=0 0
- 1b0.[  78] xE8200006 fjlt	f1=00000000 f0=CC2A26D9 6
- 1b1.[  79] xC8200005 fjeq	f1=00000000 f0=CC2A26D9 5
- 1b2.[  7a] x44000007 fneg	f0=CC2A26D9 f0=CC2A26D9
- 1b3.[  7b] xC000007E call	7e
- 1b4.[  7e] xC0000027 call	27
- 1b5.[  27] x44000806 fmov	f1=00000000 f0=4C2A26D9
- 1b6.[  28] x20030000 addi	g0=0 g3=0 0
- 1b7.[  29] xC4640000 fldi	f4=00000000 g3=0 0
- 1b8.[  2a] xE8800015 fjlt	f4=00000000 f0=4C2A26D9 15
- 1b9.[  3f] x20030010 addi	g0=0 g3=0 16
- 1ba.[  40] xC4620000 fldi	f2=3F800000 g3=16 0
- 1bb.[  41] xE8020003 fjlt	f0=4C2A26D9 f2=4B000000 3
- 1bc.[  42] xC8020002 fjeq	f0=4C2A26D9 f2=4B000000 2
- 1bd.[  43] xE0000000 return
- 1be.[  7f] x20040010 addi	g0=0 g4=1258291200 16
- 1bf.[  80] xC4820000 fldi	f2=4B000000 g4=16 0
- 1c0.[  81] x20040014 addi	g0=0 g4=16 20
- 1c1.[  82] x8C840000 ldi	g4=20 g4=20 0
- 1c2.[  83] xE8400007 fjlt	f2=4B000000 f0=4C2A26D9 7
- 1c3.[  8a] x2005000C addi	g0=0 g5=8388608 12
- 1c4.[  8b] x8CA50000 ldi	g5=12 g5=12 0
- 1c5.[  8c] x20030000 addi	g0=0 g3=16 0
- 1c6.[  8d] x44020001 fsub	f0=4C2A26D9 f0=4C2A26D9 f2=4B000000
- 1c7.[  8e] x00651820 add	g3=0 g3=0 g5=8388608
- 1c8.[  8f] xE840FFFE fjlt	f2=4B000000 f0=4C0A26D9 fffffffe
- 1c9.[  8d] x44020001 fsub	f0=4C0A26D9 f0=4C0A26D9 f2=4B000000
- 1ca.[  8e] x00651820 add	g3=8388608 g3=8388608 g5=8388608
- 1cb.[  8f] xE840FFFE fjlt	f2=4B000000 f0=4BD44DB2 fffffffe
- 1cc.[  8d] x44020001 fsub	f0=4BD44DB2 f0=4BD44DB2 f2=4B000000
- 1cd.[  8e] x00651820 add	g3=16777216 g3=16777216 g5=8388608
- 1ce.[  8f] xE840FFFE fjlt	f2=4B000000 f0=4B944DB2 fffffffe
- 1cf.[  8d] x44020001 fsub	f0=4B944DB2 f0=4B944DB2 f2=4B000000
- 1d0.[  8e] x00651820 add	g3=25165824 g3=25165824 g5=8388608
- 1d1.[  8f] xE840FFFE fjlt	f2=4B000000 f0=4B289B64 fffffffe
- 1d2.[  8d] x44020001 fsub	f0=4B289B64 f0=4B289B64 f2=4B000000
- 1d3.[  8e] x00651820 add	g3=33554432 g3=33554432 g5=8388608
- 1d4.[  8f] xE840FFFE fjlt	f2=4B000000 f0=4A226D90 fffffffe
- 1d5.[  90] xC840FFFD fjeq	f2=4B000000 f0=4A226D90 fffffffd
- 1d6.[  91] x44020000 fadd	f0=4A226D90 f0=4A226D90 f2=4B000000
- 1d7.[  92] xE4200000 fsti	f0=4B289B64 g1=524220 0
- 1d8.[  93] x8C250000 ldi	g1=524220 g5=8388608 0
- 1d9.[  94] x00A42822 sub	g5=1260952420 g5=1260952420 g4=1258291200
- 1da.[  95] x00A31820 add	g3=41943040 g5=2661220 g3=41943040
- 1db.[  96] xE0000000 return
- 1dc.[  7c] x00031822 sub	g3=44604260 g0=0 g3=44604260
- 1dd.[  7d] xE0000000 return
- 1de.[ 110] xC000018D call	18d
- 1df.[ 18d] x686000E2 jlt	g3=-44604260 g0=0 e2
- 1e0.[ 26f] x2004002D addi	g0=0 g4=1258291200 45
- 1e1.[ 270] xAC230000 sti	g1=524224 g3=-44604260 0
- 1e2.[ 271] x04800001 output	g4=45
- 1e3.[ 272] x8C230000 ldi	g1=524224 g3=-44604260 0
- 1e4.[ 273] x00031822 sub	g3=-44604260 g0=0 g3=-44604260
- 1e5.[ 274] x0800018D jmp	18d
- 1e6.[ 18d] x686000E2 jlt	g3=44604260 g0=0 e2
- 1e7.[ 18e] x3C8005F5 mvhi	g4=45 1525
- 1e8.[ 18f] x1C80E100 mvlo	g4=99942445 -7936
- 1e9.[ 190] x20050000 addi	g0=0 g5=2661220 0
- 1ea.[ 191] x20060003 addi	g0=0 g6=0 3
- 1eb.[ 192] xAC230000 sti	g1=524224 g3=44604260 0
- 1ec.[ 193] x40210008 subi	g1=524224 g1=524224 8
- 1ed.[ 194] xC000017E call	17e
- 1ee.[ 17e] x00A63820 add	g7=0 g5=0 g6=3
- 1ef.[ 17f] xA8E70001 srli	g7=3 g7=3 1
- 1f0.[ 180] x00E44018 mul	g8=0 g7=1 g4=100000000
- 1f1.[ 181] x00C54822 sub	g9=0 g6=3 g5=0
- 1f2.[ 182] x6B890003 jlt	g28=1 g9=3 3
- 1f3.[ 185] x69030006 jlt	g8=100000000 g3=44604260 6
- 1f4.[ 186] x49030003 jne	g8=100000000 g3=44604260 3
- 1f5.[ 189] x20E60000 addi	g7=1 g6=3 0
- 1f6.[ 18a] x0800017E jmp	17e
- 1f7.[ 17e] x00A63820 add	g7=1 g5=0 g6=1
- 1f8.[ 17f] xA8E70001 srli	g7=1 g7=1 1
- 1f9.[ 180] x00E44018 mul	g8=100000000 g7=0 g4=100000000
- 1fa.[ 181] x00C54822 sub	g9=3 g6=1 g5=0
- 1fb.[ 182] x6B890003 jlt	g28=1 g9=1 3
- 1fc.[ 183] x20A30000 addi	g5=0 g3=44604260 0
- 1fd.[ 184] xE0000000 return
- 1fe.[ 195] x20210008 addi	g1=524216 g1=524216 8
- 1ff.[ 196] x3C8005F5 mvhi	g4=100000000 1525
- 200.[ 197] x1C80E100 mvlo	g4=100000000 -7936
- 201.[ 198] x00642018 mul	g4=100000000 g3=0 g4=100000000
- 202.[ 199] x8C250000 ldi	g1=524224 g5=0 0
- 203.[ 19a] x00A42022 sub	g4=0 g5=44604260 g4=0
- 204.[ 19b] xAC240004 sti	g1=524224 g4=44604260 4
- 205.[ 19c] x68030003 jlt	g0=0 g3=0 3
- 206.[ 19d] x20030000 addi	g0=0 g3=0 0
- 207.[ 19e] x080001A3 jmp	1a3
- 208.[ 1a3] x3C800098 mvhi	g4=44604260 152
- 209.[ 1a4] x1C809680 mvlo	g4=10001252 -27008
- 20a.[ 1a5] x20050000 addi	g0=0 g5=44604260 0
- 20b.[ 1a6] x2006000A addi	g0=0 g6=1 10
- 20c.[ 1a7] x8C270004 ldi	g1=524224 g7=0 4
- 20d.[ 1a8] xAC230008 sti	g1=524224 g3=0 8
- 20e.[ 1a9] x20E30000 addi	g7=44604260 g3=0 0
- 20f.[ 1aa] x40210010 subi	g1=524224 g1=524224 16
- 210.[ 1ab] xC000017E call	17e
- 211.[ 17e] x00A63820 add	g7=44604260 g5=0 g6=10
- 212.[ 17f] xA8E70001 srli	g7=10 g7=10 1
- 213.[ 180] x00E44018 mul	g8=0 g7=5 g4=10000000
- 214.[ 181] x00C54822 sub	g9=1 g6=10 g5=0
- 215.[ 182] x6B890003 jlt	g28=1 g9=10 3
- 216.[ 185] x69030006 jlt	g8=50000000 g3=44604260 6
- 217.[ 186] x49030003 jne	g8=50000000 g3=44604260 3
- 218.[ 189] x20E60000 addi	g7=5 g6=10 0
- 219.[ 18a] x0800017E jmp	17e
- 21a.[ 17e] x00A63820 add	g7=5 g5=0 g6=5
- 21b.[ 17f] xA8E70001 srli	g7=5 g7=5 1
- 21c.[ 180] x00E44018 mul	g8=50000000 g7=2 g4=10000000
- 21d.[ 181] x00C54822 sub	g9=10 g6=5 g5=0
- 21e.[ 182] x6B890003 jlt	g28=1 g9=5 3
- 21f.[ 185] x69030006 jlt	g8=20000000 g3=44604260 6
- 220.[ 18b] x20E50000 addi	g7=2 g5=0 0
- 221.[ 18c] x0800017E jmp	17e
- 222.[ 17e] x00A63820 add	g7=2 g5=2 g6=5
- 223.[ 17f] xA8E70001 srli	g7=7 g7=7 1
- 224.[ 180] x00E44018 mul	g8=20000000 g7=3 g4=10000000
- 225.[ 181] x00C54822 sub	g9=5 g6=5 g5=2
- 226.[ 182] x6B890003 jlt	g28=1 g9=3 3
- 227.[ 185] x69030006 jlt	g8=30000000 g3=44604260 6
- 228.[ 18b] x20E50000 addi	g7=3 g5=2 0
- 229.[ 18c] x0800017E jmp	17e
- 22a.[ 17e] x00A63820 add	g7=3 g5=3 g6=5
- 22b.[ 17f] xA8E70001 srli	g7=8 g7=8 1
- 22c.[ 180] x00E44018 mul	g8=30000000 g7=4 g4=10000000
- 22d.[ 181] x00C54822 sub	g9=3 g6=5 g5=3
- 22e.[ 182] x6B890003 jlt	g28=1 g9=2 3
- 22f.[ 185] x69030006 jlt	g8=40000000 g3=44604260 6
- 230.[ 18b] x20E50000 addi	g7=4 g5=3 0
- 231.[ 18c] x0800017E jmp	17e
- 232.[ 17e] x00A63820 add	g7=4 g5=4 g6=5
- 233.[ 17f] xA8E70001 srli	g7=9 g7=9 1
- 234.[ 180] x00E44018 mul	g8=40000000 g7=4 g4=10000000
- 235.[ 181] x00C54822 sub	g9=2 g6=5 g5=4
- 236.[ 182] x6B890003 jlt	g28=1 g9=1 3
- 237.[ 183] x20A30000 addi	g5=4 g3=44604260 0
- 238.[ 184] xE0000000 return
- 239.[ 1ac] x20210010 addi	g1=524208 g1=524208 16
- 23a.[ 1ad] x3C800098 mvhi	g4=10000000 152
- 23b.[ 1ae] x1C809680 mvlo	g4=10000000 -27008
- 23c.[ 1af] x00642018 mul	g4=10000000 g3=4 g4=10000000
- 23d.[ 1b0] x8C250004 ldi	g1=524224 g5=4 4
- 23e.[ 1b1] x00A42022 sub	g4=40000000 g5=44604260 g4=40000000
- 23f.[ 1b2] xAC24000C sti	g1=524224 g4=4604260 12
- 240.[ 1b3] x6803000A jlt	g0=0 g3=4 a
- 241.[ 1bd] x20050030 addi	g0=0 g5=44604260 48
- 242.[ 1be] x00A31820 add	g3=4 g5=48 g3=4
- 243.[ 1bf] x04600001 output	g3=52
- 244.[ 1c0] x20030001 addi	g0=0 g3=52 1
- 245.[ 1c1] x3C80000F mvhi	g4=4604260 15
- 246.[ 1c2] x1C804240 mvlo	g4=999780 16960
- 247.[ 1c3] x20050000 addi	g0=0 g5=48 0
- 248.[ 1c4] x2006000A addi	g0=0 g6=5 10
- 249.[ 1c5] x8C27000C ldi	g1=524224 g7=4 12
- 24a.[ 1c6] xAC230010 sti	g1=524224 g3=1 16
- 24b.[ 1c7] x20E30000 addi	g7=4604260 g3=1 0
- 24c.[ 1c8] x40210018 subi	g1=524224 g1=524224 24
- 24d.[ 1c9] xC000017E call	17e
- 24e.[ 17e] x00A63820 add	g7=4604260 g5=0 g6=10
- 24f.[ 17f] xA8E70001 srli	g7=10 g7=10 1
- 250.[ 180] x00E44018 mul	g8=40000000 g7=5 g4=1000000
- 251.[ 181] x00C54822 sub	g9=1 g6=10 g5=0
- 252.[ 182] x6B890003 jlt	g28=1 g9=10 3
- 253.[ 185] x69030006 jlt	g8=5000000 g3=4604260 6
- 254.[ 186] x49030003 jne	g8=5000000 g3=4604260 3
- 255.[ 189] x20E60000 addi	g7=5 g6=10 0
- 256.[ 18a] x0800017E jmp	17e
- 257.[ 17e] x00A63820 add	g7=5 g5=0 g6=5
- 258.[ 17f] xA8E70001 srli	g7=5 g7=5 1
- 259.[ 180] x00E44018 mul	g8=5000000 g7=2 g4=1000000
- 25a.[ 181] x00C54822 sub	g9=10 g6=5 g5=0
- 25b.[ 182] x6B890003 jlt	g28=1 g9=5 3
- 25c.[ 185] x69030006 jlt	g8=2000000 g3=4604260 6
- 25d.[ 18b] x20E50000 addi	g7=2 g5=0 0
- 25e.[ 18c] x0800017E jmp	17e
- 25f.[ 17e] x00A63820 add	g7=2 g5=2 g6=5
- 260.[ 17f] xA8E70001 srli	g7=7 g7=7 1
- 261.[ 180] x00E44018 mul	g8=2000000 g7=3 g4=1000000
- 262.[ 181] x00C54822 sub	g9=5 g6=5 g5=2
- 263.[ 182] x6B890003 jlt	g28=1 g9=3 3
- 264.[ 185] x69030006 jlt	g8=3000000 g3=4604260 6
- 265.[ 18b] x20E50000 addi	g7=3 g5=2 0
- 266.[ 18c] x0800017E jmp	17e
- 267.[ 17e] x00A63820 add	g7=3 g5=3 g6=5
- 268.[ 17f] xA8E70001 srli	g7=8 g7=8 1
- 269.[ 180] x00E44018 mul	g8=3000000 g7=4 g4=1000000
- 26a.[ 181] x00C54822 sub	g9=3 g6=5 g5=3
- 26b.[ 182] x6B890003 jlt	g28=1 g9=2 3
- 26c.[ 185] x69030006 jlt	g8=4000000 g3=4604260 6
- 26d.[ 18b] x20E50000 addi	g7=4 g5=3 0
- 26e.[ 18c] x0800017E jmp	17e
- 26f.[ 17e] x00A63820 add	g7=4 g5=4 g6=5
- 270.[ 17f] xA8E70001 srli	g7=9 g7=9 1
- 271.[ 180] x00E44018 mul	g8=4000000 g7=4 g4=1000000
- 272.[ 181] x00C54822 sub	g9=2 g6=5 g5=4
- 273.[ 182] x6B890003 jlt	g28=1 g9=1 3
- 274.[ 183] x20A30000 addi	g5=4 g3=4604260 0
- 275.[ 184] xE0000000 return
- 276.[ 1ca] x20210018 addi	g1=524200 g1=524200 24
- 277.[ 1cb] x3C80000F mvhi	g4=1000000 15
- 278.[ 1cc] x1C804240 mvlo	g4=1000000 16960
- 279.[ 1cd] x00642018 mul	g4=1000000 g3=4 g4=1000000
- 27a.[ 1ce] x8C25000C ldi	g1=524224 g5=4 12
- 27b.[ 1cf] x00A42022 sub	g4=4000000 g5=4604260 g4=4000000
- 27c.[ 1d0] xAC240014 sti	g1=524224 g4=604260 20
- 27d.[ 1d1] x6803000A jlt	g0=0 g3=4 a
- 27e.[ 1db] x20050030 addi	g0=0 g5=4604260 48
- 27f.[ 1dc] x00A31820 add	g3=4 g5=48 g3=4
- 280.[ 1dd] x04600001 output	g3=52
- 281.[ 1de] x20030001 addi	g0=0 g3=52 1
- 282.[ 1df] x3C800001 mvhi	g4=604260 1
- 283.[ 1e0] x1C8086A0 mvlo	g4=79972 -31072
- 284.[ 1e1] x20050000 addi	g0=0 g5=48 0
- 285.[ 1e2] x2006000A addi	g0=0 g6=5 10
- 286.[ 1e3] x8C270014 ldi	g1=524224 g7=4 20
- 287.[ 1e4] xAC230018 sti	g1=524224 g3=1 24
- 288.[ 1e5] x20E30000 addi	g7=604260 g3=1 0
- 289.[ 1e6] x40210020 subi	g1=524224 g1=524224 32
- 28a.[ 1e7] xC000017E call	17e
- 28b.[ 17e] x00A63820 add	g7=604260 g5=0 g6=10
- 28c.[ 17f] xA8E70001 srli	g7=10 g7=10 1
- 28d.[ 180] x00E44018 mul	g8=4000000 g7=5 g4=100000
- 28e.[ 181] x00C54822 sub	g9=1 g6=10 g5=0
- 28f.[ 182] x6B890003 jlt	g28=1 g9=10 3
- 290.[ 185] x69030006 jlt	g8=500000 g3=604260 6
- 291.[ 18b] x20E50000 addi	g7=5 g5=0 0
- 292.[ 18c] x0800017E jmp	17e
- 293.[ 17e] x00A63820 add	g7=5 g5=5 g6=10
- 294.[ 17f] xA8E70001 srli	g7=15 g7=15 1
- 295.[ 180] x00E44018 mul	g8=500000 g7=7 g4=100000
- 296.[ 181] x00C54822 sub	g9=10 g6=10 g5=5
- 297.[ 182] x6B890003 jlt	g28=1 g9=5 3
- 298.[ 185] x69030006 jlt	g8=700000 g3=604260 6
- 299.[ 186] x49030003 jne	g8=700000 g3=604260 3
- 29a.[ 189] x20E60000 addi	g7=7 g6=10 0
- 29b.[ 18a] x0800017E jmp	17e
- 29c.[ 17e] x00A63820 add	g7=7 g5=5 g6=7
- 29d.[ 17f] xA8E70001 srli	g7=12 g7=12 1
- 29e.[ 180] x00E44018 mul	g8=700000 g7=6 g4=100000
- 29f.[ 181] x00C54822 sub	g9=5 g6=7 g5=5
- 2a0.[ 182] x6B890003 jlt	g28=1 g9=2 3
- 2a1.[ 185] x69030006 jlt	g8=600000 g3=604260 6
- 2a2.[ 18b] x20E50000 addi	g7=6 g5=5 0
- 2a3.[ 18c] x0800017E jmp	17e
- 2a4.[ 17e] x00A63820 add	g7=6 g5=6 g6=7
- 2a5.[ 17f] xA8E70001 srli	g7=13 g7=13 1
- 2a6.[ 180] x00E44018 mul	g8=600000 g7=6 g4=100000
- 2a7.[ 181] x00C54822 sub	g9=2 g6=7 g5=6
- 2a8.[ 182] x6B890003 jlt	g28=1 g9=1 3
- 2a9.[ 183] x20A30000 addi	g5=6 g3=604260 0
- 2aa.[ 184] xE0000000 return
- 2ab.[ 1e8] x20210020 addi	g1=524192 g1=524192 32
- 2ac.[ 1e9] x3C800001 mvhi	g4=100000 1
- 2ad.[ 1ea] x1C8086A0 mvlo	g4=100000 -31072
- 2ae.[ 1eb] x00642018 mul	g4=100000 g3=6 g4=100000
- 2af.[ 1ec] x8C250014 ldi	g1=524224 g5=6 20
- 2b0.[ 1ed] x00A42022 sub	g4=600000 g5=604260 g4=600000
- 2b1.[ 1ee] xAC24001C sti	g1=524224 g4=4260 28
- 2b2.[ 1ef] x6803000A jlt	g0=0 g3=6 a
- 2b3.[ 1f9] x20050030 addi	g0=0 g5=604260 48
- 2b4.[ 1fa] x00A31820 add	g3=6 g5=48 g3=6
- 2b5.[ 1fb] x04600001 output	g3=54
- 2b6.[ 1fc] x20030001 addi	g0=0 g3=54 1
- 2b7.[ 1fd] x20042710 addi	g0=0 g4=4260 10000
- 2b8.[ 1fe] x20050000 addi	g0=0 g5=48 0
- 2b9.[ 1ff] x2006000A addi	g0=0 g6=7 10
- 2ba.[ 200] x8C27001C ldi	g1=524224 g7=6 28
- 2bb.[ 201] xAC230020 sti	g1=524224 g3=1 32
- 2bc.[ 202] x20E30000 addi	g7=4260 g3=1 0
- 2bd.[ 203] x40210028 subi	g1=524224 g1=524224 40
- 2be.[ 204] xC000017E call	17e
- 2bf.[ 17e] x00A63820 add	g7=4260 g5=0 g6=10
- 2c0.[ 17f] xA8E70001 srli	g7=10 g7=10 1
- 2c1.[ 180] x00E44018 mul	g8=600000 g7=5 g4=10000
- 2c2.[ 181] x00C54822 sub	g9=1 g6=10 g5=0
- 2c3.[ 182] x6B890003 jlt	g28=1 g9=10 3
- 2c4.[ 185] x69030006 jlt	g8=50000 g3=4260 6
- 2c5.[ 186] x49030003 jne	g8=50000 g3=4260 3
- 2c6.[ 189] x20E60000 addi	g7=5 g6=10 0
- 2c7.[ 18a] x0800017E jmp	17e
- 2c8.[ 17e] x00A63820 add	g7=5 g5=0 g6=5
- 2c9.[ 17f] xA8E70001 srli	g7=5 g7=5 1
- 2ca.[ 180] x00E44018 mul	g8=50000 g7=2 g4=10000
- 2cb.[ 181] x00C54822 sub	g9=10 g6=5 g5=0
- 2cc.[ 182] x6B890003 jlt	g28=1 g9=5 3
- 2cd.[ 185] x69030006 jlt	g8=20000 g3=4260 6
- 2ce.[ 186] x49030003 jne	g8=20000 g3=4260 3
- 2cf.[ 189] x20E60000 addi	g7=2 g6=5 0
- 2d0.[ 18a] x0800017E jmp	17e
- 2d1.[ 17e] x00A63820 add	g7=2 g5=0 g6=2
- 2d2.[ 17f] xA8E70001 srli	g7=2 g7=2 1
- 2d3.[ 180] x00E44018 mul	g8=20000 g7=1 g4=10000
- 2d4.[ 181] x00C54822 sub	g9=5 g6=2 g5=0
- 2d5.[ 182] x6B890003 jlt	g28=1 g9=2 3
- 2d6.[ 185] x69030006 jlt	g8=10000 g3=4260 6
- 2d7.[ 186] x49030003 jne	g8=10000 g3=4260 3
- 2d8.[ 189] x20E60000 addi	g7=1 g6=2 0
- 2d9.[ 18a] x0800017E jmp	17e
- 2da.[ 17e] x00A63820 add	g7=1 g5=0 g6=1
- 2db.[ 17f] xA8E70001 srli	g7=1 g7=1 1
- 2dc.[ 180] x00E44018 mul	g8=10000 g7=0 g4=10000
- 2dd.[ 181] x00C54822 sub	g9=2 g6=1 g5=0
- 2de.[ 182] x6B890003 jlt	g28=1 g9=1 3
- 2df.[ 183] x20A30000 addi	g5=0 g3=4260 0
- 2e0.[ 184] xE0000000 return
- 2e1.[ 205] x20210028 addi	g1=524184 g1=524184 40
- 2e2.[ 206] x20042710 addi	g0=0 g4=10000 10000
- 2e3.[ 207] x00642018 mul	g4=10000 g3=0 g4=10000
- 2e4.[ 208] x8C25001C ldi	g1=524224 g5=0 28
- 2e5.[ 209] x00A42022 sub	g4=0 g5=4260 g4=0
- 2e6.[ 20a] xAC240024 sti	g1=524224 g4=4260 36
- 2e7.[ 20b] x6803000A jlt	g0=0 g3=0 a
- 2e8.[ 20c] x8C250020 ldi	g1=524224 g5=4260 32
- 2e9.[ 20d] x48A00003 jne	g5=1 g0=0 3
- 2ea.[ 210] x20050030 addi	g0=0 g5=1 48
- 2eb.[ 211] x00A31820 add	g3=0 g5=48 g3=0
- 2ec.[ 212] x04600001 output	g3=48
- 2ed.[ 213] x20030001 addi	g0=0 g3=48 1
- 2ee.[ 214] x08000219 jmp	219
- 2ef.[ 219] x200403E8 addi	g0=0 g4=4260 1000
- 2f0.[ 21a] x20050000 addi	g0=0 g5=48 0
- 2f1.[ 21b] x2006000A addi	g0=0 g6=1 10
- 2f2.[ 21c] x8C270024 ldi	g1=524224 g7=0 36
- 2f3.[ 21d] xAC230028 sti	g1=524224 g3=1 40
- 2f4.[ 21e] x20E30000 addi	g7=4260 g3=1 0
- 2f5.[ 21f] x40210030 subi	g1=524224 g1=524224 48
- 2f6.[ 220] xC000017E call	17e
- 2f7.[ 17e] x00A63820 add	g7=4260 g5=0 g6=10
- 2f8.[ 17f] xA8E70001 srli	g7=10 g7=10 1
- 2f9.[ 180] x00E44018 mul	g8=0 g7=5 g4=1000
- 2fa.[ 181] x00C54822 sub	g9=1 g6=10 g5=0
- 2fb.[ 182] x6B890003 jlt	g28=1 g9=10 3
- 2fc.[ 185] x69030006 jlt	g8=5000 g3=4260 6
- 2fd.[ 186] x49030003 jne	g8=5000 g3=4260 3
- 2fe.[ 189] x20E60000 addi	g7=5 g6=10 0
- 2ff.[ 18a] x0800017E jmp	17e
- 300.[ 17e] x00A63820 add	g7=5 g5=0 g6=5
- 301.[ 17f] xA8E70001 srli	g7=5 g7=5 1
- 302.[ 180] x00E44018 mul	g8=5000 g7=2 g4=1000
- 303.[ 181] x00C54822 sub	g9=10 g6=5 g5=0
- 304.[ 182] x6B890003 jlt	g28=1 g9=5 3
- 305.[ 185] x69030006 jlt	g8=2000 g3=4260 6
- 306.[ 18b] x20E50000 addi	g7=2 g5=0 0
- 307.[ 18c] x0800017E jmp	17e
- 308.[ 17e] x00A63820 add	g7=2 g5=2 g6=5
- 309.[ 17f] xA8E70001 srli	g7=7 g7=7 1
- 30a.[ 180] x00E44018 mul	g8=2000 g7=3 g4=1000
- 30b.[ 181] x00C54822 sub	g9=5 g6=5 g5=2
- 30c.[ 182] x6B890003 jlt	g28=1 g9=3 3
- 30d.[ 185] x69030006 jlt	g8=3000 g3=4260 6
- 30e.[ 18b] x20E50000 addi	g7=3 g5=2 0
- 30f.[ 18c] x0800017E jmp	17e
- 310.[ 17e] x00A63820 add	g7=3 g5=3 g6=5
- 311.[ 17f] xA8E70001 srli	g7=8 g7=8 1
- 312.[ 180] x00E44018 mul	g8=3000 g7=4 g4=1000
- 313.[ 181] x00C54822 sub	g9=3 g6=5 g5=3
- 314.[ 182] x6B890003 jlt	g28=1 g9=2 3
- 315.[ 185] x69030006 jlt	g8=4000 g3=4260 6
- 316.[ 18b] x20E50000 addi	g7=4 g5=3 0
- 317.[ 18c] x0800017E jmp	17e
- 318.[ 17e] x00A63820 add	g7=4 g5=4 g6=5
- 319.[ 17f] xA8E70001 srli	g7=9 g7=9 1
- 31a.[ 180] x00E44018 mul	g8=4000 g7=4 g4=1000
- 31b.[ 181] x00C54822 sub	g9=2 g6=5 g5=4
- 31c.[ 182] x6B890003 jlt	g28=1 g9=1 3
- 31d.[ 183] x20A30000 addi	g5=4 g3=4260 0
- 31e.[ 184] xE0000000 return
- 31f.[ 221] x20210030 addi	g1=524176 g1=524176 48
- 320.[ 222] x606403E8 muli	g3=4 g4=1000 1000
- 321.[ 223] x8C250024 ldi	g1=524224 g5=4 36
- 322.[ 224] x00A42022 sub	g4=4000 g5=4260 g4=4000
- 323.[ 225] xAC24002C sti	g1=524224 g4=260 44
- 324.[ 226] x6803000A jlt	g0=0 g3=4 a
- 325.[ 230] x20050030 addi	g0=0 g5=4260 48
- 326.[ 231] x00A31820 add	g3=4 g5=48 g3=4
- 327.[ 232] x04600001 output	g3=52
- 328.[ 233] x20030001 addi	g0=0 g3=52 1
- 329.[ 234] x20040064 addi	g0=0 g4=260 100
- 32a.[ 235] x20050000 addi	g0=0 g5=48 0
- 32b.[ 236] x2006000A addi	g0=0 g6=5 10
- 32c.[ 237] x8C27002C ldi	g1=524224 g7=4 44
- 32d.[ 238] xAC230030 sti	g1=524224 g3=1 48
- 32e.[ 239] x20E30000 addi	g7=260 g3=1 0
- 32f.[ 23a] x40210038 subi	g1=524224 g1=524224 56
- 330.[ 23b] xC000017E call	17e
- 331.[ 17e] x00A63820 add	g7=260 g5=0 g6=10
- 332.[ 17f] xA8E70001 srli	g7=10 g7=10 1
- 333.[ 180] x00E44018 mul	g8=4000 g7=5 g4=100
- 334.[ 181] x00C54822 sub	g9=1 g6=10 g5=0
- 335.[ 182] x6B890003 jlt	g28=1 g9=10 3
- 336.[ 185] x69030006 jlt	g8=500 g3=260 6
- 337.[ 186] x49030003 jne	g8=500 g3=260 3
- 338.[ 189] x20E60000 addi	g7=5 g6=10 0
- 339.[ 18a] x0800017E jmp	17e
- 33a.[ 17e] x00A63820 add	g7=5 g5=0 g6=5
- 33b.[ 17f] xA8E70001 srli	g7=5 g7=5 1
- 33c.[ 180] x00E44018 mul	g8=500 g7=2 g4=100
- 33d.[ 181] x00C54822 sub	g9=10 g6=5 g5=0
- 33e.[ 182] x6B890003 jlt	g28=1 g9=5 3
- 33f.[ 185] x69030006 jlt	g8=200 g3=260 6
- 340.[ 18b] x20E50000 addi	g7=2 g5=0 0
- 341.[ 18c] x0800017E jmp	17e
- 342.[ 17e] x00A63820 add	g7=2 g5=2 g6=5
- 343.[ 17f] xA8E70001 srli	g7=7 g7=7 1
- 344.[ 180] x00E44018 mul	g8=200 g7=3 g4=100
- 345.[ 181] x00C54822 sub	g9=5 g6=5 g5=2
- 346.[ 182] x6B890003 jlt	g28=1 g9=3 3
- 347.[ 185] x69030006 jlt	g8=300 g3=260 6
- 348.[ 186] x49030003 jne	g8=300 g3=260 3
- 349.[ 189] x20E60000 addi	g7=3 g6=5 0
- 34a.[ 18a] x0800017E jmp	17e
- 34b.[ 17e] x00A63820 add	g7=3 g5=2 g6=3
- 34c.[ 17f] xA8E70001 srli	g7=5 g7=5 1
- 34d.[ 180] x00E44018 mul	g8=300 g7=2 g4=100
- 34e.[ 181] x00C54822 sub	g9=3 g6=3 g5=2
- 34f.[ 182] x6B890003 jlt	g28=1 g9=1 3
- 350.[ 183] x20A30000 addi	g5=2 g3=260 0
- 351.[ 184] xE0000000 return
- 352.[ 23c] x20210038 addi	g1=524168 g1=524168 56
- 353.[ 23d] x60640064 muli	g3=2 g4=100 100
- 354.[ 23e] x8C25002C ldi	g1=524224 g5=2 44
- 355.[ 23f] x00A42022 sub	g4=200 g5=260 g4=200
- 356.[ 240] xAC240034 sti	g1=524224 g4=60 52
- 357.[ 241] x6803000A jlt	g0=0 g3=2 a
- 358.[ 24b] x20050030 addi	g0=0 g5=260 48
- 359.[ 24c] x00A31820 add	g3=2 g5=48 g3=2
- 35a.[ 24d] x04600001 output	g3=50
- 35b.[ 24e] x20030001 addi	g0=0 g3=50 1
- 35c.[ 24f] x2004000A addi	g0=0 g4=60 10
- 35d.[ 250] x20050000 addi	g0=0 g5=48 0
- 35e.[ 251] x2006000A addi	g0=0 g6=3 10
- 35f.[ 252] x8C270034 ldi	g1=524224 g7=2 52
- 360.[ 253] xAC230038 sti	g1=524224 g3=1 56
- 361.[ 254] x20E30000 addi	g7=60 g3=1 0
- 362.[ 255] x40210040 subi	g1=524224 g1=524224 64
- 363.[ 256] xC000017E call	17e
- 364.[ 17e] x00A63820 add	g7=60 g5=0 g6=10
- 365.[ 17f] xA8E70001 srli	g7=10 g7=10 1
- 366.[ 180] x00E44018 mul	g8=200 g7=5 g4=10
- 367.[ 181] x00C54822 sub	g9=1 g6=10 g5=0
- 368.[ 182] x6B890003 jlt	g28=1 g9=10 3
- 369.[ 185] x69030006 jlt	g8=50 g3=60 6
- 36a.[ 18b] x20E50000 addi	g7=5 g5=0 0
- 36b.[ 18c] x0800017E jmp	17e
- 36c.[ 17e] x00A63820 add	g7=5 g5=5 g6=10
- 36d.[ 17f] xA8E70001 srli	g7=15 g7=15 1
- 36e.[ 180] x00E44018 mul	g8=50 g7=7 g4=10
- 36f.[ 181] x00C54822 sub	g9=10 g6=10 g5=5
- 370.[ 182] x6B890003 jlt	g28=1 g9=5 3
- 371.[ 185] x69030006 jlt	g8=70 g3=60 6
- 372.[ 186] x49030003 jne	g8=70 g3=60 3
- 373.[ 189] x20E60000 addi	g7=7 g6=10 0
- 374.[ 18a] x0800017E jmp	17e
- 375.[ 17e] x00A63820 add	g7=7 g5=5 g6=7
- 376.[ 17f] xA8E70001 srli	g7=12 g7=12 1
- 377.[ 180] x00E44018 mul	g8=70 g7=6 g4=10
- 378.[ 181] x00C54822 sub	g9=5 g6=7 g5=5
- 379.[ 182] x6B890003 jlt	g28=1 g9=2 3
- 37a.[ 185] x69030006 jlt	g8=60 g3=60 6
- 37b.[ 186] x49030003 jne	g8=60 g3=60 3
- 37c.[ 187] x20E30000 addi	g7=6 g3=60 0
- 37d.[ 188] xE0000000 return
- 37e.[ 257] x20210040 addi	g1=524160 g1=524160 64
- 37f.[ 258] x6064000A muli	g3=6 g4=10 10
- 380.[ 259] x8C250034 ldi	g1=524224 g5=5 52
- 381.[ 25a] x00A42022 sub	g4=60 g5=60 g4=60
- 382.[ 25b] xAC24003C sti	g1=524224 g4=0 60
- 383.[ 25c] x6803000A jlt	g0=0 g3=6 a
- 384.[ 266] x20050030 addi	g0=0 g5=60 48
- 385.[ 267] x00A31820 add	g3=6 g5=48 g3=6
- 386.[ 268] x04600001 output	g3=54
- 387.[ 269] x20030001 addi	g0=0 g3=54 1
- 388.[ 26a] x20030030 addi	g0=0 g3=1 48
- 389.[ 26b] x8C24003C ldi	g1=524224 g4=0 60
- 38a.[ 26c] x00641820 add	g3=48 g3=48 g4=0
- 38b.[ 26d] x04600001 output	g3=48
- 38c.[ 26e] xE0000000 return
- 38d.[ 111] x20210010 addi	g1=524228 g1=524228 16
- 38e.[ 112] x0000003F halt

diff --git a/ocore/tmpl/test1.s b/ocore/tmpl/test1.s
deleted file mode 100644
index 74a98b4..0000000
--- a/ocore/tmpl/test1.s
+++ /dev/null
@@ -1,27 +0,0 @@
-.init_heap_size 64
-D:
-	.long 0x12345678
-D2:
-	.long 0x87654321
-
-	jmp start
-func:
-	output %g3
-	return
-
-start:
-	mvlo %g3, 1
-	mvlo %g4, 1
-	mvlo %g5, 0
-	mvlo %g6, 6
-	mvhi %g3, 10
-Loop:
-	addi %g5, %g5, 1
-	srli %g3, %g3, 1
-	jlt %g5, %g6, Loop
-L:
-	sti %g3, %g2, 0
-	call func
-	srli %g3, %g3, 1
-	call func
-	halt
diff --git a/ocore/tmpl/tmp_io_dev.tmp b/ocore/tmpl/tmp_io_dev.tmp
index f3d0e71..a15efa0 100644
--- a/ocore/tmpl/tmp_io_dev.tmp
+++ b/ocore/tmpl/tmp_io_dev.tmp
@@ -12,21 +12,16 @@ architecture RTL of io_dev is
 	subtype buf_rec_t is std_logic_vector(7 downto 0);
 
 	type sendbuf_t is array (0 to 16383) of buf_rec_t;
-	--type sendbuf_t is array (0 to 4095) of buf_rec_t;
 	signal sendbuf : sendbuf_t;
-	--signal sendbuf0 : sendbuf_t;
-	--signal sendbuf1 : sendbuf_t;
-	--signal sendbuf2 : sendbuf_t;
-	--signal sendbuf3 : sendbuf_t;
 	signal send_head	: std_logic_vector(13 downto 0) := (others=>'0');
 	signal send_tail	: std_logic_vector(13 downto 0) := (others=>'0');
-	--signal stail	:	integer range 0 to 4095;
 
 	signal send_empty : std_logic := '0';
 
 	signal recv_head	: std_logic_vector(10 downto 0) := (others=>'0');
 	signal recv_tail	: std_logic_vector(10 downto 0) := ${oc.io_rtail()};
 	type recvbuf_t is array (0 to 2047) of buf_rec_t;
+
 	--signal recvbuf : recvbuf_t;
 	signal recvbuf : recvbuf_t := (
 <%include file="contest_sld.txt"/>
@@ -41,7 +36,6 @@ architecture RTL of io_dev is
 
 	
 begin
-	--stail <= conv_integer(send_tail(11 downto 0));
 	
 	rs232c: u232c generic map (wtime=>${next.wtime()})
 	port map (clk, u232c_o, send_go, send_busy, RS_TX, 
@@ -54,7 +48,7 @@ begin
 	send: process(CLK)
 	begin
 		if rising_edge(CLK) then
-			if CPU_WR(0)='1' then
+			if CPU_WR='1' then
 				sendbuf(conv_integer(send_tail)) <= CPU_OUT(7 downto 0);
 				send_tail <= send_tail + 1;
 			end if;

diff --git a/ocore/top.vhd b/ocore/top.vhd
index b3df125..cdae660 100644
--- a/ocore/top.vhd
+++ b/ocore/top.vhd
@@ -38,10 +38,10 @@ architecture board of top is
 	CLK	:	in	std_logic;
 	CLK2X	:	in	std_logic;
 	RESET	:	in	std_logic;
-	NYET	:	in	std_logic_vector(1 downto 0);
+	NYET	:	in	std_logic;
 	IO_IN	:	in	std_logic_vector(31 downto 0);
-	IO_WR	:	out std_logic_vector(1 downto 0);
-	IO_RD	:	out std_logic_vector(1 downto 0);
+	IO_WR	:	out std_logic;
+	IO_RD	:	out std_logic;
 	IO_OUT	:	out	std_logic_vector(31 downto 0);
 	SRAM_ZA	:	out std_logic_vector(19 downto 0);
 	SRAM_XWA:	out std_logic;
@@ -53,11 +53,11 @@ architecture board of top is
 	component io_dev is
 	port(
 		CLK		:	in	std_logic;
-		CPU_WR	:	in	std_logic_vector(1 downto 0);
-		CPU_RD	:	in	std_logic_vector(1 downto 0);
+		CPU_WR	:	in	std_logic;
+		CPU_RD	:	in	std_logic;
 		CPU_OUT	:	in	std_logic_vector(31 downto 0);
 		CPU_IN	:	out	std_logic_vector(31 downto 0);
-		NYET	:	out std_logic_vector(1 downto 0);
+		NYET	:	out std_logic;
 		RS_RX	:	in	std_logic;
 		RS_TX	:	out	std_logic
 	);
@@ -71,9 +71,9 @@ architecture board of top is
 
 	signal cpu_out : std_logic_vector(31 downto 0);
 	signal cpu_in : std_logic_vector(31 downto 0);
-	signal cpu_wr : std_logic_vector(1 downto 0);
-	signal cpu_rd : std_logic_vector(1 downto 0);
-	signal nyet   : std_logic_vector(1 downto 0);
+	signal cpu_wr : std_logic;
+	signal cpu_rd : std_logic;
+	signal nyet   : std_logic;
 
 	signal pipe   :std_logic;
 
@@ -110,10 +110,7 @@ begin
 
 	cpunit : core_c port map(clk, clk2x, reset, nyet, cpu_in, 
 		cpu_wr, cpu_rd, cpu_out, ZA, XWA, ZD);
-	iounit : io_dev port map (clk, cpu_wr, cpu_rd, cpu_out, cpu_in, nyet, RS_RX, RS_TX);
-			-- normal style.
-	--iounit : io_dev port map (clk, cpu_wr, cpu_rd, cpu_out, cpu_in, nyet, '1', RS_TX);  
-			-- no input. recvbuf is already filled with sld data.
+	iounit : io_dev port map (clk, cpu_wr, cpu_rd, cpu_out, cpu_in, nyet, '1', RS_TX);
 	--iounit : io_dev port map (clk, cpu_wr, cpu_rd, cpu_out, cpu_in, nyet, pipe, pipe);
 			-- like loopback.
 
