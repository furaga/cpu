
########################################################################
2012年  2月  9日 木曜日 02:07:45 JST

* OUTPUTの機構ができてきた。1KBまでならうまく送れるのではないか。
  リングバッファにするか、メモリを大きく確保する必要が出てくるだろう。

* 問題はINPUTのデータ待ちをするところ。input命令時にデータが入ってない、
  ことは有りうるのだろうか。転送開始の合図をこちらが送ったら、sldのデータ
  を送ってくるルールなはずだから、inputが相当遅くない限り考えなくてもいい
  かも。とりあえず、そういう状況になる場合を除外しておく。

########################################################################
2012年  2月  8日 水曜日 21:09:36 JST

* cpuのarchitecture名RTLは参考にしたサイトのものであるが、
  RTL: Register Transfer Level という意味。

########################################################################
2012年  2月  8日 水曜日 20:09:37 JST

* バイトアドレッシングにした。
* リトルエンディアン。

* I/Oやる。
* 今 => rom: 64KB, ram: 16KB, I/Obuf: ??KB
  sld(O(1KB)), ppm(O(100KB))の大きさを考えると、200KB程あれば十分。 
  過去の資料を見ると、recieve bufferを大きく確保していたりするけど
  計算間違っているだろうか。sldファイルはせいぜい2KB。

* ramはfibでの十分量でありもっと大きくする必要がある。

########################################################################
2012年  2月  8日 水曜日 19:07:03 JST

* バイトアドレッシングにする。
  今のところ命令種は限定されていて、
  - ld,st系はload word, store word
  - output, inputはoutput byte, input byte
  であり、コンパイラはそれに従っている。
* リトルエンディアン
* 編集前にpush


########################################################################
2012年  2月  8日 水曜日 16:30:08 JST 

* romは2^16 Words(2^6=64KB)もあればレイトレでも十分。pcも16bitで大丈夫。
  今のところは32bit 。

* I/O MMIO(Memory Mapped I/O)
* バイトアドレッシングにする。



########################################################################
2012年  2月  8日 水曜日 13:50:19 JST

- 実機でfib 6(ans:8), fib 9(ans:34), fib 15(ans:610),
  fib 30(ans:832040)をテスト
  I/Oが整備できてないから、下１桁の値だけ出力するような
  テストしかできていないが、どれも正しく8,4,0,0が出力されている。
  下１桁だけだが、vsim上で期待通りに動いているので、
  ちゃんと動いていると言える。

- ise,vsimでのテスト環境の整備ができた。

- 今後のdebugのためにもI/Oを整える。

[現状]
- 初期化、fibで使う命令列は大方正しい。
- メモリ(ram)の確保: fibでは十分。
- I/Oができていない。
- 安定している命令数20(output を含む)

[tmpl/op_complete_list.txt]
- 20
- MVLO - MVHI - ADD - SUB
- ADDI - SUBI - MULI - SLLI
- SRLI - MUL - LDI - JEQ
- JNE - JLT - JMP - LDI
- STI - CALL - (OUTPUT) - HALT

########################################################################
2012年  2月  8日 水曜日 07:12:26 JST

- 実機でテストするときは
	- ライブラリの宣言の修正。
	- clkの入れ方。
	- wtimeの値(top.vhd u232c.vhd)
を変更する必要がある。

########################################################################
2012年  2月  8日 水曜日 05:29:54 JST

- 実機は甘くなかった。
- testしていた状況を実機上で再現できていないせい
  だと考えられるのがまだ救い。
  resetの仕方と簡単なI/Oができれば動くだろう。
########################################################################
2012年  2月  7日 火曜日 23:45:15 JST

- fib 9用のI/Oができたはず。
- 次はI/Oを整えるべき。

########################################################################
2012年  2月  7日 火曜日 21:39:26 JST

- ghdlシミュレータ上でfib動作。
- 色々ミスってた。

########################################################################
2012年  2月  7日 火曜日 19:11:32 JST

- call, return はハードウェアでサポートする。
- fibで使われる操作は揃ったはず。
- これからfibのテスト。
- 未だにghdlシミュレータでのみのテスト。
- おそらくワードアドレッシング

########################################################################
2012年  2月  7日 火曜日 14:59:58 JST

・テンプレートができた。
	宣言は共通のものを使うことで、編集ミスをなくせるが、
	制御線をつなぐところは自動でやらなくてはいけない。
	どこまでテンプレートに任せるか考えどこ。
	とりあえずテンプレートは終了。

命令を揃える。
($ sudo apt-get install gtkwave ghdl)
$ make
$ make push
$ make wave
$ make rel (make reload)

########################################################################
2012年  2月  7日 火曜日 12:53:50 JST

開発環境の整備。
・テンプレートの使用。
- test環境整備。
- コンポーネントの宣言のミスをなくす。

失敗すると困るのでひとまずpush。

########################################################################
2012年  2月  7日 火曜日 02:39:19 JST

ステージ構成を少し変更。
こうしないと、レジスタからアドレスを指定しづらい。
基本的なパイプラインのステージ構成といわれるものを
参考にした。

-fetch phase
-decode phase
-exec phase 
-memory access phase
-write back phase

ramが大体できたはず。

次は命令を揃える。

基本的な動作はするが、まだ確認すべきことがある状態。
命令を揃えつつデバッグする。

########################################################################
2012年  2月  6日 月曜日 21:55:04 JST

できた。
・registerを32個に拡張。
・LinkRegister
・ゼロレジスタ
・初期化実装完了。

これから。
・rom、ramの実装の仕方。
・メガファンクションとは

まださき。
・I/O
・命令を揃える。

########################################################################
2012年  2月  6日 月曜日 19:35:00 JST

ghdlシミュレータでは動作。
初期化を実装する前。


########################################################################
2012年  2月  6日 月曜日 14:38:23 JST
下のアドレスに基づいてつくったコア。
http://laputa.cs.shinshu-u.ac.jp/~yizawa/design_cpu/index.html

ghdlシミュレータで正しく動作したとこまででpush。
実機で動くかは試していない。

($ sudo apt-get install gtkwave ghdl)
$ make
$ make wave


top.vhd : cpuにクロックとIOを入れる。
cpu15e.vhd : コアコントローラ？なぜ15？
clk_gen.vhd : 4つのclkを生成。

## fetch phase
	fetch.vhd : PROM_OUT <- ROM[PC]
## decode phase
	decode.vhd : PROM_OUT からOPCODEとOP_DATAを分離。
	reg_dc.vhd : 引数となるレジスタA, B、又、そのインデックスを返す。
	ram_dc.vhd : 与えられたアドレスのRAMの中身を返す。
## exec phase 
	exec.vhd : 命令実行。
## write-back phase
	reg_wb.vhd : 書き込み。
	ram_wb.vhd : 書き込み。



########################################################################
2012年  2月  5日 日曜日 17:11:27 JST

ん。
