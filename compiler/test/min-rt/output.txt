
	hello



	hello



	hello


Print KNormal_t(kNormal.ml):
  Let Rec fequal : Int -> Int -> Bool ( a b ) =
    If a = b Then
      Int(1)
    Else
      Int(0)
  In
  Let Rec fless : Float -> Float -> Bool ( a b ) =
    If b <= a Then
      Int(0)
    Else
      Int(1)
  In
  Let Rec fispos : Float -> Bool ( a ) =
    Let Td2507 : Float =
      Float(0.000000)
    In
    If a <= Td2507 Then
      Int(0)
    Else
      Int(1)
  In
  Let Rec fisneg : Float -> Bool ( a ) =
    Let Td2506 : Float =
      Float(0.000000)
    In
    If Td2506 <= a Then
      Int(0)
    Else
      Int(1)
  In
  Let Rec fiszero : Float -> Bool ( a ) =
    Let Td2505 : Float =
      Float(0.000000)
    In
    If a = Td2505 Then
      Int(1)
    Else
      Int(0)
  In
  Let Rec xor : Int -> Int -> Bool ( a b ) =
    If a = b Then
      Int(0)
    Else
      Int(1)
  In
  Let Rec fabs : Float -> Float ( a ) =
    Let Td2504 : Float =
      Float(0.000000)
    In
    If Td2504 <= a Then
      Var(a)
    Else
      -.a
  In
  Let Rec abs_float : Float -> Float ( x ) =
    fabs x 
  In
  Let Rec fneg : Float -> Float ( a ) =
    -.a
  In
  Let Rec fhalf : Float -> Float ( a ) =
    Let Td2503 : Float =
      Float(2.000000)
    In
    a /. Td2503
  In
  Let Rec fsqr : Float -> Float ( a ) =
    a *. a
  In
  Let pi : Float =
    Float(3.141593)
  In
  Let pi2 : Float =
    Let Td271 : Float =
      Float(2.000000)
    In
    pi *. Td271
  In
  Let pih : Float =
    Let Td272 : Float =
      Float(0.500000)
    In
    pi *. Td272
  In
  Let Rec atan_sub : Float -> Float -> Float -> Float ( i xx y ) =
    Let Td2502 : Float =
      Float(0.500000)
    In
    If Td2502 <= i Then
      Let Td2493 : Float =
        Let Td2492 : Float =
          Float(1.000000)
        In
        i -. Td2492
      In
      Let Td2501 : Float =
        Let Td2495 : Float =
          Let Td2494 : Float =
            i *. i
          In
          Td2494 *. xx
        In
        Let Td2500 : Float =
          Let Td2499 : Float =
            Let Td2497 : Float =
              Let Td2496 : Float =
                Float(2.000000)
              In
              Td2496 *. i
            In
            Let Td2498 : Float =
              Float(1.000000)
            In
            Td2497 +. Td2498
          In
          Td2499 +. y
        In
        Td2495 /. Td2500
      In
      atan_sub Td2493 xx Td2501 
    Else
      Var(y)
  In
  Let Rec atan : Float -> Float ( x ) =
    Let sgn : Int =
      Let Td2478 : Float =
        Float(1.000000)
      In
      If x <= Td2478 Then
        Let Td2477 : Float =
          Float(-1.000000)
        In
        If Td2477 <= x Then
          Int(0)
        Else
          Let Ti2476 : Int =
            Int(1)
          In
          -Ti2476
      Else
        Int(1)
    In
    Let x : Float =
      Let Td2480 : Float =
        fabs x 
      In
      Let Td2481 : Float =
        Float(1.000000)
      In
      If Td2480 <= Td2481 Then
        Var(x)
      Else
        Let Td2479 : Float =
          Float(1.000000)
        In
        Td2479 /. x
    In
    Let a : Float =
      Let Td2482 : Float =
        Float(11.000000)
      In
      Let Td2483 : Float =
        x *. x
      In
      Let Td2484 : Float =
        Float(0.000000)
      In
      atan_sub Td2482 Td2483 Td2484 
    In
    Let b : Float =
      Let Td2486 : Float =
        Let Td2485 : Float =
          Float(1.000000)
        In
        Td2485 +. a
      In
      x /. Td2486
    In
    If sgn <= 0 Then
      If 0 <= sgn Then
        Var(b)
      Else
        Let Td2489 : Float =
          Let Td2487 : Float =
            -.pi
          In
          Let Td2488 : Float =
            Float(2.000000)
          In
          Td2487 /. Td2488
        In
        Td2489 -. b
    Else
      Let Td2491 : Float =
        Let Td2490 : Float =
          Float(2.000000)
        In
        pi /. Td2490
      In
      Td2491 -. b
  In
  Let Rec tan : Float -> Float ( x ) =
    Let Rec tan_sub : Float -> Float -> Float -> Float ( i xx y ) =
      Let Td2475 : Float =
        Float(2.500000)
      In
      If Td2475 <= i Then
        Let Td2472 : Float =
          Let Td2471 : Float =
            Float(2.000000)
          In
          i -. Td2471
        In
        Let Td2474 : Float =
          Let Td2473 : Float =
            i -. y
          In
          xx /. Td2473
        In
        tan_sub Td2472 xx Td2474 
      Else
        Var(y)
    In
    Let Td2470 : Float =
      Let Td2465 : Float =
        Float(1.000000)
      In
      Let Td2469 : Float =
        Let Td2466 : Float =
          Float(9.000000)
        In
        Let Td2467 : Float =
          x *. x
        In
        Let Td2468 : Float =
          Float(0.000000)
        In
        tan_sub Td2466 Td2467 Td2468 
      In
      Td2465 -. Td2469
    In
    x /. Td2470
  In
  Let Rec sin_sub : Float -> Float ( x ) =
    If x <= pi2 Then
      Let Td2463 : Float =
        Float(0.000000)
      In
      If Td2463 <= x Then
        Var(x)
      Else
        Let Td2462 : Float =
          x +. pi2
        In
        sin_sub Td2462 
    Else
      Let Td2464 : Float =
        x -. pi2
      In
      sin_sub Td2464 
  In
  Let Rec sin : Float -> Float ( x ) =
    Let s1 : Bool =
      Let Td2454 : Float =
        Float(0.000000)
      In
      If x <= Td2454 Then
        Int(0)
      Else
        Int(1)
    In
    Let x0 : Float =
      fabs x 
    In
    Let x1 : Float =
      sin_sub x0 
    In
    Let s2 : Bool =
      If x1 <= pi Then
        Var(s1)
      Else
        If 0 = s1 Then
          Int(1)
        Else
          Int(0)
    In
    Let x2 : Float =
      If x1 <= pi Then
        Var(x1)
      Else
        pi2 -. x1
    In
    Let x3 : Float =
      If x2 <= pih Then
        Var(x2)
      Else
        pi -. x2
    In
    Let t : Float =
      Let Td2456 : Float =
        Let Td2455 : Float =
          Float(0.500000)
        In
        x3 *. Td2455
      In
      tan Td2456 
    In
    Let ans : Float =
      Let Td2458 : Float =
        Let Td2457 : Float =
          Float(2.000000)
        In
        Td2457 *. t
      In
      Let Td2461 : Float =
        Let Td2459 : Float =
          Float(1.000000)
        In
        Let Td2460 : Float =
          t *. t
        In
        Td2459 +. Td2460
      In
      Td2458 /. Td2461
    In
    If 0 = s2 Then
      fneg ans 
    Else
      Var(ans)
  In
  Let Rec cos : Float -> Float ( x ) =
    Let Td2453 : Float =
      Let Td2452 : Float =
        Float(1.570796)
      In
      Td2452 -. x
    In
    sin Td2453 
  In
  Let Rec mul10 : Int -> Int ( x ) =
    Let Ti2449 : Int =
      Let Ti2448 : Int =
        Int(3)
      In
      x << Ti2448
    In
    Let Ti2451 : Int =
      Let Ti2450 : Int =
        Int(1)
      In
      x << Ti2450
    In
    Ti2449 + Ti2451
  In
  Let read_int_ans : Array(Int) =
    Let Ti273 : Int =
      Int(1)
    In
    Let Ti274 : Int =
      Int(0)
    In
    ExtFun:create_array Ti273 Ti274 
  In
  Let read_int_s : Array(Int) =
    Let Ti275 : Int =
      Int(1)
    In
    Let Ti276 : Int =
      Int(0)
    In
    ExtFun:create_array Ti275 Ti276 
  In
  Let Rec read_int_token : Bool -> Int -> Int ( in_token prev ) =
    Let c : Int =
      Let Tu2423 : Unit =
        ()
      In
      ExtFun:input_char Tu2423 
    In
    Let flg : Bool =
      Let Ti2425 : Int =
        Int(48)
      In
      If Ti2425 <= c Then
        Let Ti2424 : Int =
          Int(57)
        In
        If c <= Ti2424 Then
          Int(0)
        Else
          Int(1)
      Else
        Int(1)
    In
    If 0 = flg Then
      Let Tu2 : Unit =
        Let Ti2433 : Int =
          Let Ti2426 : Int =
            Int(0)
          In
          read_int_s.(Ti2426)        In
        If 0 = Ti2433 Then
          Let Ti2432 : Int =
            Int(45)
          In
          If prev = Ti2432 Then
            Let Ti2427 : Int =
              Int(0)
            In
            Let Ti2429 : Int =
              Let Ti2428 : Int =
                Int(1)
              In
              -Ti2428
            In
            read_int_s.(Ti2427) <- Ti2429          Else
            Let Ti2430 : Int =
              Int(0)
            In
            Let Ti2431 : Int =
              Int(1)
            In
            read_int_s.(Ti2430) <- Ti2431        Else
          ()
      In
      Let Tu1 : Unit =
        Let Ti2434 : Int =
          Int(0)
        In
        Let Ti2440 : Int =
          Let Ti2437 : Int =
            Let Ti2436 : Int =
              Let Ti2435 : Int =
                Int(0)
              In
              read_int_ans.(Ti2435)            In
            mul10 Ti2436 
          In
          Let Ti2439 : Int =
            Let Ti2438 : Int =
              Int(48)
            In
            c - Ti2438
          In
          Ti2437 + Ti2439
        In
        read_int_ans.(Ti2434) <- Ti2440      In
      Let Ti2441 : Int =
        Int(1)
      In
      read_int_token Ti2441 c 
    Else
      If 0 = in_token Then
        Let Ti2442 : Int =
          Int(0)
        In
        read_int_token Ti2442 c 
      Else
        Let Ti2447 : Int =
          Let Ti2443 : Int =
            Int(0)
          In
          read_int_s.(Ti2443)        In
        If 1 = Ti2447 Then
          Let Ti2444 : Int =
            Int(0)
          In
          read_int_ans.(Ti2444)        Else
          Let Ti2446 : Int =
            Let Ti2445 : Int =
              Int(0)
            In
            read_int_ans.(Ti2445)          In
          -Ti2446
  In
  Let Rec read_int : Unit -> Int ( Tu3 ) =
    Let Tu5 : Unit =
      Let Ti2417 : Int =
        Int(0)
      In
      Let Ti2418 : Int =
        Int(0)
      In
      read_int_ans.(Ti2417) <- Ti2418    In
    Let Tu4 : Unit =
      Let Ti2419 : Int =
        Int(0)
      In
      Let Ti2420 : Int =
        Int(0)
      In
      read_int_s.(Ti2419) <- Ti2420    In
    Let Ti2421 : Int =
      Int(0)
    In
    Let Ti2422 : Int =
      Int(32)
    In
    read_int_token Ti2421 Ti2422 
  In
  Let read_float_i : Array(Int) =
    Let Ti277 : Int =
      Int(1)
    In
    Let Ti278 : Int =
      Int(0)
    In
    ExtFun:create_array Ti277 Ti278 
  In
  Let read_float_f : Array(Int) =
    Let Ti279 : Int =
      Int(1)
    In
    Let Ti280 : Int =
      Int(0)
    In
    ExtFun:create_array Ti279 Ti280 
  In
  Let read_float_exp : Array(Int) =
    Let Ti281 : Int =
      Int(1)
    In
    Let Ti282 : Int =
      Int(1)
    In
    ExtFun:create_array Ti281 Ti282 
  In
  Let read_float_s : Array(Int) =
    Let Ti283 : Int =
      Int(1)
    In
    Let Ti284 : Int =
      Int(0)
    In
    ExtFun:create_array Ti283 Ti284 
  In
  Let Rec read_float_token1 : Bool -> Int -> Int ( in_token prev ) =
    Let c : Int =
      Let Tu2397 : Unit =
        ()
      In
      ExtFun:input_char Tu2397 
    In
    Let flg : Bool =
      Let Ti2399 : Int =
        Int(48)
      In
      If Ti2399 <= c Then
        Let Ti2398 : Int =
          Int(57)
        In
        If c <= Ti2398 Then
          Int(0)
        Else
          Int(1)
      Else
        Int(1)
    In
    If 0 = flg Then
      Let Tu7 : Unit =
        Let Ti2407 : Int =
          Let Ti2400 : Int =
            Int(0)
          In
          read_float_s.(Ti2400)        In
        If 0 = Ti2407 Then
          Let Ti2406 : Int =
            Int(45)
          In
          If prev = Ti2406 Then
            Let Ti2401 : Int =
              Int(0)
            In
            Let Ti2403 : Int =
              Let Ti2402 : Int =
                Int(1)
              In
              -Ti2402
            In
            read_float_s.(Ti2401) <- Ti2403          Else
            Let Ti2404 : Int =
              Int(0)
            In
            Let Ti2405 : Int =
              Int(1)
            In
            read_float_s.(Ti2404) <- Ti2405        Else
          ()
      In
      Let Tu6 : Unit =
        Let Ti2408 : Int =
          Int(0)
        In
        Let Ti2414 : Int =
          Let Ti2411 : Int =
            Let Ti2410 : Int =
              Let Ti2409 : Int =
                Int(0)
              In
              read_float_i.(Ti2409)            In
            mul10 Ti2410 
          In
          Let Ti2413 : Int =
            Let Ti2412 : Int =
              Int(48)
            In
            c - Ti2412
          In
          Ti2411 + Ti2413
        In
        read_float_i.(Ti2408) <- Ti2414      In
      Let Ti2415 : Int =
        Int(1)
      In
      read_float_token1 Ti2415 c 
    Else
      If 0 = in_token Then
        Let Ti2416 : Int =
          Int(0)
        In
        read_float_token1 Ti2416 c 
      Else
        Var(c)
  In
  Let Rec read_float_token2 : Bool -> Unit ( in_token ) =
    Let c : Int =
      Let Tu2381 : Unit =
        ()
      In
      ExtFun:input_char Tu2381 
    In
    Let flg : Bool =
      Let Ti2383 : Int =
        Int(48)
      In
      If Ti2383 <= c Then
        Let Ti2382 : Int =
          Int(57)
        In
        If c <= Ti2382 Then
          Int(0)
        Else
          Int(1)
      Else
        Int(1)
    In
    If 0 = flg Then
      Let Tu9 : Unit =
        Let Ti2384 : Int =
          Int(0)
        In
        Let Ti2390 : Int =
          Let Ti2387 : Int =
            Let Ti2386 : Int =
              Let Ti2385 : Int =
                Int(0)
              In
              read_float_f.(Ti2385)            In
            mul10 Ti2386 
          In
          Let Ti2389 : Int =
            Let Ti2388 : Int =
              Int(48)
            In
            c - Ti2388
          In
          Ti2387 + Ti2389
        In
        read_float_f.(Ti2384) <- Ti2390      In
      Let Tu8 : Unit =
        Let Ti2391 : Int =
          Int(0)
        In
        Let Ti2394 : Int =
          Let Ti2393 : Int =
            Let Ti2392 : Int =
              Int(0)
            In
            read_float_exp.(Ti2392)          In
          mul10 Ti2393 
        In
        read_float_exp.(Ti2391) <- Ti2394      In
      Let Ti2395 : Int =
        Int(1)
      In
      read_float_token2 Ti2395 
    Else
      If 0 = in_token Then
        Let Ti2396 : Int =
          Int(0)
        In
        read_float_token2 Ti2396 
      Else
        ()
  In
  Let Rec read_float : Unit -> Float ( Tu10 ) =
    Let Tu15 : Unit =
      Let Ti2355 : Int =
        Int(0)
      In
      Let Ti2356 : Int =
        Int(0)
      In
      read_float_i.(Ti2355) <- Ti2356    In
    Let Tu14 : Unit =
      Let Ti2357 : Int =
        Int(0)
      In
      Let Ti2358 : Int =
        Int(0)
      In
      read_float_f.(Ti2357) <- Ti2358    In
    Let Tu13 : Unit =
      Let Ti2359 : Int =
        Int(0)
      In
      Let Ti2360 : Int =
        Int(1)
      In
      read_float_exp.(Ti2359) <- Ti2360    In
    Let Tu12 : Unit =
      Let Ti2361 : Int =
        Int(0)
      In
      Let Ti2362 : Int =
        Int(0)
      In
      read_float_s.(Ti2361) <- Ti2362    In
    Let nextch : Int =
      Let Ti2363 : Int =
        Int(0)
      In
      Let Ti2364 : Int =
        Int(32)
      In
      read_float_token1 Ti2363 Ti2364 
    In
    Let ans : Float =
      Let Ti2378 : Int =
        Int(46)
      In
      If nextch = Ti2378 Then
        Let Tu11 : Unit =
          Let Ti2365 : Int =
            Int(0)
          In
          read_float_token2 Ti2365 
        In
        Let Td2368 : Float =
          Let Ti2367 : Int =
            Let Ti2366 : Int =
              Int(0)
            In
            read_float_i.(Ti2366)          In
          ExtFun:float_of_int Ti2367 
        In
        Let Td2375 : Float =
          Let Td2371 : Float =
            Let Ti2370 : Int =
              Let Ti2369 : Int =
                Int(0)
              In
              read_float_f.(Ti2369)            In
            ExtFun:float_of_int Ti2370 
          In
          Let Td2374 : Float =
            Let Ti2373 : Int =
              Let Ti2372 : Int =
                Int(0)
              In
              read_float_exp.(Ti2372)            In
            ExtFun:float_of_int Ti2373 
          In
          Td2371 /. Td2374
        In
        Td2368 +. Td2375
      Else
        Let Ti2377 : Int =
          Let Ti2376 : Int =
            Int(0)
          In
          read_float_i.(Ti2376)        In
        ExtFun:float_of_int Ti2377 
    In
    Let Ti2380 : Int =
      Let Ti2379 : Int =
        Int(0)
      In
      read_float_s.(Ti2379)    In
    If 1 = Ti2380 Then
      Var(ans)
    Else
      -.ans
  In
  Let Rec div_binary_search : Int -> Int -> Int -> Int -> Int ( a b left right ) =
    Let mid : Int =
      Let Ti2352 : Int =
        left + right
      In
      Let Ti2353 : Int =
        Int(-1)
      In
      Ti2352 << Ti2353
    In
    Let x : Int =
      mid * b
    In
    Let Ti2354 : Int =
      right - left
    In
    If Ti2354 <= 1 Then
      Var(left)
    Else
      If a <= x Then
        If x = a Then
          Var(mid)
        Else
          div_binary_search a b left mid 
      Else
        div_binary_search a b mid right 
  In
  Let Rec print_int : Int -> Unit ( x ) =
    Let Ti2351 : Int =
      Int(10000)
    In
    If x <= Ti2351 Then
      If 0 <= x Then
        Let tx : Int =
          Let Ti2325 : Int =
            Int(1000)
          In
          Let Ti2326 : Int =
            Int(0)
          In
          Let Ti2327 : Int =
            Int(10)
          In
          div_binary_search x Ti2325 Ti2326 Ti2327 
        In
        Let dx : Int =
          Let Ti2328 : Int =
            Int(1000)
          In
          tx * Ti2328
        In
        Let x : Int =
          x - dx
        In
        Let flg : Bool =
          If tx <= 0 Then
            Int(0)
          Else
            Let Tu17 : Unit =
              Let Ti2330 : Int =
                Let Ti2329 : Int =
                  Int(48)
                In
                Ti2329 + tx
              In
              ExtFun:print_char Ti2330 
            In
            Int(1)
        In
        Let tx : Int =
          Let Ti2331 : Int =
            Int(100)
          In
          Let Ti2332 : Int =
            Int(0)
          In
          Let Ti2333 : Int =
            Int(10)
          In
          div_binary_search x Ti2331 Ti2332 Ti2333 
        In
        Let dx : Int =
          Let Ti2334 : Int =
            Int(100)
          In
          tx * Ti2334
        In
        Let x : Int =
          x - dx
        In
        Let flg : Bool =
          If tx <= 0 Then
            If 0 = flg Then
              Int(0)
            Else
              Let Tu18 : Unit =
                Let Ti2336 : Int =
                  Let Ti2335 : Int =
                    Int(48)
                  In
                  Ti2335 + tx
                In
                ExtFun:print_char Ti2336 
              In
              Int(1)
          Else
            Let Tu19 : Unit =
              Let Ti2338 : Int =
                Let Ti2337 : Int =
                  Int(48)
                In
                Ti2337 + tx
              In
              ExtFun:print_char Ti2338 
            In
            Int(1)
        In
        Let tx : Int =
          Let Ti2339 : Int =
            Int(10)
          In
          Let Ti2340 : Int =
            Int(0)
          In
          Let Ti2341 : Int =
            Int(10)
          In
          div_binary_search x Ti2339 Ti2340 Ti2341 
        In
        Let dx : Int =
          Let Ti2342 : Int =
            Int(10)
          In
          tx * Ti2342
        In
        Let x : Int =
          x - dx
        In
        Let flg : Bool =
          If tx <= 0 Then
            If 0 = flg Then
              Int(0)
            Else
              Let Tu20 : Unit =
                Let Ti2344 : Int =
                  Let Ti2343 : Int =
                    Int(48)
                  In
                  Ti2343 + tx
                In
                ExtFun:print_char Ti2344 
              In
              Int(1)
          Else
            Let Tu21 : Unit =
              Let Ti2346 : Int =
                Let Ti2345 : Int =
                  Int(48)
                In
                Ti2345 + tx
              In
              ExtFun:print_char Ti2346 
            In
            Int(1)
        In
        Let Ti2348 : Int =
          Let Ti2347 : Int =
            Int(48)
          In
          Ti2347 + x
        In
        ExtFun:print_char Ti2348 
      Else
        Let Tu16 : Unit =
          Let Ti2349 : Int =
            Int(45)
          In
          ExtFun:print_char Ti2349 
        In
        Let Ti2350 : Int =
          -x
        In
        print_int Ti2350 
    Else
      ()
  In
  Let n_objects : Array(Int) =
    Let Ti285 : Int =
      Int(1)
    In
    Let Ti286 : Int =
      Int(0)
    In
    ExtFun:create_array Ti285 Ti286 
  In
  Let objects : Array(Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) =
    Let dummy : Array(Float) =
      Let Ti287 : Int =
        Int(0)
      In
      Let Td288 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti287 Td288 
    In
    Let Ti289 : Int =
      Int(60)
    In
    Let Tt295 : Int * Int * Int * Int * Array(Float) * Array(Float) * Int * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
      Let Ti290 : Int =
        Int(0)
      In
      Let Ti291 : Int =
        Int(0)
      In
      Let Ti292 : Int =
        Int(0)
      In
      Let Ti293 : Int =
        Int(0)
      In
      Let Ti294 : Int =
        Int(0)
      In
      (Ti290, Ti291, Ti292, Ti293, dummy, dummy, Ti294, dummy, dummy, dummy, dummy, )
    In
    ExtFun:create_array Ti289 Tt295 
  In
  Let screen : Array(Float) =
    Let Ti296 : Int =
      Int(3)
    In
    Let Td297 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti296 Td297 
  In
  Let viewpoint : Array(Float) =
    Let Ti298 : Int =
      Int(3)
    In
    Let Td299 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti298 Td299 
  In
  Let light : Array(Float) =
    Let Ti300 : Int =
      Int(3)
    In
    Let Td301 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti300 Td301 
  In
  Let beam : Array(Float) =
    Let Ti302 : Int =
      Int(1)
    In
    Let Td303 : Float =
      Float(255.000000)
    In
    ExtFun:create_float_array Ti302 Td303 
  In
  Let and_net : Array(Array(Int)) =
    Let Ti304 : Int =
      Int(50)
    In
    Let Ta308 : Array(Int) =
      Let Ti305 : Int =
        Int(1)
      In
      Let Ti307 : Int =
        Let Ti306 : Int =
          Int(1)
        In
        -Ti306
      In
      ExtFun:create_array Ti305 Ti307 
    In
    ExtFun:create_array Ti304 Ta308 
  In
  Let or_net : Array(Array(Array(Int))) =
    Let Ti309 : Int =
      Int(1)
    In
    Let Ta313 : Array(Array(Int)) =
      Let Ti310 : Int =
        Int(1)
      In
      Let Ta312 : Array(Int) =
        Let Ti311 : Int =
          Int(0)
        In
        and_net.(Ti311)      In
      ExtFun:create_array Ti310 Ta312 
    In
    ExtFun:create_array Ti309 Ta313 
  In
  Let solver_dist : Array(Float) =
    Let Ti314 : Int =
      Int(1)
    In
    Let Td315 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti314 Td315 
  In
  Let intsec_rectside : Array(Int) =
    Let Ti316 : Int =
      Int(1)
    In
    Let Ti317 : Int =
      Int(0)
    In
    ExtFun:create_array Ti316 Ti317 
  In
  Let tmin : Array(Float) =
    Let Ti318 : Int =
      Int(1)
    In
    Let Td319 : Float =
      Float(1000000000.000000)
    In
    ExtFun:create_float_array Ti318 Td319 
  In
  Let intersection_point : Array(Float) =
    Let Ti320 : Int =
      Int(3)
    In
    Let Td321 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti320 Td321 
  In
  Let intersected_object_id : Array(Int) =
    Let Ti322 : Int =
      Int(1)
    In
    Let Ti323 : Int =
      Int(0)
    In
    ExtFun:create_array Ti322 Ti323 
  In
  Let nvector : Array(Float) =
    Let Ti324 : Int =
      Int(3)
    In
    Let Td325 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti324 Td325 
  In
  Let texture_color : Array(Float) =
    Let Ti326 : Int =
      Int(3)
    In
    Let Td327 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti326 Td327 
  In
  Let diffuse_ray : Array(Float) =
    Let Ti328 : Int =
      Int(3)
    In
    Let Td329 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti328 Td329 
  In
  Let rgb : Array(Float) =
    Let Ti330 : Int =
      Int(3)
    In
    Let Td331 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti330 Td331 
  In
  Let image_size : Array(Int) =
    Let Ti332 : Int =
      Int(2)
    In
    Let Ti333 : Int =
      Int(0)
    In
    ExtFun:create_array Ti332 Ti333 
  In
  Let image_center : Array(Int) =
    Let Ti334 : Int =
      Int(2)
    In
    Let Ti335 : Int =
      Int(0)
    In
    ExtFun:create_array Ti334 Ti335 
  In
  Let scan_pitch : Array(Float) =
    Let Ti336 : Int =
      Int(1)
    In
    Let Td337 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti336 Td337 
  In
  Let startp : Array(Float) =
    Let Ti338 : Int =
      Int(3)
    In
    Let Td339 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti338 Td339 
  In
  Let startp_fast : Array(Float) =
    Let Ti340 : Int =
      Int(3)
    In
    Let Td341 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti340 Td341 
  In
  Let screenx_dir : Array(Float) =
    Let Ti342 : Int =
      Int(3)
    In
    Let Td343 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti342 Td343 
  In
  Let screeny_dir : Array(Float) =
    Let Ti344 : Int =
      Int(3)
    In
    Let Td345 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti344 Td345 
  In
  Let screenz_dir : Array(Float) =
    Let Ti346 : Int =
      Int(3)
    In
    Let Td347 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti346 Td347 
  In
  Let ptrace_dirvec : Array(Float) =
    Let Ti348 : Int =
      Int(3)
    In
    Let Td349 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti348 Td349 
  In
  Let dirvecs : Array(Array(Array(Float) * Array(Array(Float)))) =
    Let dummyf : Array(Float) =
      Let Ti350 : Int =
        Int(0)
      In
      Let Td351 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti350 Td351 
    In
    Let dummyff : Array(Array(Float)) =
      Let Ti352 : Int =
        Int(0)
      In
      ExtFun:create_array Ti352 dummyf 
    In
    Let dummy_vs : Array(Array(Float) * Array(Array(Float))) =
      Let Ti353 : Int =
        Int(0)
      In
      Let Tt354 : Array(Float) * Array(Array(Float)) =
        (dummyf, dummyff, )
      In
      ExtFun:create_array Ti353 Tt354 
    In
    Let Ti355 : Int =
      Int(5)
    In
    ExtFun:create_array Ti355 dummy_vs 
  In
  Let light_dirvec : Array(Float) * Array(Array(Float)) =
    Let dummyf2 : Array(Float) =
      Let Ti356 : Int =
        Int(0)
      In
      Let Td357 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti356 Td357 
    In
    Let v3 : Array(Float) =
      Let Ti358 : Int =
        Int(3)
      In
      Let Td359 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti358 Td359 
    In
    Let consts : Array(Array(Float)) =
      Let Ti360 : Int =
        Int(60)
      In
      ExtFun:create_array Ti360 dummyf2 
    In
    (v3, consts, )
  In
  Let reflections : Array(Int * Array(Float) * Array(Array(Float)) * Float) =
    Let dummyf3 : Array(Float) =
      Let Ti361 : Int =
        Int(0)
      In
      Let Td362 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti361 Td362 
    In
    Let dummyff3 : Array(Array(Float)) =
      Let Ti363 : Int =
        Int(0)
      In
      ExtFun:create_array Ti363 dummyf3 
    In
    Let dummydv : Array(Float) * Array(Array(Float)) =
      (dummyf3, dummyff3, )
    In
    Let Ti364 : Int =
      Int(180)
    In
    Let Tt367 : Int * Array(Float) * Array(Array(Float)) * Float =
      Let Ti365 : Int =
        Int(0)
      In
      Let Td366 : Float =
        Float(0.000000)
      In
      (Ti365, dummydv, Td366, )
    In
    ExtFun:create_array Ti364 Tt367 
  In
  Let n_reflections : Array(Int) =
    Let Ti368 : Int =
      Int(1)
    In
    Let Ti369 : Int =
      Int(0)
    In
    ExtFun:create_array Ti368 Ti369 
  In
  Let Rec xor : Bool -> Bool -> Bool ( x y ) =
    If 0 = x Then
      Var(y)
    Else
      If 0 = y Then
        Int(1)
      Else
        Int(0)
  In
  Let Rec sgn : Float -> Float ( x ) =
    Let Tb2324 : Bool =
      fiszero x 
    In
    If 0 = Tb2324 Then
      Let Tb2323 : Bool =
        fispos x 
      In
      If 0 = Tb2323 Then
        Float(-1.000000)
      Else
        Float(1.000000)
    Else
      Float(0.000000)
  In
  Let Rec fneg_cond : Bool -> Float -> Float ( cond x ) =
    If 0 = cond Then
      fneg x 
    Else
      Var(x)
  In
  Let Rec add_mod5 : Int -> Int -> Int ( x y ) =
    Let sum : Int =
      x + y
    In
    Let Ti2322 : Int =
      Int(5)
    In
    If Ti2322 <= sum Then
      Let Ti2321 : Int =
        Int(5)
      In
      sum - Ti2321
    Else
      Var(sum)
  In
  Let Rec vecset : Array(Float) -> Float -> Float -> Float -> Unit ( v x y z ) =
    Let Tu23 : Unit =
      Let Ti2318 : Int =
        Int(0)
      In
      v.(Ti2318) <- x    In
    Let Tu22 : Unit =
      Let Ti2319 : Int =
        Int(1)
      In
      v.(Ti2319) <- y    In
    Let Ti2320 : Int =
      Int(2)
    In
    v.(Ti2320) <- z  In
  Let Rec vecfill : Array(Float) -> Float -> Unit ( v elem ) =
    Let Tu25 : Unit =
      Let Ti2315 : Int =
        Int(0)
      In
      v.(Ti2315) <- elem    In
    Let Tu24 : Unit =
      Let Ti2316 : Int =
        Int(1)
      In
      v.(Ti2316) <- elem    In
    Let Ti2317 : Int =
      Int(2)
    In
    v.(Ti2317) <- elem  In
  Let Rec vecbzero : Array(Float) -> Unit ( v ) =
    Let Td2314 : Float =
      Float(0.000000)
    In
    vecfill v Td2314 
  In
  Let Rec veccpy : Array(Float) -> Array(Float) -> Unit ( dest src ) =
    Let Tu27 : Unit =
      Let Ti2305 : Int =
        Int(0)
      In
      Let Td2307 : Float =
        Let Ti2306 : Int =
          Int(0)
        In
        src.(Ti2306)      In
      dest.(Ti2305) <- Td2307    In
    Let Tu26 : Unit =
      Let Ti2308 : Int =
        Int(1)
      In
      Let Td2310 : Float =
        Let Ti2309 : Int =
          Int(1)
        In
        src.(Ti2309)      In
      dest.(Ti2308) <- Td2310    In
    Let Ti2311 : Int =
      Int(2)
    In
    Let Td2313 : Float =
      Let Ti2312 : Int =
        Int(2)
      In
      src.(Ti2312)    In
    dest.(Ti2311) <- Td2313  In
  Let Rec vecdist2 : Array(Float) -> Array(Float) -> Float ( p q ) =
    Let Td2298 : Float =
      Let Td2291 : Float =
        Let Td2290 : Float =
          Let Td2287 : Float =
            Let Ti2286 : Int =
              Int(0)
            In
            p.(Ti2286)          In
          Let Td2289 : Float =
            Let Ti2288 : Int =
              Int(0)
            In
            q.(Ti2288)          In
          Td2287 -. Td2289
        In
        fsqr Td2290 
      In
      Let Td2297 : Float =
        Let Td2296 : Float =
          Let Td2293 : Float =
            Let Ti2292 : Int =
              Int(1)
            In
            p.(Ti2292)          In
          Let Td2295 : Float =
            Let Ti2294 : Int =
              Int(1)
            In
            q.(Ti2294)          In
          Td2293 -. Td2295
        In
        fsqr Td2296 
      In
      Td2291 +. Td2297
    In
    Let Td2304 : Float =
      Let Td2303 : Float =
        Let Td2300 : Float =
          Let Ti2299 : Int =
            Int(2)
          In
          p.(Ti2299)        In
        Let Td2302 : Float =
          Let Ti2301 : Int =
            Int(2)
          In
          q.(Ti2301)        In
        Td2300 -. Td2302
      In
      fsqr Td2303 
    In
    Td2298 +. Td2304
  In
  Let Rec vecunit : Array(Float) -> Unit ( v ) =
    Let il : Float =
      Let Td2261 : Float =
        Float(1.000000)
      In
      Let Td2273 : Float =
        Let Td2272 : Float =
          Let Td2268 : Float =
            Let Td2264 : Float =
              Let Td2263 : Float =
                Let Ti2262 : Int =
                  Int(0)
                In
                v.(Ti2262)              In
              fsqr Td2263 
            In
            Let Td2267 : Float =
              Let Td2266 : Float =
                Let Ti2265 : Int =
                  Int(1)
                In
                v.(Ti2265)              In
              fsqr Td2266 
            In
            Td2264 +. Td2267
          In
          Let Td2271 : Float =
            Let Td2270 : Float =
              Let Ti2269 : Int =
                Int(2)
              In
              v.(Ti2269)            In
            fsqr Td2270 
          In
          Td2268 +. Td2271
        In
        ExtFun:sqrt Td2272 
      In
      Td2261 /. Td2273
    In
    Let Tu29 : Unit =
      Let Ti2274 : Int =
        Int(0)
      In
      Let Td2277 : Float =
        Let Td2276 : Float =
          Let Ti2275 : Int =
            Int(0)
          In
          v.(Ti2275)        In
        Td2276 *. il
      In
      v.(Ti2274) <- Td2277    In
    Let Tu28 : Unit =
      Let Ti2278 : Int =
        Int(1)
      In
      Let Td2281 : Float =
        Let Td2280 : Float =
          Let Ti2279 : Int =
            Int(1)
          In
          v.(Ti2279)        In
        Td2280 *. il
      In
      v.(Ti2278) <- Td2281    In
    Let Ti2282 : Int =
      Int(2)
    In
    Let Td2285 : Float =
      Let Td2284 : Float =
        Let Ti2283 : Int =
          Int(2)
        In
        v.(Ti2283)      In
      Td2284 *. il
    In
    v.(Ti2282) <- Td2285  In
  Let Rec vecunit_sgn : Array(Float) -> Bool -> Unit ( v inv ) =
    Let l : Float =
      Let Td2245 : Float =
        Let Td2241 : Float =
          Let Td2237 : Float =
            Let Td2236 : Float =
              Let Ti2235 : Int =
                Int(0)
              In
              v.(Ti2235)            In
            fsqr Td2236 
          In
          Let Td2240 : Float =
            Let Td2239 : Float =
              Let Ti2238 : Int =
                Int(1)
              In
              v.(Ti2238)            In
            fsqr Td2239 
          In
          Td2237 +. Td2240
        In
        Let Td2244 : Float =
          Let Td2243 : Float =
            Let Ti2242 : Int =
              Int(2)
            In
            v.(Ti2242)          In
          fsqr Td2243 
        In
        Td2241 +. Td2244
      In
      ExtFun:sqrt Td2245 
    In
    Let il : Float =
      Let Tb2248 : Bool =
        fiszero l 
      In
      If 0 = Tb2248 Then
        If 0 = inv Then
          Let Td2246 : Float =
            Float(1.000000)
          In
          Td2246 /. l
        Else
          Let Td2247 : Float =
            Float(-1.000000)
          In
          Td2247 /. l
      Else
        Float(1.000000)
    In
    Let Tu31 : Unit =
      Let Ti2249 : Int =
        Int(0)
      In
      Let Td2252 : Float =
        Let Td2251 : Float =
          Let Ti2250 : Int =
            Int(0)
          In
          v.(Ti2250)        In
        Td2251 *. il
      In
      v.(Ti2249) <- Td2252    In
    Let Tu30 : Unit =
      Let Ti2253 : Int =
        Int(1)
      In
      Let Td2256 : Float =
        Let Td2255 : Float =
          Let Ti2254 : Int =
            Int(1)
          In
          v.(Ti2254)        In
        Td2255 *. il
      In
      v.(Ti2253) <- Td2256    In
    Let Ti2257 : Int =
      Int(2)
    In
    Let Td2260 : Float =
      Let Td2259 : Float =
        Let Ti2258 : Int =
          Int(2)
        In
        v.(Ti2258)      In
      Td2259 *. il
    In
    v.(Ti2257) <- Td2260  In
  Let Rec veciprod : Array(Float) -> Array(Float) -> Float ( v w ) =
    Let Td2229 : Float =
      Let Td2223 : Float =
        Let Td2220 : Float =
          Let Ti2219 : Int =
            Int(0)
          In
          v.(Ti2219)        In
        Let Td2222 : Float =
          Let Ti2221 : Int =
            Int(0)
          In
          w.(Ti2221)        In
        Td2220 *. Td2222
      In
      Let Td2228 : Float =
        Let Td2225 : Float =
          Let Ti2224 : Int =
            Int(1)
          In
          v.(Ti2224)        In
        Let Td2227 : Float =
          Let Ti2226 : Int =
            Int(1)
          In
          w.(Ti2226)        In
        Td2225 *. Td2227
      In
      Td2223 +. Td2228
    In
    Let Td2234 : Float =
      Let Td2231 : Float =
        Let Ti2230 : Int =
          Int(2)
        In
        v.(Ti2230)      In
      Let Td2233 : Float =
        Let Ti2232 : Int =
          Int(2)
        In
        w.(Ti2232)      In
      Td2231 *. Td2233
    In
    Td2229 +. Td2234
  In
  Let Rec veciprod2 : Array(Float) -> Float -> Float -> Float -> Float ( v w0 w1 w2 ) =
    Let Td2215 : Float =
      Let Td2211 : Float =
        Let Td2210 : Float =
          Let Ti2209 : Int =
            Int(0)
          In
          v.(Ti2209)        In
        Td2210 *. w0
      In
      Let Td2214 : Float =
        Let Td2213 : Float =
          Let Ti2212 : Int =
            Int(1)
          In
          v.(Ti2212)        In
        Td2213 *. w1
      In
      Td2211 +. Td2214
    In
    Let Td2218 : Float =
      Let Td2217 : Float =
        Let Ti2216 : Int =
          Int(2)
        In
        v.(Ti2216)      In
      Td2217 *. w2
    In
    Td2215 +. Td2218
  In
  Let Rec vecaccum : Array(Float) -> Float -> Array(Float) -> Unit ( dest scale v ) =
    Let Tu33 : Unit =
      Let Ti2188 : Int =
        Int(0)
      In
      Let Td2194 : Float =
        Let Td2190 : Float =
          Let Ti2189 : Int =
            Int(0)
          In
          dest.(Ti2189)        In
        Let Td2193 : Float =
          Let Td2192 : Float =
            Let Ti2191 : Int =
              Int(0)
            In
            v.(Ti2191)          In
          scale *. Td2192
        In
        Td2190 +. Td2193
      In
      dest.(Ti2188) <- Td2194    In
    Let Tu32 : Unit =
      Let Ti2195 : Int =
        Int(1)
      In
      Let Td2201 : Float =
        Let Td2197 : Float =
          Let Ti2196 : Int =
            Int(1)
          In
          dest.(Ti2196)        In
        Let Td2200 : Float =
          Let Td2199 : Float =
            Let Ti2198 : Int =
              Int(1)
            In
            v.(Ti2198)          In
          scale *. Td2199
        In
        Td2197 +. Td2200
      In
      dest.(Ti2195) <- Td2201    In
    Let Ti2202 : Int =
      Int(2)
    In
    Let Td2208 : Float =
      Let Td2204 : Float =
        Let Ti2203 : Int =
          Int(2)
        In
        dest.(Ti2203)      In
      Let Td2207 : Float =
        Let Td2206 : Float =
          Let Ti2205 : Int =
            Int(2)
          In
          v.(Ti2205)        In
        scale *. Td2206
      In
      Td2204 +. Td2207
    In
    dest.(Ti2202) <- Td2208  In
  Let Rec vecadd : Array(Float) -> Array(Float) -> Unit ( dest v ) =
    Let Tu35 : Unit =
      Let Ti2170 : Int =
        Int(0)
      In
      Let Td2175 : Float =
        Let Td2172 : Float =
          Let Ti2171 : Int =
            Int(0)
          In
          dest.(Ti2171)        In
        Let Td2174 : Float =
          Let Ti2173 : Int =
            Int(0)
          In
          v.(Ti2173)        In
        Td2172 +. Td2174
      In
      dest.(Ti2170) <- Td2175    In
    Let Tu34 : Unit =
      Let Ti2176 : Int =
        Int(1)
      In
      Let Td2181 : Float =
        Let Td2178 : Float =
          Let Ti2177 : Int =
            Int(1)
          In
          dest.(Ti2177)        In
        Let Td2180 : Float =
          Let Ti2179 : Int =
            Int(1)
          In
          v.(Ti2179)        In
        Td2178 +. Td2180
      In
      dest.(Ti2176) <- Td2181    In
    Let Ti2182 : Int =
      Int(2)
    In
    Let Td2187 : Float =
      Let Td2184 : Float =
        Let Ti2183 : Int =
          Int(2)
        In
        dest.(Ti2183)      In
      Let Td2186 : Float =
        Let Ti2185 : Int =
          Int(2)
        In
        v.(Ti2185)      In
      Td2184 +. Td2186
    In
    dest.(Ti2182) <- Td2187  In
  Let Rec vecmul : Array(Float) -> Array(Float) -> Unit ( dest v ) =
    Let Tu37 : Unit =
      Let Ti2152 : Int =
        Int(0)
      In
      Let Td2157 : Float =
        Let Td2154 : Float =
          Let Ti2153 : Int =
            Int(0)
          In
          dest.(Ti2153)        In
        Let Td2156 : Float =
          Let Ti2155 : Int =
            Int(0)
          In
          v.(Ti2155)        In
        Td2154 *. Td2156
      In
      dest.(Ti2152) <- Td2157    In
    Let Tu36 : Unit =
      Let Ti2158 : Int =
        Int(1)
      In
      Let Td2163 : Float =
        Let Td2160 : Float =
          Let Ti2159 : Int =
            Int(1)
          In
          dest.(Ti2159)        In
        Let Td2162 : Float =
          Let Ti2161 : Int =
            Int(1)
          In
          v.(Ti2161)        In
        Td2160 *. Td2162
      In
      dest.(Ti2158) <- Td2163    In
    Let Ti2164 : Int =
      Int(2)
    In
    Let Td2169 : Float =
      Let Td2166 : Float =
        Let Ti2165 : Int =
          Int(2)
        In
        dest.(Ti2165)      In
      Let Td2168 : Float =
        Let Ti2167 : Int =
          Int(2)
        In
        v.(Ti2167)      In
      Td2166 *. Td2168
    In
    dest.(Ti2164) <- Td2169  In
  Let Rec vecscale : Array(Float) -> Float -> Unit ( dest scale ) =
    Let Tu39 : Unit =
      Let Ti2140 : Int =
        Int(0)
      In
      Let Td2143 : Float =
        Let Td2142 : Float =
          Let Ti2141 : Int =
            Int(0)
          In
          dest.(Ti2141)        In
        Td2142 *. scale
      In
      dest.(Ti2140) <- Td2143    In
    Let Tu38 : Unit =
      Let Ti2144 : Int =
        Int(1)
      In
      Let Td2147 : Float =
        Let Td2146 : Float =
          Let Ti2145 : Int =
            Int(1)
          In
          dest.(Ti2145)        In
        Td2146 *. scale
      In
      dest.(Ti2144) <- Td2147    In
    Let Ti2148 : Int =
      Int(2)
    In
    Let Td2151 : Float =
      Let Td2150 : Float =
        Let Ti2149 : Int =
          Int(2)
        In
        dest.(Ti2149)      In
      Td2150 *. scale
    In
    dest.(Ti2148) <- Td2151  In
  Let Rec vecaccumv : Array(Float) -> Array(Float) -> Array(Float) -> Unit ( dest v w ) =
    Let Tu41 : Unit =
      Let Ti2113 : Int =
        Int(0)
      In
      Let Td2121 : Float =
        Let Td2115 : Float =
          Let Ti2114 : Int =
            Int(0)
          In
          dest.(Ti2114)        In
        Let Td2120 : Float =
          Let Td2117 : Float =
            Let Ti2116 : Int =
              Int(0)
            In
            v.(Ti2116)          In
          Let Td2119 : Float =
            Let Ti2118 : Int =
              Int(0)
            In
            w.(Ti2118)          In
          Td2117 *. Td2119
        In
        Td2115 +. Td2120
      In
      dest.(Ti2113) <- Td2121    In
    Let Tu40 : Unit =
      Let Ti2122 : Int =
        Int(1)
      In
      Let Td2130 : Float =
        Let Td2124 : Float =
          Let Ti2123 : Int =
            Int(1)
          In
          dest.(Ti2123)        In
        Let Td2129 : Float =
          Let Td2126 : Float =
            Let Ti2125 : Int =
              Int(1)
            In
            v.(Ti2125)          In
          Let Td2128 : Float =
            Let Ti2127 : Int =
              Int(1)
            In
            w.(Ti2127)          In
          Td2126 *. Td2128
        In
        Td2124 +. Td2129
      In
      dest.(Ti2122) <- Td2130    In
    Let Ti2131 : Int =
      Int(2)
    In
    Let Td2139 : Float =
      Let Td2133 : Float =
        Let Ti2132 : Int =
          Int(2)
        In
        dest.(Ti2132)      In
      Let Td2138 : Float =
        Let Td2135 : Float =
          Let Ti2134 : Int =
            Int(2)
          In
          v.(Ti2134)        In
        Let Td2137 : Float =
          Let Ti2136 : Int =
            Int(2)
          In
          w.(Ti2136)        In
        Td2135 *. Td2137
      In
      Td2133 +. Td2138
    In
    dest.(Ti2131) <- Td2139  In
  Let Rec o_texturetype : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Int ( m ) =
    Let (m_tex : Int, xm_shape : Int, xm_surface : Int, xm_isrot : Int, xm_abc : Array(Float), xm_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), xm_color : Array(Float), xm_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Var(m_tex)
  In
  Let Rec o_form : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Int ( m ) =
    Let (xm_tex : Int, m_shape : Int, xm_surface : Int, xm_isrot : Int, xm_abc : Array(Float), xm_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), xm_color : Array(Float), xm_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Var(m_shape)
  In
  Let Rec o_reflectiontype : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Int ( m ) =
    Let (xm_tex : Int, xm_shape : Int, m_surface : Int, xm_isrot : Int, xm_abc : Array(Float), xm_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), xm_color : Array(Float), xm_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Var(m_surface)
  In
  Let Rec o_isinvert : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Bool ( m ) =
    Let (xm_tex : Int, xm_shape : Int, xm_surface : Int, xm_isrot : Int, xm_abc : Array(Float), xm_xyz : Array(Float), m_invert : Bool, xm_surfparams : Array(Float), xm_color : Array(Float), xm_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Var(m_invert)
  In
  Let Rec o_isrot : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Int ( m ) =
    Let (xm_tex : Int, xm_shape : Int, xm_surface : Int, m_isrot : Int, xm_abc : Array(Float), xm_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), xm_color : Array(Float), xm_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Var(m_isrot)
  In
  Let Rec o_param_a : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m ) =
    Let (xm_tex : Int, xm_shape : Int, xm_surface : Int, xm_isrot : Int, m_abc : Array(Float), xm_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), xm_color : Array(Float), xm_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Let Ti2112 : Int =
      Int(0)
    In
    m_abc.(Ti2112)  In
  Let Rec o_param_b : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m ) =
    Let (xm_tex : Int, xm_shape : Int, xm_surface : Int, xm_isrot : Int, m_abc : Array(Float), xm_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), xm_color : Array(Float), xm_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Let Ti2111 : Int =
      Int(1)
    In
    m_abc.(Ti2111)  In
  Let Rec o_param_c : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m ) =
    Let (xm_tex : Int, xm_shape : Int, xm_surface : Int, xm_isrot : Int, m_abc : Array(Float), xm_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), xm_color : Array(Float), xm_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Let Ti2110 : Int =
      Int(2)
    In
    m_abc.(Ti2110)  In
  Let Rec o_param_abc : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) ( m ) =
    Let (xm_tex : Int, xm_shape : Int, xm_surface : Int, xm_isrot : Int, m_abc : Array(Float), xm_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), xm_color : Array(Float), xm_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Var(m_abc)
  In
  Let Rec o_param_x : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m ) =
    Let (xm_tex : Int, xm_shape : Int, xm_surface : Int, xm_isrot : Int, xm_abc : Array(Float), m_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), xm_color : Array(Float), xm_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Let Ti2109 : Int =
      Int(0)
    In
    m_xyz.(Ti2109)  In
  Let Rec o_param_y : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m ) =
    Let (xm_tex : Int, xm_shape : Int, xm_surface : Int, xm_isrot : Int, xm_abc : Array(Float), m_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), xm_color : Array(Float), xm_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Let Ti2108 : Int =
      Int(1)
    In
    m_xyz.(Ti2108)  In
  Let Rec o_param_z : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m ) =
    Let (xm_tex : Int, xm_shape : Int, xm_surface : Int, xm_isrot : Int, xm_abc : Array(Float), m_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), xm_color : Array(Float), xm_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Let Ti2107 : Int =
      Int(2)
    In
    m_xyz.(Ti2107)  In
  Let Rec o_diffuse : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m ) =
    Let (xm_tex : Int, xm_shape : Int, xm_surface : Int, xm_isrot : Int, xm_abc : Array(Float), xm_xyz : Array(Float), xm_invert : Bool, m_surfparams : Array(Float), xm_color : Array(Float), xm_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Let Ti2106 : Int =
      Int(0)
    In
    m_surfparams.(Ti2106)  In
  Let Rec o_hilight : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m ) =
    Let (xm_tex : Int, xm_shape : Int, xm_surface : Int, xm_isrot : Int, xm_abc : Array(Float), xm_xyz : Array(Float), xm_invert : Bool, m_surfparams : Array(Float), xm_color : Array(Float), xm_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Let Ti2105 : Int =
      Int(1)
    In
    m_surfparams.(Ti2105)  In
  Let Rec o_color_red : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m ) =
    Let (xm_tex : Int, xm_shape : Int, m_surface : Int, xm_isrot : Int, xm_abc : Array(Float), xm_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), m_color : Array(Float), xm_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Let Ti2104 : Int =
      Int(0)
    In
    m_color.(Ti2104)  In
  Let Rec o_color_green : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m ) =
    Let (xm_tex : Int, xm_shape : Int, m_surface : Int, xm_isrot : Int, xm_abc : Array(Float), xm_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), m_color : Array(Float), xm_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Let Ti2103 : Int =
      Int(1)
    In
    m_color.(Ti2103)  In
  Let Rec o_color_blue : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m ) =
    Let (xm_tex : Int, xm_shape : Int, m_surface : Int, xm_isrot : Int, xm_abc : Array(Float), xm_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), m_color : Array(Float), xm_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Let Ti2102 : Int =
      Int(2)
    In
    m_color.(Ti2102)  In
  Let Rec o_param_r1 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m ) =
    Let (xm_tex : Int, xm_shape : Int, xm_surface : Int, xm_isrot : Int, xm_abc : Array(Float), xm_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), xm_color : Array(Float), m_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Let Ti2101 : Int =
      Int(0)
    In
    m_rot123.(Ti2101)  In
  Let Rec o_param_r2 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m ) =
    Let (xm_tex : Int, xm_shape : Int, xm_surface : Int, xm_isrot : Int, xm_abc : Array(Float), xm_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), xm_color : Array(Float), m_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Let Ti2100 : Int =
      Int(1)
    In
    m_rot123.(Ti2100)  In
  Let Rec o_param_r3 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m ) =
    Let (xm_tex : Int, xm_shape : Int, xm_surface : Int, xm_isrot : Int, xm_abc : Array(Float), xm_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), xm_color : Array(Float), m_rot123 : Array(Float)xm_ctbl : Array(Float)) = m
    In
    Let Ti2099 : Int =
      Int(2)
    In
    m_rot123.(Ti2099)  In
  Let Rec o_param_ctbl : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) ( m ) =
    Let (xm_tex : Int, xm_shape : Int, xm_surface : Int, xm_isrot : Int, xm_abc : Array(Float), xm_xyz : Array(Float), xm_invert : Bool, xm_surfparams : Array(Float), xm_color : Array(Float), xm_rot123 : Array(Float)m_ctbl : Array(Float)) = m
    In
    Var(m_ctbl)
  In
  Let Rec p_rgb : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Float) ( pixel ) =
    Let (m_rgb : Array(Float), xm_isect_ps : Array(Array(Float)), xm_sids : Array(Int), xm_cdif : Array(Bool), xm_engy : Array(Array(Float)), xm_r20p : Array(Array(Float)), xm_gid : Array(Int)xm_nvectors : Array(Array(Float))) = pixel
    In
    Var(m_rgb)
  In
  Let Rec p_intersection_points : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Array(Float)) ( pixel ) =
    Let (xm_rgb : Array(Float), m_isect_ps : Array(Array(Float)), xm_sids : Array(Int), xm_cdif : Array(Bool), xm_engy : Array(Array(Float)), xm_r20p : Array(Array(Float)), xm_gid : Array(Int)xm_nvectors : Array(Array(Float))) = pixel
    In
    Var(m_isect_ps)
  In
  Let Rec p_surface_ids : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Int) ( pixel ) =
    Let (xm_rgb : Array(Float), xm_isect_ps : Array(Array(Float)), m_sids : Array(Int), xm_cdif : Array(Bool), xm_engy : Array(Array(Float)), xm_r20p : Array(Array(Float)), xm_gid : Array(Int)xm_nvectors : Array(Array(Float))) = pixel
    In
    Var(m_sids)
  In
  Let Rec p_calc_diffuse : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Bool) ( pixel ) =
    Let (xm_rgb : Array(Float), xm_isect_ps : Array(Array(Float)), xm_sids : Array(Int), m_cdif : Array(Bool), xm_engy : Array(Array(Float)), xm_r20p : Array(Array(Float)), xm_gid : Array(Int)xm_nvectors : Array(Array(Float))) = pixel
    In
    Var(m_cdif)
  In
  Let Rec p_energy : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Array(Float)) ( pixel ) =
    Let (xm_rgb : Array(Float), xm_isect_ps : Array(Array(Float)), xm_sids : Array(Int), xm_cdif : Array(Bool), m_engy : Array(Array(Float)), xm_r20p : Array(Array(Float)), xm_gid : Array(Int)xm_nvectors : Array(Array(Float))) = pixel
    In
    Var(m_engy)
  In
  Let Rec p_received_ray_20percent : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Array(Float)) ( pixel ) =
    Let (xm_rgb : Array(Float), xm_isect_ps : Array(Array(Float)), xm_sids : Array(Int), xm_cdif : Array(Bool), xm_engy : Array(Array(Float)), m_r20p : Array(Array(Float)), xm_gid : Array(Int)xm_nvectors : Array(Array(Float))) = pixel
    In
    Var(m_r20p)
  In
  Let Rec p_group_id : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int ( pixel ) =
    Let (xm_rgb : Array(Float), xm_isect_ps : Array(Array(Float)), xm_sids : Array(Int), xm_cdif : Array(Bool), xm_engy : Array(Array(Float)), xm_r20p : Array(Array(Float)), m_gid : Array(Int)xm_nvectors : Array(Array(Float))) = pixel
    In
    Let Ti2098 : Int =
      Int(0)
    In
    m_gid.(Ti2098)  In
  Let Rec p_set_group_id : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit ( pixel id ) =
    Let (xm_rgb : Array(Float), xm_isect_ps : Array(Array(Float)), xm_sids : Array(Int), xm_cdif : Array(Bool), xm_engy : Array(Array(Float)), xm_r20p : Array(Array(Float)), m_gid : Array(Int)xm_nvectors : Array(Array(Float))) = pixel
    In
    Let Ti2097 : Int =
      Int(0)
    In
    m_gid.(Ti2097) <- id  In
  Let Rec p_nvectors : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Array(Float)) ( pixel ) =
    Let (xm_rgb : Array(Float), xm_isect_ps : Array(Array(Float)), xm_sids : Array(Int), xm_cdif : Array(Bool), xm_engy : Array(Array(Float)), xm_r20p : Array(Array(Float)), xm_gid : Array(Int)m_nvectors : Array(Array(Float))) = pixel
    In
    Var(m_nvectors)
  In
  Let Rec d_vec : Array(Float) * Array(Array(Float)) -> Array(Float) ( d ) =
    Let (m_vec : Array(Float)xm_const : Array(Array(Float))) = d
    In
    Var(m_vec)
  In
  Let Rec d_const : Array(Float) * Array(Array(Float)) -> Array(Array(Float)) ( d ) =
    Let (dm_vec : Array(Float)m_const : Array(Array(Float))) = d
    In
    Var(m_const)
  In
  Let Rec r_surface_id : Int * Array(Float) * Array(Array(Float)) * Float -> Int ( r ) =
    Let (m_sid : Int, xm_dvec : Array(Float) * Array(Array(Float))xm_br : Float) = r
    In
    Var(m_sid)
  In
  Let Rec r_dvec : Int * Array(Float) * Array(Array(Float)) * Float -> Array(Float) * Array(Array(Float)) ( r ) =
    Let (xm_sid : Int, m_dvec : Array(Float) * Array(Array(Float))xm_br : Float) = r
    In
    Var(m_dvec)
  In
  Let Rec r_bright : Int * Array(Float) * Array(Array(Float)) * Float -> Float ( r ) =
    Let (xm_sid : Int, xm_dvec : Array(Float) * Array(Array(Float))m_br : Float) = r
    In
    Var(m_br)
  In
  Let Rec rad : Float -> Float ( x ) =
    Let Td2096 : Float =
      Float(0.017453)
    In
    x *. Td2096
  In
  Let Rec read_screen_settings : Unit -> Unit ( Tu42 ) =
    Let Tu56 : Unit =
      Let Ti2041 : Int =
        Int(0)
      In
      Let Td2043 : Float =
        Let Tu2042 : Unit =
          ()
        In
        read_float Tu2042 
      In
      screen.(Ti2041) <- Td2043    In
    Let Tu55 : Unit =
      Let Ti2044 : Int =
        Int(1)
      In
      Let Td2046 : Float =
        Let Tu2045 : Unit =
          ()
        In
        read_float Tu2045 
      In
      screen.(Ti2044) <- Td2046    In
    Let Tu54 : Unit =
      Let Ti2047 : Int =
        Int(2)
      In
      Let Td2049 : Float =
        Let Tu2048 : Unit =
          ()
        In
        read_float Tu2048 
      In
      screen.(Ti2047) <- Td2049    In
    Let v1 : Float =
      Let Td2051 : Float =
        Let Tu2050 : Unit =
          ()
        In
        read_float Tu2050 
      In
      rad Td2051 
    In
    Let cos_v1 : Float =
      cos v1 
    In
    Let sin_v1 : Float =
      sin v1 
    In
    Let v2 : Float =
      Let Td2053 : Float =
        Let Tu2052 : Unit =
          ()
        In
        read_float Tu2052 
      In
      rad Td2053 
    In
    Let cos_v2 : Float =
      cos v2 
    In
    Let sin_v2 : Float =
      sin v2 
    In
    Let Tu53 : Unit =
      Let Ti2054 : Int =
        Int(0)
      In
      Let Td2057 : Float =
        Let Td2055 : Float =
          cos_v1 *. sin_v2
        In
        Let Td2056 : Float =
          Float(200.000000)
        In
        Td2055 *. Td2056
      In
      screenz_dir.(Ti2054) <- Td2057    In
    Let Tu52 : Unit =
      Let Ti2058 : Int =
        Int(1)
      In
      Let Td2060 : Float =
        Let Td2059 : Float =
          Float(-200.000000)
        In
        sin_v1 *. Td2059
      In
      screenz_dir.(Ti2058) <- Td2060    In
    Let Tu51 : Unit =
      Let Ti2061 : Int =
        Int(2)
      In
      Let Td2064 : Float =
        Let Td2062 : Float =
          cos_v1 *. cos_v2
        In
        Let Td2063 : Float =
          Float(200.000000)
        In
        Td2062 *. Td2063
      In
      screenz_dir.(Ti2061) <- Td2064    In
    Let Tu50 : Unit =
      Let Ti2065 : Int =
        Int(0)
      In
      screenx_dir.(Ti2065) <- cos_v2    In
    Let Tu49 : Unit =
      Let Ti2066 : Int =
        Int(1)
      In
      Let Td2067 : Float =
        Float(0.000000)
      In
      screenx_dir.(Ti2066) <- Td2067    In
    Let Tu48 : Unit =
      Let Ti2068 : Int =
        Int(2)
      In
      Let Td2069 : Float =
        fneg sin_v2 
      In
      screenx_dir.(Ti2068) <- Td2069    In
    Let Tu47 : Unit =
      Let Ti2070 : Int =
        Int(0)
      In
      Let Td2072 : Float =
        Let Td2071 : Float =
          fneg sin_v1 
        In
        Td2071 *. sin_v2
      In
      screeny_dir.(Ti2070) <- Td2072    In
    Let Tu46 : Unit =
      Let Ti2073 : Int =
        Int(1)
      In
      Let Td2074 : Float =
        fneg cos_v1 
      In
      screeny_dir.(Ti2073) <- Td2074    In
    Let Tu45 : Unit =
      Let Ti2075 : Int =
        Int(2)
      In
      Let Td2077 : Float =
        Let Td2076 : Float =
          fneg sin_v1 
        In
        Td2076 *. cos_v2
      In
      screeny_dir.(Ti2075) <- Td2077    In
    Let Tu44 : Unit =
      Let Ti2078 : Int =
        Int(0)
      In
      Let Td2083 : Float =
        Let Td2080 : Float =
          Let Ti2079 : Int =
            Int(0)
          In
          screen.(Ti2079)        In
        Let Td2082 : Float =
          Let Ti2081 : Int =
            Int(0)
          In
          screenz_dir.(Ti2081)        In
        Td2080 -. Td2082
      In
      viewpoint.(Ti2078) <- Td2083    In
    Let Tu43 : Unit =
      Let Ti2084 : Int =
        Int(1)
      In
      Let Td2089 : Float =
        Let Td2086 : Float =
          Let Ti2085 : Int =
            Int(1)
          In
          screen.(Ti2085)        In
        Let Td2088 : Float =
          Let Ti2087 : Int =
            Int(1)
          In
          screenz_dir.(Ti2087)        In
        Td2086 -. Td2088
      In
      viewpoint.(Ti2084) <- Td2089    In
    Let Ti2090 : Int =
      Int(2)
    In
    Let Td2095 : Float =
      Let Td2092 : Float =
        Let Ti2091 : Int =
          Int(2)
        In
        screen.(Ti2091)      In
      Let Td2094 : Float =
        Let Ti2093 : Int =
          Int(2)
        In
        screenz_dir.(Ti2093)      In
      Td2092 -. Td2094
    In
    viewpoint.(Ti2090) <- Td2095  In
  Let Rec read_light : Unit -> Unit ( Tu57 ) =
    Let nl : Int =
      Let Tu2027 : Unit =
        ()
      In
      read_int Tu2027 
    In
    Let l1 : Float =
      Let Td2029 : Float =
        Let Tu2028 : Unit =
          ()
        In
        read_float Tu2028 
      In
      rad Td2029 
    In
    Let sl1 : Float =
      sin l1 
    In
    Let Tu60 : Unit =
      Let Ti2030 : Int =
        Int(1)
      In
      Let Td2031 : Float =
        fneg sl1 
      In
      light.(Ti2030) <- Td2031    In
    Let l2 : Float =
      Let Td2033 : Float =
        Let Tu2032 : Unit =
          ()
        In
        read_float Tu2032 
      In
      rad Td2033 
    In
    Let cl1 : Float =
      cos l1 
    In
    Let sl2 : Float =
      sin l2 
    In
    Let Tu59 : Unit =
      Let Ti2034 : Int =
        Int(0)
      In
      Let Td2035 : Float =
        cl1 *. sl2
      In
      light.(Ti2034) <- Td2035    In
    Let cl2 : Float =
      cos l2 
    In
    Let Tu58 : Unit =
      Let Ti2036 : Int =
        Int(2)
      In
      Let Td2037 : Float =
        cl1 *. cl2
      In
      light.(Ti2036) <- Td2037    In
    Let Ti2038 : Int =
      Int(0)
    In
    Let Td2040 : Float =
      Let Tu2039 : Unit =
        ()
      In
      read_float Tu2039 
    In
    beam.(Ti2038) <- Td2040  In
  Let Rec rotate_quadratic_matrix : Array(Float) -> Array(Float) -> Unit ( abc rot ) =
    Let cos_x : Float =
      Let Td1941 : Float =
        Let Ti1940 : Int =
          Int(0)
        In
        rot.(Ti1940)      In
      cos Td1941 
    In
    Let sin_x : Float =
      Let Td1943 : Float =
        Let Ti1942 : Int =
          Int(0)
        In
        rot.(Ti1942)      In
      sin Td1943 
    In
    Let cos_y : Float =
      Let Td1945 : Float =
        Let Ti1944 : Int =
          Int(1)
        In
        rot.(Ti1944)      In
      cos Td1945 
    In
    Let sin_y : Float =
      Let Td1947 : Float =
        Let Ti1946 : Int =
          Int(1)
        In
        rot.(Ti1946)      In
      sin Td1947 
    In
    Let cos_z : Float =
      Let Td1949 : Float =
        Let Ti1948 : Int =
          Int(2)
        In
        rot.(Ti1948)      In
      cos Td1949 
    In
    Let sin_z : Float =
      Let Td1951 : Float =
        Let Ti1950 : Int =
          Int(2)
        In
        rot.(Ti1950)      In
      sin Td1951 
    In
    Let m00 : Float =
      cos_y *. cos_z
    In
    Let m01 : Float =
      Let Td1953 : Float =
        Let Td1952 : Float =
          sin_x *. sin_y
        In
        Td1952 *. cos_z
      In
      Let Td1954 : Float =
        cos_x *. sin_z
      In
      Td1953 -. Td1954
    In
    Let m02 : Float =
      Let Td1956 : Float =
        Let Td1955 : Float =
          cos_x *. sin_y
        In
        Td1955 *. cos_z
      In
      Let Td1957 : Float =
        sin_x *. sin_z
      In
      Td1956 +. Td1957
    In
    Let m10 : Float =
      cos_y *. sin_z
    In
    Let m11 : Float =
      Let Td1959 : Float =
        Let Td1958 : Float =
          sin_x *. sin_y
        In
        Td1958 *. sin_z
      In
      Let Td1960 : Float =
        cos_x *. cos_z
      In
      Td1959 +. Td1960
    In
    Let m12 : Float =
      Let Td1962 : Float =
        Let Td1961 : Float =
          cos_x *. sin_y
        In
        Td1961 *. sin_z
      In
      Let Td1963 : Float =
        sin_x *. cos_z
      In
      Td1962 -. Td1963
    In
    Let m20 : Float =
      fneg sin_y 
    In
    Let m21 : Float =
      sin_x *. cos_y
    In
    Let m22 : Float =
      cos_x *. cos_y
    In
    Let ao : Float =
      Let Ti1964 : Int =
        Int(0)
      In
      abc.(Ti1964)    In
    Let bo : Float =
      Let Ti1965 : Int =
        Int(1)
      In
      abc.(Ti1965)    In
    Let co : Float =
      Let Ti1966 : Int =
        Int(2)
      In
      abc.(Ti1966)    In
    Let Tu65 : Unit =
      Let Ti1967 : Int =
        Int(0)
      In
      Let Td1975 : Float =
        Let Td1972 : Float =
          Let Td1969 : Float =
            Let Td1968 : Float =
              fsqr m00 
            In
            ao *. Td1968
          In
          Let Td1971 : Float =
            Let Td1970 : Float =
              fsqr m10 
            In
            bo *. Td1970
          In
          Td1969 +. Td1971
        In
        Let Td1974 : Float =
          Let Td1973 : Float =
            fsqr m20 
          In
          co *. Td1973
        In
        Td1972 +. Td1974
      In
      abc.(Ti1967) <- Td1975    In
    Let Tu64 : Unit =
      Let Ti1976 : Int =
        Int(1)
      In
      Let Td1984 : Float =
        Let Td1981 : Float =
          Let Td1978 : Float =
            Let Td1977 : Float =
              fsqr m01 
            In
            ao *. Td1977
          In
          Let Td1980 : Float =
            Let Td1979 : Float =
              fsqr m11 
            In
            bo *. Td1979
          In
          Td1978 +. Td1980
        In
        Let Td1983 : Float =
          Let Td1982 : Float =
            fsqr m21 
          In
          co *. Td1982
        In
        Td1981 +. Td1983
      In
      abc.(Ti1976) <- Td1984    In
    Let Tu63 : Unit =
      Let Ti1985 : Int =
        Int(2)
      In
      Let Td1993 : Float =
        Let Td1990 : Float =
          Let Td1987 : Float =
            Let Td1986 : Float =
              fsqr m02 
            In
            ao *. Td1986
          In
          Let Td1989 : Float =
            Let Td1988 : Float =
              fsqr m12 
            In
            bo *. Td1988
          In
          Td1987 +. Td1989
        In
        Let Td1992 : Float =
          Let Td1991 : Float =
            fsqr m22 
          In
          co *. Td1991
        In
        Td1990 +. Td1992
      In
      abc.(Ti1985) <- Td1993    In
    Let Tu62 : Unit =
      Let Ti1994 : Int =
        Int(0)
      In
      Let Td2004 : Float =
        Let Td1995 : Float =
          Float(2.000000)
        In
        Let Td2003 : Float =
          Let Td2000 : Float =
            Let Td1997 : Float =
              Let Td1996 : Float =
                ao *. m01
              In
              Td1996 *. m02
            In
            Let Td1999 : Float =
              Let Td1998 : Float =
                bo *. m11
              In
              Td1998 *. m12
            In
            Td1997 +. Td1999
          In
          Let Td2002 : Float =
            Let Td2001 : Float =
              co *. m21
            In
            Td2001 *. m22
          In
          Td2000 +. Td2002
        In
        Td1995 *. Td2003
      In
      rot.(Ti1994) <- Td2004    In
    Let Tu61 : Unit =
      Let Ti2005 : Int =
        Int(1)
      In
      Let Td2015 : Float =
        Let Td2006 : Float =
          Float(2.000000)
        In
        Let Td2014 : Float =
          Let Td2011 : Float =
            Let Td2008 : Float =
              Let Td2007 : Float =
                ao *. m00
              In
              Td2007 *. m02
            In
            Let Td2010 : Float =
              Let Td2009 : Float =
                bo *. m10
              In
              Td2009 *. m12
            In
            Td2008 +. Td2010
          In
          Let Td2013 : Float =
            Let Td2012 : Float =
              co *. m20
            In
            Td2012 *. m22
          In
          Td2011 +. Td2013
        In
        Td2006 *. Td2014
      In
      rot.(Ti2005) <- Td2015    In
    Let Ti2016 : Int =
      Int(2)
    In
    Let Td2026 : Float =
      Let Td2017 : Float =
        Float(2.000000)
      In
      Let Td2025 : Float =
        Let Td2022 : Float =
          Let Td2019 : Float =
            Let Td2018 : Float =
              ao *. m00
            In
            Td2018 *. m01
          In
          Let Td2021 : Float =
            Let Td2020 : Float =
              bo *. m10
            In
            Td2020 *. m11
          In
          Td2019 +. Td2021
        In
        Let Td2024 : Float =
          Let Td2023 : Float =
            co *. m20
          In
          Td2023 *. m21
        In
        Td2022 +. Td2024
      In
      Td2017 *. Td2025
    In
    rot.(Ti2016) <- Td2026  In
  Let Rec read_nth_object : Int -> Bool ( n ) =
    Let texture : Int =
      Let Tu1853 : Unit =
        ()
      In
      read_int Tu1853 
    In
    Let Ti1939 : Int =
      Let Ti1854 : Int =
        Int(1)
      In
      -Ti1854
    In
    If texture = Ti1939 Then
      Int(0)
    Else
      Let form : Int =
        Let Tu1855 : Unit =
          ()
        In
        read_int Tu1855 
      In
      Let refltype : Int =
        Let Tu1856 : Unit =
          ()
        In
        read_int Tu1856 
      In
      Let isrot_p : Int =
        Let Tu1857 : Unit =
          ()
        In
        read_int Tu1857 
      In
      Let abc : Array(Float) =
        Let Ti1858 : Int =
          Int(3)
        In
        Let Td1859 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti1858 Td1859 
      In
      Let Tu84 : Unit =
        Let Ti1860 : Int =
          Int(0)
        In
        Let Td1862 : Float =
          Let Tu1861 : Unit =
            ()
          In
          read_float Tu1861 
        In
        abc.(Ti1860) <- Td1862      In
      Let Tu83 : Unit =
        Let Ti1863 : Int =
          Int(1)
        In
        Let Td1865 : Float =
          Let Tu1864 : Unit =
            ()
          In
          read_float Tu1864 
        In
        abc.(Ti1863) <- Td1865      In
      Let Tu82 : Unit =
        Let Ti1866 : Int =
          Int(2)
        In
        Let Td1868 : Float =
          Let Tu1867 : Unit =
            ()
          In
          read_float Tu1867 
        In
        abc.(Ti1866) <- Td1868      In
      Let xyz : Array(Float) =
        Let Ti1869 : Int =
          Int(3)
        In
        Let Td1870 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti1869 Td1870 
      In
      Let Tu81 : Unit =
        Let Ti1871 : Int =
          Int(0)
        In
        Let Td1873 : Float =
          Let Tu1872 : Unit =
            ()
          In
          read_float Tu1872 
        In
        xyz.(Ti1871) <- Td1873      In
      Let Tu80 : Unit =
        Let Ti1874 : Int =
          Int(1)
        In
        Let Td1876 : Float =
          Let Tu1875 : Unit =
            ()
          In
          read_float Tu1875 
        In
        xyz.(Ti1874) <- Td1876      In
      Let Tu79 : Unit =
        Let Ti1877 : Int =
          Int(2)
        In
        Let Td1879 : Float =
          Let Tu1878 : Unit =
            ()
          In
          read_float Tu1878 
        In
        xyz.(Ti1877) <- Td1879      In
      Let m_invert : Bool =
        Let Td1881 : Float =
          Let Tu1880 : Unit =
            ()
          In
          read_float Tu1880 
        In
        fisneg Td1881 
      In
      Let reflparam : Array(Float) =
        Let Ti1882 : Int =
          Int(2)
        In
        Let Td1883 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti1882 Td1883 
      In
      Let Tu78 : Unit =
        Let Ti1884 : Int =
          Int(0)
        In
        Let Td1886 : Float =
          Let Tu1885 : Unit =
            ()
          In
          read_float Tu1885 
        In
        reflparam.(Ti1884) <- Td1886      In
      Let Tu77 : Unit =
        Let Ti1887 : Int =
          Int(1)
        In
        Let Td1889 : Float =
          Let Tu1888 : Unit =
            ()
          In
          read_float Tu1888 
        In
        reflparam.(Ti1887) <- Td1889      In
      Let color : Array(Float) =
        Let Ti1890 : Int =
          Int(3)
        In
        Let Td1891 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti1890 Td1891 
      In
      Let Tu76 : Unit =
        Let Ti1892 : Int =
          Int(0)
        In
        Let Td1894 : Float =
          Let Tu1893 : Unit =
            ()
          In
          read_float Tu1893 
        In
        color.(Ti1892) <- Td1894      In
      Let Tu75 : Unit =
        Let Ti1895 : Int =
          Int(1)
        In
        Let Td1897 : Float =
          Let Tu1896 : Unit =
            ()
          In
          read_float Tu1896 
        In
        color.(Ti1895) <- Td1897      In
      Let Tu74 : Unit =
        Let Ti1898 : Int =
          Int(2)
        In
        Let Td1900 : Float =
          Let Tu1899 : Unit =
            ()
          In
          read_float Tu1899 
        In
        color.(Ti1898) <- Td1900      In
      Let rotation : Array(Float) =
        Let Ti1901 : Int =
          Int(3)
        In
        Let Td1902 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti1901 Td1902 
      In
      Let Tu73 : Unit =
        If 0 = isrot_p Then
          ()
        Else
          Let Tu67 : Unit =
            Let Ti1903 : Int =
              Int(0)
            In
            Let Td1906 : Float =
              Let Td1905 : Float =
                Let Tu1904 : Unit =
                  ()
                In
                read_float Tu1904 
              In
              rad Td1905 
            In
            rotation.(Ti1903) <- Td1906          In
          Let Tu66 : Unit =
            Let Ti1907 : Int =
              Int(1)
            In
            Let Td1910 : Float =
              Let Td1909 : Float =
                Let Tu1908 : Unit =
                  ()
                In
                read_float Tu1908 
              In
              rad Td1909 
            In
            rotation.(Ti1907) <- Td1910          In
          Let Ti1911 : Int =
            Int(2)
          In
          Let Td1914 : Float =
            Let Td1913 : Float =
              Let Tu1912 : Unit =
                ()
              In
              read_float Tu1912 
            In
            rad Td1913 
          In
          rotation.(Ti1911) <- Td1914      In
      Let m_invert2 : Bool =
        Let Ti1915 : Int =
          Int(2)
        In
        If form = Ti1915 Then
          Int(1)
        Else
          Var(m_invert)
      In
      Let ctbl : Array(Float) =
        Let Ti1916 : Int =
          Int(4)
        In
        Let Td1917 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti1916 Td1917 
      In
      Let obj : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
        (texture, form, refltype, isrot_p, abc, xyz, m_invert2, reflparam, color, rotation, ctbl, )
      In
      Let Tu72 : Unit =
        objects.(n) <- obj      In
      Let Tu71 : Unit =
        Let Ti1938 : Int =
          Int(3)
        In
        If form = Ti1938 Then
          Let a : Float =
            Let Ti1918 : Int =
              Int(0)
            In
            abc.(Ti1918)          In
          Let Tu69 : Unit =
            Let Ti1919 : Int =
              Int(0)
            In
            Let Td1923 : Float =
              Let Tb1922 : Bool =
                fiszero a 
              In
              If 0 = Tb1922 Then
                Let Td1920 : Float =
                  sgn a 
                In
                Let Td1921 : Float =
                  fsqr a 
                In
                Td1920 /. Td1921
              Else
                Float(0.000000)
            In
            abc.(Ti1919) <- Td1923          In
          Let b : Float =
            Let Ti1924 : Int =
              Int(1)
            In
            abc.(Ti1924)          In
          Let Tu68 : Unit =
            Let Ti1925 : Int =
              Int(1)
            In
            Let Td1929 : Float =
              Let Tb1928 : Bool =
                fiszero b 
              In
              If 0 = Tb1928 Then
                Let Td1926 : Float =
                  sgn b 
                In
                Let Td1927 : Float =
                  fsqr b 
                In
                Td1926 /. Td1927
              Else
                Float(0.000000)
            In
            abc.(Ti1925) <- Td1929          In
          Let c : Float =
            Let Ti1930 : Int =
              Int(2)
            In
            abc.(Ti1930)          In
          Let Ti1931 : Int =
            Int(2)
          In
          Let Td1935 : Float =
            Let Tb1934 : Bool =
              fiszero c 
            In
            If 0 = Tb1934 Then
              Let Td1932 : Float =
                sgn c 
              In
              Let Td1933 : Float =
                fsqr c 
              In
              Td1932 /. Td1933
            Else
              Float(0.000000)
          In
          abc.(Ti1931) <- Td1935        Else
          Let Ti1937 : Int =
            Int(2)
          In
          If form = Ti1937 Then
            Let Ti1936 : Int =
              If 0 = m_invert Then
                Int(1)
              Else
                Int(0)
            In
            vecunit_sgn abc Ti1936 
          Else
            ()
      In
      Let Tu70 : Unit =
        If 0 = isrot_p Then
          ()
        Else
          rotate_quadratic_matrix abc rotation 
      In
      Int(1)
  In
  Let Rec read_object : Int -> Unit ( n ) =
    Let Ti1852 : Int =
      Int(60)
    In
    If Ti1852 <= n Then
      ()
    Else
      Let Tb1851 : Bool =
        read_nth_object n 
      In
      If 0 = Tb1851 Then
        Let Ti1848 : Int =
          Int(0)
        In
        n_objects.(Ti1848) <- n      Else
        Let Ti1850 : Int =
          Let Ti1849 : Int =
            Int(1)
          In
          n + Ti1849
        In
        read_object Ti1850 
  In
  Let Rec read_all_object : Unit -> Unit ( Tu85 ) =
    Let Ti1847 : Int =
      Int(0)
    In
    read_object Ti1847 
  In
  Let Rec read_net_item : Int -> Array(Int) ( length ) =
    Let item : Int =
      Let Tu1838 : Unit =
        ()
      In
      read_int Tu1838 
    In
    Let Ti1846 : Int =
      Let Ti1839 : Int =
        Int(1)
      In
      -Ti1839
    In
    If item = Ti1846 Then
      Let Ti1841 : Int =
        Let Ti1840 : Int =
          Int(1)
        In
        length + Ti1840
      In
      Let Ti1843 : Int =
        Let Ti1842 : Int =
          Int(1)
        In
        -Ti1842
      In
      ExtFun:create_array Ti1841 Ti1843 
    Else
      Let v : Array(Int) =
        Let Ti1845 : Int =
          Let Ti1844 : Int =
            Int(1)
          In
          length + Ti1844
        In
        read_net_item Ti1845 
      In
      Let Tu86 : Unit =
        v.(length) <- item      In
      Var(v)
  In
  Let Rec read_or_network : Int -> Array(Array(Int)) ( length ) =
    Let net : Array(Int) =
      Let Ti1829 : Int =
        Int(0)
      In
      read_net_item Ti1829 
    In
    Let Ti1836 : Int =
      Let Ti1830 : Int =
        Int(0)
      In
      net.(Ti1830)    In
    Let Ti1837 : Int =
      Let Ti1831 : Int =
        Int(1)
      In
      -Ti1831
    In
    If Ti1836 = Ti1837 Then
      Let Ti1833 : Int =
        Let Ti1832 : Int =
          Int(1)
        In
        length + Ti1832
      In
      ExtFun:create_array Ti1833 net 
    Else
      Let v : Array(Array(Int)) =
        Let Ti1835 : Int =
          Let Ti1834 : Int =
            Int(1)
          In
          length + Ti1834
        In
        read_or_network Ti1835 
      In
      Let Tu87 : Unit =
        v.(length) <- net      In
      Var(v)
  In
  Let Rec read_and_network : Int -> Unit ( n ) =
    Let net : Array(Int) =
      Let Ti1822 : Int =
        Int(0)
      In
      read_net_item Ti1822 
    In
    Let Ti1827 : Int =
      Let Ti1823 : Int =
        Int(0)
      In
      net.(Ti1823)    In
    Let Ti1828 : Int =
      Let Ti1824 : Int =
        Int(1)
      In
      -Ti1824
    In
    If Ti1827 = Ti1828 Then
      ()
    Else
      Let Tu88 : Unit =
        and_net.(n) <- net      In
      Let Ti1826 : Int =
        Let Ti1825 : Int =
          Int(1)
        In
        n + Ti1825
      In
      read_and_network Ti1826 
  In
  Let Rec read_parameter : Unit -> Unit ( Tu89 ) =
    Let Tu93 : Unit =
      Let Tu1815 : Unit =
        ()
      In
      read_screen_settings Tu1815 
    In
    Let Tu92 : Unit =
      Let Tu1816 : Unit =
        ()
      In
      read_light Tu1816 
    In
    Let Tu91 : Unit =
      Let Tu1817 : Unit =
        ()
      In
      read_all_object Tu1817 
    In
    Let Tu90 : Unit =
      Let Ti1818 : Int =
        Int(0)
      In
      read_and_network Ti1818 
    In
    Let Ti1819 : Int =
      Int(0)
    In
    Let Ta1821 : Array(Array(Int)) =
      Let Ti1820 : Int =
        Int(0)
      In
      read_or_network Ti1820 
    In
    or_net.(Ti1819) <- Ta1821  In
  Let Rec solver_rect_surface : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int -> Int -> Int -> Bool ( m dirvec b0 b1 b2 i0 i1 i2 ) =
    Let Tb1814 : Bool =
      Let Td1793 : Float =
        dirvec.(i0)      In
      fiszero Td1793 
    In
    If 0 = Tb1814 Then
      Let abc : Array(Float) =
        o_param_abc m 
      In
      Let d : Float =
        Let Tb1797 : Bool =
          Let Tb1794 : Bool =
            o_isinvert m 
          In
          Let Tb1796 : Bool =
            Let Td1795 : Float =
              dirvec.(i0)            In
            fisneg Td1795 
          In
          xor Tb1794 Tb1796 
        In
        Let Td1798 : Float =
          abc.(i0)        In
        fneg_cond Tb1797 Td1798 
      In
      Let d2 : Float =
        Let Td1799 : Float =
          d -. b0
        In
        Let Td1800 : Float =
          dirvec.(i0)        In
        Td1799 /. Td1800
      In
      Let Tb1813 : Bool =
        Let Td1804 : Float =
          Let Td1803 : Float =
            Let Td1802 : Float =
              Let Td1801 : Float =
                dirvec.(i1)              In
              d2 *. Td1801
            In
            Td1802 +. b1
          In
          fabs Td1803 
        In
        Let Td1805 : Float =
          abc.(i1)        In
        fless Td1804 Td1805 
      In
      If 0 = Tb1813 Then
        Int(0)
      Else
        Let Tb1812 : Bool =
          Let Td1809 : Float =
            Let Td1808 : Float =
              Let Td1807 : Float =
                Let Td1806 : Float =
                  dirvec.(i2)                In
                d2 *. Td1806
              In
              Td1807 +. b2
            In
            fabs Td1808 
          In
          Let Td1810 : Float =
            abc.(i2)          In
          fless Td1809 Td1810 
        In
        If 0 = Tb1812 Then
          Int(0)
        Else
          Let Tu94 : Unit =
            Let Ti1811 : Int =
              Int(0)
            In
            solver_dist.(Ti1811) <- d2          In
          Int(1)
    Else
      Int(0)
  In
  Let Rec solver_rect : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int ( m dirvec b0 b1 b2 ) =
    Let Tb1792 : Bool =
      Let Ti1781 : Int =
        Int(0)
      In
      Let Ti1782 : Int =
        Int(1)
      In
      Let Ti1783 : Int =
        Int(2)
      In
      solver_rect_surface m dirvec b0 b1 b2 Ti1781 Ti1782 Ti1783 
    In
    If 0 = Tb1792 Then
      Let Tb1791 : Bool =
        Let Ti1784 : Int =
          Int(1)
        In
        Let Ti1785 : Int =
          Int(2)
        In
        Let Ti1786 : Int =
          Int(0)
        In
        solver_rect_surface m dirvec b1 b2 b0 Ti1784 Ti1785 Ti1786 
      In
      If 0 = Tb1791 Then
        Let Tb1790 : Bool =
          Let Ti1787 : Int =
            Int(2)
          In
          Let Ti1788 : Int =
            Int(0)
          In
          Let Ti1789 : Int =
            Int(1)
          In
          solver_rect_surface m dirvec b2 b0 b1 Ti1787 Ti1788 Ti1789 
        In
        If 0 = Tb1790 Then
          Int(0)
        Else
          Int(3)
      Else
        Int(2)
    Else
      Int(1)
  In
  Let Rec solver_surface : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int ( m dirvec b0 b1 b2 ) =
    Let abc : Array(Float) =
      o_param_abc m 
    In
    Let d : Float =
      veciprod dirvec abc 
    In
    Let Tb1780 : Bool =
      fispos d 
    In
    If 0 = Tb1780 Then
      Int(0)
    Else
      Let Tu95 : Unit =
        Let Ti1776 : Int =
          Int(0)
        In
        Let Td1779 : Float =
          Let Td1778 : Float =
            Let Td1777 : Float =
              veciprod2 abc b0 b1 b2 
            In
            fneg Td1777 
          In
          Td1778 /. d
        In
        solver_dist.(Ti1776) <- Td1779      In
      Int(1)
  In
  Let Rec quadratic : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Float ( m v0 v1 v2 ) =
    Let diag_part : Float =
      Let Td1760 : Float =
        Let Td1756 : Float =
          Let Td1754 : Float =
            fsqr v0 
          In
          Let Td1755 : Float =
            o_param_a m 
          In
          Td1754 *. Td1755
        In
        Let Td1759 : Float =
          Let Td1757 : Float =
            fsqr v1 
          In
          Let Td1758 : Float =
            o_param_b m 
          In
          Td1757 *. Td1758
        In
        Td1756 +. Td1759
      In
      Let Td1763 : Float =
        Let Td1761 : Float =
          fsqr v2 
        In
        Let Td1762 : Float =
          o_param_c m 
        In
        Td1761 *. Td1762
      In
      Td1760 +. Td1763
    In
    Let Ti1775 : Int =
      o_isrot m 
    In
    If 0 = Ti1775 Then
      Var(diag_part)
    Else
      Let Td1771 : Float =
        Let Td1767 : Float =
          Let Td1766 : Float =
            Let Td1764 : Float =
              v1 *. v2
            In
            Let Td1765 : Float =
              o_param_r1 m 
            In
            Td1764 *. Td1765
          In
          diag_part +. Td1766
        In
        Let Td1770 : Float =
          Let Td1768 : Float =
            v2 *. v0
          In
          Let Td1769 : Float =
            o_param_r2 m 
          In
          Td1768 *. Td1769
        In
        Td1767 +. Td1770
      In
      Let Td1774 : Float =
        Let Td1772 : Float =
          v0 *. v1
        In
        Let Td1773 : Float =
          o_param_r3 m 
        In
        Td1772 *. Td1773
      In
      Td1771 +. Td1774
  In
  Let Rec bilinear : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Float -> Float -> Float -> Float ( m v0 v1 v2 w0 w1 w2 ) =
    Let diag_part : Float =
      Let Td1731 : Float =
        Let Td1727 : Float =
          Let Td1725 : Float =
            v0 *. w0
          In
          Let Td1726 : Float =
            o_param_a m 
          In
          Td1725 *. Td1726
        In
        Let Td1730 : Float =
          Let Td1728 : Float =
            v1 *. w1
          In
          Let Td1729 : Float =
            o_param_b m 
          In
          Td1728 *. Td1729
        In
        Td1727 +. Td1730
      In
      Let Td1734 : Float =
        Let Td1732 : Float =
          v2 *. w2
        In
        Let Td1733 : Float =
          o_param_c m 
        In
        Td1732 *. Td1733
      In
      Td1731 +. Td1734
    In
    Let Ti1753 : Int =
      o_isrot m 
    In
    If 0 = Ti1753 Then
      Var(diag_part)
    Else
      Let Td1752 : Float =
        Let Td1751 : Float =
          Let Td1745 : Float =
            Let Td1739 : Float =
              Let Td1737 : Float =
                Let Td1735 : Float =
                  v2 *. w1
                In
                Let Td1736 : Float =
                  v1 *. w2
                In
                Td1735 +. Td1736
              In
              Let Td1738 : Float =
                o_param_r1 m 
              In
              Td1737 *. Td1738
            In
            Let Td1744 : Float =
              Let Td1742 : Float =
                Let Td1740 : Float =
                  v0 *. w2
                In
                Let Td1741 : Float =
                  v2 *. w0
                In
                Td1740 +. Td1741
              In
              Let Td1743 : Float =
                o_param_r2 m 
              In
              Td1742 *. Td1743
            In
            Td1739 +. Td1744
          In
          Let Td1750 : Float =
            Let Td1748 : Float =
              Let Td1746 : Float =
                v0 *. w1
              In
              Let Td1747 : Float =
                v1 *. w0
              In
              Td1746 +. Td1747
            In
            Let Td1749 : Float =
              o_param_r3 m 
            In
            Td1748 *. Td1749
          In
          Td1745 +. Td1750
        In
        fhalf Td1751 
      In
      diag_part +. Td1752
  In
  Let Rec solver_second : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int ( m dirvec b0 b1 b2 ) =
    Let aa : Float =
      Let Td1703 : Float =
        Let Ti1702 : Int =
          Int(0)
        In
        dirvec.(Ti1702)      In
      Let Td1705 : Float =
        Let Ti1704 : Int =
          Int(1)
        In
        dirvec.(Ti1704)      In
      Let Td1707 : Float =
        Let Ti1706 : Int =
          Int(2)
        In
        dirvec.(Ti1706)      In
      quadratic m Td1703 Td1705 Td1707 
    In
    Let Tb1724 : Bool =
      fiszero aa 
    In
    If 0 = Tb1724 Then
      Let bb : Float =
        Let Td1709 : Float =
          Let Ti1708 : Int =
            Int(0)
          In
          dirvec.(Ti1708)        In
        Let Td1711 : Float =
          Let Ti1710 : Int =
            Int(1)
          In
          dirvec.(Ti1710)        In
        Let Td1713 : Float =
          Let Ti1712 : Int =
            Int(2)
          In
          dirvec.(Ti1712)        In
        bilinear m Td1709 Td1711 Td1713 b0 b1 b2 
      In
      Let cc0 : Float =
        quadratic m b0 b1 b2 
      In
      Let cc : Float =
        Let Ti1715 : Int =
          o_form m 
        In
        Let Ti1716 : Int =
          Int(3)
        In
        If Ti1715 = Ti1716 Then
          Let Td1714 : Float =
            Float(1.000000)
          In
          cc0 -. Td1714
        Else
          Var(cc0)
      In
      Let d : Float =
        Let Td1717 : Float =
          fsqr bb 
        In
        Let Td1718 : Float =
          aa *. cc
        In
        Td1717 -. Td1718
      In
      Let Tb1723 : Bool =
        fispos d 
      In
      If 0 = Tb1723 Then
        Int(0)
      Else
        Let sd : Float =
          ExtFun:sqrt d 
        In
        Let t1 : Float =
          Let Tb1719 : Bool =
            o_isinvert m 
          In
          If 0 = Tb1719 Then
            fneg sd 
          Else
            Var(sd)
        In
        Let Tu96 : Unit =
          Let Ti1720 : Int =
            Int(0)
          In
          Let Td1722 : Float =
            Let Td1721 : Float =
              t1 -. bb
            In
            Td1721 /. aa
          In
          solver_dist.(Ti1720) <- Td1722        In
        Int(1)
    Else
      Int(0)
  In
  Let Rec solver : Int -> Array(Float) -> Array(Float) -> Int ( index dirvec org ) =
    Let m : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
      objects.(index)    In
    Let b0 : Float =
      Let Td1693 : Float =
        Let Ti1692 : Int =
          Int(0)
        In
        org.(Ti1692)      In
      Let Td1694 : Float =
        o_param_x m 
      In
      Td1693 -. Td1694
    In
    Let b1 : Float =
      Let Td1696 : Float =
        Let Ti1695 : Int =
          Int(1)
        In
        org.(Ti1695)      In
      Let Td1697 : Float =
        o_param_y m 
      In
      Td1696 -. Td1697
    In
    Let b2 : Float =
      Let Td1699 : Float =
        Let Ti1698 : Int =
          Int(2)
        In
        org.(Ti1698)      In
      Let Td1700 : Float =
        o_param_z m 
      In
      Td1699 -. Td1700
    In
    Let m_shape : Int =
      o_form m 
    In
    If 1 = m_shape Then
      solver_rect m dirvec b0 b1 b2 
    Else
      Let Ti1701 : Int =
        Int(2)
      In
      If m_shape = Ti1701 Then
        solver_surface m dirvec b0 b1 b2 
      Else
        solver_second m dirvec b0 b1 b2 
  In
  Let Rec solver_rect_fast : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int ( m v dconst b0 b1 b2 ) =
    Let d0 : Float =
      Let Td1622 : Float =
        Let Td1621 : Float =
          Let Ti1620 : Int =
            Int(0)
          In
          dconst.(Ti1620)        In
        Td1621 -. b0
      In
      Let Td1624 : Float =
        Let Ti1623 : Int =
          Int(1)
        In
        dconst.(Ti1623)      In
      Td1622 *. Td1624
    In
    Let Ti1691 : Int =
      Let Tb1641 : Bool =
        Let Td1629 : Float =
          Let Td1628 : Float =
            Let Td1627 : Float =
              Let Td1626 : Float =
                Let Ti1625 : Int =
                  Int(1)
                In
                v.(Ti1625)              In
              d0 *. Td1626
            In
            Td1627 +. b1
          In
          fabs Td1628 
        In
        Let Td1630 : Float =
          o_param_b m 
        In
        fless Td1629 Td1630 
      In
      If 0 = Tb1641 Then
        Int(0)
      Else
        Let Tb1640 : Bool =
          Let Td1635 : Float =
            Let Td1634 : Float =
              Let Td1633 : Float =
                Let Td1632 : Float =
                  Let Ti1631 : Int =
                    Int(2)
                  In
                  v.(Ti1631)                In
                d0 *. Td1632
              In
              Td1633 +. b2
            In
            fabs Td1634 
          In
          Let Td1636 : Float =
            o_param_c m 
          In
          fless Td1635 Td1636 
        In
        If 0 = Tb1640 Then
          Int(0)
        Else
          Let Tb1639 : Bool =
            Let Td1638 : Float =
              Let Ti1637 : Int =
                Int(1)
              In
              dconst.(Ti1637)            In
            fiszero Td1638 
          In
          If 0 = Tb1639 Then
            Int(1)
          Else
            Int(0)
    In
    If 0 = Ti1691 Then
      Let d1 : Float =
        Let Td1644 : Float =
          Let Td1643 : Float =
            Let Ti1642 : Int =
              Int(2)
            In
            dconst.(Ti1642)          In
          Td1643 -. b1
        In
        Let Td1646 : Float =
          Let Ti1645 : Int =
            Int(3)
          In
          dconst.(Ti1645)        In
        Td1644 *. Td1646
      In
      Let Ti1689 : Int =
        Let Tb1663 : Bool =
          Let Td1651 : Float =
            Let Td1650 : Float =
              Let Td1649 : Float =
                Let Td1648 : Float =
                  Let Ti1647 : Int =
                    Int(0)
                  In
                  v.(Ti1647)                In
                d1 *. Td1648
              In
              Td1649 +. b0
            In
            fabs Td1650 
          In
          Let Td1652 : Float =
            o_param_a m 
          In
          fless Td1651 Td1652 
        In
        If 0 = Tb1663 Then
          Int(0)
        Else
          Let Tb1662 : Bool =
            Let Td1657 : Float =
              Let Td1656 : Float =
                Let Td1655 : Float =
                  Let Td1654 : Float =
                    Let Ti1653 : Int =
                      Int(2)
                    In
                    v.(Ti1653)                  In
                  d1 *. Td1654
                In
                Td1655 +. b2
              In
              fabs Td1656 
            In
            Let Td1658 : Float =
              o_param_c m 
            In
            fless Td1657 Td1658 
          In
          If 0 = Tb1662 Then
            Int(0)
          Else
            Let Tb1661 : Bool =
              Let Td1660 : Float =
                Let Ti1659 : Int =
                  Int(3)
                In
                dconst.(Ti1659)              In
              fiszero Td1660 
            In
            If 0 = Tb1661 Then
              Int(1)
            Else
              Int(0)
      In
      If 0 = Ti1689 Then
        Let d2 : Float =
          Let Td1666 : Float =
            Let Td1665 : Float =
              Let Ti1664 : Int =
                Int(4)
              In
              dconst.(Ti1664)            In
            Td1665 -. b2
          In
          Let Td1668 : Float =
            Let Ti1667 : Int =
              Int(5)
            In
            dconst.(Ti1667)          In
          Td1666 *. Td1668
        In
        Let Ti1687 : Int =
          Let Tb1685 : Bool =
            Let Td1673 : Float =
              Let Td1672 : Float =
                Let Td1671 : Float =
                  Let Td1670 : Float =
                    Let Ti1669 : Int =
                      Int(0)
                    In
                    v.(Ti1669)                  In
                  d2 *. Td1670
                In
                Td1671 +. b0
              In
              fabs Td1672 
            In
            Let Td1674 : Float =
              o_param_a m 
            In
            fless Td1673 Td1674 
          In
          If 0 = Tb1685 Then
            Int(0)
          Else
            Let Tb1684 : Bool =
              Let Td1679 : Float =
                Let Td1678 : Float =
                  Let Td1677 : Float =
                    Let Td1676 : Float =
                      Let Ti1675 : Int =
                        Int(1)
                      In
                      v.(Ti1675)                    In
                    d2 *. Td1676
                  In
                  Td1677 +. b1
                In
                fabs Td1678 
              In
              Let Td1680 : Float =
                o_param_b m 
              In
              fless Td1679 Td1680 
            In
            If 0 = Tb1684 Then
              Int(0)
            Else
              Let Tb1683 : Bool =
                Let Td1682 : Float =
                  Let Ti1681 : Int =
                    Int(5)
                  In
                  dconst.(Ti1681)                In
                fiszero Td1682 
              In
              If 0 = Tb1683 Then
                Int(1)
              Else
                Int(0)
        In
        If 0 = Ti1687 Then
          Int(0)
        Else
          Let Tu99 : Unit =
            Let Ti1686 : Int =
              Int(0)
            In
            solver_dist.(Ti1686) <- d2          In
          Int(3)
      Else
        Let Tu98 : Unit =
          Let Ti1688 : Int =
            Int(0)
          In
          solver_dist.(Ti1688) <- d1        In
        Int(2)
    Else
      Let Tu97 : Unit =
        Let Ti1690 : Int =
          Int(0)
        In
        solver_dist.(Ti1690) <- d0      In
      Int(1)
  In
  Let Rec solver_surface_fast : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int ( m dconst b0 b1 b2 ) =
    Let Tb1619 : Bool =
      Let Td1606 : Float =
        Let Ti1605 : Int =
          Int(0)
        In
        dconst.(Ti1605)      In
      fisneg Td1606 
    In
    If 0 = Tb1619 Then
      Int(0)
    Else
      Let Tu100 : Unit =
        Let Ti1607 : Int =
          Int(0)
        In
        Let Td1618 : Float =
          Let Td1614 : Float =
            Let Td1610 : Float =
              Let Td1609 : Float =
                Let Ti1608 : Int =
                  Int(1)
                In
                dconst.(Ti1608)              In
              Td1609 *. b0
            In
            Let Td1613 : Float =
              Let Td1612 : Float =
                Let Ti1611 : Int =
                  Int(2)
                In
                dconst.(Ti1611)              In
              Td1612 *. b1
            In
            Td1610 +. Td1613
          In
          Let Td1617 : Float =
            Let Td1616 : Float =
              Let Ti1615 : Int =
                Int(3)
              In
              dconst.(Ti1615)            In
            Td1616 *. b2
          In
          Td1614 +. Td1617
        In
        solver_dist.(Ti1607) <- Td1618      In
      Int(1)
  In
  Let Rec solver_second_fast : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int ( m dconst b0 b1 b2 ) =
    Let aa : Float =
      Let Ti1574 : Int =
        Int(0)
      In
      dconst.(Ti1574)    In
    Let Tb1604 : Bool =
      fiszero aa 
    In
    If 0 = Tb1604 Then
      Let neg_bb : Float =
        Let Td1581 : Float =
          Let Td1577 : Float =
            Let Td1576 : Float =
              Let Ti1575 : Int =
                Int(1)
              In
              dconst.(Ti1575)            In
            Td1576 *. b0
          In
          Let Td1580 : Float =
            Let Td1579 : Float =
              Let Ti1578 : Int =
                Int(2)
              In
              dconst.(Ti1578)            In
            Td1579 *. b1
          In
          Td1577 +. Td1580
        In
        Let Td1584 : Float =
          Let Td1583 : Float =
            Let Ti1582 : Int =
              Int(3)
            In
            dconst.(Ti1582)          In
          Td1583 *. b2
        In
        Td1581 +. Td1584
      In
      Let cc0 : Float =
        quadratic m b0 b1 b2 
      In
      Let cc : Float =
        Let Ti1586 : Int =
          o_form m 
        In
        Let Ti1587 : Int =
          Int(3)
        In
        If Ti1586 = Ti1587 Then
          Let Td1585 : Float =
            Float(1.000000)
          In
          cc0 -. Td1585
        Else
          Var(cc0)
      In
      Let d : Float =
        Let Td1588 : Float =
          fsqr neg_bb 
        In
        Let Td1589 : Float =
          aa *. cc
        In
        Td1588 -. Td1589
      In
      Let Tb1603 : Bool =
        fispos d 
      In
      If 0 = Tb1603 Then
        Int(0)
      Else
        Let Tu101 : Unit =
          Let Tb1602 : Bool =
            o_isinvert m 
          In
          If 0 = Tb1602 Then
            Let Ti1590 : Int =
              Int(0)
            In
            Let Td1595 : Float =
              Let Td1592 : Float =
                Let Td1591 : Float =
                  ExtFun:sqrt d 
                In
                neg_bb -. Td1591
              In
              Let Td1594 : Float =
                Let Ti1593 : Int =
                  Int(4)
                In
                dconst.(Ti1593)              In
              Td1592 *. Td1594
            In
            solver_dist.(Ti1590) <- Td1595          Else
            Let Ti1596 : Int =
              Int(0)
            In
            Let Td1601 : Float =
              Let Td1598 : Float =
                Let Td1597 : Float =
                  ExtFun:sqrt d 
                In
                neg_bb +. Td1597
              In
              Let Td1600 : Float =
                Let Ti1599 : Int =
                  Int(4)
                In
                dconst.(Ti1599)              In
              Td1598 *. Td1600
            In
            solver_dist.(Ti1596) <- Td1601        In
        Int(1)
    Else
      Int(0)
  In
  Let Rec solver_fast : Int -> Array(Float) * Array(Array(Float)) -> Array(Float) -> Int ( index dirvec org ) =
    Let m : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
      objects.(index)    In
    Let b0 : Float =
      Let Td1564 : Float =
        Let Ti1563 : Int =
          Int(0)
        In
        org.(Ti1563)      In
      Let Td1565 : Float =
        o_param_x m 
      In
      Td1564 -. Td1565
    In
    Let b1 : Float =
      Let Td1567 : Float =
        Let Ti1566 : Int =
          Int(1)
        In
        org.(Ti1566)      In
      Let Td1568 : Float =
        o_param_y m 
      In
      Td1567 -. Td1568
    In
    Let b2 : Float =
      Let Td1570 : Float =
        Let Ti1569 : Int =
          Int(2)
        In
        org.(Ti1569)      In
      Let Td1571 : Float =
        o_param_z m 
      In
      Td1570 -. Td1571
    In
    Let dconsts : Array(Array(Float)) =
      d_const dirvec 
    In
    Let dconst : Array(Float) =
      dconsts.(index)    In
    Let m_shape : Int =
      o_form m 
    In
    If 1 = m_shape Then
      Let Ta1572 : Array(Float) =
        d_vec dirvec 
      In
      solver_rect_fast m Ta1572 dconst b0 b1 b2 
    Else
      Let Ti1573 : Int =
        Int(2)
      In
      If m_shape = Ti1573 Then
        solver_surface_fast m dconst b0 b1 b2 
      Else
        solver_second_fast m dconst b0 b1 b2 
  In
  Let Rec solver_surface_fast2 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int ( m dconst sconst b0 b1 b2 ) =
    Let Tb1562 : Bool =
      Let Td1555 : Float =
        Let Ti1554 : Int =
          Int(0)
        In
        dconst.(Ti1554)      In
      fisneg Td1555 
    In
    If 0 = Tb1562 Then
      Int(0)
    Else
      Let Tu102 : Unit =
        Let Ti1556 : Int =
          Int(0)
        In
        Let Td1561 : Float =
          Let Td1558 : Float =
            Let Ti1557 : Int =
              Int(0)
            In
            dconst.(Ti1557)          In
          Let Td1560 : Float =
            Let Ti1559 : Int =
              Int(3)
            In
            sconst.(Ti1559)          In
          Td1558 *. Td1560
        In
        solver_dist.(Ti1556) <- Td1561      In
      Int(1)
  In
  Let Rec solver_second_fast2 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int ( m dconst sconst b0 b1 b2 ) =
    Let aa : Float =
      Let Ti1525 : Int =
        Int(0)
      In
      dconst.(Ti1525)    In
    Let Tb1553 : Bool =
      fiszero aa 
    In
    If 0 = Tb1553 Then
      Let neg_bb : Float =
        Let Td1532 : Float =
          Let Td1528 : Float =
            Let Td1527 : Float =
              Let Ti1526 : Int =
                Int(1)
              In
              dconst.(Ti1526)            In
            Td1527 *. b0
          In
          Let Td1531 : Float =
            Let Td1530 : Float =
              Let Ti1529 : Int =
                Int(2)
              In
              dconst.(Ti1529)            In
            Td1530 *. b1
          In
          Td1528 +. Td1531
        In
        Let Td1535 : Float =
          Let Td1534 : Float =
            Let Ti1533 : Int =
              Int(3)
            In
            dconst.(Ti1533)          In
          Td1534 *. b2
        In
        Td1532 +. Td1535
      In
      Let cc : Float =
        Let Ti1536 : Int =
          Int(3)
        In
        sconst.(Ti1536)      In
      Let d : Float =
        Let Td1537 : Float =
          fsqr neg_bb 
        In
        Let Td1538 : Float =
          aa *. cc
        In
        Td1537 -. Td1538
      In
      Let Tb1552 : Bool =
        fispos d 
      In
      If 0 = Tb1552 Then
        Int(0)
      Else
        Let Tu103 : Unit =
          Let Tb1551 : Bool =
            o_isinvert m 
          In
          If 0 = Tb1551 Then
            Let Ti1539 : Int =
              Int(0)
            In
            Let Td1544 : Float =
              Let Td1541 : Float =
                Let Td1540 : Float =
                  ExtFun:sqrt d 
                In
                neg_bb -. Td1540
              In
              Let Td1543 : Float =
                Let Ti1542 : Int =
                  Int(4)
                In
                dconst.(Ti1542)              In
              Td1541 *. Td1543
            In
            solver_dist.(Ti1539) <- Td1544          Else
            Let Ti1545 : Int =
              Int(0)
            In
            Let Td1550 : Float =
              Let Td1547 : Float =
                Let Td1546 : Float =
                  ExtFun:sqrt d 
                In
                neg_bb +. Td1546
              In
              Let Td1549 : Float =
                Let Ti1548 : Int =
                  Int(4)
                In
                dconst.(Ti1548)              In
              Td1547 *. Td1549
            In
            solver_dist.(Ti1545) <- Td1550        In
        Int(1)
    Else
      Int(0)
  In
  Let Rec solver_fast2 : Int -> Array(Float) * Array(Array(Float)) -> Int ( index dirvec ) =
    Let m : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
      objects.(index)    In
    Let sconst : Array(Float) =
      o_param_ctbl m 
    In
    Let b0 : Float =
      Let Ti1520 : Int =
        Int(0)
      In
      sconst.(Ti1520)    In
    Let b1 : Float =
      Let Ti1521 : Int =
        Int(1)
      In
      sconst.(Ti1521)    In
    Let b2 : Float =
      Let Ti1522 : Int =
        Int(2)
      In
      sconst.(Ti1522)    In
    Let dconsts : Array(Array(Float)) =
      d_const dirvec 
    In
    Let dconst : Array(Float) =
      dconsts.(index)    In
    Let m_shape : Int =
      o_form m 
    In
    If 1 = m_shape Then
      Let Ta1523 : Array(Float) =
        d_vec dirvec 
      In
      solver_rect_fast m Ta1523 dconst b0 b1 b2 
    Else
      Let Ti1524 : Int =
        Int(2)
      In
      If m_shape = Ti1524 Then
        solver_surface_fast2 m dconst sconst b0 b1 b2 
      Else
        solver_second_fast2 m dconst sconst b0 b1 b2 
  In
  Let Rec setup_rect_table : Array(Float) -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) ( vec m ) =
    Let const : Array(Float) =
      Let Ti1464 : Int =
        Int(6)
      In
      Let Td1465 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti1464 Td1465 
    In
    Let Tu109 : Unit =
      Let Tb1483 : Bool =
        Let Td1467 : Float =
          Let Ti1466 : Int =
            Int(0)
          In
          vec.(Ti1466)        In
        fiszero Td1467 
      In
      If 0 = Tb1483 Then
        Let Tu104 : Unit =
          Let Ti1468 : Int =
            Int(0)
          In
          Let Td1475 : Float =
            Let Tb1473 : Bool =
              Let Tb1469 : Bool =
                o_isinvert m 
              In
              Let Tb1472 : Bool =
                Let Td1471 : Float =
                  Let Ti1470 : Int =
                    Int(0)
                  In
                  vec.(Ti1470)                In
                fisneg Td1471 
              In
              xor Tb1469 Tb1472 
            In
            Let Td1474 : Float =
              o_param_a m 
            In
            fneg_cond Tb1473 Td1474 
          In
          const.(Ti1468) <- Td1475        In
        Let Ti1476 : Int =
          Int(1)
        In
        Let Td1480 : Float =
          Let Td1477 : Float =
            Float(1.000000)
          In
          Let Td1479 : Float =
            Let Ti1478 : Int =
              Int(0)
            In
            vec.(Ti1478)          In
          Td1477 /. Td1479
        In
        const.(Ti1476) <- Td1480      Else
        Let Ti1481 : Int =
          Int(1)
        In
        Let Td1482 : Float =
          Float(0.000000)
        In
        const.(Ti1481) <- Td1482    In
    Let Tu108 : Unit =
      Let Tb1501 : Bool =
        Let Td1485 : Float =
          Let Ti1484 : Int =
            Int(1)
          In
          vec.(Ti1484)        In
        fiszero Td1485 
      In
      If 0 = Tb1501 Then
        Let Tu105 : Unit =
          Let Ti1486 : Int =
            Int(2)
          In
          Let Td1493 : Float =
            Let Tb1491 : Bool =
              Let Tb1487 : Bool =
                o_isinvert m 
              In
              Let Tb1490 : Bool =
                Let Td1489 : Float =
                  Let Ti1488 : Int =
                    Int(1)
                  In
                  vec.(Ti1488)                In
                fisneg Td1489 
              In
              xor Tb1487 Tb1490 
            In
            Let Td1492 : Float =
              o_param_b m 
            In
            fneg_cond Tb1491 Td1492 
          In
          const.(Ti1486) <- Td1493        In
        Let Ti1494 : Int =
          Int(3)
        In
        Let Td1498 : Float =
          Let Td1495 : Float =
            Float(1.000000)
          In
          Let Td1497 : Float =
            Let Ti1496 : Int =
              Int(1)
            In
            vec.(Ti1496)          In
          Td1495 /. Td1497
        In
        const.(Ti1494) <- Td1498      Else
        Let Ti1499 : Int =
          Int(3)
        In
        Let Td1500 : Float =
          Float(0.000000)
        In
        const.(Ti1499) <- Td1500    In
    Let Tu107 : Unit =
      Let Tb1519 : Bool =
        Let Td1503 : Float =
          Let Ti1502 : Int =
            Int(2)
          In
          vec.(Ti1502)        In
        fiszero Td1503 
      In
      If 0 = Tb1519 Then
        Let Tu106 : Unit =
          Let Ti1504 : Int =
            Int(4)
          In
          Let Td1511 : Float =
            Let Tb1509 : Bool =
              Let Tb1505 : Bool =
                o_isinvert m 
              In
              Let Tb1508 : Bool =
                Let Td1507 : Float =
                  Let Ti1506 : Int =
                    Int(2)
                  In
                  vec.(Ti1506)                In
                fisneg Td1507 
              In
              xor Tb1505 Tb1508 
            In
            Let Td1510 : Float =
              o_param_c m 
            In
            fneg_cond Tb1509 Td1510 
          In
          const.(Ti1504) <- Td1511        In
        Let Ti1512 : Int =
          Int(5)
        In
        Let Td1516 : Float =
          Let Td1513 : Float =
            Float(1.000000)
          In
          Let Td1515 : Float =
            Let Ti1514 : Int =
              Int(2)
            In
            vec.(Ti1514)          In
          Td1513 /. Td1515
        In
        const.(Ti1512) <- Td1516      Else
        Let Ti1517 : Int =
          Int(5)
        In
        Let Td1518 : Float =
          Float(0.000000)
        In
        const.(Ti1517) <- Td1518    In
    Var(const)
  In
  Let Rec setup_surface_table : Array(Float) -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) ( vec m ) =
    Let const : Array(Float) =
      Let Ti1431 : Int =
        Int(4)
      In
      Let Td1432 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti1431 Td1432 
    In
    Let d : Float =
      Let Td1441 : Float =
        Let Td1436 : Float =
          Let Td1434 : Float =
            Let Ti1433 : Int =
              Int(0)
            In
            vec.(Ti1433)          In
          Let Td1435 : Float =
            o_param_a m 
          In
          Td1434 *. Td1435
        In
        Let Td1440 : Float =
          Let Td1438 : Float =
            Let Ti1437 : Int =
              Int(1)
            In
            vec.(Ti1437)          In
          Let Td1439 : Float =
            o_param_b m 
          In
          Td1438 *. Td1439
        In
        Td1436 +. Td1440
      In
      Let Td1445 : Float =
        Let Td1443 : Float =
          Let Ti1442 : Int =
            Int(2)
          In
          vec.(Ti1442)        In
        Let Td1444 : Float =
          o_param_c m 
        In
        Td1443 *. Td1444
      In
      Td1441 +. Td1445
    In
    Let Tu113 : Unit =
      Let Tb1463 : Bool =
        fispos d 
      In
      If 0 = Tb1463 Then
        Let Ti1446 : Int =
          Int(0)
        In
        Let Td1447 : Float =
          Float(0.000000)
        In
        const.(Ti1446) <- Td1447      Else
        Let Tu112 : Unit =
          Let Ti1448 : Int =
            Int(0)
          In
          Let Td1450 : Float =
            Let Td1449 : Float =
              Float(-1.000000)
            In
            Td1449 /. d
          In
          const.(Ti1448) <- Td1450        In
        Let Tu111 : Unit =
          Let Ti1451 : Int =
            Int(1)
          In
          Let Td1454 : Float =
            Let Td1453 : Float =
              Let Td1452 : Float =
                o_param_a m 
              In
              Td1452 /. d
            In
            fneg Td1453 
          In
          const.(Ti1451) <- Td1454        In
        Let Tu110 : Unit =
          Let Ti1455 : Int =
            Int(2)
          In
          Let Td1458 : Float =
            Let Td1457 : Float =
              Let Td1456 : Float =
                o_param_b m 
              In
              Td1456 /. d
            In
            fneg Td1457 
          In
          const.(Ti1455) <- Td1458        In
        Let Ti1459 : Int =
          Int(3)
        In
        Let Td1462 : Float =
          Let Td1461 : Float =
            Let Td1460 : Float =
              o_param_c m 
            In
            Td1460 /. d
          In
          fneg Td1461 
        In
        const.(Ti1459) <- Td1462    In
    Var(const)
  In
  Let Rec setup_second_table : Array(Float) -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) ( v m ) =
    Let const : Array(Float) =
      Let Ti1366 : Int =
        Int(5)
      In
      Let Td1367 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti1366 Td1367 
    In
    Let aa : Float =
      Let Td1369 : Float =
        Let Ti1368 : Int =
          Int(0)
        In
        v.(Ti1368)      In
      Let Td1371 : Float =
        Let Ti1370 : Int =
          Int(1)
        In
        v.(Ti1370)      In
      Let Td1373 : Float =
        Let Ti1372 : Int =
          Int(2)
        In
        v.(Ti1372)      In
      quadratic m Td1369 Td1371 Td1373 
    In
    Let c1 : Float =
      Let Td1377 : Float =
        Let Td1375 : Float =
          Let Ti1374 : Int =
            Int(0)
          In
          v.(Ti1374)        In
        Let Td1376 : Float =
          o_param_a m 
        In
        Td1375 *. Td1376
      In
      fneg Td1377 
    In
    Let c2 : Float =
      Let Td1381 : Float =
        Let Td1379 : Float =
          Let Ti1378 : Int =
            Int(1)
          In
          v.(Ti1378)        In
        Let Td1380 : Float =
          o_param_b m 
        In
        Td1379 *. Td1380
      In
      fneg Td1381 
    In
    Let c3 : Float =
      Let Td1385 : Float =
        Let Td1383 : Float =
          Let Ti1382 : Int =
            Int(2)
          In
          v.(Ti1382)        In
        Let Td1384 : Float =
          o_param_c m 
        In
        Td1383 *. Td1384
      In
      fneg Td1385 
    In
    Let Tu120 : Unit =
      Let Ti1386 : Int =
        Int(0)
      In
      const.(Ti1386) <- aa    In
    Let Tu119 : Unit =
      Let Ti1426 : Int =
        o_isrot m 
      In
      If 0 = Ti1426 Then
        Let Tu117 : Unit =
          Let Ti1387 : Int =
            Int(1)
          In
          const.(Ti1387) <- c1        In
        Let Tu116 : Unit =
          Let Ti1388 : Int =
            Int(2)
          In
          const.(Ti1388) <- c2        In
        Let Ti1389 : Int =
          Int(3)
        In
        const.(Ti1389) <- c3      Else
        Let Tu115 : Unit =
          Let Ti1390 : Int =
            Int(1)
          In
          Let Td1401 : Float =
            Let Td1400 : Float =
              Let Td1399 : Float =
                Let Td1394 : Float =
                  Let Td1392 : Float =
                    Let Ti1391 : Int =
                      Int(2)
                    In
                    v.(Ti1391)                  In
                  Let Td1393 : Float =
                    o_param_r2 m 
                  In
                  Td1392 *. Td1393
                In
                Let Td1398 : Float =
                  Let Td1396 : Float =
                    Let Ti1395 : Int =
                      Int(1)
                    In
                    v.(Ti1395)                  In
                  Let Td1397 : Float =
                    o_param_r3 m 
                  In
                  Td1396 *. Td1397
                In
                Td1394 +. Td1398
              In
              fhalf Td1399 
            In
            c1 -. Td1400
          In
          const.(Ti1390) <- Td1401        In
        Let Tu114 : Unit =
          Let Ti1402 : Int =
            Int(2)
          In
          Let Td1413 : Float =
            Let Td1412 : Float =
              Let Td1411 : Float =
                Let Td1406 : Float =
                  Let Td1404 : Float =
                    Let Ti1403 : Int =
                      Int(2)
                    In
                    v.(Ti1403)                  In
                  Let Td1405 : Float =
                    o_param_r1 m 
                  In
                  Td1404 *. Td1405
                In
                Let Td1410 : Float =
                  Let Td1408 : Float =
                    Let Ti1407 : Int =
                      Int(0)
                    In
                    v.(Ti1407)                  In
                  Let Td1409 : Float =
                    o_param_r3 m 
                  In
                  Td1408 *. Td1409
                In
                Td1406 +. Td1410
              In
              fhalf Td1411 
            In
            c2 -. Td1412
          In
          const.(Ti1402) <- Td1413        In
        Let Ti1414 : Int =
          Int(3)
        In
        Let Td1425 : Float =
          Let Td1424 : Float =
            Let Td1423 : Float =
              Let Td1418 : Float =
                Let Td1416 : Float =
                  Let Ti1415 : Int =
                    Int(1)
                  In
                  v.(Ti1415)                In
                Let Td1417 : Float =
                  o_param_r1 m 
                In
                Td1416 *. Td1417
              In
              Let Td1422 : Float =
                Let Td1420 : Float =
                  Let Ti1419 : Int =
                    Int(0)
                  In
                  v.(Ti1419)                In
                Let Td1421 : Float =
                  o_param_r2 m 
                In
                Td1420 *. Td1421
              In
              Td1418 +. Td1422
            In
            fhalf Td1423 
          In
          c3 -. Td1424
        In
        const.(Ti1414) <- Td1425    In
    Let Tu118 : Unit =
      Let Tb1430 : Bool =
        fiszero aa 
      In
      If 0 = Tb1430 Then
        Let Ti1427 : Int =
          Int(4)
        In
        Let Td1429 : Float =
          Let Td1428 : Float =
            Float(1.000000)
          In
          Td1428 /. aa
        In
        const.(Ti1427) <- Td1429      Else
        ()
    In
    Var(const)
  In
  Let Rec iter_setup_dirvec_constants : Array(Float) * Array(Array(Float)) -> Int -> Unit ( dirvec index ) =
    If 0 <= index Then
      Let m : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
        objects.(index)      In
      Let dconst : Array(Array(Float)) =
        d_const dirvec 
      In
      Let v : Array(Float) =
        d_vec dirvec 
      In
      Let m_shape : Int =
        o_form m 
      In
      Let Tu121 : Unit =
        If 1 = m_shape Then
          Let Ta1360 : Array(Float) =
            setup_rect_table v m 
          In
          dconst.(index) <- Ta1360        Else
          Let Ti1363 : Int =
            Int(2)
          In
          If m_shape = Ti1363 Then
            Let Ta1361 : Array(Float) =
              setup_surface_table v m 
            In
            dconst.(index) <- Ta1361          Else
            Let Ta1362 : Array(Float) =
              setup_second_table v m 
            In
            dconst.(index) <- Ta1362      In
      Let Ti1365 : Int =
        Let Ti1364 : Int =
          Int(1)
        In
        index - Ti1364
      In
      iter_setup_dirvec_constants dirvec Ti1365 
    Else
      ()
  In
  Let Rec setup_dirvec_constants : Array(Float) * Array(Array(Float)) -> Unit ( dirvec ) =
    Let Ti1359 : Int =
      Let Ti1357 : Int =
        Let Ti1356 : Int =
          Int(0)
        In
        n_objects.(Ti1356)      In
      Let Ti1358 : Int =
        Int(1)
      In
      Ti1357 - Ti1358
    In
    iter_setup_dirvec_constants dirvec Ti1359 
  In
  Let Rec setup_startp_constants : Array(Float) -> Int -> Unit ( p index ) =
    If 0 <= index Then
      Let obj : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
        objects.(index)      In
      Let sconst : Array(Float) =
        o_param_ctbl obj 
      In
      Let m_shape : Int =
        o_form obj 
      In
      Let Tu125 : Unit =
        Let Ti1318 : Int =
          Int(0)
        In
        Let Td1322 : Float =
          Let Td1320 : Float =
            Let Ti1319 : Int =
              Int(0)
            In
            p.(Ti1319)          In
          Let Td1321 : Float =
            o_param_x obj 
          In
          Td1320 -. Td1321
        In
        sconst.(Ti1318) <- Td1322      In
      Let Tu124 : Unit =
        Let Ti1323 : Int =
          Int(1)
        In
        Let Td1327 : Float =
          Let Td1325 : Float =
            Let Ti1324 : Int =
              Int(1)
            In
            p.(Ti1324)          In
          Let Td1326 : Float =
            o_param_y obj 
          In
          Td1325 -. Td1326
        In
        sconst.(Ti1323) <- Td1327      In
      Let Tu123 : Unit =
        Let Ti1328 : Int =
          Int(2)
        In
        Let Td1332 : Float =
          Let Td1330 : Float =
            Let Ti1329 : Int =
              Int(2)
            In
            p.(Ti1329)          In
          Let Td1331 : Float =
            o_param_z obj 
          In
          Td1330 -. Td1331
        In
        sconst.(Ti1328) <- Td1332      In
      Let Tu122 : Unit =
        Let Ti1353 : Int =
          Int(2)
        In
        If m_shape = Ti1353 Then
          Let Ti1333 : Int =
            Int(3)
          In
          Let Td1341 : Float =
            Let Ta1334 : Array(Float) =
              o_param_abc obj 
            In
            Let Td1336 : Float =
              Let Ti1335 : Int =
                Int(0)
              In
              sconst.(Ti1335)            In
            Let Td1338 : Float =
              Let Ti1337 : Int =
                Int(1)
              In
              sconst.(Ti1337)            In
            Let Td1340 : Float =
              Let Ti1339 : Int =
                Int(2)
              In
              sconst.(Ti1339)            In
            veciprod2 Ta1334 Td1336 Td1338 Td1340 
          In
          sconst.(Ti1333) <- Td1341        Else
          Let Ti1352 : Int =
            Int(2)
          In
          If m_shape <= Ti1352 Then
            ()
          Else
            Let cc0 : Float =
              Let Td1343 : Float =
                Let Ti1342 : Int =
                  Int(0)
                In
                sconst.(Ti1342)              In
              Let Td1345 : Float =
                Let Ti1344 : Int =
                  Int(1)
                In
                sconst.(Ti1344)              In
              Let Td1347 : Float =
                Let Ti1346 : Int =
                  Int(2)
                In
                sconst.(Ti1346)              In
              quadratic obj Td1343 Td1345 Td1347 
            In
            Let Ti1348 : Int =
              Int(3)
            In
            Let Td1351 : Float =
              Let Ti1350 : Int =
                Int(3)
              In
              If m_shape = Ti1350 Then
                Let Td1349 : Float =
                  Float(1.000000)
                In
                cc0 -. Td1349
              Else
                Var(cc0)
            In
            sconst.(Ti1348) <- Td1351      In
      Let Ti1355 : Int =
        Let Ti1354 : Int =
          Int(1)
        In
        index - Ti1354
      In
      setup_startp_constants p Ti1355 
    Else
      ()
  In
  Let Rec setup_startp : Array(Float) -> Unit ( p ) =
    Let Tu126 : Unit =
      veccpy startp_fast p 
    In
    Let Ti1317 : Int =
      Let Ti1315 : Int =
        Let Ti1314 : Int =
          Int(0)
        In
        n_objects.(Ti1314)      In
      Let Ti1316 : Int =
        Int(1)
      In
      Ti1315 - Ti1316
    In
    setup_startp_constants p Ti1317 
  In
  Let Rec is_rect_outside : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Bool ( m p0 p1 p2 ) =
    Let Ti1313 : Int =
      Let Tb1311 : Bool =
        Let Td1304 : Float =
          fabs p0 
        In
        Let Td1305 : Float =
          o_param_a m 
        In
        fless Td1304 Td1305 
      In
      If 0 = Tb1311 Then
        Int(0)
      Else
        Let Tb1310 : Bool =
          Let Td1306 : Float =
            fabs p1 
          In
          Let Td1307 : Float =
            o_param_b m 
          In
          fless Td1306 Td1307 
        In
        If 0 = Tb1310 Then
          Int(0)
        Else
          Let Td1308 : Float =
            fabs p2 
          In
          Let Td1309 : Float =
            o_param_c m 
          In
          fless Td1308 Td1309 
    In
    If 0 = Ti1313 Then
      Let Tb1312 : Bool =
        o_isinvert m 
      In
      If 0 = Tb1312 Then
        Int(1)
      Else
        Int(0)
    Else
      o_isinvert m 
  In
  Let Rec is_plane_outside : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Bool ( m p0 p1 p2 ) =
    Let w : Float =
      Let Ta1300 : Array(Float) =
        o_param_abc m 
      In
      veciprod2 Ta1300 p0 p1 p2 
    In
    Let Tb1303 : Bool =
      Let Tb1301 : Bool =
        o_isinvert m 
      In
      Let Tb1302 : Bool =
        fisneg w 
      In
      xor Tb1301 Tb1302 
    In
    If 0 = Tb1303 Then
      Int(1)
    Else
      Int(0)
  In
  Let Rec is_second_outside : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Bool ( m p0 p1 p2 ) =
    Let w : Float =
      quadratic m p0 p1 p2 
    In
    Let w2 : Float =
      Let Ti1295 : Int =
        o_form m 
      In
      Let Ti1296 : Int =
        Int(3)
      In
      If Ti1295 = Ti1296 Then
        Let Td1294 : Float =
          Float(1.000000)
        In
        w -. Td1294
      Else
        Var(w)
    In
    Let Tb1299 : Bool =
      Let Tb1297 : Bool =
        o_isinvert m 
      In
      Let Tb1298 : Bool =
        fisneg w2 
      In
      xor Tb1297 Tb1298 
    In
    If 0 = Tb1299 Then
      Int(1)
    Else
      Int(0)
  In
  Let Rec is_outside : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Bool ( m q0 q1 q2 ) =
    Let p0 : Float =
      Let Td1290 : Float =
        o_param_x m 
      In
      q0 -. Td1290
    In
    Let p1 : Float =
      Let Td1291 : Float =
        o_param_y m 
      In
      q1 -. Td1291
    In
    Let p2 : Float =
      Let Td1292 : Float =
        o_param_z m 
      In
      q2 -. Td1292
    In
    Let m_shape : Int =
      o_form m 
    In
    If 1 = m_shape Then
      is_rect_outside m p0 p1 p2 
    Else
      Let Ti1293 : Int =
        Int(2)
      In
      If m_shape = Ti1293 Then
        is_plane_outside m p0 p1 p2 
      Else
        is_second_outside m p0 p1 p2 
  In
  Let Rec check_all_inside : Int -> Array(Int) -> Float -> Float -> Float -> Bool ( ofs iand q0 q1 q2 ) =
    Let head : Int =
      iand.(ofs)    In
    Let Ti1289 : Int =
      Let Ti1284 : Int =
        Int(1)
      In
      -Ti1284
    In
    If head = Ti1289 Then
      Int(1)
    Else
      Let Tb1288 : Bool =
        Let Tt1285 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
          objects.(head)        In
        is_outside Tt1285 q0 q1 q2 
      In
      If 0 = Tb1288 Then
        Let Ti1287 : Int =
          Let Ti1286 : Int =
            Int(1)
          In
          ofs + Ti1286
        In
        check_all_inside Ti1287 iand q0 q1 q2 
      Else
        Int(0)
  In
  Let Rec shadow_check_and_group : Int -> Array(Int) -> Bool ( iand_ofs and_group ) =
    Let Ti1282 : Int =
      and_group.(iand_ofs)    In
    Let Ti1283 : Int =
      Let Ti1254 : Int =
        Int(1)
      In
      -Ti1254
    In
    If Ti1282 = Ti1283 Then
      Int(0)
    Else
      Let obj : Int =
        and_group.(iand_ofs)      In
      Let t0 : Int =
        solver_fast obj light_dirvec intersection_point 
      In
      Let t0p : Float =
        Let Ti1255 : Int =
          Int(0)
        In
        solver_dist.(Ti1255)      In
      Let Ti1281 : Int =
        If 0 = t0 Then
          Int(0)
        Else
          Let Td1256 : Float =
            Float(-0.200000)
          In
          fless t0p Td1256 
      In
      If 0 = Ti1281 Then
        Let Tb1260 : Bool =
          Let Tt1257 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
            objects.(obj)          In
          o_isinvert Tt1257 
        In
        If 0 = Tb1260 Then
          Int(0)
        Else
          Let Ti1259 : Int =
            Let Ti1258 : Int =
              Int(1)
            In
            iand_ofs + Ti1258
          In
          shadow_check_and_group Ti1259 and_group 
      Else
        Let t : Float =
          Let Td1261 : Float =
            Float(0.010000)
          In
          t0p +. Td1261
        In
        Let q0 : Float =
          Let Td1264 : Float =
            Let Td1263 : Float =
              Let Ti1262 : Int =
                Int(0)
              In
              light.(Ti1262)            In
            Td1263 *. t
          In
          Let Td1266 : Float =
            Let Ti1265 : Int =
              Int(0)
            In
            intersection_point.(Ti1265)          In
          Td1264 +. Td1266
        In
        Let q1 : Float =
          Let Td1269 : Float =
            Let Td1268 : Float =
              Let Ti1267 : Int =
                Int(1)
              In
              light.(Ti1267)            In
            Td1268 *. t
          In
          Let Td1271 : Float =
            Let Ti1270 : Int =
              Int(1)
            In
            intersection_point.(Ti1270)          In
          Td1269 +. Td1271
        In
        Let q2 : Float =
          Let Td1274 : Float =
            Let Td1273 : Float =
              Let Ti1272 : Int =
                Int(2)
              In
              light.(Ti1272)            In
            Td1273 *. t
          In
          Let Td1276 : Float =
            Let Ti1275 : Int =
              Int(2)
            In
            intersection_point.(Ti1275)          In
          Td1274 +. Td1276
        In
        Let Tb1280 : Bool =
          Let Ti1277 : Int =
            Int(0)
          In
          check_all_inside Ti1277 and_group q0 q1 q2 
        In
        If 0 = Tb1280 Then
          Let Ti1279 : Int =
            Let Ti1278 : Int =
              Int(1)
            In
            iand_ofs + Ti1278
          In
          shadow_check_and_group Ti1279 and_group 
        Else
          Int(1)
  In
  Let Rec shadow_check_one_or_group : Int -> Array(Int) -> Bool ( ofs or_group ) =
    Let head : Int =
      or_group.(ofs)    In
    Let Ti1253 : Int =
      Let Ti1249 : Int =
        Int(1)
      In
      -Ti1249
    In
    If head = Ti1253 Then
      Int(0)
    Else
      Let and_group : Array(Int) =
        and_net.(head)      In
      Let shadow_p : Bool =
        Let Ti1250 : Int =
          Int(0)
        In
        shadow_check_and_group Ti1250 and_group 
      In
      If 0 = shadow_p Then
        Let Ti1252 : Int =
          Let Ti1251 : Int =
            Int(1)
          In
          ofs + Ti1251
        In
        shadow_check_one_or_group Ti1252 or_group 
      Else
        Int(1)
  In
  Let Rec shadow_check_one_or_matrix : Int -> Array(Array(Int)) -> Bool ( ofs or_matrix ) =
    Let head : Array(Int) =
      or_matrix.(ofs)    In
    Let range_primitive : Int =
      Let Ti1232 : Int =
        Int(0)
      In
      head.(Ti1232)    In
    Let Ti1248 : Int =
      Let Ti1233 : Int =
        Int(1)
      In
      -Ti1233
    In
    If range_primitive = Ti1248 Then
      Int(0)
    Else
      Let Ti1247 : Int =
        Let Ti1240 : Int =
          Int(99)
        In
        If range_primitive = Ti1240 Then
          Int(1)
        Else
          Let t : Int =
            solver_fast range_primitive light_dirvec intersection_point 
          In
          If 0 = t Then
            Int(0)
          Else
            Let Tb1239 : Bool =
              Let Td1235 : Float =
                Let Ti1234 : Int =
                  Int(0)
                In
                solver_dist.(Ti1234)              In
              Let Td1236 : Float =
                Float(-0.100000)
              In
              fless Td1235 Td1236 
            In
            If 0 = Tb1239 Then
              Int(0)
            Else
              Let Tb1238 : Bool =
                Let Ti1237 : Int =
                  Int(1)
                In
                shadow_check_one_or_group Ti1237 head 
              In
              If 0 = Tb1238 Then
                Int(0)
              Else
                Int(1)
      In
      If 0 = Ti1247 Then
        Let Ti1242 : Int =
          Let Ti1241 : Int =
            Int(1)
          In
          ofs + Ti1241
        In
        shadow_check_one_or_matrix Ti1242 or_matrix 
      Else
        Let Tb1246 : Bool =
          Let Ti1243 : Int =
            Int(1)
          In
          shadow_check_one_or_group Ti1243 head 
        In
        If 0 = Tb1246 Then
          Let Ti1245 : Int =
            Let Ti1244 : Int =
              Int(1)
            In
            ofs + Ti1244
          In
          shadow_check_one_or_matrix Ti1245 or_matrix 
        Else
          Int(1)
  In
  Let Rec solve_each_element : Int -> Array(Int) -> Array(Float) -> Unit ( iand_ofs and_group dirvec ) =
    Let iobj : Int =
      and_group.(iand_ofs)    In
    Let Ti1231 : Int =
      Let Ti1197 : Int =
        Int(1)
      In
      -Ti1197
    In
    If iobj = Ti1231 Then
      ()
    Else
      Let t0 : Int =
        solver iobj dirvec startp 
      In
      If 0 = t0 Then
        Let Tb1201 : Bool =
          Let Tt1198 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
            objects.(iobj)          In
          o_isinvert Tt1198 
        In
        If 0 = Tb1201 Then
          ()
        Else
          Let Ti1200 : Int =
            Let Ti1199 : Int =
              Int(1)
            In
            iand_ofs + Ti1199
          In
          solve_each_element Ti1200 and_group dirvec 
      Else
        Let t0p : Float =
          Let Ti1202 : Int =
            Int(0)
          In
          solver_dist.(Ti1202)        In
        Let Tu130 : Unit =
          Let Tb1228 : Bool =
            Let Td1203 : Float =
              Float(0.000000)
            In
            fless Td1203 t0p 
          In
          If 0 = Tb1228 Then
            ()
          Else
            Let Tb1227 : Bool =
              Let Td1205 : Float =
                Let Ti1204 : Int =
                  Int(0)
                In
                tmin.(Ti1204)              In
              fless t0p Td1205 
            In
            If 0 = Tb1227 Then
              ()
            Else
              Let t : Float =
                Let Td1206 : Float =
                  Float(0.010000)
                In
                t0p +. Td1206
              In
              Let q0 : Float =
                Let Td1209 : Float =
                  Let Td1208 : Float =
                    Let Ti1207 : Int =
                      Int(0)
                    In
                    dirvec.(Ti1207)                  In
                  Td1208 *. t
                In
                Let Td1211 : Float =
                  Let Ti1210 : Int =
                    Int(0)
                  In
                  startp.(Ti1210)                In
                Td1209 +. Td1211
              In
              Let q1 : Float =
                Let Td1214 : Float =
                  Let Td1213 : Float =
                    Let Ti1212 : Int =
                      Int(1)
                    In
                    dirvec.(Ti1212)                  In
                  Td1213 *. t
                In
                Let Td1216 : Float =
                  Let Ti1215 : Int =
                    Int(1)
                  In
                  startp.(Ti1215)                In
                Td1214 +. Td1216
              In
              Let q2 : Float =
                Let Td1219 : Float =
                  Let Td1218 : Float =
                    Let Ti1217 : Int =
                      Int(2)
                    In
                    dirvec.(Ti1217)                  In
                  Td1218 *. t
                In
                Let Td1221 : Float =
                  Let Ti1220 : Int =
                    Int(2)
                  In
                  startp.(Ti1220)                In
                Td1219 +. Td1221
              In
              Let Tb1226 : Bool =
                Let Ti1222 : Int =
                  Int(0)
                In
                check_all_inside Ti1222 and_group q0 q1 q2 
              In
              If 0 = Tb1226 Then
                ()
              Else
                Let Tu129 : Unit =
                  Let Ti1223 : Int =
                    Int(0)
                  In
                  tmin.(Ti1223) <- t                In
                Let Tu128 : Unit =
                  vecset intersection_point q0 q1 q2 
                In
                Let Tu127 : Unit =
                  Let Ti1224 : Int =
                    Int(0)
                  In
                  intersected_object_id.(Ti1224) <- iobj                In
                Let Ti1225 : Int =
                  Int(0)
                In
                intsec_rectside.(Ti1225) <- t0        In
        Let Ti1230 : Int =
          Let Ti1229 : Int =
            Int(1)
          In
          iand_ofs + Ti1229
        In
        solve_each_element Ti1230 and_group dirvec 
  In
  Let Rec solve_one_or_network : Int -> Array(Int) -> Array(Float) -> Unit ( ofs or_group dirvec ) =
    Let head : Int =
      or_group.(ofs)    In
    Let Ti1196 : Int =
      Let Ti1192 : Int =
        Int(1)
      In
      -Ti1192
    In
    If head = Ti1196 Then
      ()
    Else
      Let and_group : Array(Int) =
        and_net.(head)      In
      Let Tu131 : Unit =
        Let Ti1193 : Int =
          Int(0)
        In
        solve_each_element Ti1193 and_group dirvec 
      In
      Let Ti1195 : Int =
        Let Ti1194 : Int =
          Int(1)
        In
        ofs + Ti1194
      In
      solve_one_or_network Ti1195 or_group dirvec 
  In
  Let Rec trace_or_matrix : Int -> Array(Array(Int)) -> Array(Float) -> Unit ( ofs or_network dirvec ) =
    Let head : Array(Int) =
      or_network.(ofs)    In
    Let range_primitive : Int =
      Let Ti1180 : Int =
        Int(0)
      In
      head.(Ti1180)    In
    Let Ti1191 : Int =
      Let Ti1181 : Int =
        Int(1)
      In
      -Ti1181
    In
    If range_primitive = Ti1191 Then
      ()
    Else
      Let Tu132 : Unit =
        Let Ti1188 : Int =
          Int(99)
        In
        If range_primitive = Ti1188 Then
          Let Ti1182 : Int =
            Int(1)
          In
          solve_one_or_network Ti1182 head dirvec 
        Else
          Let t : Int =
            solver range_primitive dirvec startp 
          In
          If 0 = t Then
            ()
          Else
            Let tp : Float =
              Let Ti1183 : Int =
                Int(0)
              In
              solver_dist.(Ti1183)            In
            Let Tb1187 : Bool =
              Let Td1185 : Float =
                Let Ti1184 : Int =
                  Int(0)
                In
                tmin.(Ti1184)              In
              fless tp Td1185 
            In
            If 0 = Tb1187 Then
              ()
            Else
              Let Ti1186 : Int =
                Int(1)
              In
              solve_one_or_network Ti1186 head dirvec 
      In
      Let Ti1190 : Int =
        Let Ti1189 : Int =
          Int(1)
        In
        ofs + Ti1189
      In
      trace_or_matrix Ti1190 or_network dirvec 
  In
  Let Rec judge_intersection : Array(Float) -> Bool ( dirvec ) =
    Let Tu134 : Unit =
      Let Ti1171 : Int =
        Int(0)
      In
      Let Td1172 : Float =
        Float(1000000000.000000)
      In
      tmin.(Ti1171) <- Td1172    In
    Let Tu133 : Unit =
      Let Ti1173 : Int =
        Int(0)
      In
      Let Ta1175 : Array(Array(Int)) =
        Let Ti1174 : Int =
          Int(0)
        In
        or_net.(Ti1174)      In
      trace_or_matrix Ti1173 Ta1175 dirvec 
    In
    Let t : Float =
      Let Ti1176 : Int =
        Int(0)
      In
      tmin.(Ti1176)    In
    Let Tb1179 : Bool =
      Let Td1177 : Float =
        Float(-0.100000)
      In
      fless Td1177 t 
    In
    If 0 = Tb1179 Then
      Int(0)
    Else
      Let Td1178 : Float =
        Float(100000000.000000)
      In
      fless t Td1178 
  In
  Let Rec solve_each_element_fast : Int -> Array(Int) -> Array(Float) * Array(Array(Float)) -> Unit ( iand_ofs and_group dirvec ) =
    Let vec : Array(Float) =
      d_vec dirvec 
    In
    Let iobj : Int =
      and_group.(iand_ofs)    In
    Let Ti1170 : Int =
      Let Ti1136 : Int =
        Int(1)
      In
      -Ti1136
    In
    If iobj = Ti1170 Then
      ()
    Else
      Let t0 : Int =
        solver_fast2 iobj dirvec 
      In
      If 0 = t0 Then
        Let Tb1140 : Bool =
          Let Tt1137 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
            objects.(iobj)          In
          o_isinvert Tt1137 
        In
        If 0 = Tb1140 Then
          ()
        Else
          Let Ti1139 : Int =
            Let Ti1138 : Int =
              Int(1)
            In
            iand_ofs + Ti1138
          In
          solve_each_element_fast Ti1139 and_group dirvec 
      Else
        Let t0p : Float =
          Let Ti1141 : Int =
            Int(0)
          In
          solver_dist.(Ti1141)        In
        Let Tu138 : Unit =
          Let Tb1167 : Bool =
            Let Td1142 : Float =
              Float(0.000000)
            In
            fless Td1142 t0p 
          In
          If 0 = Tb1167 Then
            ()
          Else
            Let Tb1166 : Bool =
              Let Td1144 : Float =
                Let Ti1143 : Int =
                  Int(0)
                In
                tmin.(Ti1143)              In
              fless t0p Td1144 
            In
            If 0 = Tb1166 Then
              ()
            Else
              Let t : Float =
                Let Td1145 : Float =
                  Float(0.010000)
                In
                t0p +. Td1145
              In
              Let q0 : Float =
                Let Td1148 : Float =
                  Let Td1147 : Float =
                    Let Ti1146 : Int =
                      Int(0)
                    In
                    vec.(Ti1146)                  In
                  Td1147 *. t
                In
                Let Td1150 : Float =
                  Let Ti1149 : Int =
                    Int(0)
                  In
                  startp_fast.(Ti1149)                In
                Td1148 +. Td1150
              In
              Let q1 : Float =
                Let Td1153 : Float =
                  Let Td1152 : Float =
                    Let Ti1151 : Int =
                      Int(1)
                    In
                    vec.(Ti1151)                  In
                  Td1152 *. t
                In
                Let Td1155 : Float =
                  Let Ti1154 : Int =
                    Int(1)
                  In
                  startp_fast.(Ti1154)                In
                Td1153 +. Td1155
              In
              Let q2 : Float =
                Let Td1158 : Float =
                  Let Td1157 : Float =
                    Let Ti1156 : Int =
                      Int(2)
                    In
                    vec.(Ti1156)                  In
                  Td1157 *. t
                In
                Let Td1160 : Float =
                  Let Ti1159 : Int =
                    Int(2)
                  In
                  startp_fast.(Ti1159)                In
                Td1158 +. Td1160
              In
              Let Tb1165 : Bool =
                Let Ti1161 : Int =
                  Int(0)
                In
                check_all_inside Ti1161 and_group q0 q1 q2 
              In
              If 0 = Tb1165 Then
                ()
              Else
                Let Tu137 : Unit =
                  Let Ti1162 : Int =
                    Int(0)
                  In
                  tmin.(Ti1162) <- t                In
                Let Tu136 : Unit =
                  vecset intersection_point q0 q1 q2 
                In
                Let Tu135 : Unit =
                  Let Ti1163 : Int =
                    Int(0)
                  In
                  intersected_object_id.(Ti1163) <- iobj                In
                Let Ti1164 : Int =
                  Int(0)
                In
                intsec_rectside.(Ti1164) <- t0        In
        Let Ti1169 : Int =
          Let Ti1168 : Int =
            Int(1)
          In
          iand_ofs + Ti1168
        In
        solve_each_element_fast Ti1169 and_group dirvec 
  In
  Let Rec solve_one_or_network_fast : Int -> Array(Int) -> Array(Float) * Array(Array(Float)) -> Unit ( ofs or_group dirvec ) =
    Let head : Int =
      or_group.(ofs)    In
    Let Ti1135 : Int =
      Let Ti1131 : Int =
        Int(1)
      In
      -Ti1131
    In
    If head = Ti1135 Then
      ()
    Else
      Let and_group : Array(Int) =
        and_net.(head)      In
      Let Tu139 : Unit =
        Let Ti1132 : Int =
          Int(0)
        In
        solve_each_element_fast Ti1132 and_group dirvec 
      In
      Let Ti1134 : Int =
        Let Ti1133 : Int =
          Int(1)
        In
        ofs + Ti1133
      In
      solve_one_or_network_fast Ti1134 or_group dirvec 
  In
  Let Rec trace_or_matrix_fast : Int -> Array(Array(Int)) -> Array(Float) * Array(Array(Float)) -> Unit ( ofs or_network dirvec ) =
    Let head : Array(Int) =
      or_network.(ofs)    In
    Let range_primitive : Int =
      Let Ti1119 : Int =
        Int(0)
      In
      head.(Ti1119)    In
    Let Ti1130 : Int =
      Let Ti1120 : Int =
        Int(1)
      In
      -Ti1120
    In
    If range_primitive = Ti1130 Then
      ()
    Else
      Let Tu140 : Unit =
        Let Ti1127 : Int =
          Int(99)
        In
        If range_primitive = Ti1127 Then
          Let Ti1121 : Int =
            Int(1)
          In
          solve_one_or_network_fast Ti1121 head dirvec 
        Else
          Let t : Int =
            solver_fast2 range_primitive dirvec 
          In
          If 0 = t Then
            ()
          Else
            Let tp : Float =
              Let Ti1122 : Int =
                Int(0)
              In
              solver_dist.(Ti1122)            In
            Let Tb1126 : Bool =
              Let Td1124 : Float =
                Let Ti1123 : Int =
                  Int(0)
                In
                tmin.(Ti1123)              In
              fless tp Td1124 
            In
            If 0 = Tb1126 Then
              ()
            Else
              Let Ti1125 : Int =
                Int(1)
              In
              solve_one_or_network_fast Ti1125 head dirvec 
      In
      Let Ti1129 : Int =
        Let Ti1128 : Int =
          Int(1)
        In
        ofs + Ti1128
      In
      trace_or_matrix_fast Ti1129 or_network dirvec 
  In
  Let Rec judge_intersection_fast : Array(Float) * Array(Array(Float)) -> Bool ( dirvec ) =
    Let Tu142 : Unit =
      Let Ti1110 : Int =
        Int(0)
      In
      Let Td1111 : Float =
        Float(1000000000.000000)
      In
      tmin.(Ti1110) <- Td1111    In
    Let Tu141 : Unit =
      Let Ti1112 : Int =
        Int(0)
      In
      Let Ta1114 : Array(Array(Int)) =
        Let Ti1113 : Int =
          Int(0)
        In
        or_net.(Ti1113)      In
      trace_or_matrix_fast Ti1112 Ta1114 dirvec 
    In
    Let t : Float =
      Let Ti1115 : Int =
        Int(0)
      In
      tmin.(Ti1115)    In
    Let Tb1118 : Bool =
      Let Td1116 : Float =
        Float(-0.100000)
      In
      fless Td1116 t 
    In
    If 0 = Tb1118 Then
      Int(0)
    Else
      Let Td1117 : Float =
        Float(100000000.000000)
      In
      fless t Td1117 
  In
  Let Rec get_nvector_rect : Array(Float) -> Unit ( dirvec ) =
    Let rectside : Int =
      Let Ti1102 : Int =
        Int(0)
      In
      intsec_rectside.(Ti1102)    In
    Let Tu143 : Unit =
      vecbzero nvector 
    In
    Let Ti1104 : Int =
      Let Ti1103 : Int =
        Int(1)
      In
      rectside - Ti1103
    In
    Let Td1109 : Float =
      Let Td1108 : Float =
        Let Td1107 : Float =
          Let Ti1106 : Int =
            Let Ti1105 : Int =
              Int(1)
            In
            rectside - Ti1105
          In
          dirvec.(Ti1106)        In
        sgn Td1107 
      In
      fneg Td1108 
    In
    nvector.(Ti1104) <- Td1109  In
  Let Rec get_nvector_plane : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit ( m ) =
    Let Tu145 : Unit =
      Let Ti1093 : Int =
        Int(0)
      In
      Let Td1095 : Float =
        Let Td1094 : Float =
          o_param_a m 
        In
        fneg Td1094 
      In
      nvector.(Ti1093) <- Td1095    In
    Let Tu144 : Unit =
      Let Ti1096 : Int =
        Int(1)
      In
      Let Td1098 : Float =
        Let Td1097 : Float =
          o_param_b m 
        In
        fneg Td1097 
      In
      nvector.(Ti1096) <- Td1098    In
    Let Ti1099 : Int =
      Int(2)
    In
    Let Td1101 : Float =
      Let Td1100 : Float =
        o_param_c m 
      In
      fneg Td1100 
    In
    nvector.(Ti1099) <- Td1101  In
  Let Rec get_nvector_second : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit ( m ) =
    Let p0 : Float =
      Let Td1053 : Float =
        Let Ti1052 : Int =
          Int(0)
        In
        intersection_point.(Ti1052)      In
      Let Td1054 : Float =
        o_param_x m 
      In
      Td1053 -. Td1054
    In
    Let p1 : Float =
      Let Td1056 : Float =
        Let Ti1055 : Int =
          Int(1)
        In
        intersection_point.(Ti1055)      In
      Let Td1057 : Float =
        o_param_y m 
      In
      Td1056 -. Td1057
    In
    Let p2 : Float =
      Let Td1059 : Float =
        Let Ti1058 : Int =
          Int(2)
        In
        intersection_point.(Ti1058)      In
      Let Td1060 : Float =
        o_param_z m 
      In
      Td1059 -. Td1060
    In
    Let d0 : Float =
      Let Td1061 : Float =
        o_param_a m 
      In
      p0 *. Td1061
    In
    Let d1 : Float =
      Let Td1062 : Float =
        o_param_b m 
      In
      p1 *. Td1062
    In
    Let d2 : Float =
      Let Td1063 : Float =
        o_param_c m 
      In
      p2 *. Td1063
    In
    Let Tu150 : Unit =
      Let Ti1091 : Int =
        o_isrot m 
      In
      If 0 = Ti1091 Then
        Let Tu147 : Unit =
          Let Ti1064 : Int =
            Int(0)
          In
          nvector.(Ti1064) <- d0        In
        Let Tu146 : Unit =
          Let Ti1065 : Int =
            Int(1)
          In
          nvector.(Ti1065) <- d1        In
        Let Ti1066 : Int =
          Int(2)
        In
        nvector.(Ti1066) <- d2      Else
        Let Tu149 : Unit =
          Let Ti1067 : Int =
            Int(0)
          In
          Let Td1074 : Float =
            Let Td1073 : Float =
              Let Td1072 : Float =
                Let Td1069 : Float =
                  Let Td1068 : Float =
                    o_param_r3 m 
                  In
                  p1 *. Td1068
                In
                Let Td1071 : Float =
                  Let Td1070 : Float =
                    o_param_r2 m 
                  In
                  p2 *. Td1070
                In
                Td1069 +. Td1071
              In
              fhalf Td1072 
            In
            d0 +. Td1073
          In
          nvector.(Ti1067) <- Td1074        In
        Let Tu148 : Unit =
          Let Ti1075 : Int =
            Int(1)
          In
          Let Td1082 : Float =
            Let Td1081 : Float =
              Let Td1080 : Float =
                Let Td1077 : Float =
                  Let Td1076 : Float =
                    o_param_r3 m 
                  In
                  p0 *. Td1076
                In
                Let Td1079 : Float =
                  Let Td1078 : Float =
                    o_param_r1 m 
                  In
                  p2 *. Td1078
                In
                Td1077 +. Td1079
              In
              fhalf Td1080 
            In
            d1 +. Td1081
          In
          nvector.(Ti1075) <- Td1082        In
        Let Ti1083 : Int =
          Int(2)
        In
        Let Td1090 : Float =
          Let Td1089 : Float =
            Let Td1088 : Float =
              Let Td1085 : Float =
                Let Td1084 : Float =
                  o_param_r2 m 
                In
                p0 *. Td1084
              In
              Let Td1087 : Float =
                Let Td1086 : Float =
                  o_param_r1 m 
                In
                p1 *. Td1086
              In
              Td1085 +. Td1087
            In
            fhalf Td1088 
          In
          d2 +. Td1089
        In
        nvector.(Ti1083) <- Td1090    In
    Let Tb1092 : Bool =
      o_isinvert m 
    In
    vecunit_sgn nvector Tb1092 
  In
  Let Rec get_nvector : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Unit ( m dirvec ) =
    Let m_shape : Int =
      o_form m 
    In
    If 1 = m_shape Then
      get_nvector_rect dirvec 
    Else
      Let Ti1051 : Int =
        Int(2)
      In
      If m_shape = Ti1051 Then
        get_nvector_plane m 
      Else
        get_nvector_second m 
  In
  Let Rec utexture : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Unit ( m p ) =
    Let m_tex : Int =
      o_texturetype m 
    In
    Let Tu155 : Unit =
      Let Ti934 : Int =
        Int(0)
      In
      Let Td935 : Float =
        o_color_red m 
      In
      texture_color.(Ti934) <- Td935    In
    Let Tu154 : Unit =
      Let Ti936 : Int =
        Int(1)
      In
      Let Td937 : Float =
        o_color_green m 
      In
      texture_color.(Ti936) <- Td937    In
    Let Tu153 : Unit =
      Let Ti938 : Int =
        Int(2)
      In
      Let Td939 : Float =
        o_color_blue m 
      In
      texture_color.(Ti938) <- Td939    In
    If 1 = m_tex Then
      Let w1 : Float =
        Let Td941 : Float =
          Let Ti940 : Int =
            Int(0)
          In
          p.(Ti940)        In
        Let Td942 : Float =
          o_param_x m 
        In
        Td941 -. Td942
      In
      Let flag1 : Bool =
        Let d1 : Float =
          Let Td945 : Float =
            Let Td944 : Float =
              Let Td943 : Float =
                Float(0.050000)
              In
              w1 *. Td943
            In
            ExtFun:floor Td944 
          In
          Let Td946 : Float =
            Float(20.000000)
          In
          Td945 *. Td946
        In
        Let Td947 : Float =
          w1 -. d1
        In
        Let Td948 : Float =
          Float(10.000000)
        In
        fless Td947 Td948 
      In
      Let w3 : Float =
        Let Td950 : Float =
          Let Ti949 : Int =
            Int(2)
          In
          p.(Ti949)        In
        Let Td951 : Float =
          o_param_z m 
        In
        Td950 -. Td951
      In
      Let flag2 : Bool =
        Let d2 : Float =
          Let Td954 : Float =
            Let Td953 : Float =
              Let Td952 : Float =
                Float(0.050000)
              In
              w3 *. Td952
            In
            ExtFun:floor Td953 
          In
          Let Td955 : Float =
            Float(20.000000)
          In
          Td954 *. Td955
        In
        Let Td956 : Float =
          w3 -. d2
        In
        Let Td957 : Float =
          Float(10.000000)
        In
        fless Td956 Td957 
      In
      Let Ti958 : Int =
        Int(1)
      In
      Let Td959 : Float =
        If 0 = flag1 Then
          If 0 = flag2 Then
            Float(255.000000)
          Else
            Float(0.000000)
        Else
          If 0 = flag2 Then
            Float(0.000000)
          Else
            Float(255.000000)
      In
      texture_color.(Ti958) <- Td959    Else
      Let Ti1050 : Int =
        Int(2)
      In
      If m_tex = Ti1050 Then
        Let w2 : Float =
          Let Td964 : Float =
            Let Td963 : Float =
              Let Td961 : Float =
                Let Ti960 : Int =
                  Int(1)
                In
                p.(Ti960)              In
              Let Td962 : Float =
                Float(0.250000)
              In
              Td961 *. Td962
            In
            sin Td963 
          In
          fsqr Td964 
        In
        Let Tu151 : Unit =
          Let Ti965 : Int =
            Int(0)
          In
          Let Td967 : Float =
            Let Td966 : Float =
              Float(255.000000)
            In
            Td966 *. w2
          In
          texture_color.(Ti965) <- Td967        In
        Let Ti968 : Int =
          Int(1)
        In
        Let Td972 : Float =
          Let Td969 : Float =
            Float(255.000000)
          In
          Let Td971 : Float =
            Let Td970 : Float =
              Float(1.000000)
            In
            Td970 -. w2
          In
          Td969 *. Td971
        In
        texture_color.(Ti968) <- Td972      Else
        Let Ti1049 : Int =
          Int(3)
        In
        If m_tex = Ti1049 Then
          Let w1 : Float =
            Let Td974 : Float =
              Let Ti973 : Int =
                Int(0)
              In
              p.(Ti973)            In
            Let Td975 : Float =
              o_param_x m 
            In
            Td974 -. Td975
          In
          Let w3 : Float =
            Let Td977 : Float =
              Let Ti976 : Int =
                Int(2)
              In
              p.(Ti976)            In
            Let Td978 : Float =
              o_param_z m 
            In
            Td977 -. Td978
          In
          Let w2 : Float =
            Let Td982 : Float =
              Let Td981 : Float =
                Let Td979 : Float =
                  fsqr w1 
                In
                Let Td980 : Float =
                  fsqr w3 
                In
                Td979 +. Td980
              In
              ExtFun:sqrt Td981 
            In
            Let Td983 : Float =
              Float(10.000000)
            In
            Td982 /. Td983
          In
          Let w4 : Float =
            Let Td985 : Float =
              Let Td984 : Float =
                ExtFun:floor w2 
              In
              w2 -. Td984
            In
            Let Td986 : Float =
              Float(3.141593)
            In
            Td985 *. Td986
          In
          Let cws : Float =
            Let Td987 : Float =
              cos w4 
            In
            fsqr Td987 
          In
          Let Tu152 : Unit =
            Let Ti988 : Int =
              Int(1)
            In
            Let Td990 : Float =
              Let Td989 : Float =
                Float(255.000000)
              In
              cws *. Td989
            In
            texture_color.(Ti988) <- Td990          In
          Let Ti991 : Int =
            Int(2)
          In
          Let Td995 : Float =
            Let Td993 : Float =
              Let Td992 : Float =
                Float(1.000000)
              In
              Td992 -. cws
            In
            Let Td994 : Float =
              Float(255.000000)
            In
            Td993 *. Td994
          In
          texture_color.(Ti991) <- Td995        Else
          Let Ti1048 : Int =
            Int(4)
          In
          If m_tex = Ti1048 Then
            Let w1 : Float =
              Let Td999 : Float =
                Let Td997 : Float =
                  Let Ti996 : Int =
                    Int(0)
                  In
                  p.(Ti996)                In
                Let Td998 : Float =
                  o_param_x m 
                In
                Td997 -. Td998
              In
              Let Td1001 : Float =
                Let Td1000 : Float =
                  o_param_a m 
                In
                ExtFun:sqrt Td1000 
              In
              Td999 *. Td1001
            In
            Let w3 : Float =
              Let Td1005 : Float =
                Let Td1003 : Float =
                  Let Ti1002 : Int =
                    Int(2)
                  In
                  p.(Ti1002)                In
                Let Td1004 : Float =
                  o_param_z m 
                In
                Td1003 -. Td1004
              In
              Let Td1007 : Float =
                Let Td1006 : Float =
                  o_param_c m 
                In
                ExtFun:sqrt Td1006 
              In
              Td1005 *. Td1007
            In
            Let w4 : Float =
              Let Td1008 : Float =
                fsqr w1 
              In
              Let Td1009 : Float =
                fsqr w3 
              In
              Td1008 +. Td1009
            In
            Let w7 : Float =
              Let Tb1017 : Bool =
                Let Td1010 : Float =
                  fabs w1 
                In
                Let Td1011 : Float =
                  Float(0.000100)
                In
                fless Td1010 Td1011 
              In
              If 0 = Tb1017 Then
                Let w5 : Float =
                  Let Td1012 : Float =
                    w3 /. w1
                  In
                  fabs Td1012 
                In
                Let Td1015 : Float =
                  Let Td1013 : Float =
                    atan w5 
                  In
                  Let Td1014 : Float =
                    Float(30.000000)
                  In
                  Td1013 *. Td1014
                In
                Let Td1016 : Float =
                  Float(3.141593)
                In
                Td1015 /. Td1016
              Else
                Float(15.000000)
            In
            Let w9 : Float =
              Let Td1018 : Float =
                ExtFun:floor w7 
              In
              w7 -. Td1018
            In
            Let w2 : Float =
              Let Td1022 : Float =
                Let Td1020 : Float =
                  Let Ti1019 : Int =
                    Int(1)
                  In
                  p.(Ti1019)                In
                Let Td1021 : Float =
                  o_param_y m 
                In
                Td1020 -. Td1021
              In
              Let Td1024 : Float =
                Let Td1023 : Float =
                  o_param_b m 
                In
                ExtFun:sqrt Td1023 
              In
              Td1022 *. Td1024
            In
            Let w8 : Float =
              Let Tb1032 : Bool =
                Let Td1025 : Float =
                  fabs w4 
                In
                Let Td1026 : Float =
                  Float(0.000100)
                In
                fless Td1025 Td1026 
              In
              If 0 = Tb1032 Then
                Let w6 : Float =
                  Let Td1027 : Float =
                    w2 /. w4
                  In
                  fabs Td1027 
                In
                Let Td1030 : Float =
                  Let Td1028 : Float =
                    atan w6 
                  In
                  Let Td1029 : Float =
                    Float(30.000000)
                  In
                  Td1028 *. Td1029
                In
                Let Td1031 : Float =
                  Float(3.141593)
                In
                Td1030 /. Td1031
              Else
                Float(15.000000)
            In
            Let w10 : Float =
              Let Td1033 : Float =
                ExtFun:floor w8 
              In
              w8 -. Td1033
            In
            Let w11 : Float =
              Let Td1038 : Float =
                Let Td1034 : Float =
                  Float(0.150000)
                In
                Let Td1037 : Float =
                  Let Td1036 : Float =
                    Let Td1035 : Float =
                      Float(0.500000)
                    In
                    Td1035 -. w9
                  In
                  fsqr Td1036 
                In
                Td1034 -. Td1037
              In
              Let Td1041 : Float =
                Let Td1040 : Float =
                  Let Td1039 : Float =
                    Float(0.500000)
                  In
                  Td1039 -. w10
                In
                fsqr Td1040 
              In
              Td1038 -. Td1041
            In
            Let w12 : Float =
              Let Tb1042 : Bool =
                fisneg w11 
              In
              If 0 = Tb1042 Then
                Var(w11)
              Else
                Float(0.000000)
            In
            Let Ti1043 : Int =
              Int(2)
            In
            Let Td1047 : Float =
              Let Td1045 : Float =
                Let Td1044 : Float =
                  Float(255.000000)
                In
                Td1044 *. w12
              In
              Let Td1046 : Float =
                Float(0.300000)
              In
              Td1045 /. Td1046
            In
            texture_color.(Ti1043) <- Td1047          Else
            ()
  In
  Let Rec add_light : Float -> Float -> Float -> Unit ( bright hilight hilight_scale ) =
    Let Tu158 : Unit =
      Let Tb918 : Bool =
        fispos bright 
      In
      If 0 = Tb918 Then
        ()
      Else
        vecaccum rgb bright texture_color 
    In
    Let Tb933 : Bool =
      fispos hilight 
    In
    If 0 = Tb933 Then
      ()
    Else
      Let ihl : Float =
        Let Td920 : Float =
          Let Td919 : Float =
            fsqr hilight 
          In
          fsqr Td919 
        In
        Td920 *. hilight_scale
      In
      Let Tu157 : Unit =
        Let Ti921 : Int =
          Int(0)
        In
        Let Td924 : Float =
          Let Td923 : Float =
            Let Ti922 : Int =
              Int(0)
            In
            rgb.(Ti922)          In
          Td923 +. ihl
        In
        rgb.(Ti921) <- Td924      In
      Let Tu156 : Unit =
        Let Ti925 : Int =
          Int(1)
        In
        Let Td928 : Float =
          Let Td927 : Float =
            Let Ti926 : Int =
              Int(1)
            In
            rgb.(Ti926)          In
          Td927 +. ihl
        In
        rgb.(Ti925) <- Td928      In
      Let Ti929 : Int =
        Int(2)
      In
      Let Td932 : Float =
        Let Td931 : Float =
          Let Ti930 : Int =
            Int(2)
          In
          rgb.(Ti930)        In
        Td931 +. ihl
      In
      rgb.(Ti929) <- Td932  In
  Let Rec trace_reflections : Int -> Float -> Float -> Array(Float) -> Unit ( index diffuse hilight_scale dirvec ) =
    If 0 <= index Then
      Let rinfo : Int * Array(Float) * Array(Array(Float)) * Float =
        reflections.(index)      In
      Let dvec : Array(Float) * Array(Array(Float)) =
        r_dvec rinfo 
      In
      Let Tu159 : Unit =
        Let Tb915 : Bool =
          judge_intersection_fast dvec 
        In
        If 0 = Tb915 Then
          ()
        Else
          Let surface_id : Int =
            Let Ti903 : Int =
              Let Ti901 : Int =
                Let Ti900 : Int =
                  Int(0)
                In
                intersected_object_id.(Ti900)              In
              Let Ti902 : Int =
                Int(2)
              In
              Ti901 << Ti902
            In
            Let Ti905 : Int =
              Let Ti904 : Int =
                Int(0)
              In
              intsec_rectside.(Ti904)            In
            Ti903 + Ti905
          In
          Let Ti914 : Int =
            r_surface_id rinfo 
          In
          If surface_id = Ti914 Then
            Let Tb913 : Bool =
              Let Ti906 : Int =
                Int(0)
              In
              Let Ta908 : Array(Array(Int)) =
                Let Ti907 : Int =
                  Int(0)
                In
                or_net.(Ti907)              In
              shadow_check_one_or_matrix Ti906 Ta908 
            In
            If 0 = Tb913 Then
              Let p : Float =
                Let Ta909 : Array(Float) =
                  d_vec dvec 
                In
                veciprod nvector Ta909 
              In
              Let scale : Float =
                r_bright rinfo 
              In
              Let bright : Float =
                Let Td910 : Float =
                  scale *. diffuse
                In
                Td910 *. p
              In
              Let hilight : Float =
                Let Td912 : Float =
                  Let Ta911 : Array(Float) =
                    d_vec dvec 
                  In
                  veciprod dirvec Ta911 
                In
                scale *. Td912
              In
              add_light bright hilight hilight_scale 
            Else
              ()
          Else
            ()
      In
      Let Ti917 : Int =
        Let Ti916 : Int =
          Int(1)
        In
        index - Ti916
      In
      trace_reflections Ti917 diffuse hilight_scale dirvec 
    Else
      ()
  In
  Let Rec trace_ray : Int -> Float -> Array(Float) -> Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Float -> Unit ( nref energy dirvec pixel dist ) =
    Let Ti899 : Int =
      Int(4)
    In
    If nref <= Ti899 Then
      Let surface_ids : Array(Int) =
        p_surface_ids pixel 
      In
      Let Tb898 : Bool =
        judge_intersection dirvec 
      In
      If 0 = Tb898 Then
        Let Tu176 : Unit =
          Let Ti828 : Int =
            Let Ti827 : Int =
              Int(1)
            In
            -Ti827
          In
          surface_ids.(nref) <- Ti828        In
        If 0 = nref Then
          ()
        Else
          Let hl : Float =
            Let Td829 : Float =
              veciprod dirvec light 
            In
            fneg Td829 
          In
          Let Tb847 : Bool =
            fispos hl 
          In
          If 0 = Tb847 Then
            ()
          Else
            Let ihl : Float =
              Let Td832 : Float =
                Let Td831 : Float =
                  Let Td830 : Float =
                    fsqr hl 
                  In
                  Td830 *. hl
                In
                Td831 *. energy
              In
              Let Td834 : Float =
                Let Ti833 : Int =
                  Int(0)
                In
                beam.(Ti833)              In
              Td832 *. Td834
            In
            Let Tu175 : Unit =
              Let Ti835 : Int =
                Int(0)
              In
              Let Td838 : Float =
                Let Td837 : Float =
                  Let Ti836 : Int =
                    Int(0)
                  In
                  rgb.(Ti836)                In
                Td837 +. ihl
              In
              rgb.(Ti835) <- Td838            In
            Let Tu174 : Unit =
              Let Ti839 : Int =
                Int(1)
              In
              Let Td842 : Float =
                Let Td841 : Float =
                  Let Ti840 : Int =
                    Int(1)
                  In
                  rgb.(Ti840)                In
                Td841 +. ihl
              In
              rgb.(Ti839) <- Td842            In
            Let Ti843 : Int =
              Int(2)
            In
            Let Td846 : Float =
              Let Td845 : Float =
                Let Ti844 : Int =
                  Int(2)
                In
                rgb.(Ti844)              In
              Td845 +. ihl
            In
            rgb.(Ti843) <- Td846      Else
        Let obj_id : Int =
          Let Ti848 : Int =
            Int(0)
          In
          intersected_object_id.(Ti848)        In
        Let obj : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
          objects.(obj_id)        In
        Let m_surface : Int =
          o_reflectiontype obj 
        In
        Let diffuse : Float =
          Let Td849 : Float =
            o_diffuse obj 
          In
          Td849 *. energy
        In
        Let Tu173 : Unit =
          get_nvector obj dirvec 
        In
        Let Tu172 : Unit =
          veccpy startp intersection_point 
        In
        Let Tu171 : Unit =
          utexture obj intersection_point 
        In
        Let Tu170 : Unit =
          Let Ti854 : Int =
            Let Ti851 : Int =
              Let Ti850 : Int =
                Int(2)
              In
              obj_id << Ti850
            In
            Let Ti853 : Int =
              Let Ti852 : Int =
                Int(0)
              In
              intsec_rectside.(Ti852)            In
            Ti851 + Ti853
          In
          surface_ids.(nref) <- Ti854        In
        Let intersection_points : Array(Array(Float)) =
          p_intersection_points pixel 
        In
        Let Tu169 : Unit =
          Let Ta855 : Array(Float) =
            intersection_points.(nref)          In
          veccpy Ta855 intersection_point 
        In
        Let calc_diffuse : Array(Bool) =
          p_calc_diffuse pixel 
        In
        Let Tu168 : Unit =
          Let Tb867 : Bool =
            Let Td856 : Float =
              o_diffuse obj 
            In
            Let Td857 : Float =
              Float(0.500000)
            In
            fless Td856 Td857 
          In
          If 0 = Tb867 Then
            Let Tu162 : Unit =
              Let Ti858 : Int =
                Int(1)
              In
              calc_diffuse.(nref) <- Ti858            In
            Let energya : Array(Array(Float)) =
              p_energy pixel 
            In
            Let Tu161 : Unit =
              Let Ta859 : Array(Float) =
                energya.(nref)              In
              veccpy Ta859 texture_color 
            In
            Let Tu160 : Unit =
              Let Ta860 : Array(Float) =
                energya.(nref)              In
              Let Td864 : Float =
                Let Td863 : Float =
                  Let Td861 : Float =
                    Float(1.000000)
                  In
                  Let Td862 : Float =
                    Float(256.000000)
                  In
                  Td861 /. Td862
                In
                Td863 *. diffuse
              In
              vecscale Ta860 Td864 
            In
            Let nvectors : Array(Array(Float)) =
              p_nvectors pixel 
            In
            Let Ta865 : Array(Float) =
              nvectors.(nref)            In
            veccpy Ta865 nvector 
          Else
            Let Ti866 : Int =
              Int(0)
            In
            calc_diffuse.(nref) <- Ti866        In
        Let w : Float =
          Let Td868 : Float =
            Float(-2.000000)
          In
          Let Td869 : Float =
            veciprod dirvec nvector 
          In
          Td868 *. Td869
        In
        Let Tu167 : Unit =
          vecaccum dirvec w nvector 
        In
        Let hilight_scale : Float =
          Let Td870 : Float =
            o_hilight obj 
          In
          energy *. Td870
        In
        Let Tu166 : Unit =
          Let Tb877 : Bool =
            Let Ti871 : Int =
              Int(0)
            In
            Let Ta873 : Array(Array(Int)) =
              Let Ti872 : Int =
                Int(0)
              In
              or_net.(Ti872)            In
            shadow_check_one_or_matrix Ti871 Ta873 
          In
          If 0 = Tb877 Then
            Let bright : Float =
              Let Td875 : Float =
                Let Td874 : Float =
                  veciprod nvector light 
                In
                fneg Td874 
              In
              Td875 *. diffuse
            In
            Let hilight : Float =
              Let Td876 : Float =
                veciprod dirvec light 
              In
              fneg Td876 
            In
            add_light bright hilight hilight_scale 
          Else
            ()
        In
        Let Tu165 : Unit =
          setup_startp intersection_point 
        In
        Let Tu164 : Unit =
          Let Ti881 : Int =
            Let Ti879 : Int =
              Let Ti878 : Int =
                Int(0)
              In
              n_reflections.(Ti878)            In
            Let Ti880 : Int =
              Int(1)
            In
            Ti879 - Ti880
          In
          trace_reflections Ti881 diffuse hilight_scale dirvec 
        In
        Let Tb897 : Bool =
          Let Td882 : Float =
            Float(0.100000)
          In
          fless Td882 energy 
        In
        If 0 = Tb897 Then
          ()
        Else
          Let Tu163 : Unit =
            Let Ti887 : Int =
              Int(4)
            In
            If Ti887 <= nref Then
              ()
            Else
              Let Ti884 : Int =
                Let Ti883 : Int =
                  Int(1)
                In
                nref + Ti883
              In
              Let Ti886 : Int =
                Let Ti885 : Int =
                  Int(1)
                In
                -Ti885
              In
              surface_ids.(Ti884) <- Ti886          In
          Let Ti896 : Int =
            Int(2)
          In
          If m_surface = Ti896 Then
            Let energy2 : Float =
              Let Td890 : Float =
                Let Td888 : Float =
                  Float(1.000000)
                In
                Let Td889 : Float =
                  o_diffuse obj 
                In
                Td888 -. Td889
              In
              energy *. Td890
            In
            Let Ti892 : Int =
              Let Ti891 : Int =
                Int(1)
              In
              nref + Ti891
            In
            Let Td895 : Float =
              Let Td894 : Float =
                Let Ti893 : Int =
                  Int(0)
                In
                tmin.(Ti893)              In
              dist +. Td894
            In
            trace_ray Ti892 energy2 dirvec pixel Td895 
          Else
            ()
    Else
      ()
  In
  Let Rec trace_diffuse_ray : Array(Float) * Array(Array(Float)) -> Float -> Unit ( dirvec energy ) =
    Let Tb826 : Bool =
      judge_intersection_fast dirvec 
    In
    If 0 = Tb826 Then
      ()
    Else
      Let obj : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
        Let Ti815 : Int =
          Let Ti814 : Int =
            Int(0)
          In
          intersected_object_id.(Ti814)        In
        objects.(Ti815)      In
      Let Tu178 : Unit =
        Let Ta816 : Array(Float) =
          d_vec dirvec 
        In
        get_nvector obj Ta816 
      In
      Let Tu177 : Unit =
        utexture obj intersection_point 
      In
      Let Tb825 : Bool =
        Let Ti817 : Int =
          Int(0)
        In
        Let Ta819 : Array(Array(Int)) =
          Let Ti818 : Int =
            Int(0)
          In
          or_net.(Ti818)        In
        shadow_check_one_or_matrix Ti817 Ta819 
      In
      If 0 = Tb825 Then
        Let br : Float =
          Let Td820 : Float =
            veciprod nvector light 
          In
          fneg Td820 
        In
        Let bright : Float =
          Let Tb821 : Bool =
            fispos br 
          In
          If 0 = Tb821 Then
            Float(0.000000)
          Else
            Var(br)
        In
        Let Td824 : Float =
          Let Td822 : Float =
            energy *. bright
          In
          Let Td823 : Float =
            o_diffuse obj 
          In
          Td822 *. Td823
        In
        vecaccum diffuse_ray Td824 texture_color 
      Else
        ()
  In
  Let Rec iter_trace_diffuse_rays : Array(Array(Float) * Array(Array(Float))) -> Array(Float) -> Array(Float) -> Int -> Unit ( dirvec_group nvector org index ) =
    If 0 <= index Then
      Let p : Float =
        Let Ta802 : Array(Float) =
          Let Tt801 : Array(Float) * Array(Array(Float)) =
            dirvec_group.(index)          In
          d_vec Tt801 
        In
        veciprod Ta802 nvector 
      In
      Let Tu179 : Unit =
        Let Tb811 : Bool =
          fisneg p 
        In
        If 0 = Tb811 Then
          Let Tt803 : Array(Float) * Array(Array(Float)) =
            dirvec_group.(index)          In
          Let Td805 : Float =
            Let Td804 : Float =
              Float(150.000000)
            In
            p /. Td804
          In
          trace_diffuse_ray Tt803 Td805 
        Else
          Let Tt808 : Array(Float) * Array(Array(Float)) =
            Let Ti807 : Int =
              Let Ti806 : Int =
                Int(1)
              In
              index + Ti806
            In
            dirvec_group.(Ti807)          In
          Let Td810 : Float =
            Let Td809 : Float =
              Float(-150.000000)
            In
            p /. Td809
          In
          trace_diffuse_ray Tt808 Td810 
      In
      Let Ti813 : Int =
        Let Ti812 : Int =
          Int(2)
        In
        index - Ti812
      In
      iter_trace_diffuse_rays dirvec_group nvector org Ti813 
    Else
      ()
  In
  Let Rec trace_diffuse_rays : Array(Array(Float) * Array(Array(Float))) -> Array(Float) -> Array(Float) -> Unit ( dirvec_group nvector org ) =
    Let Tu180 : Unit =
      setup_startp org 
    In
    Let Ti800 : Int =
      Int(118)
    In
    iter_trace_diffuse_rays dirvec_group nvector org Ti800 
  In
  Let Rec trace_diffuse_ray_80percent : Int -> Array(Float) -> Array(Float) -> Unit ( group_id nvector org ) =
    Let Tu184 : Unit =
      If 0 = group_id Then
        ()
      Else
        Let Ta788 : Array(Array(Float) * Array(Array(Float))) =
          Let Ti787 : Int =
            Int(0)
          In
          dirvecs.(Ti787)        In
        trace_diffuse_rays Ta788 nvector org 
    In
    Let Tu183 : Unit =
      If 1 = group_id Then
        ()
      Else
        Let Ta790 : Array(Array(Float) * Array(Array(Float))) =
          Let Ti789 : Int =
            Int(1)
          In
          dirvecs.(Ti789)        In
        trace_diffuse_rays Ta790 nvector org 
    In
    Let Tu182 : Unit =
      Let Ti793 : Int =
        Int(2)
      In
      If group_id = Ti793 Then
        ()
      Else
        Let Ta792 : Array(Array(Float) * Array(Array(Float))) =
          Let Ti791 : Int =
            Int(2)
          In
          dirvecs.(Ti791)        In
        trace_diffuse_rays Ta792 nvector org 
    In
    Let Tu181 : Unit =
      Let Ti796 : Int =
        Int(3)
      In
      If group_id = Ti796 Then
        ()
      Else
        Let Ta795 : Array(Array(Float) * Array(Array(Float))) =
          Let Ti794 : Int =
            Int(3)
          In
          dirvecs.(Ti794)        In
        trace_diffuse_rays Ta795 nvector org 
    In
    Let Ti799 : Int =
      Int(4)
    In
    If group_id = Ti799 Then
      ()
    Else
      Let Ta798 : Array(Array(Float) * Array(Array(Float))) =
        Let Ti797 : Int =
          Int(4)
        In
        dirvecs.(Ti797)      In
      trace_diffuse_rays Ta798 nvector org 
  In
  Let Rec calc_diffuse_using_1point : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit ( pixel nref ) =
    Let ray20p : Array(Array(Float)) =
      p_received_ray_20percent pixel 
    In
    Let nvectors : Array(Array(Float)) =
      p_nvectors pixel 
    In
    Let intersection_points : Array(Array(Float)) =
      p_intersection_points pixel 
    In
    Let energya : Array(Array(Float)) =
      p_energy pixel 
    In
    Let Tu186 : Unit =
      Let Ta782 : Array(Float) =
        ray20p.(nref)      In
      veccpy diffuse_ray Ta782 
    In
    Let Tu185 : Unit =
      Let Ti783 : Int =
        p_group_id pixel 
      In
      Let Ta784 : Array(Float) =
        nvectors.(nref)      In
      Let Ta785 : Array(Float) =
        intersection_points.(nref)      In
      trace_diffuse_ray_80percent Ti783 Ta784 Ta785 
    In
    Let Ta786 : Array(Float) =
      energya.(nref)    In
    vecaccumv rgb Ta786 diffuse_ray 
  In
  Let Rec calc_diffuse_using_5points : Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Unit ( x prev cur next nref ) =
    Let r_up : Array(Array(Float)) =
      Let Tt766 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        prev.(x)      In
      p_received_ray_20percent Tt766 
    In
    Let r_left : Array(Array(Float)) =
      Let Tt769 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        Let Ti768 : Int =
          Let Ti767 : Int =
            Int(1)
          In
          x - Ti767
        In
        cur.(Ti768)      In
      p_received_ray_20percent Tt769 
    In
    Let r_center : Array(Array(Float)) =
      Let Tt770 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        cur.(x)      In
      p_received_ray_20percent Tt770 
    In
    Let r_right : Array(Array(Float)) =
      Let Tt773 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        Let Ti772 : Int =
          Let Ti771 : Int =
            Int(1)
          In
          x + Ti771
        In
        cur.(Ti772)      In
      p_received_ray_20percent Tt773 
    In
    Let r_down : Array(Array(Float)) =
      Let Tt774 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        next.(x)      In
      p_received_ray_20percent Tt774 
    In
    Let Tu191 : Unit =
      Let Ta775 : Array(Float) =
        r_up.(nref)      In
      veccpy diffuse_ray Ta775 
    In
    Let Tu190 : Unit =
      Let Ta776 : Array(Float) =
        r_left.(nref)      In
      vecadd diffuse_ray Ta776 
    In
    Let Tu189 : Unit =
      Let Ta777 : Array(Float) =
        r_center.(nref)      In
      vecadd diffuse_ray Ta777 
    In
    Let Tu188 : Unit =
      Let Ta778 : Array(Float) =
        r_right.(nref)      In
      vecadd diffuse_ray Ta778 
    In
    Let Tu187 : Unit =
      Let Ta779 : Array(Float) =
        r_down.(nref)      In
      vecadd diffuse_ray Ta779 
    In
    Let energya : Array(Array(Float)) =
      Let Tt780 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        cur.(x)      In
      p_energy Tt780 
    In
    Let Ta781 : Array(Float) =
      energya.(nref)    In
    vecaccumv rgb Ta781 diffuse_ray 
  In
  Let Rec do_without_neighbors : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit ( pixel nref ) =
    Let Ti765 : Int =
      Int(4)
    In
    If nref <= Ti765 Then
      Let surface_ids : Array(Int) =
        p_surface_ids pixel 
      In
      Let Ti764 : Int =
        surface_ids.(nref)      In
      If 0 <= Ti764 Then
        Let calc_diffuse : Array(Bool) =
          p_calc_diffuse pixel 
        In
        Let Tu192 : Unit =
          Let Tb761 : Bool =
            calc_diffuse.(nref)          In
          If 0 = Tb761 Then
            ()
          Else
            calc_diffuse_using_1point pixel nref 
        In
        Let Ti763 : Int =
          Let Ti762 : Int =
            Int(1)
          In
          nref + Ti762
        In
        do_without_neighbors pixel Ti763 
      Else
        ()
    Else
      ()
  In
  Let Rec neighbors_exist : Int -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Bool ( x y next ) =
    Let Ti759 : Int =
      Let Ti753 : Int =
        Int(1)
      In
      image_size.(Ti753)    In
    Let Ti760 : Int =
      Let Ti754 : Int =
        Int(1)
      In
      y + Ti754
    In
    If Ti759 <= Ti760 Then
      Int(0)
    Else
      If y <= 0 Then
        Int(0)
      Else
        Let Ti757 : Int =
          Let Ti755 : Int =
            Int(0)
          In
          image_size.(Ti755)        In
        Let Ti758 : Int =
          Let Ti756 : Int =
            Int(1)
          In
          x + Ti756
        In
        If Ti757 <= Ti758 Then
          Int(0)
        Else
          If x <= 0 Then
            Int(0)
          Else
            Int(1)
  In
  Let Rec get_surface_id : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Int ( pixel index ) =
    Let surface_ids : Array(Int) =
      p_surface_ids pixel 
    In
    surface_ids.(index)  In
  Let Rec neighbors_are_available : Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Bool ( x prev cur next nref ) =
    Let sid_center : Int =
      Let Tt740 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        cur.(x)      In
      get_surface_id Tt740 nref 
    In
    Let Ti752 : Int =
      Let Tt741 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        prev.(x)      In
      get_surface_id Tt741 nref 
    In
    If Ti752 = sid_center Then
      Let Ti751 : Int =
        Let Tt742 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
          next.(x)        In
        get_surface_id Tt742 nref 
      In
      If Ti751 = sid_center Then
        Let Ti750 : Int =
          Let Tt745 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
            Let Ti744 : Int =
              Let Ti743 : Int =
                Int(1)
              In
              x - Ti743
            In
            cur.(Ti744)          In
          get_surface_id Tt745 nref 
        In
        If Ti750 = sid_center Then
          Let Ti749 : Int =
            Let Tt748 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
              Let Ti747 : Int =
                Let Ti746 : Int =
                  Int(1)
                In
                x + Ti746
              In
              cur.(Ti747)            In
            get_surface_id Tt748 nref 
          In
          If Ti749 = sid_center Then
            Int(1)
          Else
            Int(0)
        Else
          Int(0)
      Else
        Int(0)
    Else
      Int(0)
  In
  Let Rec try_exploit_neighbors : Int -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Unit ( x y prev cur next nref ) =
    Let pixel : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
      cur.(x)    In
    Let Ti739 : Int =
      Int(4)
    In
    If nref <= Ti739 Then
      Let Ti738 : Int =
        get_surface_id pixel nref 
      In
      If 0 <= Ti738 Then
        Let Tb737 : Bool =
          neighbors_are_available x prev cur next nref 
        In
        If 0 = Tb737 Then
          Let Tt733 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
            cur.(x)          In
          do_without_neighbors Tt733 nref 
        Else
          Let calc_diffuse : Array(Bool) =
            p_calc_diffuse pixel 
          In
          Let Tu193 : Unit =
            Let Tb734 : Bool =
              calc_diffuse.(nref)            In
            If 0 = Tb734 Then
              ()
            Else
              calc_diffuse_using_5points x prev cur next nref 
          In
          Let Ti736 : Int =
            Let Ti735 : Int =
              Int(1)
            In
            nref + Ti735
          In
          try_exploit_neighbors x y prev cur next Ti736 
      Else
        ()
    Else
      ()
  In
  Let Rec write_ppm_header : Unit -> Unit ( Tu194 ) =
    Let Tu202 : Unit =
      Let Ti720 : Int =
        Int(80)
      In
      ExtFun:print_char Ti720 
    In
    Let Tu201 : Unit =
      Let Ti723 : Int =
        Let Ti721 : Int =
          Int(48)
        In
        Let Ti722 : Int =
          Int(3)
        In
        Ti721 + Ti722
      In
      ExtFun:print_char Ti723 
    In
    Let Tu200 : Unit =
      Let Ti724 : Int =
        Int(10)
      In
      ExtFun:print_char Ti724 
    In
    Let Tu199 : Unit =
      Let Ti726 : Int =
        Let Ti725 : Int =
          Int(0)
        In
        image_size.(Ti725)      In
      print_int Ti726 
    In
    Let Tu198 : Unit =
      Let Ti727 : Int =
        Int(32)
      In
      ExtFun:print_char Ti727 
    In
    Let Tu197 : Unit =
      Let Ti729 : Int =
        Let Ti728 : Int =
          Int(1)
        In
        image_size.(Ti728)      In
      print_int Ti729 
    In
    Let Tu196 : Unit =
      Let Ti730 : Int =
        Int(32)
      In
      ExtFun:print_char Ti730 
    In
    Let Tu195 : Unit =
      Let Ti731 : Int =
        Int(255)
      In
      print_int Ti731 
    In
    Let Ti732 : Int =
      Int(10)
    In
    ExtFun:print_char Ti732 
  In
  Let Rec write_rgb_element : Float -> Unit ( x ) =
    Let ix : Int =
      ExtFun:int_of_float x 
    In
    Let elem : Int =
      Let Ti719 : Int =
        Int(255)
      In
      If ix <= Ti719 Then
        If 0 <= ix Then
          Var(ix)
        Else
          Int(0)
      Else
        Int(255)
    In
    print_int elem 
  In
  Let Rec write_rgb : Unit -> Unit ( Tu203 ) =
    Let Tu208 : Unit =
      Let Td711 : Float =
        Let Ti710 : Int =
          Int(0)
        In
        rgb.(Ti710)      In
      write_rgb_element Td711 
    In
    Let Tu207 : Unit =
      Let Ti712 : Int =
        Int(32)
      In
      ExtFun:print_char Ti712 
    In
    Let Tu206 : Unit =
      Let Td714 : Float =
        Let Ti713 : Int =
          Int(1)
        In
        rgb.(Ti713)      In
      write_rgb_element Td714 
    In
    Let Tu205 : Unit =
      Let Ti715 : Int =
        Int(32)
      In
      ExtFun:print_char Ti715 
    In
    Let Tu204 : Unit =
      Let Td717 : Float =
        Let Ti716 : Int =
          Int(2)
        In
        rgb.(Ti716)      In
      write_rgb_element Td717 
    In
    Let Ti718 : Int =
      Int(10)
    In
    ExtFun:print_char Ti718 
  In
  Let Rec pretrace_diffuse_rays : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit ( pixel nref ) =
    Let Ti709 : Int =
      Int(4)
    In
    If nref <= Ti709 Then
      Let sid : Int =
        get_surface_id pixel nref 
      In
      If 0 <= sid Then
        Let calc_diffuse : Array(Bool) =
          p_calc_diffuse pixel 
        In
        Let Tu211 : Unit =
          Let Tb706 : Bool =
            calc_diffuse.(nref)          In
          If 0 = Tb706 Then
            ()
          Else
            Let group_id : Int =
              p_group_id pixel 
            In
            Let Tu210 : Unit =
              vecbzero diffuse_ray 
            In
            Let nvectors : Array(Array(Float)) =
              p_nvectors pixel 
            In
            Let intersection_points : Array(Array(Float)) =
              p_intersection_points pixel 
            In
            Let Tu209 : Unit =
              Let Ta702 : Array(Array(Float) * Array(Array(Float))) =
                dirvecs.(group_id)              In
              Let Ta703 : Array(Float) =
                nvectors.(nref)              In
              Let Ta704 : Array(Float) =
                intersection_points.(nref)              In
              trace_diffuse_rays Ta702 Ta703 Ta704 
            In
            Let ray20p : Array(Array(Float)) =
              p_received_ray_20percent pixel 
            In
            Let Ta705 : Array(Float) =
              ray20p.(nref)            In
            veccpy Ta705 diffuse_ray 
        In
        Let Ti708 : Int =
          Let Ti707 : Int =
            Int(1)
          In
          nref + Ti707
        In
        pretrace_diffuse_rays pixel Ti708 
      Else
        ()
    Else
      ()
  In
  Let Rec pretrace_pixels : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Int -> Float -> Float -> Float -> Unit ( line x group_id lc0 lc1 lc2 ) =
    If 0 <= x Then
      Let xdisp : Float =
        Let Td668 : Float =
          Let Ti667 : Int =
            Int(0)
          In
          scan_pitch.(Ti667)        In
        Let Td672 : Float =
          Let Ti671 : Int =
            Let Ti670 : Int =
              Let Ti669 : Int =
                Int(0)
              In
              image_center.(Ti669)            In
            x - Ti670
          In
          ExtFun:float_of_int Ti671 
        In
        Td668 *. Td672
      In
      Let Tu221 : Unit =
        Let Ti673 : Int =
          Int(0)
        In
        Let Td677 : Float =
          Let Td676 : Float =
            Let Td675 : Float =
              Let Ti674 : Int =
                Int(0)
              In
              screenx_dir.(Ti674)            In
            xdisp *. Td675
          In
          Td676 +. lc0
        In
        ptrace_dirvec.(Ti673) <- Td677      In
      Let Tu220 : Unit =
        Let Ti678 : Int =
          Int(1)
        In
        Let Td682 : Float =
          Let Td681 : Float =
            Let Td680 : Float =
              Let Ti679 : Int =
                Int(1)
              In
              screenx_dir.(Ti679)            In
            xdisp *. Td680
          In
          Td681 +. lc1
        In
        ptrace_dirvec.(Ti678) <- Td682      In
      Let Tu219 : Unit =
        Let Ti683 : Int =
          Int(2)
        In
        Let Td687 : Float =
          Let Td686 : Float =
            Let Td685 : Float =
              Let Ti684 : Int =
                Int(2)
              In
              screenx_dir.(Ti684)            In
            xdisp *. Td685
          In
          Td686 +. lc2
        In
        ptrace_dirvec.(Ti683) <- Td687      In
      Let Tu218 : Unit =
        Let Ti688 : Int =
          Int(0)
        In
        vecunit_sgn ptrace_dirvec Ti688 
      In
      Let Tu217 : Unit =
        vecbzero rgb 
      In
      Let Tu216 : Unit =
        veccpy startp viewpoint 
      In
      Let Tu215 : Unit =
        Let Ti689 : Int =
          Int(0)
        In
        Let Td690 : Float =
          Float(1.000000)
        In
        Let Tt691 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
          line.(x)        In
        Let Td692 : Float =
          Float(0.000000)
        In
        trace_ray Ti689 Td690 ptrace_dirvec Tt691 Td692 
      In
      Let Tu214 : Unit =
        Let Ta694 : Array(Float) =
          Let Tt693 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
            line.(x)          In
          p_rgb Tt693 
        In
        veccpy Ta694 rgb 
      In
      Let Tu213 : Unit =
        Let Tt695 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
          line.(x)        In
        p_set_group_id Tt695 group_id 
      In
      Let Tu212 : Unit =
        Let Tt696 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
          line.(x)        In
        Let Ti697 : Int =
          Int(0)
        In
        pretrace_diffuse_rays Tt696 Ti697 
      In
      Let Ti699 : Int =
        Let Ti698 : Int =
          Int(1)
        In
        x - Ti698
      In
      Let Ti701 : Int =
        Let Ti700 : Int =
          Int(1)
        In
        add_mod5 group_id Ti700 
      In
      pretrace_pixels line Ti699 Ti701 lc0 lc1 lc2 
    Else
      ()
  In
  Let Rec pretrace_line : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Int -> Unit ( line y group_id ) =
    Let ydisp : Float =
      Let Td643 : Float =
        Let Ti642 : Int =
          Int(0)
        In
        scan_pitch.(Ti642)      In
      Let Td647 : Float =
        Let Ti646 : Int =
          Let Ti645 : Int =
            Let Ti644 : Int =
              Int(1)
            In
            image_center.(Ti644)          In
          y - Ti645
        In
        ExtFun:float_of_int Ti646 
      In
      Td643 *. Td647
    In
    Let lc0 : Float =
      Let Td650 : Float =
        Let Td649 : Float =
          Let Ti648 : Int =
            Int(0)
          In
          screeny_dir.(Ti648)        In
        ydisp *. Td649
      In
      Let Td652 : Float =
        Let Ti651 : Int =
          Int(0)
        In
        screenz_dir.(Ti651)      In
      Td650 +. Td652
    In
    Let lc1 : Float =
      Let Td655 : Float =
        Let Td654 : Float =
          Let Ti653 : Int =
            Int(1)
          In
          screeny_dir.(Ti653)        In
        ydisp *. Td654
      In
      Let Td657 : Float =
        Let Ti656 : Int =
          Int(1)
        In
        screenz_dir.(Ti656)      In
      Td655 +. Td657
    In
    Let lc2 : Float =
      Let Td660 : Float =
        Let Td659 : Float =
          Let Ti658 : Int =
            Int(2)
          In
          screeny_dir.(Ti658)        In
        ydisp *. Td659
      In
      Let Td662 : Float =
        Let Ti661 : Int =
          Int(2)
        In
        screenz_dir.(Ti661)      In
      Td660 +. Td662
    In
    Let Ti666 : Int =
      Let Ti664 : Int =
        Let Ti663 : Int =
          Int(0)
        In
        image_size.(Ti663)      In
      Let Ti665 : Int =
        Int(1)
      In
      Ti664 - Ti665
    In
    pretrace_pixels line Ti666 group_id lc0 lc1 lc2 
  In
  Let Rec scan_pixel : Int -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Unit ( x y prev cur next ) =
    Let Ti641 : Int =
      Let Ti631 : Int =
        Int(0)
      In
      image_size.(Ti631)    In
    If Ti641 <= x Then
      ()
    Else
      Let Tu224 : Unit =
        Let Ta633 : Array(Float) =
          Let Tt632 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
            cur.(x)          In
          p_rgb Tt632 
        In
        veccpy rgb Ta633 
      In
      Let Tu223 : Unit =
        Let Tb637 : Bool =
          neighbors_exist x y next 
        In
        If 0 = Tb637 Then
          Let Tt634 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
            cur.(x)          In
          Let Ti635 : Int =
            Int(0)
          In
          do_without_neighbors Tt634 Ti635 
        Else
          Let Ti636 : Int =
            Int(0)
          In
          try_exploit_neighbors x y prev cur next Ti636 
      In
      Let Tu222 : Unit =
        Let Tu638 : Unit =
          ()
        In
        write_rgb Tu638 
      In
      Let Ti640 : Int =
        Let Ti639 : Int =
          Int(1)
        In
        x + Ti639
      In
      scan_pixel Ti640 y prev cur next 
  In
  Let Rec scan_line : Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Unit ( y prev cur next group_id ) =
    Let Ti630 : Int =
      Let Ti618 : Int =
        Int(1)
      In
      image_size.(Ti618)    In
    If Ti630 <= y Then
      ()
    Else
      Let Tu226 : Unit =
        Let Ti624 : Int =
          Let Ti620 : Int =
            Let Ti619 : Int =
              Int(1)
            In
            image_size.(Ti619)          In
          Let Ti621 : Int =
            Int(1)
          In
          Ti620 - Ti621
        In
        If Ti624 <= y Then
          ()
        Else
          Let Ti623 : Int =
            Let Ti622 : Int =
              Int(1)
            In
            y + Ti622
          In
          pretrace_line next Ti623 group_id 
      In
      Let Tu225 : Unit =
        Let Ti625 : Int =
          Int(0)
        In
        scan_pixel Ti625 y prev cur next 
      In
      Let Ti627 : Int =
        Let Ti626 : Int =
          Int(1)
        In
        y + Ti626
      In
      Let Ti629 : Int =
        Let Ti628 : Int =
          Int(2)
        In
        add_mod5 group_id Ti628 
      In
      scan_line Ti627 cur next prev Ti629 
  In
  Let Rec create_float5x3array : Unit -> Array(Array(Float)) ( Tu227 ) =
    Let vec : Array(Float) =
      Let Ti599 : Int =
        Int(3)
      In
      Let Td600 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti599 Td600 
    In
    Let array : Array(Array(Float)) =
      Let Ti601 : Int =
        Int(5)
      In
      ExtFun:create_array Ti601 vec 
    In
    Let Tu231 : Unit =
      Let Ti602 : Int =
        Int(1)
      In
      Let Ta605 : Array(Float) =
        Let Ti603 : Int =
          Int(3)
        In
        Let Td604 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti603 Td604 
      In
      array.(Ti602) <- Ta605    In
    Let Tu230 : Unit =
      Let Ti606 : Int =
        Int(2)
      In
      Let Ta609 : Array(Float) =
        Let Ti607 : Int =
          Int(3)
        In
        Let Td608 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti607 Td608 
      In
      array.(Ti606) <- Ta609    In
    Let Tu229 : Unit =
      Let Ti610 : Int =
        Int(3)
      In
      Let Ta613 : Array(Float) =
        Let Ti611 : Int =
          Int(3)
        In
        Let Td612 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti611 Td612 
      In
      array.(Ti610) <- Ta613    In
    Let Tu228 : Unit =
      Let Ti614 : Int =
        Int(4)
      In
      Let Ta617 : Array(Float) =
        Let Ti615 : Int =
          Int(3)
        In
        Let Td616 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti615 Td616 
      In
      array.(Ti614) <- Ta617    In
    Var(array)
  In
  Let Rec create_pixel : Unit -> Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) ( Tu232 ) =
    Let m_rgb : Array(Float) =
      Let Ti587 : Int =
        Int(3)
      In
      Let Td588 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti587 Td588 
    In
    Let m_isect_ps : Array(Array(Float)) =
      Let Tu589 : Unit =
        ()
      In
      create_float5x3array Tu589 
    In
    Let m_sids : Array(Int) =
      Let Ti590 : Int =
        Int(5)
      In
      Let Ti591 : Int =
        Int(0)
      In
      ExtFun:create_array Ti590 Ti591 
    In
    Let m_cdif : Array(Bool) =
      Let Ti592 : Int =
        Int(5)
      In
      Let Ti593 : Int =
        Int(0)
      In
      ExtFun:create_array Ti592 Ti593 
    In
    Let m_engy : Array(Array(Float)) =
      Let Tu594 : Unit =
        ()
      In
      create_float5x3array Tu594 
    In
    Let m_r20p : Array(Array(Float)) =
      Let Tu595 : Unit =
        ()
      In
      create_float5x3array Tu595 
    In
    Let m_gid : Array(Int) =
      Let Ti596 : Int =
        Int(1)
      In
      Let Ti597 : Int =
        Int(0)
      In
      ExtFun:create_array Ti596 Ti597 
    In
    Let m_nvectors : Array(Array(Float)) =
      Let Tu598 : Unit =
        ()
      In
      create_float5x3array Tu598 
    In
    (m_rgb, m_isect_ps, m_sids, m_cdif, m_engy, m_r20p, m_gid, m_nvectors, )
  In
  Let Rec init_line_elements : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) ( line n ) =
    If 0 <= n Then
      Let Tu233 : Unit =
        Let Tt584 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
          Let Tu583 : Unit =
            ()
          In
          create_pixel Tu583 
        In
        line.(n) <- Tt584      In
      Let Ti586 : Int =
        Let Ti585 : Int =
          Int(1)
        In
        n - Ti585
      In
      init_line_elements line Ti586 
    Else
      Var(line)
  In
  Let Rec create_pixelline : Unit -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) ( Tu234 ) =
    Let line : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) =
      Let Ti576 : Int =
        Let Ti575 : Int =
          Int(0)
        In
        image_size.(Ti575)      In
      Let Tt578 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        Let Tu577 : Unit =
          ()
        In
        create_pixel Tu577 
      In
      ExtFun:create_array Ti576 Tt578 
    In
    Let Ti582 : Int =
      Let Ti580 : Int =
        Let Ti579 : Int =
          Int(0)
        In
        image_size.(Ti579)      In
      Let Ti581 : Int =
        Int(2)
      In
      Ti580 - Ti581
    In
    init_line_elements line Ti582 
  In
  Let Rec tan : Float -> Float ( x ) =
    Let Td573 : Float =
      sin x 
    In
    Let Td574 : Float =
      cos x 
    In
    Td573 /. Td574
  In
  Let Rec adjust_position : Float -> Float -> Float ( h ratio ) =
    Let l : Float =
      Let Td570 : Float =
        Let Td568 : Float =
          h *. h
        In
        Let Td569 : Float =
          Float(0.100000)
        In
        Td568 +. Td569
      In
      ExtFun:sqrt Td570 
    In
    Let tan_h : Float =
      Let Td571 : Float =
        Float(1.000000)
      In
      Td571 /. l
    In
    Let theta_h : Float =
      atan tan_h 
    In
    Let tan_m : Float =
      Let Td572 : Float =
        theta_h *. ratio
      In
      tan Td572 
    In
    tan_m *. l
  In
  Let Rec calc_dirvec : Int -> Float -> Float -> Float -> Float -> Int -> Int -> Unit ( icount x y rx ry group_id index ) =
    Let Ti567 : Int =
      Int(5)
    In
    If Ti567 <= icount Then
      Let l : Float =
        Let Td531 : Float =
          Let Td529 : Float =
            Let Td527 : Float =
              fsqr x 
            In
            Let Td528 : Float =
              fsqr y 
            In
            Td527 +. Td528
          In
          Let Td530 : Float =
            Float(1.000000)
          In
          Td529 +. Td530
        In
        ExtFun:sqrt Td531 
      In
      Let vx : Float =
        x /. l
      In
      Let vy : Float =
        y /. l
      In
      Let vz : Float =
        Let Td532 : Float =
          Float(1.000000)
        In
        Td532 /. l
      In
      Let dgroup : Array(Array(Float) * Array(Array(Float))) =
        dirvecs.(group_id)      In
      Let Tu239 : Unit =
        Let Ta534 : Array(Float) =
          Let Tt533 : Array(Float) * Array(Array(Float)) =
            dgroup.(index)          In
          d_vec Tt533 
        In
        vecset Ta534 vx vy vz 
      In
      Let Tu238 : Unit =
        Let Ta538 : Array(Float) =
          Let Tt537 : Array(Float) * Array(Array(Float)) =
            Let Ti536 : Int =
              Let Ti535 : Int =
                Int(40)
              In
              index + Ti535
            In
            dgroup.(Ti536)          In
          d_vec Tt537 
        In
        Let Td539 : Float =
          fneg vy 
        In
        vecset Ta538 vx vz Td539 
      In
      Let Tu237 : Unit =
        Let Ta543 : Array(Float) =
          Let Tt542 : Array(Float) * Array(Array(Float)) =
            Let Ti541 : Int =
              Let Ti540 : Int =
                Int(80)
              In
              index + Ti540
            In
            dgroup.(Ti541)          In
          d_vec Tt542 
        In
        Let Td544 : Float =
          fneg vx 
        In
        Let Td545 : Float =
          fneg vy 
        In
        vecset Ta543 vz Td544 Td545 
      In
      Let Tu236 : Unit =
        Let Ta549 : Array(Float) =
          Let Tt548 : Array(Float) * Array(Array(Float)) =
            Let Ti547 : Int =
              Let Ti546 : Int =
                Int(1)
              In
              index + Ti546
            In
            dgroup.(Ti547)          In
          d_vec Tt548 
        In
        Let Td550 : Float =
          fneg vx 
        In
        Let Td551 : Float =
          fneg vy 
        In
        Let Td552 : Float =
          fneg vz 
        In
        vecset Ta549 Td550 Td551 Td552 
      In
      Let Tu235 : Unit =
        Let Ta556 : Array(Float) =
          Let Tt555 : Array(Float) * Array(Array(Float)) =
            Let Ti554 : Int =
              Let Ti553 : Int =
                Int(41)
              In
              index + Ti553
            In
            dgroup.(Ti554)          In
          d_vec Tt555 
        In
        Let Td557 : Float =
          fneg vx 
        In
        Let Td558 : Float =
          fneg vz 
        In
        vecset Ta556 Td557 Td558 vy 
      In
      Let Ta562 : Array(Float) =
        Let Tt561 : Array(Float) * Array(Array(Float)) =
          Let Ti560 : Int =
            Let Ti559 : Int =
              Int(81)
            In
            index + Ti559
          In
          dgroup.(Ti560)        In
        d_vec Tt561 
      In
      Let Td563 : Float =
        fneg vz 
      In
      vecset Ta562 Td563 vx vy 
    Else
      Let x2 : Float =
        adjust_position y rx 
      In
      Let Ti565 : Int =
        Let Ti564 : Int =
          Int(1)
        In
        icount + Ti564
      In
      Let Td566 : Float =
        adjust_position x2 ry 
      In
      calc_dirvec Ti565 x2 Td566 rx ry group_id index 
  In
  Let Rec calc_dirvecs : Int -> Float -> Int -> Int -> Unit ( col ry group_id index ) =
    If 0 <= col Then
      Let rx : Float =
        Let Td509 : Float =
          Let Td507 : Float =
            ExtFun:float_of_int col 
          In
          Let Td508 : Float =
            Float(0.200000)
          In
          Td507 *. Td508
        In
        Let Td510 : Float =
          Float(0.900000)
        In
        Td509 -. Td510
      In
      Let Tu241 : Unit =
        Let Ti511 : Int =
          Int(0)
        In
        Let Td512 : Float =
          Float(0.000000)
        In
        Let Td513 : Float =
          Float(0.000000)
        In
        calc_dirvec Ti511 Td512 Td513 rx ry group_id index 
      In
      Let rx2 : Float =
        Let Td516 : Float =
          Let Td514 : Float =
            ExtFun:float_of_int col 
          In
          Let Td515 : Float =
            Float(0.200000)
          In
          Td514 *. Td515
        In
        Let Td517 : Float =
          Float(0.100000)
        In
        Td516 +. Td517
      In
      Let Tu240 : Unit =
        Let Ti518 : Int =
          Int(0)
        In
        Let Td519 : Float =
          Float(0.000000)
        In
        Let Td520 : Float =
          Float(0.000000)
        In
        Let Ti522 : Int =
          Let Ti521 : Int =
            Int(2)
          In
          index + Ti521
        In
        calc_dirvec Ti518 Td519 Td520 rx2 ry group_id Ti522 
      In
      Let Ti524 : Int =
        Let Ti523 : Int =
          Int(1)
        In
        col - Ti523
      In
      Let Ti526 : Int =
        Let Ti525 : Int =
          Int(1)
        In
        add_mod5 group_id Ti525 
      In
      calc_dirvecs Ti524 ry Ti526 index 
    Else
      ()
  In
  Let Rec calc_dirvec_rows : Int -> Int -> Int -> Unit ( row group_id index ) =
    If 0 <= row Then
      Let ry : Float =
        Let Td498 : Float =
          Let Td496 : Float =
            ExtFun:float_of_int row 
          In
          Let Td497 : Float =
            Float(0.200000)
          In
          Td496 *. Td497
        In
        Let Td499 : Float =
          Float(0.900000)
        In
        Td498 -. Td499
      In
      Let Tu242 : Unit =
        Let Ti500 : Int =
          Int(4)
        In
        calc_dirvecs Ti500 ry group_id index 
      In
      Let Ti502 : Int =
        Let Ti501 : Int =
          Int(1)
        In
        row - Ti501
      In
      Let Ti504 : Int =
        Let Ti503 : Int =
          Int(2)
        In
        add_mod5 group_id Ti503 
      In
      Let Ti506 : Int =
        Let Ti505 : Int =
          Int(4)
        In
        index + Ti505
      In
      calc_dirvec_rows Ti502 Ti504 Ti506 
    Else
      ()
  In
  Let Rec create_dirvec : Unit -> Array(Float) * Array(Array(Float)) ( Tu243 ) =
    Let v3 : Array(Float) =
      Let Ti492 : Int =
        Int(3)
      In
      Let Td493 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti492 Td493 
    In
    Let consts : Array(Array(Float)) =
      Let Ti495 : Int =
        Let Ti494 : Int =
          Int(0)
        In
        n_objects.(Ti494)      In
      ExtFun:create_array Ti495 v3 
    In
    (v3, consts, )
  In
  Let Rec create_dirvec_elements : Array(Array(Float) * Array(Array(Float))) -> Int -> Unit ( d index ) =
    If 0 <= index Then
      Let Tu244 : Unit =
        Let Tt489 : Array(Float) * Array(Array(Float)) =
          Let Tu488 : Unit =
            ()
          In
          create_dirvec Tu488 
        In
        d.(index) <- Tt489      In
      Let Ti491 : Int =
        Let Ti490 : Int =
          Int(1)
        In
        index - Ti490
      In
      create_dirvec_elements d Ti491 
    Else
      ()
  In
  Let Rec create_dirvecs : Int -> Unit ( index ) =
    If 0 <= index Then
      Let Tu246 : Unit =
        Let Ta483 : Array(Array(Float) * Array(Array(Float))) =
          Let Ti480 : Int =
            Int(120)
          In
          Let Tt482 : Array(Float) * Array(Array(Float)) =
            Let Tu481 : Unit =
              ()
            In
            create_dirvec Tu481 
          In
          ExtFun:create_array Ti480 Tt482 
        In
        dirvecs.(index) <- Ta483      In
      Let Tu245 : Unit =
        Let Ta484 : Array(Array(Float) * Array(Array(Float))) =
          dirvecs.(index)        In
        Let Ti485 : Int =
          Int(118)
        In
        create_dirvec_elements Ta484 Ti485 
      In
      Let Ti487 : Int =
        Let Ti486 : Int =
          Int(1)
        In
        index - Ti486
      In
      create_dirvecs Ti487 
    Else
      ()
  In
  Let Rec init_dirvec_constants : Array(Array(Float) * Array(Array(Float))) -> Int -> Unit ( vecset index ) =
    If 0 <= index Then
      Let Tu247 : Unit =
        Let Tt477 : Array(Float) * Array(Array(Float)) =
          vecset.(index)        In
        setup_dirvec_constants Tt477 
      In
      Let Ti479 : Int =
        Let Ti478 : Int =
          Int(1)
        In
        index - Ti478
      In
      init_dirvec_constants vecset Ti479 
    Else
      ()
  In
  Let Rec init_vecset_constants : Int -> Unit ( index ) =
    If 0 <= index Then
      Let Tu248 : Unit =
        Let Ta473 : Array(Array(Float) * Array(Array(Float))) =
          dirvecs.(index)        In
        Let Ti474 : Int =
          Int(119)
        In
        init_dirvec_constants Ta473 Ti474 
      In
      Let Ti476 : Int =
        Let Ti475 : Int =
          Int(1)
        In
        index - Ti475
      In
      init_vecset_constants Ti476 
    Else
      ()
  In
  Let Rec init_dirvecs : Unit -> Unit ( Tu249 ) =
    Let Tu251 : Unit =
      Let Ti468 : Int =
        Int(4)
      In
      create_dirvecs Ti468 
    In
    Let Tu250 : Unit =
      Let Ti469 : Int =
        Int(9)
      In
      Let Ti470 : Int =
        Int(0)
      In
      Let Ti471 : Int =
        Int(0)
      In
      calc_dirvec_rows Ti469 Ti470 Ti471 
    In
    Let Ti472 : Int =
      Int(4)
    In
    init_vecset_constants Ti472 
  In
  Let Rec add_reflection : Int -> Int -> Float -> Float -> Float -> Float -> Unit ( index surface_id bright v0 v1 v2 ) =
    Let dvec : Array(Float) * Array(Array(Float)) =
      Let Tu465 : Unit =
        ()
      In
      create_dirvec Tu465 
    In
    Let Tu253 : Unit =
      Let Ta466 : Array(Float) =
        d_vec dvec 
      In
      vecset Ta466 v0 v1 v2 
    In
    Let Tu252 : Unit =
      setup_dirvec_constants dvec 
    In
    Let Tt467 : Int * Array(Float) * Array(Array(Float)) * Float =
      (surface_id, dvec, bright, )
    In
    reflections.(index) <- Tt467  In
  Let Rec setup_rect_reflection : Int -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit ( obj_id obj ) =
    Let sid : Int =
      Let Ti436 : Int =
        Int(2)
      In
      obj_id << Ti436
    In
    Let nr : Int =
      Let Ti437 : Int =
        Int(0)
      In
      n_reflections.(Ti437)    In
    Let br : Float =
      Let Td438 : Float =
        Float(1.000000)
      In
      Let Td439 : Float =
        o_diffuse obj 
      In
      Td438 -. Td439
    In
    Let n0 : Float =
      Let Td441 : Float =
        Let Ti440 : Int =
          Int(0)
        In
        light.(Ti440)      In
      fneg Td441 
    In
    Let n1 : Float =
      Let Td443 : Float =
        Let Ti442 : Int =
          Int(1)
        In
        light.(Ti442)      In
      fneg Td443 
    In
    Let n2 : Float =
      Let Td445 : Float =
        Let Ti444 : Int =
          Int(2)
        In
        light.(Ti444)      In
      fneg Td445 
    In
    Let Tu256 : Unit =
      Let Ti447 : Int =
        Let Ti446 : Int =
          Int(1)
        In
        sid + Ti446
      In
      Let Td449 : Float =
        Let Ti448 : Int =
          Int(0)
        In
        light.(Ti448)      In
      add_reflection nr Ti447 br Td449 n1 n2 
    In
    Let Tu255 : Unit =
      Let Ti451 : Int =
        Let Ti450 : Int =
          Int(1)
        In
        nr + Ti450
      In
      Let Ti453 : Int =
        Let Ti452 : Int =
          Int(2)
        In
        sid + Ti452
      In
      Let Td455 : Float =
        Let Ti454 : Int =
          Int(1)
        In
        light.(Ti454)      In
      add_reflection Ti451 Ti453 br n0 Td455 n2 
    In
    Let Tu254 : Unit =
      Let Ti457 : Int =
        Let Ti456 : Int =
          Int(2)
        In
        nr + Ti456
      In
      Let Ti459 : Int =
        Let Ti458 : Int =
          Int(3)
        In
        sid + Ti458
      In
      Let Td461 : Float =
        Let Ti460 : Int =
          Int(2)
        In
        light.(Ti460)      In
      add_reflection Ti457 Ti459 br n0 n1 Td461 
    In
    Let Ti462 : Int =
      Int(0)
    In
    Let Ti464 : Int =
      Let Ti463 : Int =
        Int(3)
      In
      nr + Ti463
    In
    n_reflections.(Ti462) <- Ti464  In
  Let Rec setup_surface_reflection : Int -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit ( obj_id obj ) =
    Let sid : Int =
      Let Ti406 : Int =
        Let Ti405 : Int =
          Int(2)
        In
        obj_id << Ti405
      In
      Let Ti407 : Int =
        Int(1)
      In
      Ti406 + Ti407
    In
    Let nr : Int =
      Let Ti408 : Int =
        Int(0)
      In
      n_reflections.(Ti408)    In
    Let br : Float =
      Let Td409 : Float =
        Float(1.000000)
      In
      Let Td410 : Float =
        o_diffuse obj 
      In
      Td409 -. Td410
    In
    Let p : Float =
      Let Ta411 : Array(Float) =
        o_param_abc obj 
      In
      veciprod light Ta411 
    In
    Let Tu257 : Unit =
      Let Td418 : Float =
        Let Td415 : Float =
          Let Td414 : Float =
            Let Td412 : Float =
              Float(2.000000)
            In
            Let Td413 : Float =
              o_param_a obj 
            In
            Td412 *. Td413
          In
          Td414 *. p
        In
        Let Td417 : Float =
          Let Ti416 : Int =
            Int(0)
          In
          light.(Ti416)        In
        Td415 -. Td417
      In
      Let Td425 : Float =
        Let Td422 : Float =
          Let Td421 : Float =
            Let Td419 : Float =
              Float(2.000000)
            In
            Let Td420 : Float =
              o_param_b obj 
            In
            Td419 *. Td420
          In
          Td421 *. p
        In
        Let Td424 : Float =
          Let Ti423 : Int =
            Int(1)
          In
          light.(Ti423)        In
        Td422 -. Td424
      In
      Let Td432 : Float =
        Let Td429 : Float =
          Let Td428 : Float =
            Let Td426 : Float =
              Float(2.000000)
            In
            Let Td427 : Float =
              o_param_c obj 
            In
            Td426 *. Td427
          In
          Td428 *. p
        In
        Let Td431 : Float =
          Let Ti430 : Int =
            Int(2)
          In
          light.(Ti430)        In
        Td429 -. Td431
      In
      add_reflection nr sid br Td418 Td425 Td432 
    In
    Let Ti433 : Int =
      Int(0)
    In
    Let Ti435 : Int =
      Let Ti434 : Int =
        Int(1)
      In
      nr + Ti434
    In
    n_reflections.(Ti433) <- Ti435  In
  Let Rec setup_reflections : Int -> Unit ( obj_id ) =
    If 0 <= obj_id Then
      Let obj : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
        objects.(obj_id)      In
      Let Ti403 : Int =
        o_reflectiontype obj 
      In
      Let Ti404 : Int =
        Int(2)
      In
      If Ti403 = Ti404 Then
        Let Tb402 : Bool =
          Let Td399 : Float =
            o_diffuse obj 
          In
          Let Td400 : Float =
            Float(1.000000)
          In
          fless Td399 Td400 
        In
        If 0 = Tb402 Then
          ()
        Else
          Let m_shape : Int =
            o_form obj 
          In
          If 1 = m_shape Then
            setup_rect_reflection obj_id obj 
          Else
            Let Ti401 : Int =
              Int(2)
            In
            If m_shape = Ti401 Then
              setup_surface_reflection obj_id obj 
            Else
              ()
      Else
        ()
    Else
      ()
  In
  Let Rec rt : Int -> Int -> Unit ( size_x size_y ) =
    Let Tu269 : Unit =
      Let Ti372 : Int =
        Int(0)
      In
      image_size.(Ti372) <- size_x    In
    Let Tu268 : Unit =
      Let Ti373 : Int =
        Int(1)
      In
      image_size.(Ti373) <- size_y    In
    Let Tu267 : Unit =
      Let Ti374 : Int =
        Int(0)
      In
      Let Ti376 : Int =
        Let Ti375 : Int =
          Int(-1)
        In
        size_x << Ti375
      In
      image_center.(Ti374) <- Ti376    In
    Let Tu266 : Unit =
      Let Ti377 : Int =
        Int(1)
      In
      Let Ti379 : Int =
        Let Ti378 : Int =
          Int(-1)
        In
        size_y << Ti378
      In
      image_center.(Ti377) <- Ti379    In
    Let Tu265 : Unit =
      Let Ti380 : Int =
        Int(0)
      In
      Let Td383 : Float =
        Let Td381 : Float =
          Float(128.000000)
        In
        Let Td382 : Float =
          ExtFun:float_of_int size_x 
        In
        Td381 /. Td382
      In
      scan_pitch.(Ti380) <- Td383    In
    Let prev : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) =
      Let Tu384 : Unit =
        ()
      In
      create_pixelline Tu384 
    In
    Let cur : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) =
      Let Tu385 : Unit =
        ()
      In
      create_pixelline Tu385 
    In
    Let next : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) =
      Let Tu386 : Unit =
        ()
      In
      create_pixelline Tu386 
    In
    Let Tu264 : Unit =
      Let Tu387 : Unit =
        ()
      In
      read_parameter Tu387 
    In
    Let Tu263 : Unit =
      Let Tu388 : Unit =
        ()
      In
      write_ppm_header Tu388 
    In
    Let Tu262 : Unit =
      Let Tu389 : Unit =
        ()
      In
      init_dirvecs Tu389 
    In
    Let Tu261 : Unit =
      Let Ta390 : Array(Float) =
        d_vec light_dirvec 
      In
      veccpy Ta390 light 
    In
    Let Tu260 : Unit =
      setup_dirvec_constants light_dirvec 
    In
    Let Tu259 : Unit =
      Let Ti394 : Int =
        Let Ti392 : Int =
          Let Ti391 : Int =
            Int(0)
          In
          n_objects.(Ti391)        In
        Let Ti393 : Int =
          Int(1)
        In
        Ti392 - Ti393
      In
      setup_reflections Ti394 
    In
    Let Tu258 : Unit =
      Let Ti395 : Int =
        Int(0)
      In
      Let Ti396 : Int =
        Int(0)
      In
      pretrace_line cur Ti395 Ti396 
    In
    Let Ti397 : Int =
      Int(0)
    In
    Let Ti398 : Int =
      Int(2)
    In
    scan_line Ti397 prev cur next Ti398 
  In
  Let Tu270 : Unit =
    Let Ti370 : Int =
      Int(128)
    In
    Let Ti371 : Int =
      Int(128)
    In
    rt Ti370 Ti371 
  In
  Int(0)

	C x = 0, V y = obj_id
	1V x = Ti403, V y = Ti404
	x = 0, V = Tb402
	x = 1, V = m_shape
	1V x = m_shape, V y = Ti401
	C x = 0, V y = index
	C x = 0, V y = index
	C x = 0, V y = index
	C x = 0, V y = index
	C x = 0, V y = row
	C x = 0, V y = col
	2V x = Ti567, V y = icount
	C x = 0, V y = n
	2V x = Ti630, V y = y
	2V x = Ti624, V y = y
	2V x = Ti641, V y = x
	x = 0, V = Tb637
	C x = 0, V y = x
	2V x = nref, V y = Ti709
	C x = 0, V y = sid
	x = 0, V = Tb706
	2V x = ix, V y = Ti719
	C x = 0, V y = ix
	2V x = nref, V y = Ti739
	C x = 0, V y = Ti738
	x = 0, V = Tb737
	x = 0, V = Tb734
	1V x = Ti752, V y = sid_center
	1V x = Ti751, V y = sid_center
	1V x = Ti750, V y = sid_center
	1V x = Ti749, V y = sid_center
	2V x = Ti759, V y = Ti760
	V x = y, C y = 0
	2V x = Ti757, V y = Ti758
	V x = x, C y = 0
	2V x = nref, V y = Ti765
	C x = 0, V y = Ti764
	x = 0, V = Tb761
	1V x = group_id, V y = Ti799
	1V x = group_id, V y = Ti796
	1V x = group_id, V y = Ti793
	x = 1, V = group_id
	x = 0, V = group_id
	C x = 0, V y = index
	x = 0, V = Tb811
	x = 0, V = Tb826
	x = 0, V = Tb825
	x = 0, V = Tb821
	2V x = nref, V y = Ti899
	x = 0, V = Tb898
	x = 0, V = Tb897
	1V x = m_surface, V y = Ti896
	2V x = Ti887, V y = nref
	x = 0, V = Tb877
	x = 0, V = Tb867
	x = 0, V = nref
	x = 0, V = Tb847
	C x = 0, V y = index
	x = 0, V = Tb915
	1V x = surface_id, V y = Ti914
	x = 0, V = Tb913
	x = 0, V = Tb933
	x = 0, V = Tb918
	x = 1, V = m_tex
	1V x = m_tex, V y = Ti1050
	1V x = m_tex, V y = Ti1049
	1V x = m_tex, V y = Ti1048
	x = 0, V = Tb1042
	x = 0, V = Tb1032
	x = 0, V = Tb1017
	x = 0, V = flag1
	x = 0, V = flag2
	x = 0, V = flag2
	x = 1, V = m_shape
	1V x = m_shape, V y = Ti1051
	x = 0, V = Ti1091
	x = 0, V = Tb1118
	1V x = range_primitive, V y = Ti1130
	1V x = range_primitive, V y = Ti1127
	x = 0, V = t
	x = 0, V = Tb1126
	1V x = head, V y = Ti1135
	1V x = iobj, V y = Ti1170
	x = 0, V = t0
	x = 0, V = Tb1167
	x = 0, V = Tb1166
	x = 0, V = Tb1165
	x = 0, V = Tb1140
	x = 0, V = Tb1179
	1V x = range_primitive, V y = Ti1191
	1V x = range_primitive, V y = Ti1188
	x = 0, V = t
	x = 0, V = Tb1187
	1V x = head, V y = Ti1196
	1V x = iobj, V y = Ti1231
	x = 0, V = t0
	x = 0, V = Tb1228
	x = 0, V = Tb1227
	x = 0, V = Tb1226
	x = 0, V = Tb1201
	1V x = range_primitive, V y = Ti1248
	x = 0, V = Ti1247
	x = 0, V = Tb1246
	1V x = range_primitive, V y = Ti1240
	x = 0, V = t
	x = 0, V = Tb1239
	x = 0, V = Tb1238
	1V x = head, V y = Ti1253
	x = 0, V = shadow_p
	1V x = Ti1282, V y = Ti1283
	x = 0, V = Ti1281
	x = 0, V = Tb1280
	x = 0, V = Tb1260
	x = 0, V = t0
	1V x = head, V y = Ti1289
	x = 0, V = Tb1288
	x = 1, V = m_shape
	1V x = m_shape, V y = Ti1293
	x = 0, V = Tb1299
	1V x = Ti1295, V y = Ti1296
	x = 0, V = Tb1303
	x = 0, V = Ti1313
	x = 0, V = Tb1312
	x = 0, V = Tb1311
	x = 0, V = Tb1310
	C x = 0, V y = index
	1V x = m_shape, V y = Ti1353
	2V x = m_shape, V y = Ti1352
	1V x = m_shape, V y = Ti1350
	C x = 0, V y = index
	x = 1, V = m_shape
	1V x = m_shape, V y = Ti1363
	x = 0, V = Tb1430
	x = 0, V = Ti1426
	x = 0, V = Tb1463
	x = 0, V = Tb1519
	x = 0, V = Tb1501
	x = 0, V = Tb1483
	x = 1, V = m_shape
	1V x = m_shape, V y = Ti1524
	x = 0, V = Tb1553
	x = 0, V = Tb1552
	x = 0, V = Tb1551
	x = 0, V = Tb1562
	x = 1, V = m_shape
	1V x = m_shape, V y = Ti1573
	x = 0, V = Tb1604
	x = 0, V = Tb1603
	x = 0, V = Tb1602
	1V x = Ti1586, V y = Ti1587
	x = 0, V = Tb1619
	x = 0, V = Ti1691
	x = 0, V = Ti1689
	x = 0, V = Ti1687
	x = 0, V = Tb1685
	x = 0, V = Tb1684
	x = 0, V = Tb1683
	x = 0, V = Tb1663
	x = 0, V = Tb1662
	x = 0, V = Tb1661
	x = 0, V = Tb1641
	x = 0, V = Tb1640
	x = 0, V = Tb1639
	x = 1, V = m_shape
	1V x = m_shape, V y = Ti1701
	x = 0, V = Tb1724
	x = 0, V = Tb1723
	x = 0, V = Tb1719
	1V x = Ti1715, V y = Ti1716
	x = 0, V = Ti1753
	x = 0, V = Ti1775
	x = 0, V = Tb1780
	x = 0, V = Tb1792
	x = 0, V = Tb1791
	x = 0, V = Tb1790
	x = 0, V = Tb1814
	x = 0, V = Tb1813
	x = 0, V = Tb1812
	1V x = Ti1827, V y = Ti1828
	1V x = Ti1836, V y = Ti1837
	1V x = item, V y = Ti1846
	2V x = Ti1852, V y = n
	x = 0, V = Tb1851
	1V x = texture, V y = Ti1939
	x = 0, V = isrot_p
	1V x = form, V y = Ti1938
	1V x = form, V y = Ti1937
	x = 0, V = m_invert
	x = 0, V = Tb1934
	x = 0, V = Tb1928
	x = 0, V = Tb1922
	1V x = form, V y = Ti1915
	x = 0, V = isrot_p
	x = 0, V = Tb2248
	x = 0, V = inv
	2V x = Ti2322, V y = sum
	x = 0, V = cond
	x = 0, V = Tb2324
	x = 0, V = Tb2323
	x = 0, V = x
	x = 0, V = y
	2V x = x, V y = Ti2351
	C x = 0, V y = x
	V x = tx, C y = 0
	x = 0, V = flg
	V x = tx, C y = 0
	x = 0, V = flg
	V x = tx, C y = 0
	V x = Ti2354, C y = 1
	2V x = a, V y = x
	1V x = x, V y = a
	x = 1, V = Ti2380
	1V x = nextch, V y = Ti2378
	x = 0, V = flg
	x = 0, V = in_token
	2V x = Ti2383, V y = c
	2V x = c, V y = Ti2382
	x = 0, V = flg
	x = 0, V = in_token
	x = 0, V = Ti2407
	1V x = prev, V y = Ti2406
	2V x = Ti2399, V y = c
	2V x = c, V y = Ti2398
	x = 0, V = flg
	x = 0, V = in_token
	x = 1, V = Ti2447
	x = 0, V = Ti2433
	1V x = prev, V y = Ti2432
	2V x = Ti2425, V y = c
	2V x = c, V y = Ti2424
	x = 0, V = s2
	2V x = x2, V y = pih
	2V x = x1, V y = pi
	2V x = x1, V y = pi
	x = 0, V = s1
	2V x = x, V y = Td2454
	2V x = x, V y = pi2
	2V x = Td2463, V y = x
	2V x = Td2475, V y = i
	V x = sgn, C y = 0
	C x = 0, V y = sgn
	2V x = Td2480, V y = Td2481
	2V x = x, V y = Td2478
	2V x = Td2477, V y = x
	2V x = Td2502, V y = i
	2V x = Td2504, V y = a
	1V x = a, V y = b
	1V x = a, V y = Td2505
	2V x = Td2506, V y = a
	2V x = a, V y = Td2507
	2V x = b, V y = a
	1V x = a, V y = b
Print KNormal_t (Alpha.ml)
  Let Rec fequal.2508 : Int -> Int -> Bool ( a.2509 b.2510 ) =
    If a.2509 = b.2510 Then
      Int(1)
    Else
      Int(0)
  In
  Let Rec fless.2511 : Float -> Float -> Bool ( a.2512 b.2513 ) =
    If b.2513 <= a.2512 Then
      Int(0)
    Else
      Int(1)
  In
  Let Rec fispos.2514 : Float -> Bool ( a.2515 ) =
    Let Td2507.6251 : Float =
      Float(0.000000)
    In
    If a.2515 <= Td2507.6251 Then
      Int(0)
    Else
      Int(1)
  In
  Let Rec fisneg.2516 : Float -> Bool ( a.2517 ) =
    Let Td2506.6250 : Float =
      Float(0.000000)
    In
    If Td2506.6250 <= a.2517 Then
      Int(0)
    Else
      Int(1)
  In
  Let Rec fiszero.2518 : Float -> Bool ( a.2519 ) =
    Let Td2505.6249 : Float =
      Float(0.000000)
    In
    If a.2519 = Td2505.6249 Then
      Int(1)
    Else
      Int(0)
  In
  Let Rec xor.2520 : Int -> Int -> Bool ( a.2521 b.2522 ) =
    If a.2521 = b.2522 Then
      Int(0)
    Else
      Int(1)
  In
  Let Rec fabs.2523 : Float -> Float ( a.2524 ) =
    Let Td2504.6248 : Float =
      Float(0.000000)
    In
    If Td2504.6248 <= a.2524 Then
      Var(a.2524)
    Else
      -.a.2524
  In
  Let Rec abs_float.2525 : Float -> Float ( x.2526 ) =
    fabs.2523 x.2526 
  In
  Let Rec fneg.2527 : Float -> Float ( a.2528 ) =
    -.a.2528
  In
  Let Rec fhalf.2529 : Float -> Float ( a.2530 ) =
    Let Td2503.6247 : Float =
      Float(2.000000)
    In
    a.2530 /. Td2503.6247
  In
  Let Rec fsqr.2531 : Float -> Float ( a.2532 ) =
    a.2532 *. a.2532
  In
  Let pi.2533 : Float =
    Float(3.141593)
  In
  Let pi2.2534 : Float =
    Let Td271.6246 : Float =
      Float(2.000000)
    In
    pi.2533 *. Td271.6246
  In
  Let pih.2535 : Float =
    Let Td272.6245 : Float =
      Float(0.500000)
    In
    pi.2533 *. Td272.6245
  In
  Let Rec atan_sub.2536 : Float -> Float -> Float -> Float ( i.2537 xx.2538 y.2539 ) =
    Let Td2502.6234 : Float =
      Float(0.500000)
    In
    If Td2502.6234 <= i.2537 Then
      Let Td2493.6235 : Float =
        Let Td2492.6244 : Float =
          Float(1.000000)
        In
        i.2537 -. Td2492.6244
      In
      Let Td2501.6236 : Float =
        Let Td2495.6237 : Float =
          Let Td2494.6243 : Float =
            i.2537 *. i.2537
          In
          Td2494.6243 *. xx.2538
        In
        Let Td2500.6238 : Float =
          Let Td2499.6239 : Float =
            Let Td2497.6240 : Float =
              Let Td2496.6242 : Float =
                Float(2.000000)
              In
              Td2496.6242 *. i.2537
            In
            Let Td2498.6241 : Float =
              Float(1.000000)
            In
            Td2497.6240 +. Td2498.6241
          In
          Td2499.6239 +. y.2539
        In
        Td2495.6237 /. Td2500.6238
      In
      atan_sub.2536 Td2493.6235 xx.2538 Td2501.6236 
    Else
      Var(y.2539)
  In
  Let Rec atan.2540 : Float -> Float ( x.2541 ) =
    Let sgn.6214 : Int =
      Let Td2478.6231 : Float =
        Float(1.000000)
      In
      If x.2541 <= Td2478.6231 Then
        Let Td2477.6232 : Float =
          Float(-1.000000)
        In
        If Td2477.6232 <= x.2541 Then
          Int(0)
        Else
          Let Ti2476.6233 : Int =
            Int(1)
          In
          -Ti2476.6233
      Else
        Int(1)
    In
    Let x.6215 : Float =
      Let Td2480.6228 : Float =
        fabs.2523 x.2541 
      In
      Let Td2481.6229 : Float =
        Float(1.000000)
      In
      If Td2480.6228 <= Td2481.6229 Then
        Var(x.2541)
      Else
        Let Td2479.6230 : Float =
          Float(1.000000)
        In
        Td2479.6230 /. x.2541
    In
    Let a.6216 : Float =
      Let Td2482.6225 : Float =
        Float(11.000000)
      In
      Let Td2483.6226 : Float =
        x.6215 *. x.6215
      In
      Let Td2484.6227 : Float =
        Float(0.000000)
      In
      atan_sub.2536 Td2482.6225 Td2483.6226 Td2484.6227 
    In
    Let b.6217 : Float =
      Let Td2486.6223 : Float =
        Let Td2485.6224 : Float =
          Float(1.000000)
        In
        Td2485.6224 +. a.6216
      In
      x.6215 /. Td2486.6223
    In
    If sgn.6214 <= 0 Then
      If 0 <= sgn.6214 Then
        Var(b.6217)
      Else
        Let Td2489.6220 : Float =
          Let Td2487.6221 : Float =
            -.pi.2533
          In
          Let Td2488.6222 : Float =
            Float(2.000000)
          In
          Td2487.6221 /. Td2488.6222
        In
        Td2489.6220 -. b.6217
    Else
      Let Td2491.6218 : Float =
        Let Td2490.6219 : Float =
          Float(2.000000)
        In
        pi.2533 /. Td2490.6219
      In
      Td2491.6218 -. b.6217
  In
  Let Rec tan.2542 : Float -> Float ( x.2543 ) =
    Let Rec tan_sub.6199 : Float -> Float -> Float -> Float ( i.6200 xx.6201 y.6202 ) =
      Let Td2475.6209 : Float =
        Float(2.500000)
      In
      If Td2475.6209 <= i.6200 Then
        Let Td2472.6210 : Float =
          Let Td2471.6213 : Float =
            Float(2.000000)
          In
          i.6200 -. Td2471.6213
        In
        Let Td2474.6211 : Float =
          Let Td2473.6212 : Float =
            i.6200 -. y.6202
          In
          xx.6201 /. Td2473.6212
        In
        tan_sub.6199 Td2472.6210 xx.6201 Td2474.6211 
      Else
        Var(y.6202)
    In
    Let Td2470.6203 : Float =
      Let Td2465.6204 : Float =
        Float(1.000000)
      In
      Let Td2469.6205 : Float =
        Let Td2466.6206 : Float =
          Float(9.000000)
        In
        Let Td2467.6207 : Float =
          x.2543 *. x.2543
        In
        Let Td2468.6208 : Float =
          Float(0.000000)
        In
        tan_sub.6199 Td2466.6206 Td2467.6207 Td2468.6208 
      In
      Td2465.6204 -. Td2469.6205
    In
    x.2543 /. Td2470.6203
  In
  Let Rec sin_sub.2544 : Float -> Float ( x.2545 ) =
    If x.2545 <= pi2.2534 Then
      Let Td2463.6197 : Float =
        Float(0.000000)
      In
      If Td2463.6197 <= x.2545 Then
        Var(x.2545)
      Else
        Let Td2462.6198 : Float =
          x.2545 +. pi2.2534
        In
        sin_sub.2544 Td2462.6198 
    Else
      Let Td2464.6196 : Float =
        x.2545 -. pi2.2534
      In
      sin_sub.2544 Td2464.6196 
  In
  Let Rec sin.2546 : Float -> Float ( x.2547 ) =
    Let s1.6180 : Bool =
      Let Td2454.6195 : Float =
        Float(0.000000)
      In
      If x.2547 <= Td2454.6195 Then
        Int(0)
      Else
        Int(1)
    In
    Let x0.6181 : Float =
      fabs.2523 x.2547 
    In
    Let x1.6182 : Float =
      sin_sub.2544 x0.6181 
    In
    Let s2.6183 : Bool =
      If x1.6182 <= pi.2533 Then
        Var(s1.6180)
      Else
        If 0 = s1.6180 Then
          Int(1)
        Else
          Int(0)
    In
    Let x2.6184 : Float =
      If x1.6182 <= pi.2533 Then
        Var(x1.6182)
      Else
        pi2.2534 -. x1.6182
    In
    Let x3.6185 : Float =
      If x2.6184 <= pih.2535 Then
        Var(x2.6184)
      Else
        pi.2533 -. x2.6184
    In
    Let t.6186 : Float =
      Let Td2456.6193 : Float =
        Let Td2455.6194 : Float =
          Float(0.500000)
        In
        x3.6185 *. Td2455.6194
      In
      tan.2542 Td2456.6193 
    In
    Let ans.6187 : Float =
      Let Td2458.6188 : Float =
        Let Td2457.6192 : Float =
          Float(2.000000)
        In
        Td2457.6192 *. t.6186
      In
      Let Td2461.6189 : Float =
        Let Td2459.6190 : Float =
          Float(1.000000)
        In
        Let Td2460.6191 : Float =
          t.6186 *. t.6186
        In
        Td2459.6190 +. Td2460.6191
      In
      Td2458.6188 /. Td2461.6189
    In
    If 0 = s2.6183 Then
      fneg.2527 ans.6187 
    Else
      Var(ans.6187)
  In
  Let Rec cos.2548 : Float -> Float ( x.2549 ) =
    Let Td2453.6178 : Float =
      Let Td2452.6179 : Float =
        Float(1.570796)
      In
      Td2452.6179 -. x.2549
    In
    sin.2546 Td2453.6178 
  In
  Let Rec mul10.2550 : Int -> Int ( x.2551 ) =
    Let Ti2449.6174 : Int =
      Let Ti2448.6177 : Int =
        Int(3)
      In
      x.2551 << Ti2448.6177
    In
    Let Ti2451.6175 : Int =
      Let Ti2450.6176 : Int =
        Int(1)
      In
      x.2551 << Ti2450.6176
    In
    Ti2449.6174 + Ti2451.6175
  In
  Let read_int_ans.2552 : Array(Int) =
    Let Ti273.6172 : Int =
      Int(1)
    In
    Let Ti274.6173 : Int =
      Int(0)
    In
    ExtFun:create_array Ti273.6172 Ti274.6173 
  In
  Let read_int_s.2553 : Array(Int) =
    Let Ti275.6170 : Int =
      Int(1)
    In
    Let Ti276.6171 : Int =
      Int(0)
    In
    ExtFun:create_array Ti275.6170 Ti276.6171 
  In
  Let Rec read_int_token.2554 : Bool -> Int -> Int ( in_token.2555 prev.2556 ) =
    Let c.6141 : Int =
      Let Tu2423.6169 : Unit =
        ()
      In
      ExtFun:input_char Tu2423.6169 
    In
    Let flg.6142 : Bool =
      Let Ti2425.6167 : Int =
        Int(48)
      In
      If Ti2425.6167 <= c.6141 Then
        Let Ti2424.6168 : Int =
          Int(57)
        In
        If c.6141 <= Ti2424.6168 Then
          Int(0)
        Else
          Int(1)
      Else
        Int(1)
    In
    If 0 = flg.6142 Then
      Let Tu2.6149 : Unit =
        Let Ti2433.6159 : Int =
          Let Ti2426.6166 : Int =
            Int(0)
          In
          read_int_s.2553.(Ti2426.6166)        In
        If 0 = Ti2433.6159 Then
          Let Ti2432.6160 : Int =
            Int(45)
          In
          If prev.2556 = Ti2432.6160 Then
            Let Ti2427.6163 : Int =
              Int(0)
            In
            Let Ti2429.6164 : Int =
              Let Ti2428.6165 : Int =
                Int(1)
              In
              -Ti2428.6165
            In
            read_int_s.2553.(Ti2427.6163) <- Ti2429.6164          Else
            Let Ti2430.6161 : Int =
              Int(0)
            In
            Let Ti2431.6162 : Int =
              Int(1)
            In
            read_int_s.2553.(Ti2430.6161) <- Ti2431.6162        Else
          ()
      In
      Let Tu1.6150 : Unit =
        Let Ti2434.6152 : Int =
          Int(0)
        In
        Let Ti2440.6153 : Int =
          Let Ti2437.6154 : Int =
            Let Ti2436.6157 : Int =
              Let Ti2435.6158 : Int =
                Int(0)
              In
              read_int_ans.2552.(Ti2435.6158)            In
            mul10.2550 Ti2436.6157 
          In
          Let Ti2439.6155 : Int =
            Let Ti2438.6156 : Int =
              Int(48)
            In
            c.6141 - Ti2438.6156
          In
          Ti2437.6154 + Ti2439.6155
        In
        read_int_ans.2552.(Ti2434.6152) <- Ti2440.6153      In
      Let Ti2441.6151 : Int =
        Int(1)
      In
      read_int_token.2554 Ti2441.6151 c.6141 
    Else
      If 0 = in_token.2555 Then
        Let Ti2442.6148 : Int =
          Int(0)
        In
        read_int_token.2554 Ti2442.6148 c.6141 
      Else
        Let Ti2447.6143 : Int =
          Let Ti2443.6147 : Int =
            Int(0)
          In
          read_int_s.2553.(Ti2443.6147)        In
        If 1 = Ti2447.6143 Then
          Let Ti2444.6146 : Int =
            Int(0)
          In
          read_int_ans.2552.(Ti2444.6146)        Else
          Let Ti2446.6144 : Int =
            Let Ti2445.6145 : Int =
              Int(0)
            In
            read_int_ans.2552.(Ti2445.6145)          In
          -Ti2446.6144
  In
  Let Rec read_int.2557 : Unit -> Int ( Tu3.2558 ) =
    Let Tu5.6133 : Unit =
      Let Ti2417.6139 : Int =
        Int(0)
      In
      Let Ti2418.6140 : Int =
        Int(0)
      In
      read_int_ans.2552.(Ti2417.6139) <- Ti2418.6140    In
    Let Tu4.6134 : Unit =
      Let Ti2419.6137 : Int =
        Int(0)
      In
      Let Ti2420.6138 : Int =
        Int(0)
      In
      read_int_s.2553.(Ti2419.6137) <- Ti2420.6138    In
    Let Ti2421.6135 : Int =
      Int(0)
    In
    Let Ti2422.6136 : Int =
      Int(32)
    In
    read_int_token.2554 Ti2421.6135 Ti2422.6136 
  In
  Let read_float_i.2559 : Array(Int) =
    Let Ti277.6131 : Int =
      Int(1)
    In
    Let Ti278.6132 : Int =
      Int(0)
    In
    ExtFun:create_array Ti277.6131 Ti278.6132 
  In
  Let read_float_f.2560 : Array(Int) =
    Let Ti279.6129 : Int =
      Int(1)
    In
    Let Ti280.6130 : Int =
      Int(0)
    In
    ExtFun:create_array Ti279.6129 Ti280.6130 
  In
  Let read_float_exp.2561 : Array(Int) =
    Let Ti281.6127 : Int =
      Int(1)
    In
    Let Ti282.6128 : Int =
      Int(1)
    In
    ExtFun:create_array Ti281.6127 Ti282.6128 
  In
  Let read_float_s.2562 : Array(Int) =
    Let Ti283.6125 : Int =
      Int(1)
    In
    Let Ti284.6126 : Int =
      Int(0)
    In
    ExtFun:create_array Ti283.6125 Ti284.6126 
  In
  Let Rec read_float_token1.2563 : Bool -> Int -> Int ( in_token.2564 prev.2565 ) =
    Let c.6101 : Int =
      Let Tu2397.6124 : Unit =
        ()
      In
      ExtFun:input_char Tu2397.6124 
    In
    Let flg.6102 : Bool =
      Let Ti2399.6122 : Int =
        Int(48)
      In
      If Ti2399.6122 <= c.6101 Then
        Let Ti2398.6123 : Int =
          Int(57)
        In
        If c.6101 <= Ti2398.6123 Then
          Int(0)
        Else
          Int(1)
      Else
        Int(1)
    In
    If 0 = flg.6102 Then
      Let Tu7.6104 : Unit =
        Let Ti2407.6114 : Int =
          Let Ti2400.6121 : Int =
            Int(0)
          In
          read_float_s.2562.(Ti2400.6121)        In
        If 0 = Ti2407.6114 Then
          Let Ti2406.6115 : Int =
            Int(45)
          In
          If prev.2565 = Ti2406.6115 Then
            Let Ti2401.6118 : Int =
              Int(0)
            In
            Let Ti2403.6119 : Int =
              Let Ti2402.6120 : Int =
                Int(1)
              In
              -Ti2402.6120
            In
            read_float_s.2562.(Ti2401.6118) <- Ti2403.6119          Else
            Let Ti2404.6116 : Int =
              Int(0)
            In
            Let Ti2405.6117 : Int =
              Int(1)
            In
            read_float_s.2562.(Ti2404.6116) <- Ti2405.6117        Else
          ()
      In
      Let Tu6.6105 : Unit =
        Let Ti2408.6107 : Int =
          Int(0)
        In
        Let Ti2414.6108 : Int =
          Let Ti2411.6109 : Int =
            Let Ti2410.6112 : Int =
              Let Ti2409.6113 : Int =
                Int(0)
              In
              read_float_i.2559.(Ti2409.6113)            In
            mul10.2550 Ti2410.6112 
          In
          Let Ti2413.6110 : Int =
            Let Ti2412.6111 : Int =
              Int(48)
            In
            c.6101 - Ti2412.6111
          In
          Ti2411.6109 + Ti2413.6110
        In
        read_float_i.2559.(Ti2408.6107) <- Ti2414.6108      In
      Let Ti2415.6106 : Int =
        Int(1)
      In
      read_float_token1.2563 Ti2415.6106 c.6101 
    Else
      If 0 = in_token.2564 Then
        Let Ti2416.6103 : Int =
          Int(0)
        In
        read_float_token1.2563 Ti2416.6103 c.6101 
      Else
        Var(c.6101)
  In
  Let Rec read_float_token2.2566 : Bool -> Unit ( in_token.2567 ) =
    Let c.6081 : Int =
      Let Tu2381.6100 : Unit =
        ()
      In
      ExtFun:input_char Tu2381.6100 
    In
    Let flg.6082 : Bool =
      Let Ti2383.6098 : Int =
        Int(48)
      In
      If Ti2383.6098 <= c.6081 Then
        Let Ti2382.6099 : Int =
          Int(57)
        In
        If c.6081 <= Ti2382.6099 Then
          Int(0)
        Else
          Int(1)
      Else
        Int(1)
    In
    If 0 = flg.6082 Then
      Let Tu9.6084 : Unit =
        Let Ti2384.6091 : Int =
          Int(0)
        In
        Let Ti2390.6092 : Int =
          Let Ti2387.6093 : Int =
            Let Ti2386.6096 : Int =
              Let Ti2385.6097 : Int =
                Int(0)
              In
              read_float_f.2560.(Ti2385.6097)            In
            mul10.2550 Ti2386.6096 
          In
          Let Ti2389.6094 : Int =
            Let Ti2388.6095 : Int =
              Int(48)
            In
            c.6081 - Ti2388.6095
          In
          Ti2387.6093 + Ti2389.6094
        In
        read_float_f.2560.(Ti2384.6091) <- Ti2390.6092      In
      Let Tu8.6085 : Unit =
        Let Ti2391.6087 : Int =
          Int(0)
        In
        Let Ti2394.6088 : Int =
          Let Ti2393.6089 : Int =
            Let Ti2392.6090 : Int =
              Int(0)
            In
            read_float_exp.2561.(Ti2392.6090)          In
          mul10.2550 Ti2393.6089 
        In
        read_float_exp.2561.(Ti2391.6087) <- Ti2394.6088      In
      Let Ti2395.6086 : Int =
        Int(1)
      In
      read_float_token2.2566 Ti2395.6086 
    Else
      If 0 = in_token.2567 Then
        Let Ti2396.6083 : Int =
          Int(0)
        In
        read_float_token2.2566 Ti2396.6083 
      Else
        ()
  In
  Let Rec read_float.2568 : Unit -> Float ( Tu10.2569 ) =
    Let Tu15.6048 : Unit =
      Let Ti2355.6079 : Int =
        Int(0)
      In
      Let Ti2356.6080 : Int =
        Int(0)
      In
      read_float_i.2559.(Ti2355.6079) <- Ti2356.6080    In
    Let Tu14.6049 : Unit =
      Let Ti2357.6077 : Int =
        Int(0)
      In
      Let Ti2358.6078 : Int =
        Int(0)
      In
      read_float_f.2560.(Ti2357.6077) <- Ti2358.6078    In
    Let Tu13.6050 : Unit =
      Let Ti2359.6075 : Int =
        Int(0)
      In
      Let Ti2360.6076 : Int =
        Int(1)
      In
      read_float_exp.2561.(Ti2359.6075) <- Ti2360.6076    In
    Let Tu12.6051 : Unit =
      Let Ti2361.6073 : Int =
        Int(0)
      In
      Let Ti2362.6074 : Int =
        Int(0)
      In
      read_float_s.2562.(Ti2361.6073) <- Ti2362.6074    In
    Let nextch.6052 : Int =
      Let Ti2363.6071 : Int =
        Int(0)
      In
      Let Ti2364.6072 : Int =
        Int(32)
      In
      read_float_token1.2563 Ti2363.6071 Ti2364.6072 
    In
    Let ans.6053 : Float =
      Let Ti2378.6056 : Int =
        Int(46)
      In
      If nextch.6052 = Ti2378.6056 Then
        Let Tu11.6059 : Unit =
          Let Ti2365.6070 : Int =
            Int(0)
          In
          read_float_token2.2566 Ti2365.6070 
        In
        Let Td2368.6060 : Float =
          Let Ti2367.6068 : Int =
            Let Ti2366.6069 : Int =
              Int(0)
            In
            read_float_i.2559.(Ti2366.6069)          In
          ExtFun:float_of_int Ti2367.6068 
        In
        Let Td2375.6061 : Float =
          Let Td2371.6062 : Float =
            Let Ti2370.6066 : Int =
              Let Ti2369.6067 : Int =
                Int(0)
              In
              read_float_f.2560.(Ti2369.6067)            In
            ExtFun:float_of_int Ti2370.6066 
          In
          Let Td2374.6063 : Float =
            Let Ti2373.6064 : Int =
              Let Ti2372.6065 : Int =
                Int(0)
              In
              read_float_exp.2561.(Ti2372.6065)            In
            ExtFun:float_of_int Ti2373.6064 
          In
          Td2371.6062 /. Td2374.6063
        In
        Td2368.6060 +. Td2375.6061
      Else
        Let Ti2377.6057 : Int =
          Let Ti2376.6058 : Int =
            Int(0)
          In
          read_float_i.2559.(Ti2376.6058)        In
        ExtFun:float_of_int Ti2377.6057 
    In
    Let Ti2380.6054 : Int =
      Let Ti2379.6055 : Int =
        Int(0)
      In
      read_float_s.2562.(Ti2379.6055)    In
    If 1 = Ti2380.6054 Then
      Var(ans.6053)
    Else
      -.ans.6053
  In
  Let Rec div_binary_search.2570 : Int -> Int -> Int -> Int -> Int ( a.2571 b.2572 left.2573 right.2574 ) =
    Let mid.6043 : Int =
      Let Ti2352.6046 : Int =
        left.2573 + right.2574
      In
      Let Ti2353.6047 : Int =
        Int(-1)
      In
      Ti2352.6046 << Ti2353.6047
    In
    Let x.6044 : Int =
      mid.6043 * b.2572
    In
    Let Ti2354.6045 : Int =
      right.2574 - left.2573
    In
    If Ti2354.6045 <= 1 Then
      Var(left.2573)
    Else
      If a.2571 <= x.6044 Then
        If x.6044 = a.2571 Then
          Var(mid.6043)
        Else
          div_binary_search.2570 a.2571 b.2572 left.2573 mid.6043 
      Else
        div_binary_search.2570 a.2571 b.2572 mid.6043 right.2574 
  In
  Let Rec print_int.2575 : Int -> Unit ( x.2576 ) =
    Let Ti2351.5998 : Int =
      Int(10000)
    In
    If x.2576 <= Ti2351.5998 Then
      If 0 <= x.2576 Then
        Let tx.6002 : Int =
          Let Ti2325.6040 : Int =
            Int(1000)
          In
          Let Ti2326.6041 : Int =
            Int(0)
          In
          Let Ti2327.6042 : Int =
            Int(10)
          In
          div_binary_search.2570 x.2576 Ti2325.6040 Ti2326.6041 Ti2327.6042 
        In
        Let dx.6003 : Int =
          Let Ti2328.6039 : Int =
            Int(1000)
          In
          tx.6002 * Ti2328.6039
        In
        Let x.6004 : Int =
          x.2576 - dx.6003
        In
        Let flg.6005 : Bool =
          If tx.6002 <= 0 Then
            Int(0)
          Else
            Let Tu17.6036 : Unit =
              Let Ti2330.6037 : Int =
                Let Ti2329.6038 : Int =
                  Int(48)
                In
                Ti2329.6038 + tx.6002
              In
              ExtFun:print_char Ti2330.6037 
            In
            Int(1)
        In
        Let tx.6006 : Int =
          Let Ti2331.6033 : Int =
            Int(100)
          In
          Let Ti2332.6034 : Int =
            Int(0)
          In
          Let Ti2333.6035 : Int =
            Int(10)
          In
          div_binary_search.2570 x.6004 Ti2331.6033 Ti2332.6034 Ti2333.6035 
        In
        Let dx.6007 : Int =
          Let Ti2334.6032 : Int =
            Int(100)
          In
          tx.6006 * Ti2334.6032
        In
        Let x.6008 : Int =
          x.6004 - dx.6007
        In
        Let flg.6009 : Bool =
          If tx.6006 <= 0 Then
            If 0 = flg.6005 Then
              Int(0)
            Else
              Let Tu18.6029 : Unit =
                Let Ti2336.6030 : Int =
                  Let Ti2335.6031 : Int =
                    Int(48)
                  In
                  Ti2335.6031 + tx.6006
                In
                ExtFun:print_char Ti2336.6030 
              In
              Int(1)
          Else
            Let Tu19.6026 : Unit =
              Let Ti2338.6027 : Int =
                Let Ti2337.6028 : Int =
                  Int(48)
                In
                Ti2337.6028 + tx.6006
              In
              ExtFun:print_char Ti2338.6027 
            In
            Int(1)
        In
        Let tx.6010 : Int =
          Let Ti2339.6023 : Int =
            Int(10)
          In
          Let Ti2340.6024 : Int =
            Int(0)
          In
          Let Ti2341.6025 : Int =
            Int(10)
          In
          div_binary_search.2570 x.6008 Ti2339.6023 Ti2340.6024 Ti2341.6025 
        In
        Let dx.6011 : Int =
          Let Ti2342.6022 : Int =
            Int(10)
          In
          tx.6010 * Ti2342.6022
        In
        Let x.6012 : Int =
          x.6008 - dx.6011
        In
        Let flg.6013 : Bool =
          If tx.6010 <= 0 Then
            If 0 = flg.6009 Then
              Int(0)
            Else
              Let Tu20.6019 : Unit =
                Let Ti2344.6020 : Int =
                  Let Ti2343.6021 : Int =
                    Int(48)
                  In
                  Ti2343.6021 + tx.6010
                In
                ExtFun:print_char Ti2344.6020 
              In
              Int(1)
          Else
            Let Tu21.6016 : Unit =
              Let Ti2346.6017 : Int =
                Let Ti2345.6018 : Int =
                  Int(48)
                In
                Ti2345.6018 + tx.6010
              In
              ExtFun:print_char Ti2346.6017 
            In
            Int(1)
        In
        Let Ti2348.6014 : Int =
          Let Ti2347.6015 : Int =
            Int(48)
          In
          Ti2347.6015 + x.6012
        In
        ExtFun:print_char Ti2348.6014 
      Else
        Let Tu16.5999 : Unit =
          Let Ti2349.6001 : Int =
            Int(45)
          In
          ExtFun:print_char Ti2349.6001 
        In
        Let Ti2350.6000 : Int =
          -x.2576
        In
        print_int.2575 Ti2350.6000 
    Else
      ()
  In
  Let n_objects.2577 : Array(Int) =
    Let Ti285.5996 : Int =
      Int(1)
    In
    Let Ti286.5997 : Int =
      Int(0)
    In
    ExtFun:create_array Ti285.5996 Ti286.5997 
  In
  Let objects.2578 : Array(Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) =
    Let dummy.5986 : Array(Float) =
      Let Ti287.5994 : Int =
        Int(0)
      In
      Let Td288.5995 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti287.5994 Td288.5995 
    In
    Let Ti289.5987 : Int =
      Int(60)
    In
    Let Tt295.5988 : Int * Int * Int * Int * Array(Float) * Array(Float) * Int * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
      Let Ti290.5989 : Int =
        Int(0)
      In
      Let Ti291.5990 : Int =
        Int(0)
      In
      Let Ti292.5991 : Int =
        Int(0)
      In
      Let Ti293.5992 : Int =
        Int(0)
      In
      Let Ti294.5993 : Int =
        Int(0)
      In
      (Ti290.5989, Ti291.5990, Ti292.5991, Ti293.5992, dummy.5986, dummy.5986, Ti294.5993, dummy.5986, dummy.5986, dummy.5986, dummy.5986, )
    In
    ExtFun:create_array Ti289.5987 Tt295.5988 
  In
  Let screen.2579 : Array(Float) =
    Let Ti296.5984 : Int =
      Int(3)
    In
    Let Td297.5985 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti296.5984 Td297.5985 
  In
  Let viewpoint.2580 : Array(Float) =
    Let Ti298.5982 : Int =
      Int(3)
    In
    Let Td299.5983 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti298.5982 Td299.5983 
  In
  Let light.2581 : Array(Float) =
    Let Ti300.5980 : Int =
      Int(3)
    In
    Let Td301.5981 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti300.5980 Td301.5981 
  In
  Let beam.2582 : Array(Float) =
    Let Ti302.5978 : Int =
      Int(1)
    In
    Let Td303.5979 : Float =
      Float(255.000000)
    In
    ExtFun:create_float_array Ti302.5978 Td303.5979 
  In
  Let and_net.2583 : Array(Array(Int)) =
    Let Ti304.5973 : Int =
      Int(50)
    In
    Let Ta308.5974 : Array(Int) =
      Let Ti305.5975 : Int =
        Int(1)
      In
      Let Ti307.5976 : Int =
        Let Ti306.5977 : Int =
          Int(1)
        In
        -Ti306.5977
      In
      ExtFun:create_array Ti305.5975 Ti307.5976 
    In
    ExtFun:create_array Ti304.5973 Ta308.5974 
  In
  Let or_net.2584 : Array(Array(Array(Int))) =
    Let Ti309.5968 : Int =
      Int(1)
    In
    Let Ta313.5969 : Array(Array(Int)) =
      Let Ti310.5970 : Int =
        Int(1)
      In
      Let Ta312.5971 : Array(Int) =
        Let Ti311.5972 : Int =
          Int(0)
        In
        and_net.2583.(Ti311.5972)      In
      ExtFun:create_array Ti310.5970 Ta312.5971 
    In
    ExtFun:create_array Ti309.5968 Ta313.5969 
  In
  Let solver_dist.2585 : Array(Float) =
    Let Ti314.5966 : Int =
      Int(1)
    In
    Let Td315.5967 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti314.5966 Td315.5967 
  In
  Let intsec_rectside.2586 : Array(Int) =
    Let Ti316.5964 : Int =
      Int(1)
    In
    Let Ti317.5965 : Int =
      Int(0)
    In
    ExtFun:create_array Ti316.5964 Ti317.5965 
  In
  Let tmin.2587 : Array(Float) =
    Let Ti318.5962 : Int =
      Int(1)
    In
    Let Td319.5963 : Float =
      Float(1000000000.000000)
    In
    ExtFun:create_float_array Ti318.5962 Td319.5963 
  In
  Let intersection_point.2588 : Array(Float) =
    Let Ti320.5960 : Int =
      Int(3)
    In
    Let Td321.5961 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti320.5960 Td321.5961 
  In
  Let intersected_object_id.2589 : Array(Int) =
    Let Ti322.5958 : Int =
      Int(1)
    In
    Let Ti323.5959 : Int =
      Int(0)
    In
    ExtFun:create_array Ti322.5958 Ti323.5959 
  In
  Let nvector.2590 : Array(Float) =
    Let Ti324.5956 : Int =
      Int(3)
    In
    Let Td325.5957 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti324.5956 Td325.5957 
  In
  Let texture_color.2591 : Array(Float) =
    Let Ti326.5954 : Int =
      Int(3)
    In
    Let Td327.5955 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti326.5954 Td327.5955 
  In
  Let diffuse_ray.2592 : Array(Float) =
    Let Ti328.5952 : Int =
      Int(3)
    In
    Let Td329.5953 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti328.5952 Td329.5953 
  In
  Let rgb.2593 : Array(Float) =
    Let Ti330.5950 : Int =
      Int(3)
    In
    Let Td331.5951 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti330.5950 Td331.5951 
  In
  Let image_size.2594 : Array(Int) =
    Let Ti332.5948 : Int =
      Int(2)
    In
    Let Ti333.5949 : Int =
      Int(0)
    In
    ExtFun:create_array Ti332.5948 Ti333.5949 
  In
  Let image_center.2595 : Array(Int) =
    Let Ti334.5946 : Int =
      Int(2)
    In
    Let Ti335.5947 : Int =
      Int(0)
    In
    ExtFun:create_array Ti334.5946 Ti335.5947 
  In
  Let scan_pitch.2596 : Array(Float) =
    Let Ti336.5944 : Int =
      Int(1)
    In
    Let Td337.5945 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti336.5944 Td337.5945 
  In
  Let startp.2597 : Array(Float) =
    Let Ti338.5942 : Int =
      Int(3)
    In
    Let Td339.5943 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti338.5942 Td339.5943 
  In
  Let startp_fast.2598 : Array(Float) =
    Let Ti340.5940 : Int =
      Int(3)
    In
    Let Td341.5941 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti340.5940 Td341.5941 
  In
  Let screenx_dir.2599 : Array(Float) =
    Let Ti342.5938 : Int =
      Int(3)
    In
    Let Td343.5939 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti342.5938 Td343.5939 
  In
  Let screeny_dir.2600 : Array(Float) =
    Let Ti344.5936 : Int =
      Int(3)
    In
    Let Td345.5937 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti344.5936 Td345.5937 
  In
  Let screenz_dir.2601 : Array(Float) =
    Let Ti346.5934 : Int =
      Int(3)
    In
    Let Td347.5935 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti346.5934 Td347.5935 
  In
  Let ptrace_dirvec.2602 : Array(Float) =
    Let Ti348.5932 : Int =
      Int(3)
    In
    Let Td349.5933 : Float =
      Float(0.000000)
    In
    ExtFun:create_float_array Ti348.5932 Td349.5933 
  In
  Let dirvecs.2603 : Array(Array(Array(Float) * Array(Array(Float)))) =
    Let dummyf.5923 : Array(Float) =
      Let Ti350.5930 : Int =
        Int(0)
      In
      Let Td351.5931 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti350.5930 Td351.5931 
    In
    Let dummyff.5924 : Array(Array(Float)) =
      Let Ti352.5929 : Int =
        Int(0)
      In
      ExtFun:create_array Ti352.5929 dummyf.5923 
    In
    Let dummy_vs.5925 : Array(Array(Float) * Array(Array(Float))) =
      Let Ti353.5927 : Int =
        Int(0)
      In
      Let Tt354.5928 : Array(Float) * Array(Array(Float)) =
        (dummyf.5923, dummyff.5924, )
      In
      ExtFun:create_array Ti353.5927 Tt354.5928 
    In
    Let Ti355.5926 : Int =
      Int(5)
    In
    ExtFun:create_array Ti355.5926 dummy_vs.5925 
  In
  Let light_dirvec.2604 : Array(Float) * Array(Array(Float)) =
    Let dummyf2.5915 : Array(Float) =
      Let Ti356.5921 : Int =
        Int(0)
      In
      Let Td357.5922 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti356.5921 Td357.5922 
    In
    Let v3.5916 : Array(Float) =
      Let Ti358.5919 : Int =
        Int(3)
      In
      Let Td359.5920 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti358.5919 Td359.5920 
    In
    Let consts.5917 : Array(Array(Float)) =
      Let Ti360.5918 : Int =
        Int(60)
      In
      ExtFun:create_array Ti360.5918 dummyf2.5915 
    In
    (v3.5916, consts.5917, )
  In
  Let reflections.2605 : Array(Int * Array(Float) * Array(Array(Float)) * Float) =
    Let dummyf3.5905 : Array(Float) =
      Let Ti361.5913 : Int =
        Int(0)
      In
      Let Td362.5914 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti361.5913 Td362.5914 
    In
    Let dummyff3.5906 : Array(Array(Float)) =
      Let Ti363.5912 : Int =
        Int(0)
      In
      ExtFun:create_array Ti363.5912 dummyf3.5905 
    In
    Let dummydv.5907 : Array(Float) * Array(Array(Float)) =
      (dummyf3.5905, dummyff3.5906, )
    In
    Let Ti364.5908 : Int =
      Int(180)
    In
    Let Tt367.5909 : Int * Array(Float) * Array(Array(Float)) * Float =
      Let Ti365.5910 : Int =
        Int(0)
      In
      Let Td366.5911 : Float =
        Float(0.000000)
      In
      (Ti365.5910, dummydv.5907, Td366.5911, )
    In
    ExtFun:create_array Ti364.5908 Tt367.5909 
  In
  Let n_reflections.2606 : Array(Int) =
    Let Ti368.5903 : Int =
      Int(1)
    In
    Let Ti369.5904 : Int =
      Int(0)
    In
    ExtFun:create_array Ti368.5903 Ti369.5904 
  In
  Let Rec xor.2607 : Bool -> Bool -> Bool ( x.2608 y.2609 ) =
    If 0 = x.2608 Then
      Var(y.2609)
    Else
      If 0 = y.2609 Then
        Int(1)
      Else
        Int(0)
  In
  Let Rec sgn.2610 : Float -> Float ( x.2611 ) =
    Let Tb2324.5901 : Bool =
      fiszero.2518 x.2611 
    In
    If 0 = Tb2324.5901 Then
      Let Tb2323.5902 : Bool =
        fispos.2514 x.2611 
      In
      If 0 = Tb2323.5902 Then
        Float(-1.000000)
      Else
        Float(1.000000)
    Else
      Float(0.000000)
  In
  Let Rec fneg_cond.2612 : Bool -> Float -> Float ( cond.2613 x.2614 ) =
    If 0 = cond.2613 Then
      fneg.2527 x.2614 
    Else
      Var(x.2614)
  In
  Let Rec add_mod5.2615 : Int -> Int -> Int ( x.2616 y.2617 ) =
    Let sum.5898 : Int =
      x.2616 + y.2617
    In
    Let Ti2322.5899 : Int =
      Int(5)
    In
    If Ti2322.5899 <= sum.5898 Then
      Let Ti2321.5900 : Int =
        Int(5)
      In
      sum.5898 - Ti2321.5900
    Else
      Var(sum.5898)
  In
  Let Rec vecset.2618 : Array(Float) -> Float -> Float -> Float -> Unit ( v.2619 x.2620 y.2621 z.2622 ) =
    Let Tu23.5893 : Unit =
      Let Ti2318.5897 : Int =
        Int(0)
      In
      v.2619.(Ti2318.5897) <- x.2620    In
    Let Tu22.5894 : Unit =
      Let Ti2319.5896 : Int =
        Int(1)
      In
      v.2619.(Ti2319.5896) <- y.2621    In
    Let Ti2320.5895 : Int =
      Int(2)
    In
    v.2619.(Ti2320.5895) <- z.2622  In
  Let Rec vecfill.2623 : Array(Float) -> Float -> Unit ( v.2624 elem.2625 ) =
    Let Tu25.5888 : Unit =
      Let Ti2315.5892 : Int =
        Int(0)
      In
      v.2624.(Ti2315.5892) <- elem.2625    In
    Let Tu24.5889 : Unit =
      Let Ti2316.5891 : Int =
        Int(1)
      In
      v.2624.(Ti2316.5891) <- elem.2625    In
    Let Ti2317.5890 : Int =
      Int(2)
    In
    v.2624.(Ti2317.5890) <- elem.2625  In
  Let Rec vecbzero.2626 : Array(Float) -> Unit ( v.2627 ) =
    Let Td2314.5887 : Float =
      Float(0.000000)
    In
    vecfill.2623 v.2627 Td2314.5887 
  In
  Let Rec veccpy.2628 : Array(Float) -> Array(Float) -> Unit ( dest.2629 src.2630 ) =
    Let Tu27.5876 : Unit =
      Let Ti2305.5884 : Int =
        Int(0)
      In
      Let Td2307.5885 : Float =
        Let Ti2306.5886 : Int =
          Int(0)
        In
        src.2630.(Ti2306.5886)      In
      dest.2629.(Ti2305.5884) <- Td2307.5885    In
    Let Tu26.5877 : Unit =
      Let Ti2308.5881 : Int =
        Int(1)
      In
      Let Td2310.5882 : Float =
        Let Ti2309.5883 : Int =
          Int(1)
        In
        src.2630.(Ti2309.5883)      In
      dest.2629.(Ti2308.5881) <- Td2310.5882    In
    Let Ti2311.5878 : Int =
      Int(2)
    In
    Let Td2313.5879 : Float =
      Let Ti2312.5880 : Int =
        Int(2)
      In
      src.2630.(Ti2312.5880)    In
    dest.2629.(Ti2311.5878) <- Td2313.5879  In
  Let Rec vecdist2.2631 : Array(Float) -> Array(Float) -> Float ( p.2632 q.2633 ) =
    Let Td2298.5857 : Float =
      Let Td2291.5864 : Float =
        Let Td2290.5871 : Float =
          Let Td2287.5872 : Float =
            Let Ti2286.5875 : Int =
              Int(0)
            In
            p.2632.(Ti2286.5875)          In
          Let Td2289.5873 : Float =
            Let Ti2288.5874 : Int =
              Int(0)
            In
            q.2633.(Ti2288.5874)          In
          Td2287.5872 -. Td2289.5873
        In
        fsqr.2531 Td2290.5871 
      In
      Let Td2297.5865 : Float =
        Let Td2296.5866 : Float =
          Let Td2293.5867 : Float =
            Let Ti2292.5870 : Int =
              Int(1)
            In
            p.2632.(Ti2292.5870)          In
          Let Td2295.5868 : Float =
            Let Ti2294.5869 : Int =
              Int(1)
            In
            q.2633.(Ti2294.5869)          In
          Td2293.5867 -. Td2295.5868
        In
        fsqr.2531 Td2296.5866 
      In
      Td2291.5864 +. Td2297.5865
    In
    Let Td2304.5858 : Float =
      Let Td2303.5859 : Float =
        Let Td2300.5860 : Float =
          Let Ti2299.5863 : Int =
            Int(2)
          In
          p.2632.(Ti2299.5863)        In
        Let Td2302.5861 : Float =
          Let Ti2301.5862 : Int =
            Int(2)
          In
          q.2633.(Ti2301.5862)        In
        Td2300.5860 -. Td2302.5861
      In
      fsqr.2531 Td2303.5859 
    In
    Td2298.5857 +. Td2304.5858
  In
  Let Rec vecunit.2634 : Array(Float) -> Unit ( v.2635 ) =
    Let il.5829 : Float =
      Let Td2261.5844 : Float =
        Float(1.000000)
      In
      Let Td2273.5845 : Float =
        Let Td2272.5846 : Float =
          Let Td2268.5847 : Float =
            Let Td2264.5851 : Float =
              Let Td2263.5855 : Float =
                Let Ti2262.5856 : Int =
                  Int(0)
                In
                v.2635.(Ti2262.5856)              In
              fsqr.2531 Td2263.5855 
            In
            Let Td2267.5852 : Float =
              Let Td2266.5853 : Float =
                Let Ti2265.5854 : Int =
                  Int(1)
                In
                v.2635.(Ti2265.5854)              In
              fsqr.2531 Td2266.5853 
            In
            Td2264.5851 +. Td2267.5852
          In
          Let Td2271.5848 : Float =
            Let Td2270.5849 : Float =
              Let Ti2269.5850 : Int =
                Int(2)
              In
              v.2635.(Ti2269.5850)            In
            fsqr.2531 Td2270.5849 
          In
          Td2268.5847 +. Td2271.5848
        In
        ExtFun:sqrt Td2272.5846 
      In
      Td2261.5844 /. Td2273.5845
    In
    Let Tu29.5830 : Unit =
      Let Ti2274.5840 : Int =
        Int(0)
      In
      Let Td2277.5841 : Float =
        Let Td2276.5842 : Float =
          Let Ti2275.5843 : Int =
            Int(0)
          In
          v.2635.(Ti2275.5843)        In
        Td2276.5842 *. il.5829
      In
      v.2635.(Ti2274.5840) <- Td2277.5841    In
    Let Tu28.5831 : Unit =
      Let Ti2278.5836 : Int =
        Int(1)
      In
      Let Td2281.5837 : Float =
        Let Td2280.5838 : Float =
          Let Ti2279.5839 : Int =
            Int(1)
          In
          v.2635.(Ti2279.5839)        In
        Td2280.5838 *. il.5829
      In
      v.2635.(Ti2278.5836) <- Td2281.5837    In
    Let Ti2282.5832 : Int =
      Int(2)
    In
    Let Td2285.5833 : Float =
      Let Td2284.5834 : Float =
        Let Ti2283.5835 : Int =
          Int(2)
        In
        v.2635.(Ti2283.5835)      In
      Td2284.5834 *. il.5829
    In
    v.2635.(Ti2282.5832) <- Td2285.5833  In
  Let Rec vecunit_sgn.2636 : Array(Float) -> Bool -> Unit ( v.2637 inv.2638 ) =
    Let l.5799 : Float =
      Let Td2245.5818 : Float =
        Let Td2241.5819 : Float =
          Let Td2237.5823 : Float =
            Let Td2236.5827 : Float =
              Let Ti2235.5828 : Int =
                Int(0)
              In
              v.2637.(Ti2235.5828)            In
            fsqr.2531 Td2236.5827 
          In
          Let Td2240.5824 : Float =
            Let Td2239.5825 : Float =
              Let Ti2238.5826 : Int =
                Int(1)
              In
              v.2637.(Ti2238.5826)            In
            fsqr.2531 Td2239.5825 
          In
          Td2237.5823 +. Td2240.5824
        In
        Let Td2244.5820 : Float =
          Let Td2243.5821 : Float =
            Let Ti2242.5822 : Int =
              Int(2)
            In
            v.2637.(Ti2242.5822)          In
          fsqr.2531 Td2243.5821 
        In
        Td2241.5819 +. Td2244.5820
      In
      ExtFun:sqrt Td2245.5818 
    In
    Let il.5800 : Float =
      Let Tb2248.5815 : Bool =
        fiszero.2518 l.5799 
      In
      If 0 = Tb2248.5815 Then
        If 0 = inv.2638 Then
          Let Td2246.5817 : Float =
            Float(1.000000)
          In
          Td2246.5817 /. l.5799
        Else
          Let Td2247.5816 : Float =
            Float(-1.000000)
          In
          Td2247.5816 /. l.5799
      Else
        Float(1.000000)
    In
    Let Tu31.5801 : Unit =
      Let Ti2249.5811 : Int =
        Int(0)
      In
      Let Td2252.5812 : Float =
        Let Td2251.5813 : Float =
          Let Ti2250.5814 : Int =
            Int(0)
          In
          v.2637.(Ti2250.5814)        In
        Td2251.5813 *. il.5800
      In
      v.2637.(Ti2249.5811) <- Td2252.5812    In
    Let Tu30.5802 : Unit =
      Let Ti2253.5807 : Int =
        Int(1)
      In
      Let Td2256.5808 : Float =
        Let Td2255.5809 : Float =
          Let Ti2254.5810 : Int =
            Int(1)
          In
          v.2637.(Ti2254.5810)        In
        Td2255.5809 *. il.5800
      In
      v.2637.(Ti2253.5807) <- Td2256.5808    In
    Let Ti2257.5803 : Int =
      Int(2)
    In
    Let Td2260.5804 : Float =
      Let Td2259.5805 : Float =
        Let Ti2258.5806 : Int =
          Int(2)
        In
        v.2637.(Ti2258.5806)      In
      Td2259.5805 *. il.5800
    In
    v.2637.(Ti2257.5803) <- Td2260.5804  In
  Let Rec veciprod.2639 : Array(Float) -> Array(Float) -> Float ( v.2640 w.2641 ) =
    Let Td2229.5783 : Float =
      Let Td2223.5789 : Float =
        Let Td2220.5795 : Float =
          Let Ti2219.5798 : Int =
            Int(0)
          In
          v.2640.(Ti2219.5798)        In
        Let Td2222.5796 : Float =
          Let Ti2221.5797 : Int =
            Int(0)
          In
          w.2641.(Ti2221.5797)        In
        Td2220.5795 *. Td2222.5796
      In
      Let Td2228.5790 : Float =
        Let Td2225.5791 : Float =
          Let Ti2224.5794 : Int =
            Int(1)
          In
          v.2640.(Ti2224.5794)        In
        Let Td2227.5792 : Float =
          Let Ti2226.5793 : Int =
            Int(1)
          In
          w.2641.(Ti2226.5793)        In
        Td2225.5791 *. Td2227.5792
      In
      Td2223.5789 +. Td2228.5790
    In
    Let Td2234.5784 : Float =
      Let Td2231.5785 : Float =
        Let Ti2230.5788 : Int =
          Int(2)
        In
        v.2640.(Ti2230.5788)      In
      Let Td2233.5786 : Float =
        Let Ti2232.5787 : Int =
          Int(2)
        In
        w.2641.(Ti2232.5787)      In
      Td2231.5785 *. Td2233.5786
    In
    Td2229.5783 +. Td2234.5784
  In
  Let Rec veciprod2.2642 : Array(Float) -> Float -> Float -> Float -> Float ( v.2643 w0.2644 w1.2645 w2.2646 ) =
    Let Td2215.5773 : Float =
      Let Td2211.5777 : Float =
        Let Td2210.5781 : Float =
          Let Ti2209.5782 : Int =
            Int(0)
          In
          v.2643.(Ti2209.5782)        In
        Td2210.5781 *. w0.2644
      In
      Let Td2214.5778 : Float =
        Let Td2213.5779 : Float =
          Let Ti2212.5780 : Int =
            Int(1)
          In
          v.2643.(Ti2212.5780)        In
        Td2213.5779 *. w1.2645
      In
      Td2211.5777 +. Td2214.5778
    In
    Let Td2218.5774 : Float =
      Let Td2217.5775 : Float =
        Let Ti2216.5776 : Int =
          Int(2)
        In
        v.2643.(Ti2216.5776)      In
      Td2217.5775 *. w2.2646
    In
    Td2215.5773 +. Td2218.5774
  In
  Let Rec vecaccum.2647 : Array(Float) -> Float -> Array(Float) -> Unit ( dest.2648 scale.2649 v.2650 ) =
    Let Tu33.5750 : Unit =
      Let Ti2188.5766 : Int =
        Int(0)
      In
      Let Td2194.5767 : Float =
        Let Td2190.5768 : Float =
          Let Ti2189.5772 : Int =
            Int(0)
          In
          dest.2648.(Ti2189.5772)        In
        Let Td2193.5769 : Float =
          Let Td2192.5770 : Float =
            Let Ti2191.5771 : Int =
              Int(0)
            In
            v.2650.(Ti2191.5771)          In
          scale.2649 *. Td2192.5770
        In
        Td2190.5768 +. Td2193.5769
      In
      dest.2648.(Ti2188.5766) <- Td2194.5767    In
    Let Tu32.5751 : Unit =
      Let Ti2195.5759 : Int =
        Int(1)
      In
      Let Td2201.5760 : Float =
        Let Td2197.5761 : Float =
          Let Ti2196.5765 : Int =
            Int(1)
          In
          dest.2648.(Ti2196.5765)        In
        Let Td2200.5762 : Float =
          Let Td2199.5763 : Float =
            Let Ti2198.5764 : Int =
              Int(1)
            In
            v.2650.(Ti2198.5764)          In
          scale.2649 *. Td2199.5763
        In
        Td2197.5761 +. Td2200.5762
      In
      dest.2648.(Ti2195.5759) <- Td2201.5760    In
    Let Ti2202.5752 : Int =
      Int(2)
    In
    Let Td2208.5753 : Float =
      Let Td2204.5754 : Float =
        Let Ti2203.5758 : Int =
          Int(2)
        In
        dest.2648.(Ti2203.5758)      In
      Let Td2207.5755 : Float =
        Let Td2206.5756 : Float =
          Let Ti2205.5757 : Int =
            Int(2)
          In
          v.2650.(Ti2205.5757)        In
        scale.2649 *. Td2206.5756
      In
      Td2204.5754 +. Td2207.5755
    In
    dest.2648.(Ti2202.5752) <- Td2208.5753  In
  Let Rec vecadd.2651 : Array(Float) -> Array(Float) -> Unit ( dest.2652 v.2653 ) =
    Let Tu35.5730 : Unit =
      Let Ti2170.5744 : Int =
        Int(0)
      In
      Let Td2175.5745 : Float =
        Let Td2172.5746 : Float =
          Let Ti2171.5749 : Int =
            Int(0)
          In
          dest.2652.(Ti2171.5749)        In
        Let Td2174.5747 : Float =
          Let Ti2173.5748 : Int =
            Int(0)
          In
          v.2653.(Ti2173.5748)        In
        Td2172.5746 +. Td2174.5747
      In
      dest.2652.(Ti2170.5744) <- Td2175.5745    In
    Let Tu34.5731 : Unit =
      Let Ti2176.5738 : Int =
        Int(1)
      In
      Let Td2181.5739 : Float =
        Let Td2178.5740 : Float =
          Let Ti2177.5743 : Int =
            Int(1)
          In
          dest.2652.(Ti2177.5743)        In
        Let Td2180.5741 : Float =
          Let Ti2179.5742 : Int =
            Int(1)
          In
          v.2653.(Ti2179.5742)        In
        Td2178.5740 +. Td2180.5741
      In
      dest.2652.(Ti2176.5738) <- Td2181.5739    In
    Let Ti2182.5732 : Int =
      Int(2)
    In
    Let Td2187.5733 : Float =
      Let Td2184.5734 : Float =
        Let Ti2183.5737 : Int =
          Int(2)
        In
        dest.2652.(Ti2183.5737)      In
      Let Td2186.5735 : Float =
        Let Ti2185.5736 : Int =
          Int(2)
        In
        v.2653.(Ti2185.5736)      In
      Td2184.5734 +. Td2186.5735
    In
    dest.2652.(Ti2182.5732) <- Td2187.5733  In
  Let Rec vecmul.2654 : Array(Float) -> Array(Float) -> Unit ( dest.2655 v.2656 ) =
    Let Tu37.5710 : Unit =
      Let Ti2152.5724 : Int =
        Int(0)
      In
      Let Td2157.5725 : Float =
        Let Td2154.5726 : Float =
          Let Ti2153.5729 : Int =
            Int(0)
          In
          dest.2655.(Ti2153.5729)        In
        Let Td2156.5727 : Float =
          Let Ti2155.5728 : Int =
            Int(0)
          In
          v.2656.(Ti2155.5728)        In
        Td2154.5726 *. Td2156.5727
      In
      dest.2655.(Ti2152.5724) <- Td2157.5725    In
    Let Tu36.5711 : Unit =
      Let Ti2158.5718 : Int =
        Int(1)
      In
      Let Td2163.5719 : Float =
        Let Td2160.5720 : Float =
          Let Ti2159.5723 : Int =
            Int(1)
          In
          dest.2655.(Ti2159.5723)        In
        Let Td2162.5721 : Float =
          Let Ti2161.5722 : Int =
            Int(1)
          In
          v.2656.(Ti2161.5722)        In
        Td2160.5720 *. Td2162.5721
      In
      dest.2655.(Ti2158.5718) <- Td2163.5719    In
    Let Ti2164.5712 : Int =
      Int(2)
    In
    Let Td2169.5713 : Float =
      Let Td2166.5714 : Float =
        Let Ti2165.5717 : Int =
          Int(2)
        In
        dest.2655.(Ti2165.5717)      In
      Let Td2168.5715 : Float =
        Let Ti2167.5716 : Int =
          Int(2)
        In
        v.2656.(Ti2167.5716)      In
      Td2166.5714 *. Td2168.5715
    In
    dest.2655.(Ti2164.5712) <- Td2169.5713  In
  Let Rec vecscale.2657 : Array(Float) -> Float -> Unit ( dest.2658 scale.2659 ) =
    Let Tu39.5696 : Unit =
      Let Ti2140.5706 : Int =
        Int(0)
      In
      Let Td2143.5707 : Float =
        Let Td2142.5708 : Float =
          Let Ti2141.5709 : Int =
            Int(0)
          In
          dest.2658.(Ti2141.5709)        In
        Td2142.5708 *. scale.2659
      In
      dest.2658.(Ti2140.5706) <- Td2143.5707    In
    Let Tu38.5697 : Unit =
      Let Ti2144.5702 : Int =
        Int(1)
      In
      Let Td2147.5703 : Float =
        Let Td2146.5704 : Float =
          Let Ti2145.5705 : Int =
            Int(1)
          In
          dest.2658.(Ti2145.5705)        In
        Td2146.5704 *. scale.2659
      In
      dest.2658.(Ti2144.5702) <- Td2147.5703    In
    Let Ti2148.5698 : Int =
      Int(2)
    In
    Let Td2151.5699 : Float =
      Let Td2150.5700 : Float =
        Let Ti2149.5701 : Int =
          Int(2)
        In
        dest.2658.(Ti2149.5701)      In
      Td2150.5700 *. scale.2659
    In
    dest.2658.(Ti2148.5698) <- Td2151.5699  In
  Let Rec vecaccumv.2660 : Array(Float) -> Array(Float) -> Array(Float) -> Unit ( dest.2661 v.2662 w.2663 ) =
    Let Tu41.5667 : Unit =
      Let Ti2113.5687 : Int =
        Int(0)
      In
      Let Td2121.5688 : Float =
        Let Td2115.5689 : Float =
          Let Ti2114.5695 : Int =
            Int(0)
          In
          dest.2661.(Ti2114.5695)        In
        Let Td2120.5690 : Float =
          Let Td2117.5691 : Float =
            Let Ti2116.5694 : Int =
              Int(0)
            In
            v.2662.(Ti2116.5694)          In
          Let Td2119.5692 : Float =
            Let Ti2118.5693 : Int =
              Int(0)
            In
            w.2663.(Ti2118.5693)          In
          Td2117.5691 *. Td2119.5692
        In
        Td2115.5689 +. Td2120.5690
      In
      dest.2661.(Ti2113.5687) <- Td2121.5688    In
    Let Tu40.5668 : Unit =
      Let Ti2122.5678 : Int =
        Int(1)
      In
      Let Td2130.5679 : Float =
        Let Td2124.5680 : Float =
          Let Ti2123.5686 : Int =
            Int(1)
          In
          dest.2661.(Ti2123.5686)        In
        Let Td2129.5681 : Float =
          Let Td2126.5682 : Float =
            Let Ti2125.5685 : Int =
              Int(1)
            In
            v.2662.(Ti2125.5685)          In
          Let Td2128.5683 : Float =
            Let Ti2127.5684 : Int =
              Int(1)
            In
            w.2663.(Ti2127.5684)          In
          Td2126.5682 *. Td2128.5683
        In
        Td2124.5680 +. Td2129.5681
      In
      dest.2661.(Ti2122.5678) <- Td2130.5679    In
    Let Ti2131.5669 : Int =
      Int(2)
    In
    Let Td2139.5670 : Float =
      Let Td2133.5671 : Float =
        Let Ti2132.5677 : Int =
          Int(2)
        In
        dest.2661.(Ti2132.5677)      In
      Let Td2138.5672 : Float =
        Let Td2135.5673 : Float =
          Let Ti2134.5676 : Int =
            Int(2)
          In
          v.2662.(Ti2134.5676)        In
        Let Td2137.5674 : Float =
          Let Ti2136.5675 : Int =
            Int(2)
          In
          w.2663.(Ti2136.5675)        In
        Td2135.5673 *. Td2137.5674
      In
      Td2133.5671 +. Td2138.5672
    In
    dest.2661.(Ti2131.5669) <- Td2139.5670  In
  Let Rec o_texturetype.2664 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Int ( m.2665 ) =
    Let (m_tex.5656 : Int, xm_shape.5657 : Int, xm_surface.5658 : Int, xm_isrot.5659 : Int, xm_abc.5660 : Array(Float), xm_xyz.5661 : Array(Float), xm_invert.5662 : Bool, xm_surfparams.5663 : Array(Float), xm_color.5664 : Array(Float), xm_rot123.5665 : Array(Float)xm_ctbl.5666 : Array(Float)) = m.2665
    In
    Var(m_tex.5656)
  In
  Let Rec o_form.2666 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Int ( m.2667 ) =
    Let (xm_tex.5645 : Int, m_shape.5646 : Int, xm_surface.5647 : Int, xm_isrot.5648 : Int, xm_abc.5649 : Array(Float), xm_xyz.5650 : Array(Float), xm_invert.5651 : Bool, xm_surfparams.5652 : Array(Float), xm_color.5653 : Array(Float), xm_rot123.5654 : Array(Float)xm_ctbl.5655 : Array(Float)) = m.2667
    In
    Var(m_shape.5646)
  In
  Let Rec o_reflectiontype.2668 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Int ( m.2669 ) =
    Let (xm_tex.5634 : Int, xm_shape.5635 : Int, m_surface.5636 : Int, xm_isrot.5637 : Int, xm_abc.5638 : Array(Float), xm_xyz.5639 : Array(Float), xm_invert.5640 : Bool, xm_surfparams.5641 : Array(Float), xm_color.5642 : Array(Float), xm_rot123.5643 : Array(Float)xm_ctbl.5644 : Array(Float)) = m.2669
    In
    Var(m_surface.5636)
  In
  Let Rec o_isinvert.2670 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Bool ( m.2671 ) =
    Let (xm_tex.5623 : Int, xm_shape.5624 : Int, xm_surface.5625 : Int, xm_isrot.5626 : Int, xm_abc.5627 : Array(Float), xm_xyz.5628 : Array(Float), m_invert.5629 : Bool, xm_surfparams.5630 : Array(Float), xm_color.5631 : Array(Float), xm_rot123.5632 : Array(Float)xm_ctbl.5633 : Array(Float)) = m.2671
    In
    Var(m_invert.5629)
  In
  Let Rec o_isrot.2672 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Int ( m.2673 ) =
    Let (xm_tex.5612 : Int, xm_shape.5613 : Int, xm_surface.5614 : Int, m_isrot.5615 : Int, xm_abc.5616 : Array(Float), xm_xyz.5617 : Array(Float), xm_invert.5618 : Bool, xm_surfparams.5619 : Array(Float), xm_color.5620 : Array(Float), xm_rot123.5621 : Array(Float)xm_ctbl.5622 : Array(Float)) = m.2673
    In
    Var(m_isrot.5615)
  In
  Let Rec o_param_a.2674 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m.2675 ) =
    Let (xm_tex.5600 : Int, xm_shape.5601 : Int, xm_surface.5602 : Int, xm_isrot.5603 : Int, m_abc.5604 : Array(Float), xm_xyz.5605 : Array(Float), xm_invert.5606 : Bool, xm_surfparams.5607 : Array(Float), xm_color.5608 : Array(Float), xm_rot123.5609 : Array(Float)xm_ctbl.5610 : Array(Float)) = m.2675
    In
    Let Ti2112.5611 : Int =
      Int(0)
    In
    m_abc.5604.(Ti2112.5611)  In
  Let Rec o_param_b.2676 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m.2677 ) =
    Let (xm_tex.5588 : Int, xm_shape.5589 : Int, xm_surface.5590 : Int, xm_isrot.5591 : Int, m_abc.5592 : Array(Float), xm_xyz.5593 : Array(Float), xm_invert.5594 : Bool, xm_surfparams.5595 : Array(Float), xm_color.5596 : Array(Float), xm_rot123.5597 : Array(Float)xm_ctbl.5598 : Array(Float)) = m.2677
    In
    Let Ti2111.5599 : Int =
      Int(1)
    In
    m_abc.5592.(Ti2111.5599)  In
  Let Rec o_param_c.2678 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m.2679 ) =
    Let (xm_tex.5576 : Int, xm_shape.5577 : Int, xm_surface.5578 : Int, xm_isrot.5579 : Int, m_abc.5580 : Array(Float), xm_xyz.5581 : Array(Float), xm_invert.5582 : Bool, xm_surfparams.5583 : Array(Float), xm_color.5584 : Array(Float), xm_rot123.5585 : Array(Float)xm_ctbl.5586 : Array(Float)) = m.2679
    In
    Let Ti2110.5587 : Int =
      Int(2)
    In
    m_abc.5580.(Ti2110.5587)  In
  Let Rec o_param_abc.2680 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) ( m.2681 ) =
    Let (xm_tex.5565 : Int, xm_shape.5566 : Int, xm_surface.5567 : Int, xm_isrot.5568 : Int, m_abc.5569 : Array(Float), xm_xyz.5570 : Array(Float), xm_invert.5571 : Bool, xm_surfparams.5572 : Array(Float), xm_color.5573 : Array(Float), xm_rot123.5574 : Array(Float)xm_ctbl.5575 : Array(Float)) = m.2681
    In
    Var(m_abc.5569)
  In
  Let Rec o_param_x.2682 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m.2683 ) =
    Let (xm_tex.5553 : Int, xm_shape.5554 : Int, xm_surface.5555 : Int, xm_isrot.5556 : Int, xm_abc.5557 : Array(Float), m_xyz.5558 : Array(Float), xm_invert.5559 : Bool, xm_surfparams.5560 : Array(Float), xm_color.5561 : Array(Float), xm_rot123.5562 : Array(Float)xm_ctbl.5563 : Array(Float)) = m.2683
    In
    Let Ti2109.5564 : Int =
      Int(0)
    In
    m_xyz.5558.(Ti2109.5564)  In
  Let Rec o_param_y.2684 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m.2685 ) =
    Let (xm_tex.5541 : Int, xm_shape.5542 : Int, xm_surface.5543 : Int, xm_isrot.5544 : Int, xm_abc.5545 : Array(Float), m_xyz.5546 : Array(Float), xm_invert.5547 : Bool, xm_surfparams.5548 : Array(Float), xm_color.5549 : Array(Float), xm_rot123.5550 : Array(Float)xm_ctbl.5551 : Array(Float)) = m.2685
    In
    Let Ti2108.5552 : Int =
      Int(1)
    In
    m_xyz.5546.(Ti2108.5552)  In
  Let Rec o_param_z.2686 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m.2687 ) =
    Let (xm_tex.5529 : Int, xm_shape.5530 : Int, xm_surface.5531 : Int, xm_isrot.5532 : Int, xm_abc.5533 : Array(Float), m_xyz.5534 : Array(Float), xm_invert.5535 : Bool, xm_surfparams.5536 : Array(Float), xm_color.5537 : Array(Float), xm_rot123.5538 : Array(Float)xm_ctbl.5539 : Array(Float)) = m.2687
    In
    Let Ti2107.5540 : Int =
      Int(2)
    In
    m_xyz.5534.(Ti2107.5540)  In
  Let Rec o_diffuse.2688 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m.2689 ) =
    Let (xm_tex.5517 : Int, xm_shape.5518 : Int, xm_surface.5519 : Int, xm_isrot.5520 : Int, xm_abc.5521 : Array(Float), xm_xyz.5522 : Array(Float), xm_invert.5523 : Bool, m_surfparams.5524 : Array(Float), xm_color.5525 : Array(Float), xm_rot123.5526 : Array(Float)xm_ctbl.5527 : Array(Float)) = m.2689
    In
    Let Ti2106.5528 : Int =
      Int(0)
    In
    m_surfparams.5524.(Ti2106.5528)  In
  Let Rec o_hilight.2690 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m.2691 ) =
    Let (xm_tex.5505 : Int, xm_shape.5506 : Int, xm_surface.5507 : Int, xm_isrot.5508 : Int, xm_abc.5509 : Array(Float), xm_xyz.5510 : Array(Float), xm_invert.5511 : Bool, m_surfparams.5512 : Array(Float), xm_color.5513 : Array(Float), xm_rot123.5514 : Array(Float)xm_ctbl.5515 : Array(Float)) = m.2691
    In
    Let Ti2105.5516 : Int =
      Int(1)
    In
    m_surfparams.5512.(Ti2105.5516)  In
  Let Rec o_color_red.2692 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m.2693 ) =
    Let (xm_tex.5493 : Int, xm_shape.5494 : Int, m_surface.5495 : Int, xm_isrot.5496 : Int, xm_abc.5497 : Array(Float), xm_xyz.5498 : Array(Float), xm_invert.5499 : Bool, xm_surfparams.5500 : Array(Float), m_color.5501 : Array(Float), xm_rot123.5502 : Array(Float)xm_ctbl.5503 : Array(Float)) = m.2693
    In
    Let Ti2104.5504 : Int =
      Int(0)
    In
    m_color.5501.(Ti2104.5504)  In
  Let Rec o_color_green.2694 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m.2695 ) =
    Let (xm_tex.5481 : Int, xm_shape.5482 : Int, m_surface.5483 : Int, xm_isrot.5484 : Int, xm_abc.5485 : Array(Float), xm_xyz.5486 : Array(Float), xm_invert.5487 : Bool, xm_surfparams.5488 : Array(Float), m_color.5489 : Array(Float), xm_rot123.5490 : Array(Float)xm_ctbl.5491 : Array(Float)) = m.2695
    In
    Let Ti2103.5492 : Int =
      Int(1)
    In
    m_color.5489.(Ti2103.5492)  In
  Let Rec o_color_blue.2696 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m.2697 ) =
    Let (xm_tex.5469 : Int, xm_shape.5470 : Int, m_surface.5471 : Int, xm_isrot.5472 : Int, xm_abc.5473 : Array(Float), xm_xyz.5474 : Array(Float), xm_invert.5475 : Bool, xm_surfparams.5476 : Array(Float), m_color.5477 : Array(Float), xm_rot123.5478 : Array(Float)xm_ctbl.5479 : Array(Float)) = m.2697
    In
    Let Ti2102.5480 : Int =
      Int(2)
    In
    m_color.5477.(Ti2102.5480)  In
  Let Rec o_param_r1.2698 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m.2699 ) =
    Let (xm_tex.5457 : Int, xm_shape.5458 : Int, xm_surface.5459 : Int, xm_isrot.5460 : Int, xm_abc.5461 : Array(Float), xm_xyz.5462 : Array(Float), xm_invert.5463 : Bool, xm_surfparams.5464 : Array(Float), xm_color.5465 : Array(Float), m_rot123.5466 : Array(Float)xm_ctbl.5467 : Array(Float)) = m.2699
    In
    Let Ti2101.5468 : Int =
      Int(0)
    In
    m_rot123.5466.(Ti2101.5468)  In
  Let Rec o_param_r2.2700 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m.2701 ) =
    Let (xm_tex.5445 : Int, xm_shape.5446 : Int, xm_surface.5447 : Int, xm_isrot.5448 : Int, xm_abc.5449 : Array(Float), xm_xyz.5450 : Array(Float), xm_invert.5451 : Bool, xm_surfparams.5452 : Array(Float), xm_color.5453 : Array(Float), m_rot123.5454 : Array(Float)xm_ctbl.5455 : Array(Float)) = m.2701
    In
    Let Ti2100.5456 : Int =
      Int(1)
    In
    m_rot123.5454.(Ti2100.5456)  In
  Let Rec o_param_r3.2702 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float ( m.2703 ) =
    Let (xm_tex.5433 : Int, xm_shape.5434 : Int, xm_surface.5435 : Int, xm_isrot.5436 : Int, xm_abc.5437 : Array(Float), xm_xyz.5438 : Array(Float), xm_invert.5439 : Bool, xm_surfparams.5440 : Array(Float), xm_color.5441 : Array(Float), m_rot123.5442 : Array(Float)xm_ctbl.5443 : Array(Float)) = m.2703
    In
    Let Ti2099.5444 : Int =
      Int(2)
    In
    m_rot123.5442.(Ti2099.5444)  In
  Let Rec o_param_ctbl.2704 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) ( m.2705 ) =
    Let (xm_tex.5422 : Int, xm_shape.5423 : Int, xm_surface.5424 : Int, xm_isrot.5425 : Int, xm_abc.5426 : Array(Float), xm_xyz.5427 : Array(Float), xm_invert.5428 : Bool, xm_surfparams.5429 : Array(Float), xm_color.5430 : Array(Float), xm_rot123.5431 : Array(Float)m_ctbl.5432 : Array(Float)) = m.2705
    In
    Var(m_ctbl.5432)
  In
  Let Rec p_rgb.2706 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Float) ( pixel.2707 ) =
    Let (m_rgb.5414 : Array(Float), xm_isect_ps.5415 : Array(Array(Float)), xm_sids.5416 : Array(Int), xm_cdif.5417 : Array(Bool), xm_engy.5418 : Array(Array(Float)), xm_r20p.5419 : Array(Array(Float)), xm_gid.5420 : Array(Int)xm_nvectors.5421 : Array(Array(Float))) = pixel.2707
    In
    Var(m_rgb.5414)
  In
  Let Rec p_intersection_points.2708 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Array(Float)) ( pixel.2709 ) =
    Let (xm_rgb.5406 : Array(Float), m_isect_ps.5407 : Array(Array(Float)), xm_sids.5408 : Array(Int), xm_cdif.5409 : Array(Bool), xm_engy.5410 : Array(Array(Float)), xm_r20p.5411 : Array(Array(Float)), xm_gid.5412 : Array(Int)xm_nvectors.5413 : Array(Array(Float))) = pixel.2709
    In
    Var(m_isect_ps.5407)
  In
  Let Rec p_surface_ids.2710 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Int) ( pixel.2711 ) =
    Let (xm_rgb.5398 : Array(Float), xm_isect_ps.5399 : Array(Array(Float)), m_sids.5400 : Array(Int), xm_cdif.5401 : Array(Bool), xm_engy.5402 : Array(Array(Float)), xm_r20p.5403 : Array(Array(Float)), xm_gid.5404 : Array(Int)xm_nvectors.5405 : Array(Array(Float))) = pixel.2711
    In
    Var(m_sids.5400)
  In
  Let Rec p_calc_diffuse.2712 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Bool) ( pixel.2713 ) =
    Let (xm_rgb.5390 : Array(Float), xm_isect_ps.5391 : Array(Array(Float)), xm_sids.5392 : Array(Int), m_cdif.5393 : Array(Bool), xm_engy.5394 : Array(Array(Float)), xm_r20p.5395 : Array(Array(Float)), xm_gid.5396 : Array(Int)xm_nvectors.5397 : Array(Array(Float))) = pixel.2713
    In
    Var(m_cdif.5393)
  In
  Let Rec p_energy.2714 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Array(Float)) ( pixel.2715 ) =
    Let (xm_rgb.5382 : Array(Float), xm_isect_ps.5383 : Array(Array(Float)), xm_sids.5384 : Array(Int), xm_cdif.5385 : Array(Bool), m_engy.5386 : Array(Array(Float)), xm_r20p.5387 : Array(Array(Float)), xm_gid.5388 : Array(Int)xm_nvectors.5389 : Array(Array(Float))) = pixel.2715
    In
    Var(m_engy.5386)
  In
  Let Rec p_received_ray_20percent.2716 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Array(Float)) ( pixel.2717 ) =
    Let (xm_rgb.5374 : Array(Float), xm_isect_ps.5375 : Array(Array(Float)), xm_sids.5376 : Array(Int), xm_cdif.5377 : Array(Bool), xm_engy.5378 : Array(Array(Float)), m_r20p.5379 : Array(Array(Float)), xm_gid.5380 : Array(Int)xm_nvectors.5381 : Array(Array(Float))) = pixel.2717
    In
    Var(m_r20p.5379)
  In
  Let Rec p_group_id.2718 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int ( pixel.2719 ) =
    Let (xm_rgb.5365 : Array(Float), xm_isect_ps.5366 : Array(Array(Float)), xm_sids.5367 : Array(Int), xm_cdif.5368 : Array(Bool), xm_engy.5369 : Array(Array(Float)), xm_r20p.5370 : Array(Array(Float)), m_gid.5371 : Array(Int)xm_nvectors.5372 : Array(Array(Float))) = pixel.2719
    In
    Let Ti2098.5373 : Int =
      Int(0)
    In
    m_gid.5371.(Ti2098.5373)  In
  Let Rec p_set_group_id.2720 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit ( pixel.2721 id.2722 ) =
    Let (xm_rgb.5356 : Array(Float), xm_isect_ps.5357 : Array(Array(Float)), xm_sids.5358 : Array(Int), xm_cdif.5359 : Array(Bool), xm_engy.5360 : Array(Array(Float)), xm_r20p.5361 : Array(Array(Float)), m_gid.5362 : Array(Int)xm_nvectors.5363 : Array(Array(Float))) = pixel.2721
    In
    Let Ti2097.5364 : Int =
      Int(0)
    In
    m_gid.5362.(Ti2097.5364) <- id.2722  In
  Let Rec p_nvectors.2723 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Array(Float)) ( pixel.2724 ) =
    Let (xm_rgb.5348 : Array(Float), xm_isect_ps.5349 : Array(Array(Float)), xm_sids.5350 : Array(Int), xm_cdif.5351 : Array(Bool), xm_engy.5352 : Array(Array(Float)), xm_r20p.5353 : Array(Array(Float)), xm_gid.5354 : Array(Int)m_nvectors.5355 : Array(Array(Float))) = pixel.2724
    In
    Var(m_nvectors.5355)
  In
  Let Rec d_vec.2725 : Array(Float) * Array(Array(Float)) -> Array(Float) ( d.2726 ) =
    Let (m_vec.5346 : Array(Float)xm_const.5347 : Array(Array(Float))) = d.2726
    In
    Var(m_vec.5346)
  In
  Let Rec d_const.2727 : Array(Float) * Array(Array(Float)) -> Array(Array(Float)) ( d.2728 ) =
    Let (dm_vec.5344 : Array(Float)m_const.5345 : Array(Array(Float))) = d.2728
    In
    Var(m_const.5345)
  In
  Let Rec r_surface_id.2729 : Int * Array(Float) * Array(Array(Float)) * Float -> Int ( r.2730 ) =
    Let (m_sid.5341 : Int, xm_dvec.5342 : Array(Float) * Array(Array(Float))xm_br.5343 : Float) = r.2730
    In
    Var(m_sid.5341)
  In
  Let Rec r_dvec.2731 : Int * Array(Float) * Array(Array(Float)) * Float -> Array(Float) * Array(Array(Float)) ( r.2732 ) =
    Let (xm_sid.5338 : Int, m_dvec.5339 : Array(Float) * Array(Array(Float))xm_br.5340 : Float) = r.2732
    In
    Var(m_dvec.5339)
  In
  Let Rec r_bright.2733 : Int * Array(Float) * Array(Array(Float)) * Float -> Float ( r.2734 ) =
    Let (xm_sid.5335 : Int, xm_dvec.5336 : Array(Float) * Array(Array(Float))m_br.5337 : Float) = r.2734
    In
    Var(m_br.5337)
  In
  Let Rec rad.2735 : Float -> Float ( x.2736 ) =
    Let Td2096.5334 : Float =
      Float(0.017453)
    In
    x.2736 *. Td2096.5334
  In
  Let Rec read_screen_settings.2737 : Unit -> Unit ( Tu42.2738 ) =
    Let Tu56.5259 : Unit =
      Let Ti2041.5331 : Int =
        Int(0)
      In
      Let Td2043.5332 : Float =
        Let Tu2042.5333 : Unit =
          ()
        In
        read_float.2568 Tu2042.5333 
      In
      screen.2579.(Ti2041.5331) <- Td2043.5332    In
    Let Tu55.5260 : Unit =
      Let Ti2044.5328 : Int =
        Int(1)
      In
      Let Td2046.5329 : Float =
        Let Tu2045.5330 : Unit =
          ()
        In
        read_float.2568 Tu2045.5330 
      In
      screen.2579.(Ti2044.5328) <- Td2046.5329    In
    Let Tu54.5261 : Unit =
      Let Ti2047.5325 : Int =
        Int(2)
      In
      Let Td2049.5326 : Float =
        Let Tu2048.5327 : Unit =
          ()
        In
        read_float.2568 Tu2048.5327 
      In
      screen.2579.(Ti2047.5325) <- Td2049.5326    In
    Let v1.5262 : Float =
      Let Td2051.5323 : Float =
        Let Tu2050.5324 : Unit =
          ()
        In
        read_float.2568 Tu2050.5324 
      In
      rad.2735 Td2051.5323 
    In
    Let cos_v1.5263 : Float =
      cos.2548 v1.5262 
    In
    Let sin_v1.5264 : Float =
      sin.2546 v1.5262 
    In
    Let v2.5265 : Float =
      Let Td2053.5321 : Float =
        Let Tu2052.5322 : Unit =
          ()
        In
        read_float.2568 Tu2052.5322 
      In
      rad.2735 Td2053.5321 
    In
    Let cos_v2.5266 : Float =
      cos.2548 v2.5265 
    In
    Let sin_v2.5267 : Float =
      sin.2546 v2.5265 
    In
    Let Tu53.5268 : Unit =
      Let Ti2054.5317 : Int =
        Int(0)
      In
      Let Td2057.5318 : Float =
        Let Td2055.5319 : Float =
          cos_v1.5263 *. sin_v2.5267
        In
        Let Td2056.5320 : Float =
          Float(200.000000)
        In
        Td2055.5319 *. Td2056.5320
      In
      screenz_dir.2601.(Ti2054.5317) <- Td2057.5318    In
    Let Tu52.5269 : Unit =
      Let Ti2058.5314 : Int =
        Int(1)
      In
      Let Td2060.5315 : Float =
        Let Td2059.5316 : Float =
          Float(-200.000000)
        In
        sin_v1.5264 *. Td2059.5316
      In
      screenz_dir.2601.(Ti2058.5314) <- Td2060.5315    In
    Let Tu51.5270 : Unit =
      Let Ti2061.5310 : Int =
        Int(2)
      In
      Let Td2064.5311 : Float =
        Let Td2062.5312 : Float =
          cos_v1.5263 *. cos_v2.5266
        In
        Let Td2063.5313 : Float =
          Float(200.000000)
        In
        Td2062.5312 *. Td2063.5313
      In
      screenz_dir.2601.(Ti2061.5310) <- Td2064.5311    In
    Let Tu50.5271 : Unit =
      Let Ti2065.5309 : Int =
        Int(0)
      In
      screenx_dir.2599.(Ti2065.5309) <- cos_v2.5266    In
    Let Tu49.5272 : Unit =
      Let Ti2066.5307 : Int =
        Int(1)
      In
      Let Td2067.5308 : Float =
        Float(0.000000)
      In
      screenx_dir.2599.(Ti2066.5307) <- Td2067.5308    In
    Let Tu48.5273 : Unit =
      Let Ti2068.5305 : Int =
        Int(2)
      In
      Let Td2069.5306 : Float =
        fneg.2527 sin_v2.5267 
      In
      screenx_dir.2599.(Ti2068.5305) <- Td2069.5306    In
    Let Tu47.5274 : Unit =
      Let Ti2070.5302 : Int =
        Int(0)
      In
      Let Td2072.5303 : Float =
        Let Td2071.5304 : Float =
          fneg.2527 sin_v1.5264 
        In
        Td2071.5304 *. sin_v2.5267
      In
      screeny_dir.2600.(Ti2070.5302) <- Td2072.5303    In
    Let Tu46.5275 : Unit =
      Let Ti2073.5300 : Int =
        Int(1)
      In
      Let Td2074.5301 : Float =
        fneg.2527 cos_v1.5263 
      In
      screeny_dir.2600.(Ti2073.5300) <- Td2074.5301    In
    Let Tu45.5276 : Unit =
      Let Ti2075.5297 : Int =
        Int(2)
      In
      Let Td2077.5298 : Float =
        Let Td2076.5299 : Float =
          fneg.2527 sin_v1.5264 
        In
        Td2076.5299 *. cos_v2.5266
      In
      screeny_dir.2600.(Ti2075.5297) <- Td2077.5298    In
    Let Tu44.5277 : Unit =
      Let Ti2078.5291 : Int =
        Int(0)
      In
      Let Td2083.5292 : Float =
        Let Td2080.5293 : Float =
          Let Ti2079.5296 : Int =
            Int(0)
          In
          screen.2579.(Ti2079.5296)        In
        Let Td2082.5294 : Float =
          Let Ti2081.5295 : Int =
            Int(0)
          In
          screenz_dir.2601.(Ti2081.5295)        In
        Td2080.5293 -. Td2082.5294
      In
      viewpoint.2580.(Ti2078.5291) <- Td2083.5292    In
    Let Tu43.5278 : Unit =
      Let Ti2084.5285 : Int =
        Int(1)
      In
      Let Td2089.5286 : Float =
        Let Td2086.5287 : Float =
          Let Ti2085.5290 : Int =
            Int(1)
          In
          screen.2579.(Ti2085.5290)        In
        Let Td2088.5288 : Float =
          Let Ti2087.5289 : Int =
            Int(1)
          In
          screenz_dir.2601.(Ti2087.5289)        In
        Td2086.5287 -. Td2088.5288
      In
      viewpoint.2580.(Ti2084.5285) <- Td2089.5286    In
    Let Ti2090.5279 : Int =
      Int(2)
    In
    Let Td2095.5280 : Float =
      Let Td2092.5281 : Float =
        Let Ti2091.5284 : Int =
          Int(2)
        In
        screen.2579.(Ti2091.5284)      In
      Let Td2094.5282 : Float =
        Let Ti2093.5283 : Int =
          Int(2)
        In
        screenz_dir.2601.(Ti2093.5283)      In
      Td2092.5281 -. Td2094.5282
    In
    viewpoint.2580.(Ti2090.5279) <- Td2095.5280  In
  Let Rec read_light.2739 : Unit -> Unit ( Tu57.2740 ) =
    Let nl.5235 : Int =
      Let Tu2027.5258 : Unit =
        ()
      In
      read_int.2557 Tu2027.5258 
    In
    Let l1.5236 : Float =
      Let Td2029.5256 : Float =
        Let Tu2028.5257 : Unit =
          ()
        In
        read_float.2568 Tu2028.5257 
      In
      rad.2735 Td2029.5256 
    In
    Let sl1.5237 : Float =
      sin.2546 l1.5236 
    In
    Let Tu60.5238 : Unit =
      Let Ti2030.5254 : Int =
        Int(1)
      In
      Let Td2031.5255 : Float =
        fneg.2527 sl1.5237 
      In
      light.2581.(Ti2030.5254) <- Td2031.5255    In
    Let l2.5239 : Float =
      Let Td2033.5252 : Float =
        Let Tu2032.5253 : Unit =
          ()
        In
        read_float.2568 Tu2032.5253 
      In
      rad.2735 Td2033.5252 
    In
    Let cl1.5240 : Float =
      cos.2548 l1.5236 
    In
    Let sl2.5241 : Float =
      sin.2546 l2.5239 
    In
    Let Tu59.5242 : Unit =
      Let Ti2034.5250 : Int =
        Int(0)
      In
      Let Td2035.5251 : Float =
        cl1.5240 *. sl2.5241
      In
      light.2581.(Ti2034.5250) <- Td2035.5251    In
    Let cl2.5243 : Float =
      cos.2548 l2.5239 
    In
    Let Tu58.5244 : Unit =
      Let Ti2036.5248 : Int =
        Int(2)
      In
      Let Td2037.5249 : Float =
        cl1.5240 *. cl2.5243
      In
      light.2581.(Ti2036.5248) <- Td2037.5249    In
    Let Ti2038.5245 : Int =
      Int(0)
    In
    Let Td2040.5246 : Float =
      Let Tu2039.5247 : Unit =
        ()
      In
      read_float.2568 Tu2039.5247 
    In
    beam.2582.(Ti2038.5245) <- Td2040.5246  In
  Let Rec rotate_quadratic_matrix.2741 : Array(Float) -> Array(Float) -> Unit ( abc.2742 rot.2743 ) =
    Let cos_x.5125 : Float =
      Let Td1941.5233 : Float =
        Let Ti1940.5234 : Int =
          Int(0)
        In
        rot.2743.(Ti1940.5234)      In
      cos.2548 Td1941.5233 
    In
    Let sin_x.5126 : Float =
      Let Td1943.5231 : Float =
        Let Ti1942.5232 : Int =
          Int(0)
        In
        rot.2743.(Ti1942.5232)      In
      sin.2546 Td1943.5231 
    In
    Let cos_y.5127 : Float =
      Let Td1945.5229 : Float =
        Let Ti1944.5230 : Int =
          Int(1)
        In
        rot.2743.(Ti1944.5230)      In
      cos.2548 Td1945.5229 
    In
    Let sin_y.5128 : Float =
      Let Td1947.5227 : Float =
        Let Ti1946.5228 : Int =
          Int(1)
        In
        rot.2743.(Ti1946.5228)      In
      sin.2546 Td1947.5227 
    In
    Let cos_z.5129 : Float =
      Let Td1949.5225 : Float =
        Let Ti1948.5226 : Int =
          Int(2)
        In
        rot.2743.(Ti1948.5226)      In
      cos.2548 Td1949.5225 
    In
    Let sin_z.5130 : Float =
      Let Td1951.5223 : Float =
        Let Ti1950.5224 : Int =
          Int(2)
        In
        rot.2743.(Ti1950.5224)      In
      sin.2546 Td1951.5223 
    In
    Let m00.5131 : Float =
      cos_y.5127 *. cos_z.5129
    In
    Let m01.5132 : Float =
      Let Td1953.5220 : Float =
        Let Td1952.5222 : Float =
          sin_x.5126 *. sin_y.5128
        In
        Td1952.5222 *. cos_z.5129
      In
      Let Td1954.5221 : Float =
        cos_x.5125 *. sin_z.5130
      In
      Td1953.5220 -. Td1954.5221
    In
    Let m02.5133 : Float =
      Let Td1956.5217 : Float =
        Let Td1955.5219 : Float =
          cos_x.5125 *. sin_y.5128
        In
        Td1955.5219 *. cos_z.5129
      In
      Let Td1957.5218 : Float =
        sin_x.5126 *. sin_z.5130
      In
      Td1956.5217 +. Td1957.5218
    In
    Let m10.5134 : Float =
      cos_y.5127 *. sin_z.5130
    In
    Let m11.5135 : Float =
      Let Td1959.5214 : Float =
        Let Td1958.5216 : Float =
          sin_x.5126 *. sin_y.5128
        In
        Td1958.5216 *. sin_z.5130
      In
      Let Td1960.5215 : Float =
        cos_x.5125 *. cos_z.5129
      In
      Td1959.5214 +. Td1960.5215
    In
    Let m12.5136 : Float =
      Let Td1962.5211 : Float =
        Let Td1961.5213 : Float =
          cos_x.5125 *. sin_y.5128
        In
        Td1961.5213 *. sin_z.5130
      In
      Let Td1963.5212 : Float =
        sin_x.5126 *. cos_z.5129
      In
      Td1962.5211 -. Td1963.5212
    In
    Let m20.5137 : Float =
      fneg.2527 sin_y.5128 
    In
    Let m21.5138 : Float =
      sin_x.5126 *. cos_y.5127
    In
    Let m22.5139 : Float =
      cos_x.5125 *. cos_y.5127
    In
    Let ao.5140 : Float =
      Let Ti1964.5210 : Int =
        Int(0)
      In
      abc.2742.(Ti1964.5210)    In
    Let bo.5141 : Float =
      Let Ti1965.5209 : Int =
        Int(1)
      In
      abc.2742.(Ti1965.5209)    In
    Let co.5142 : Float =
      Let Ti1966.5208 : Int =
        Int(2)
      In
      abc.2742.(Ti1966.5208)    In
    Let Tu65.5143 : Unit =
      Let Ti1967.5199 : Int =
        Int(0)
      In
      Let Td1975.5200 : Float =
        Let Td1972.5201 : Float =
          Let Td1969.5204 : Float =
            Let Td1968.5207 : Float =
              fsqr.2531 m00.5131 
            In
            ao.5140 *. Td1968.5207
          In
          Let Td1971.5205 : Float =
            Let Td1970.5206 : Float =
              fsqr.2531 m10.5134 
            In
            bo.5141 *. Td1970.5206
          In
          Td1969.5204 +. Td1971.5205
        In
        Let Td1974.5202 : Float =
          Let Td1973.5203 : Float =
            fsqr.2531 m20.5137 
          In
          co.5142 *. Td1973.5203
        In
        Td1972.5201 +. Td1974.5202
      In
      abc.2742.(Ti1967.5199) <- Td1975.5200    In
    Let Tu64.5144 : Unit =
      Let Ti1976.5190 : Int =
        Int(1)
      In
      Let Td1984.5191 : Float =
        Let Td1981.5192 : Float =
          Let Td1978.5195 : Float =
            Let Td1977.5198 : Float =
              fsqr.2531 m01.5132 
            In
            ao.5140 *. Td1977.5198
          In
          Let Td1980.5196 : Float =
            Let Td1979.5197 : Float =
              fsqr.2531 m11.5135 
            In
            bo.5141 *. Td1979.5197
          In
          Td1978.5195 +. Td1980.5196
        In
        Let Td1983.5193 : Float =
          Let Td1982.5194 : Float =
            fsqr.2531 m21.5138 
          In
          co.5142 *. Td1982.5194
        In
        Td1981.5192 +. Td1983.5193
      In
      abc.2742.(Ti1976.5190) <- Td1984.5191    In
    Let Tu63.5145 : Unit =
      Let Ti1985.5181 : Int =
        Int(2)
      In
      Let Td1993.5182 : Float =
        Let Td1990.5183 : Float =
          Let Td1987.5186 : Float =
            Let Td1986.5189 : Float =
              fsqr.2531 m02.5133 
            In
            ao.5140 *. Td1986.5189
          In
          Let Td1989.5187 : Float =
            Let Td1988.5188 : Float =
              fsqr.2531 m12.5136 
            In
            bo.5141 *. Td1988.5188
          In
          Td1987.5186 +. Td1989.5187
        In
        Let Td1992.5184 : Float =
          Let Td1991.5185 : Float =
            fsqr.2531 m22.5139 
          In
          co.5142 *. Td1991.5185
        In
        Td1990.5183 +. Td1992.5184
      In
      abc.2742.(Ti1985.5181) <- Td1993.5182    In
    Let Tu62.5146 : Unit =
      Let Ti1994.5170 : Int =
        Int(0)
      In
      Let Td2004.5171 : Float =
        Let Td1995.5172 : Float =
          Float(2.000000)
        In
        Let Td2003.5173 : Float =
          Let Td2000.5174 : Float =
            Let Td1997.5177 : Float =
              Let Td1996.5180 : Float =
                ao.5140 *. m01.5132
              In
              Td1996.5180 *. m02.5133
            In
            Let Td1999.5178 : Float =
              Let Td1998.5179 : Float =
                bo.5141 *. m11.5135
              In
              Td1998.5179 *. m12.5136
            In
            Td1997.5177 +. Td1999.5178
          In
          Let Td2002.5175 : Float =
            Let Td2001.5176 : Float =
              co.5142 *. m21.5138
            In
            Td2001.5176 *. m22.5139
          In
          Td2000.5174 +. Td2002.5175
        In
        Td1995.5172 *. Td2003.5173
      In
      rot.2743.(Ti1994.5170) <- Td2004.5171    In
    Let Tu61.5147 : Unit =
      Let Ti2005.5159 : Int =
        Int(1)
      In
      Let Td2015.5160 : Float =
        Let Td2006.5161 : Float =
          Float(2.000000)
        In
        Let Td2014.5162 : Float =
          Let Td2011.5163 : Float =
            Let Td2008.5166 : Float =
              Let Td2007.5169 : Float =
                ao.5140 *. m00.5131
              In
              Td2007.5169 *. m02.5133
            In
            Let Td2010.5167 : Float =
              Let Td2009.5168 : Float =
                bo.5141 *. m10.5134
              In
              Td2009.5168 *. m12.5136
            In
            Td2008.5166 +. Td2010.5167
          In
          Let Td2013.5164 : Float =
            Let Td2012.5165 : Float =
              co.5142 *. m20.5137
            In
            Td2012.5165 *. m22.5139
          In
          Td2011.5163 +. Td2013.5164
        In
        Td2006.5161 *. Td2014.5162
      In
      rot.2743.(Ti2005.5159) <- Td2015.5160    In
    Let Ti2016.5148 : Int =
      Int(2)
    In
    Let Td2026.5149 : Float =
      Let Td2017.5150 : Float =
        Float(2.000000)
      In
      Let Td2025.5151 : Float =
        Let Td2022.5152 : Float =
          Let Td2019.5155 : Float =
            Let Td2018.5158 : Float =
              ao.5140 *. m00.5131
            In
            Td2018.5158 *. m01.5132
          In
          Let Td2021.5156 : Float =
            Let Td2020.5157 : Float =
              bo.5141 *. m10.5134
            In
            Td2020.5157 *. m11.5135
          In
          Td2019.5155 +. Td2021.5156
        In
        Let Td2024.5153 : Float =
          Let Td2023.5154 : Float =
            co.5142 *. m20.5137
          In
          Td2023.5154 *. m21.5138
        In
        Td2022.5152 +. Td2024.5153
      In
      Td2017.5150 *. Td2025.5151
    In
    rot.2743.(Ti2016.5148) <- Td2026.5149  In
  Let Rec read_nth_object.2744 : Int -> Bool ( n.2745 ) =
    Let texture.5003 : Int =
      Let Tu1853.5124 : Unit =
        ()
      In
      read_int.2557 Tu1853.5124 
    In
    Let Ti1939.5004 : Int =
      Let Ti1854.5123 : Int =
        Int(1)
      In
      -Ti1854.5123
    In
    If texture.5003 = Ti1939.5004 Then
      Int(0)
    Else
      Let form.5005 : Int =
        Let Tu1855.5122 : Unit =
          ()
        In
        read_int.2557 Tu1855.5122 
      In
      Let refltype.5006 : Int =
        Let Tu1856.5121 : Unit =
          ()
        In
        read_int.2557 Tu1856.5121 
      In
      Let isrot_p.5007 : Int =
        Let Tu1857.5120 : Unit =
          ()
        In
        read_int.2557 Tu1857.5120 
      In
      Let abc.5008 : Array(Float) =
        Let Ti1858.5118 : Int =
          Int(3)
        In
        Let Td1859.5119 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti1858.5118 Td1859.5119 
      In
      Let Tu84.5009 : Unit =
        Let Ti1860.5115 : Int =
          Int(0)
        In
        Let Td1862.5116 : Float =
          Let Tu1861.5117 : Unit =
            ()
          In
          read_float.2568 Tu1861.5117 
        In
        abc.5008.(Ti1860.5115) <- Td1862.5116      In
      Let Tu83.5010 : Unit =
        Let Ti1863.5112 : Int =
          Int(1)
        In
        Let Td1865.5113 : Float =
          Let Tu1864.5114 : Unit =
            ()
          In
          read_float.2568 Tu1864.5114 
        In
        abc.5008.(Ti1863.5112) <- Td1865.5113      In
      Let Tu82.5011 : Unit =
        Let Ti1866.5109 : Int =
          Int(2)
        In
        Let Td1868.5110 : Float =
          Let Tu1867.5111 : Unit =
            ()
          In
          read_float.2568 Tu1867.5111 
        In
        abc.5008.(Ti1866.5109) <- Td1868.5110      In
      Let xyz.5012 : Array(Float) =
        Let Ti1869.5107 : Int =
          Int(3)
        In
        Let Td1870.5108 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti1869.5107 Td1870.5108 
      In
      Let Tu81.5013 : Unit =
        Let Ti1871.5104 : Int =
          Int(0)
        In
        Let Td1873.5105 : Float =
          Let Tu1872.5106 : Unit =
            ()
          In
          read_float.2568 Tu1872.5106 
        In
        xyz.5012.(Ti1871.5104) <- Td1873.5105      In
      Let Tu80.5014 : Unit =
        Let Ti1874.5101 : Int =
          Int(1)
        In
        Let Td1876.5102 : Float =
          Let Tu1875.5103 : Unit =
            ()
          In
          read_float.2568 Tu1875.5103 
        In
        xyz.5012.(Ti1874.5101) <- Td1876.5102      In
      Let Tu79.5015 : Unit =
        Let Ti1877.5098 : Int =
          Int(2)
        In
        Let Td1879.5099 : Float =
          Let Tu1878.5100 : Unit =
            ()
          In
          read_float.2568 Tu1878.5100 
        In
        xyz.5012.(Ti1877.5098) <- Td1879.5099      In
      Let m_invert.5016 : Bool =
        Let Td1881.5096 : Float =
          Let Tu1880.5097 : Unit =
            ()
          In
          read_float.2568 Tu1880.5097 
        In
        fisneg.2516 Td1881.5096 
      In
      Let reflparam.5017 : Array(Float) =
        Let Ti1882.5094 : Int =
          Int(2)
        In
        Let Td1883.5095 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti1882.5094 Td1883.5095 
      In
      Let Tu78.5018 : Unit =
        Let Ti1884.5091 : Int =
          Int(0)
        In
        Let Td1886.5092 : Float =
          Let Tu1885.5093 : Unit =
            ()
          In
          read_float.2568 Tu1885.5093 
        In
        reflparam.5017.(Ti1884.5091) <- Td1886.5092      In
      Let Tu77.5019 : Unit =
        Let Ti1887.5088 : Int =
          Int(1)
        In
        Let Td1889.5089 : Float =
          Let Tu1888.5090 : Unit =
            ()
          In
          read_float.2568 Tu1888.5090 
        In
        reflparam.5017.(Ti1887.5088) <- Td1889.5089      In
      Let color.5020 : Array(Float) =
        Let Ti1890.5086 : Int =
          Int(3)
        In
        Let Td1891.5087 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti1890.5086 Td1891.5087 
      In
      Let Tu76.5021 : Unit =
        Let Ti1892.5083 : Int =
          Int(0)
        In
        Let Td1894.5084 : Float =
          Let Tu1893.5085 : Unit =
            ()
          In
          read_float.2568 Tu1893.5085 
        In
        color.5020.(Ti1892.5083) <- Td1894.5084      In
      Let Tu75.5022 : Unit =
        Let Ti1895.5080 : Int =
          Int(1)
        In
        Let Td1897.5081 : Float =
          Let Tu1896.5082 : Unit =
            ()
          In
          read_float.2568 Tu1896.5082 
        In
        color.5020.(Ti1895.5080) <- Td1897.5081      In
      Let Tu74.5023 : Unit =
        Let Ti1898.5077 : Int =
          Int(2)
        In
        Let Td1900.5078 : Float =
          Let Tu1899.5079 : Unit =
            ()
          In
          read_float.2568 Tu1899.5079 
        In
        color.5020.(Ti1898.5077) <- Td1900.5078      In
      Let rotation.5024 : Array(Float) =
        Let Ti1901.5075 : Int =
          Int(3)
        In
        Let Td1902.5076 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti1901.5075 Td1902.5076 
      In
      Let Tu73.5025 : Unit =
        If 0 = isrot_p.5007 Then
          ()
        Else
          Let Tu67.5061 : Unit =
            Let Ti1903.5071 : Int =
              Int(0)
            In
            Let Td1906.5072 : Float =
              Let Td1905.5073 : Float =
                Let Tu1904.5074 : Unit =
                  ()
                In
                read_float.2568 Tu1904.5074 
              In
              rad.2735 Td1905.5073 
            In
            rotation.5024.(Ti1903.5071) <- Td1906.5072          In
          Let Tu66.5062 : Unit =
            Let Ti1907.5067 : Int =
              Int(1)
            In
            Let Td1910.5068 : Float =
              Let Td1909.5069 : Float =
                Let Tu1908.5070 : Unit =
                  ()
                In
                read_float.2568 Tu1908.5070 
              In
              rad.2735 Td1909.5069 
            In
            rotation.5024.(Ti1907.5067) <- Td1910.5068          In
          Let Ti1911.5063 : Int =
            Int(2)
          In
          Let Td1914.5064 : Float =
            Let Td1913.5065 : Float =
              Let Tu1912.5066 : Unit =
                ()
              In
              read_float.2568 Tu1912.5066 
            In
            rad.2735 Td1913.5065 
          In
          rotation.5024.(Ti1911.5063) <- Td1914.5064      In
      Let m_invert2.5026 : Bool =
        Let Ti1915.5060 : Int =
          Int(2)
        In
        If form.5005 = Ti1915.5060 Then
          Int(1)
        Else
          Var(m_invert.5016)
      In
      Let ctbl.5027 : Array(Float) =
        Let Ti1916.5058 : Int =
          Int(4)
        In
        Let Td1917.5059 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti1916.5058 Td1917.5059 
      In
      Let obj.5028 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
        (texture.5003, form.5005, refltype.5006, isrot_p.5007, abc.5008, xyz.5012, m_invert2.5026, reflparam.5017, color.5020, rotation.5024, ctbl.5027, )
      In
      Let Tu72.5029 : Unit =
        objects.2578.(n.2745) <- obj.5028      In
      Let Tu71.5030 : Unit =
        Let Ti1938.5032 : Int =
          Int(3)
        In
        If form.5005 = Ti1938.5032 Then
          Let a.5035 : Float =
            Let Ti1918.5057 : Int =
              Int(0)
            In
            abc.5008.(Ti1918.5057)          In
          Let Tu69.5036 : Unit =
            Let Ti1919.5052 : Int =
              Int(0)
            In
            Let Td1923.5053 : Float =
              Let Tb1922.5054 : Bool =
                fiszero.2518 a.5035 
              In
              If 0 = Tb1922.5054 Then
                Let Td1920.5055 : Float =
                  sgn.2610 a.5035 
                In
                Let Td1921.5056 : Float =
                  fsqr.2531 a.5035 
                In
                Td1920.5055 /. Td1921.5056
              Else
                Float(0.000000)
            In
            abc.5008.(Ti1919.5052) <- Td1923.5053          In
          Let b.5037 : Float =
            Let Ti1924.5051 : Int =
              Int(1)
            In
            abc.5008.(Ti1924.5051)          In
          Let Tu68.5038 : Unit =
            Let Ti1925.5046 : Int =
              Int(1)
            In
            Let Td1929.5047 : Float =
              Let Tb1928.5048 : Bool =
                fiszero.2518 b.5037 
              In
              If 0 = Tb1928.5048 Then
                Let Td1926.5049 : Float =
                  sgn.2610 b.5037 
                In
                Let Td1927.5050 : Float =
                  fsqr.2531 b.5037 
                In
                Td1926.5049 /. Td1927.5050
              Else
                Float(0.000000)
            In
            abc.5008.(Ti1925.5046) <- Td1929.5047          In
          Let c.5039 : Float =
            Let Ti1930.5045 : Int =
              Int(2)
            In
            abc.5008.(Ti1930.5045)          In
          Let Ti1931.5040 : Int =
            Int(2)
          In
          Let Td1935.5041 : Float =
            Let Tb1934.5042 : Bool =
              fiszero.2518 c.5039 
            In
            If 0 = Tb1934.5042 Then
              Let Td1932.5043 : Float =
                sgn.2610 c.5039 
              In
              Let Td1933.5044 : Float =
                fsqr.2531 c.5039 
              In
              Td1932.5043 /. Td1933.5044
            Else
              Float(0.000000)
          In
          abc.5008.(Ti1931.5040) <- Td1935.5041        Else
          Let Ti1937.5033 : Int =
            Int(2)
          In
          If form.5005 = Ti1937.5033 Then
            Let Ti1936.5034 : Int =
              If 0 = m_invert.5016 Then
                Int(1)
              Else
                Int(0)
            In
            vecunit_sgn.2636 abc.5008 Ti1936.5034 
          Else
            ()
      In
      Let Tu70.5031 : Unit =
        If 0 = isrot_p.5007 Then
          ()
        Else
          rotate_quadratic_matrix.2741 abc.5008 rotation.5024 
      In
      Int(1)
  In
  Let Rec read_object.2746 : Int -> Unit ( n.2747 ) =
    Let Ti1852.4998 : Int =
      Int(60)
    In
    If Ti1852.4998 <= n.2747 Then
      ()
    Else
      Let Tb1851.4999 : Bool =
        read_nth_object.2744 n.2747 
      In
      If 0 = Tb1851.4999 Then
        Let Ti1848.5002 : Int =
          Int(0)
        In
        n_objects.2577.(Ti1848.5002) <- n.2747      Else
        Let Ti1850.5000 : Int =
          Let Ti1849.5001 : Int =
            Int(1)
          In
          n.2747 + Ti1849.5001
        In
        read_object.2746 Ti1850.5000 
  In
  Let Rec read_all_object.2748 : Unit -> Unit ( Tu85.2749 ) =
    Let Ti1847.4997 : Int =
      Int(0)
    In
    read_object.2746 Ti1847.4997 
  In
  Let Rec read_net_item.2750 : Int -> Array(Int) ( length.2751 ) =
    Let item.4985 : Int =
      Let Tu1838.4996 : Unit =
        ()
      In
      read_int.2557 Tu1838.4996 
    In
    Let Ti1846.4986 : Int =
      Let Ti1839.4995 : Int =
        Int(1)
      In
      -Ti1839.4995
    In
    If item.4985 = Ti1846.4986 Then
      Let Ti1841.4991 : Int =
        Let Ti1840.4994 : Int =
          Int(1)
        In
        length.2751 + Ti1840.4994
      In
      Let Ti1843.4992 : Int =
        Let Ti1842.4993 : Int =
          Int(1)
        In
        -Ti1842.4993
      In
      ExtFun:create_array Ti1841.4991 Ti1843.4992 
    Else
      Let v.4987 : Array(Int) =
        Let Ti1845.4989 : Int =
          Let Ti1844.4990 : Int =
            Int(1)
          In
          length.2751 + Ti1844.4990
        In
        read_net_item.2750 Ti1845.4989 
      In
      Let Tu86.4988 : Unit =
        v.4987.(length.2751) <- item.4985      In
      Var(v.4987)
  In
  Let Rec read_or_network.2752 : Int -> Array(Array(Int)) ( length.2753 ) =
    Let net.4973 : Array(Int) =
      Let Ti1829.4984 : Int =
        Int(0)
      In
      read_net_item.2750 Ti1829.4984 
    In
    Let Ti1836.4974 : Int =
      Let Ti1830.4983 : Int =
        Int(0)
      In
      net.4973.(Ti1830.4983)    In
    Let Ti1837.4975 : Int =
      Let Ti1831.4982 : Int =
        Int(1)
      In
      -Ti1831.4982
    In
    If Ti1836.4974 = Ti1837.4975 Then
      Let Ti1833.4980 : Int =
        Let Ti1832.4981 : Int =
          Int(1)
        In
        length.2753 + Ti1832.4981
      In
      ExtFun:create_array Ti1833.4980 net.4973 
    Else
      Let v.4976 : Array(Array(Int)) =
        Let Ti1835.4978 : Int =
          Let Ti1834.4979 : Int =
            Int(1)
          In
          length.2753 + Ti1834.4979
        In
        read_or_network.2752 Ti1835.4978 
      In
      Let Tu87.4977 : Unit =
        v.4976.(length.2753) <- net.4973      In
      Var(v.4976)
  In
  Let Rec read_and_network.2754 : Int -> Unit ( n.2755 ) =
    Let net.4964 : Array(Int) =
      Let Ti1822.4972 : Int =
        Int(0)
      In
      read_net_item.2750 Ti1822.4972 
    In
    Let Ti1827.4965 : Int =
      Let Ti1823.4971 : Int =
        Int(0)
      In
      net.4964.(Ti1823.4971)    In
    Let Ti1828.4966 : Int =
      Let Ti1824.4970 : Int =
        Int(1)
      In
      -Ti1824.4970
    In
    If Ti1827.4965 = Ti1828.4966 Then
      ()
    Else
      Let Tu88.4967 : Unit =
        and_net.2583.(n.2755) <- net.4964      In
      Let Ti1826.4968 : Int =
        Let Ti1825.4969 : Int =
          Int(1)
        In
        n.2755 + Ti1825.4969
      In
      read_and_network.2754 Ti1826.4968 
  In
  Let Rec read_parameter.2756 : Unit -> Unit ( Tu89.2757 ) =
    Let Tu93.4953 : Unit =
      Let Tu1815.4963 : Unit =
        ()
      In
      read_screen_settings.2737 Tu1815.4963 
    In
    Let Tu92.4954 : Unit =
      Let Tu1816.4962 : Unit =
        ()
      In
      read_light.2739 Tu1816.4962 
    In
    Let Tu91.4955 : Unit =
      Let Tu1817.4961 : Unit =
        ()
      In
      read_all_object.2748 Tu1817.4961 
    In
    Let Tu90.4956 : Unit =
      Let Ti1818.4960 : Int =
        Int(0)
      In
      read_and_network.2754 Ti1818.4960 
    In
    Let Ti1819.4957 : Int =
      Int(0)
    In
    Let Ta1821.4958 : Array(Array(Int)) =
      Let Ti1820.4959 : Int =
        Int(0)
      In
      read_or_network.2752 Ti1820.4959 
    In
    or_net.2584.(Ti1819.4957) <- Ta1821.4958  In
  Let Rec solver_rect_surface.2758 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int -> Int -> Int -> Bool ( m.2759 dirvec.2760 b0.2761 b1.2762 b2.2763 i0.2764 i1.2765 i2.2766 ) =
    Let Tb1814.4927 : Bool =
      Let Td1793.4952 : Float =
        dirvec.2760.(i0.2764)      In
      fiszero.2518 Td1793.4952 
    In
    If 0 = Tb1814.4927 Then
      Let abc.4928 : Array(Float) =
        o_param_abc.2680 m.2759 
      In
      Let d.4929 : Float =
        Let Tb1797.4947 : Bool =
          Let Tb1794.4949 : Bool =
            o_isinvert.2670 m.2759 
          In
          Let Tb1796.4950 : Bool =
            Let Td1795.4951 : Float =
              dirvec.2760.(i0.2764)            In
            fisneg.2516 Td1795.4951 
          In
          xor.2607 Tb1794.4949 Tb1796.4950 
        In
        Let Td1798.4948 : Float =
          abc.4928.(i0.2764)        In
        fneg_cond.2612 Tb1797.4947 Td1798.4948 
      In
      Let d2.4930 : Float =
        Let Td1799.4945 : Float =
          d.4929 -. b0.2761
        In
        Let Td1800.4946 : Float =
          dirvec.2760.(i0.2764)        In
        Td1799.4945 /. Td1800.4946
      In
      Let Tb1813.4931 : Bool =
        Let Td1804.4940 : Float =
          Let Td1803.4942 : Float =
            Let Td1802.4943 : Float =
              Let Td1801.4944 : Float =
                dirvec.2760.(i1.2765)              In
              d2.4930 *. Td1801.4944
            In
            Td1802.4943 +. b1.2762
          In
          fabs.2523 Td1803.4942 
        In
        Let Td1805.4941 : Float =
          abc.4928.(i1.2765)        In
        fless.2511 Td1804.4940 Td1805.4941 
      In
      If 0 = Tb1813.4931 Then
        Int(0)
      Else
        Let Tb1812.4932 : Bool =
          Let Td1809.4935 : Float =
            Let Td1808.4937 : Float =
              Let Td1807.4938 : Float =
                Let Td1806.4939 : Float =
                  dirvec.2760.(i2.2766)                In
                d2.4930 *. Td1806.4939
              In
              Td1807.4938 +. b2.2763
            In
            fabs.2523 Td1808.4937 
          In
          Let Td1810.4936 : Float =
            abc.4928.(i2.2766)          In
          fless.2511 Td1809.4935 Td1810.4936 
        In
        If 0 = Tb1812.4932 Then
          Int(0)
        Else
          Let Tu94.4933 : Unit =
            Let Ti1811.4934 : Int =
              Int(0)
            In
            solver_dist.2585.(Ti1811.4934) <- d2.4930          In
          Int(1)
    Else
      Int(0)
  In
  Let Rec solver_rect.2767 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int ( m.2768 dirvec.2769 b0.2770 b1.2771 b2.2772 ) =
    Let Tb1792.4915 : Bool =
      Let Ti1781.4924 : Int =
        Int(0)
      In
      Let Ti1782.4925 : Int =
        Int(1)
      In
      Let Ti1783.4926 : Int =
        Int(2)
      In
      solver_rect_surface.2758 m.2768 dirvec.2769 b0.2770 b1.2771 b2.2772 Ti1781.4924 Ti1782.4925 Ti1783.4926 
    In
    If 0 = Tb1792.4915 Then
      Let Tb1791.4916 : Bool =
        Let Ti1784.4921 : Int =
          Int(1)
        In
        Let Ti1785.4922 : Int =
          Int(2)
        In
        Let Ti1786.4923 : Int =
          Int(0)
        In
        solver_rect_surface.2758 m.2768 dirvec.2769 b1.2771 b2.2772 b0.2770 Ti1784.4921 Ti1785.4922 Ti1786.4923 
      In
      If 0 = Tb1791.4916 Then
        Let Tb1790.4917 : Bool =
          Let Ti1787.4918 : Int =
            Int(2)
          In
          Let Ti1788.4919 : Int =
            Int(0)
          In
          Let Ti1789.4920 : Int =
            Int(1)
          In
          solver_rect_surface.2758 m.2768 dirvec.2769 b2.2772 b0.2770 b1.2771 Ti1787.4918 Ti1788.4919 Ti1789.4920 
        In
        If 0 = Tb1790.4917 Then
          Int(0)
        Else
          Int(3)
      Else
        Int(2)
    Else
      Int(1)
  In
  Let Rec solver_surface.2773 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int ( m.2774 dirvec.2775 b0.2776 b1.2777 b2.2778 ) =
    Let abc.4907 : Array(Float) =
      o_param_abc.2680 m.2774 
    In
    Let d.4908 : Float =
      veciprod.2639 dirvec.2775 abc.4907 
    In
    Let Tb1780.4909 : Bool =
      fispos.2514 d.4908 
    In
    If 0 = Tb1780.4909 Then
      Int(0)
    Else
      Let Tu95.4910 : Unit =
        Let Ti1776.4911 : Int =
          Int(0)
        In
        Let Td1779.4912 : Float =
          Let Td1778.4913 : Float =
            Let Td1777.4914 : Float =
              veciprod2.2642 abc.4907 b0.2776 b1.2777 b2.2778 
            In
            fneg.2527 Td1777.4914 
          In
          Td1778.4913 /. d.4908
        In
        solver_dist.2585.(Ti1776.4911) <- Td1779.4912      In
      Int(1)
  In
  Let Rec quadratic.2779 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Float ( m.2780 v0.2781 v1.2782 v2.2783 ) =
    Let diag_part.4884 : Float =
      Let Td1760.4897 : Float =
        Let Td1756.4901 : Float =
          Let Td1754.4905 : Float =
            fsqr.2531 v0.2781 
          In
          Let Td1755.4906 : Float =
            o_param_a.2674 m.2780 
          In
          Td1754.4905 *. Td1755.4906
        In
        Let Td1759.4902 : Float =
          Let Td1757.4903 : Float =
            fsqr.2531 v1.2782 
          In
          Let Td1758.4904 : Float =
            o_param_b.2676 m.2780 
          In
          Td1757.4903 *. Td1758.4904
        In
        Td1756.4901 +. Td1759.4902
      In
      Let Td1763.4898 : Float =
        Let Td1761.4899 : Float =
          fsqr.2531 v2.2783 
        In
        Let Td1762.4900 : Float =
          o_param_c.2678 m.2780 
        In
        Td1761.4899 *. Td1762.4900
      In
      Td1760.4897 +. Td1763.4898
    In
    Let Ti1775.4885 : Int =
      o_isrot.2672 m.2780 
    In
    If 0 = Ti1775.4885 Then
      Var(diag_part.4884)
    Else
      Let Td1771.4886 : Float =
        Let Td1767.4890 : Float =
          Let Td1766.4894 : Float =
            Let Td1764.4895 : Float =
              v1.2782 *. v2.2783
            In
            Let Td1765.4896 : Float =
              o_param_r1.2698 m.2780 
            In
            Td1764.4895 *. Td1765.4896
          In
          diag_part.4884 +. Td1766.4894
        In
        Let Td1770.4891 : Float =
          Let Td1768.4892 : Float =
            v2.2783 *. v0.2781
          In
          Let Td1769.4893 : Float =
            o_param_r2.2700 m.2780 
          In
          Td1768.4892 *. Td1769.4893
        In
        Td1767.4890 +. Td1770.4891
      In
      Let Td1774.4887 : Float =
        Let Td1772.4888 : Float =
          v0.2781 *. v1.2782
        In
        Let Td1773.4889 : Float =
          o_param_r3.2702 m.2780 
        In
        Td1772.4888 *. Td1773.4889
      In
      Td1771.4886 +. Td1774.4887
  In
  Let Rec bilinear.2784 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Float -> Float -> Float -> Float ( m.2785 v0.2786 v1.2787 v2.2788 w0.2789 w1.2790 w2.2791 ) =
    Let diag_part.4854 : Float =
      Let Td1731.4874 : Float =
        Let Td1727.4878 : Float =
          Let Td1725.4882 : Float =
            v0.2786 *. w0.2789
          In
          Let Td1726.4883 : Float =
            o_param_a.2674 m.2785 
          In
          Td1725.4882 *. Td1726.4883
        In
        Let Td1730.4879 : Float =
          Let Td1728.4880 : Float =
            v1.2787 *. w1.2790
          In
          Let Td1729.4881 : Float =
            o_param_b.2676 m.2785 
          In
          Td1728.4880 *. Td1729.4881
        In
        Td1727.4878 +. Td1730.4879
      In
      Let Td1734.4875 : Float =
        Let Td1732.4876 : Float =
          v2.2788 *. w2.2791
        In
        Let Td1733.4877 : Float =
          o_param_c.2678 m.2785 
        In
        Td1732.4876 *. Td1733.4877
      In
      Td1731.4874 +. Td1734.4875
    In
    Let Ti1753.4855 : Int =
      o_isrot.2672 m.2785 
    In
    If 0 = Ti1753.4855 Then
      Var(diag_part.4854)
    Else
      Let Td1752.4856 : Float =
        Let Td1751.4857 : Float =
          Let Td1745.4858 : Float =
            Let Td1739.4864 : Float =
              Let Td1737.4870 : Float =
                Let Td1735.4872 : Float =
                  v2.2788 *. w1.2790
                In
                Let Td1736.4873 : Float =
                  v1.2787 *. w2.2791
                In
                Td1735.4872 +. Td1736.4873
              In
              Let Td1738.4871 : Float =
                o_param_r1.2698 m.2785 
              In
              Td1737.4870 *. Td1738.4871
            In
            Let Td1744.4865 : Float =
              Let Td1742.4866 : Float =
                Let Td1740.4868 : Float =
                  v0.2786 *. w2.2791
                In
                Let Td1741.4869 : Float =
                  v2.2788 *. w0.2789
                In
                Td1740.4868 +. Td1741.4869
              In
              Let Td1743.4867 : Float =
                o_param_r2.2700 m.2785 
              In
              Td1742.4866 *. Td1743.4867
            In
            Td1739.4864 +. Td1744.4865
          In
          Let Td1750.4859 : Float =
            Let Td1748.4860 : Float =
              Let Td1746.4862 : Float =
                v0.2786 *. w1.2790
              In
              Let Td1747.4863 : Float =
                v1.2787 *. w0.2789
              In
              Td1746.4862 +. Td1747.4863
            In
            Let Td1749.4861 : Float =
              o_param_r3.2702 m.2785 
            In
            Td1748.4860 *. Td1749.4861
          In
          Td1745.4858 +. Td1750.4859
        In
        fhalf.2529 Td1751.4857 
      In
      diag_part.4854 +. Td1752.4856
  In
  Let Rec solver_second.2792 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int ( m.2793 dirvec.2794 b0.2795 b1.2796 b2.2797 ) =
    Let aa.4823 : Float =
      Let Td1703.4848 : Float =
        Let Ti1702.4853 : Int =
          Int(0)
        In
        dirvec.2794.(Ti1702.4853)      In
      Let Td1705.4849 : Float =
        Let Ti1704.4852 : Int =
          Int(1)
        In
        dirvec.2794.(Ti1704.4852)      In
      Let Td1707.4850 : Float =
        Let Ti1706.4851 : Int =
          Int(2)
        In
        dirvec.2794.(Ti1706.4851)      In
      quadratic.2779 m.2793 Td1703.4848 Td1705.4849 Td1707.4850 
    In
    Let Tb1724.4824 : Bool =
      fiszero.2518 aa.4823 
    In
    If 0 = Tb1724.4824 Then
      Let bb.4825 : Float =
        Let Td1709.4842 : Float =
          Let Ti1708.4847 : Int =
            Int(0)
          In
          dirvec.2794.(Ti1708.4847)        In
        Let Td1711.4843 : Float =
          Let Ti1710.4846 : Int =
            Int(1)
          In
          dirvec.2794.(Ti1710.4846)        In
        Let Td1713.4844 : Float =
          Let Ti1712.4845 : Int =
            Int(2)
          In
          dirvec.2794.(Ti1712.4845)        In
        bilinear.2784 m.2793 Td1709.4842 Td1711.4843 Td1713.4844 b0.2795 b1.2796 b2.2797 
      In
      Let cc0.4826 : Float =
        quadratic.2779 m.2793 b0.2795 b1.2796 b2.2797 
      In
      Let cc.4827 : Float =
        Let Ti1715.4839 : Int =
          o_form.2666 m.2793 
        In
        Let Ti1716.4840 : Int =
          Int(3)
        In
        If Ti1715.4839 = Ti1716.4840 Then
          Let Td1714.4841 : Float =
            Float(1.000000)
          In
          cc0.4826 -. Td1714.4841
        Else
          Var(cc0.4826)
      In
      Let d.4828 : Float =
        Let Td1717.4837 : Float =
          fsqr.2531 bb.4825 
        In
        Let Td1718.4838 : Float =
          aa.4823 *. cc.4827
        In
        Td1717.4837 -. Td1718.4838
      In
      Let Tb1723.4829 : Bool =
        fispos.2514 d.4828 
      In
      If 0 = Tb1723.4829 Then
        Int(0)
      Else
        Let sd.4830 : Float =
          ExtFun:sqrt d.4828 
        In
        Let t1.4831 : Float =
          Let Tb1719.4836 : Bool =
            o_isinvert.2670 m.2793 
          In
          If 0 = Tb1719.4836 Then
            fneg.2527 sd.4830 
          Else
            Var(sd.4830)
        In
        Let Tu96.4832 : Unit =
          Let Ti1720.4833 : Int =
            Int(0)
          In
          Let Td1722.4834 : Float =
            Let Td1721.4835 : Float =
              t1.4831 -. bb.4825
            In
            Td1721.4835 /. aa.4823
          In
          solver_dist.2585.(Ti1720.4833) <- Td1722.4834        In
        Int(1)
    Else
      Int(0)
  In
  Let Rec solver.2798 : Int -> Array(Float) -> Array(Float) -> Int ( index.2799 dirvec.2800 org.2801 ) =
    Let m.4808 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
      objects.2578.(index.2799)    In
    Let b0.4809 : Float =
      Let Td1693.4820 : Float =
        Let Ti1692.4822 : Int =
          Int(0)
        In
        org.2801.(Ti1692.4822)      In
      Let Td1694.4821 : Float =
        o_param_x.2682 m.4808 
      In
      Td1693.4820 -. Td1694.4821
    In
    Let b1.4810 : Float =
      Let Td1696.4817 : Float =
        Let Ti1695.4819 : Int =
          Int(1)
        In
        org.2801.(Ti1695.4819)      In
      Let Td1697.4818 : Float =
        o_param_y.2684 m.4808 
      In
      Td1696.4817 -. Td1697.4818
    In
    Let b2.4811 : Float =
      Let Td1699.4814 : Float =
        Let Ti1698.4816 : Int =
          Int(2)
        In
        org.2801.(Ti1698.4816)      In
      Let Td1700.4815 : Float =
        o_param_z.2686 m.4808 
      In
      Td1699.4814 -. Td1700.4815
    In
    Let m_shape.4812 : Int =
      o_form.2666 m.4808 
    In
    If 1 = m_shape.4812 Then
      solver_rect.2767 m.4808 dirvec.2800 b0.4809 b1.4810 b2.4811 
    Else
      Let Ti1701.4813 : Int =
        Int(2)
      In
      If m_shape.4812 = Ti1701.4813 Then
        solver_surface.2773 m.4808 dirvec.2800 b0.4809 b1.4810 b2.4811 
      Else
        solver_second.2792 m.4808 dirvec.2800 b0.4809 b1.4810 b2.4811 
  In
  Let Rec solver_rect_fast.2802 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int ( m.2803 v.2804 dconst.2805 b0.2806 b1.2807 b2.2808 ) =
    Let d0.4730 : Float =
      Let Td1622.4803 : Float =
        Let Td1621.4806 : Float =
          Let Ti1620.4807 : Int =
            Int(0)
          In
          dconst.2805.(Ti1620.4807)        In
        Td1621.4806 -. b0.2806
      In
      Let Td1624.4804 : Float =
        Let Ti1623.4805 : Int =
          Int(1)
        In
        dconst.2805.(Ti1623.4805)      In
      Td1622.4803 *. Td1624.4804
    In
    Let Ti1691.4731 : Int =
      Let Tb1641.4786 : Bool =
        Let Td1629.4797 : Float =
          Let Td1628.4799 : Float =
            Let Td1627.4800 : Float =
              Let Td1626.4801 : Float =
                Let Ti1625.4802 : Int =
                  Int(1)
                In
                v.2804.(Ti1625.4802)              In
              d0.4730 *. Td1626.4801
            In
            Td1627.4800 +. b1.2807
          In
          fabs.2523 Td1628.4799 
        In
        Let Td1630.4798 : Float =
          o_param_b.2676 m.2803 
        In
        fless.2511 Td1629.4797 Td1630.4798 
      In
      If 0 = Tb1641.4786 Then
        Int(0)
      Else
        Let Tb1640.4787 : Bool =
          Let Td1635.4791 : Float =
            Let Td1634.4793 : Float =
              Let Td1633.4794 : Float =
                Let Td1632.4795 : Float =
                  Let Ti1631.4796 : Int =
                    Int(2)
                  In
                  v.2804.(Ti1631.4796)                In
                d0.4730 *. Td1632.4795
              In
              Td1633.4794 +. b2.2808
            In
            fabs.2523 Td1634.4793 
          In
          Let Td1636.4792 : Float =
            o_param_c.2678 m.2803 
          In
          fless.2511 Td1635.4791 Td1636.4792 
        In
        If 0 = Tb1640.4787 Then
          Int(0)
        Else
          Let Tb1639.4788 : Bool =
            Let Td1638.4789 : Float =
              Let Ti1637.4790 : Int =
                Int(1)
              In
              dconst.2805.(Ti1637.4790)            In
            fiszero.2518 Td1638.4789 
          In
          If 0 = Tb1639.4788 Then
            Int(1)
          Else
            Int(0)
    In
    If 0 = Ti1691.4731 Then
      Let d1.4734 : Float =
        Let Td1644.4781 : Float =
          Let Td1643.4784 : Float =
            Let Ti1642.4785 : Int =
              Int(2)
            In
            dconst.2805.(Ti1642.4785)          In
          Td1643.4784 -. b1.2807
        In
        Let Td1646.4782 : Float =
          Let Ti1645.4783 : Int =
            Int(3)
          In
          dconst.2805.(Ti1645.4783)        In
        Td1644.4781 *. Td1646.4782
      In
      Let Ti1689.4735 : Int =
        Let Tb1663.4764 : Bool =
          Let Td1651.4775 : Float =
            Let Td1650.4777 : Float =
              Let Td1649.4778 : Float =
                Let Td1648.4779 : Float =
                  Let Ti1647.4780 : Int =
                    Int(0)
                  In
                  v.2804.(Ti1647.4780)                In
                d1.4734 *. Td1648.4779
              In
              Td1649.4778 +. b0.2806
            In
            fabs.2523 Td1650.4777 
          In
          Let Td1652.4776 : Float =
            o_param_a.2674 m.2803 
          In
          fless.2511 Td1651.4775 Td1652.4776 
        In
        If 0 = Tb1663.4764 Then
          Int(0)
        Else
          Let Tb1662.4765 : Bool =
            Let Td1657.4769 : Float =
              Let Td1656.4771 : Float =
                Let Td1655.4772 : Float =
                  Let Td1654.4773 : Float =
                    Let Ti1653.4774 : Int =
                      Int(2)
                    In
                    v.2804.(Ti1653.4774)                  In
                  d1.4734 *. Td1654.4773
                In
                Td1655.4772 +. b2.2808
              In
              fabs.2523 Td1656.4771 
            In
            Let Td1658.4770 : Float =
              o_param_c.2678 m.2803 
            In
            fless.2511 Td1657.4769 Td1658.4770 
          In
          If 0 = Tb1662.4765 Then
            Int(0)
          Else
            Let Tb1661.4766 : Bool =
              Let Td1660.4767 : Float =
                Let Ti1659.4768 : Int =
                  Int(3)
                In
                dconst.2805.(Ti1659.4768)              In
              fiszero.2518 Td1660.4767 
            In
            If 0 = Tb1661.4766 Then
              Int(1)
            Else
              Int(0)
      In
      If 0 = Ti1689.4735 Then
        Let d2.4738 : Float =
          Let Td1666.4759 : Float =
            Let Td1665.4762 : Float =
              Let Ti1664.4763 : Int =
                Int(4)
              In
              dconst.2805.(Ti1664.4763)            In
            Td1665.4762 -. b2.2808
          In
          Let Td1668.4760 : Float =
            Let Ti1667.4761 : Int =
              Int(5)
            In
            dconst.2805.(Ti1667.4761)          In
          Td1666.4759 *. Td1668.4760
        In
        Let Ti1687.4739 : Int =
          Let Tb1685.4742 : Bool =
            Let Td1673.4753 : Float =
              Let Td1672.4755 : Float =
                Let Td1671.4756 : Float =
                  Let Td1670.4757 : Float =
                    Let Ti1669.4758 : Int =
                      Int(0)
                    In
                    v.2804.(Ti1669.4758)                  In
                  d2.4738 *. Td1670.4757
                In
                Td1671.4756 +. b0.2806
              In
              fabs.2523 Td1672.4755 
            In
            Let Td1674.4754 : Float =
              o_param_a.2674 m.2803 
            In
            fless.2511 Td1673.4753 Td1674.4754 
          In
          If 0 = Tb1685.4742 Then
            Int(0)
          Else
            Let Tb1684.4743 : Bool =
              Let Td1679.4747 : Float =
                Let Td1678.4749 : Float =
                  Let Td1677.4750 : Float =
                    Let Td1676.4751 : Float =
                      Let Ti1675.4752 : Int =
                        Int(1)
                      In
                      v.2804.(Ti1675.4752)                    In
                    d2.4738 *. Td1676.4751
                  In
                  Td1677.4750 +. b1.2807
                In
                fabs.2523 Td1678.4749 
              In
              Let Td1680.4748 : Float =
                o_param_b.2676 m.2803 
              In
              fless.2511 Td1679.4747 Td1680.4748 
            In
            If 0 = Tb1684.4743 Then
              Int(0)
            Else
              Let Tb1683.4744 : Bool =
                Let Td1682.4745 : Float =
                  Let Ti1681.4746 : Int =
                    Int(5)
                  In
                  dconst.2805.(Ti1681.4746)                In
                fiszero.2518 Td1682.4745 
              In
              If 0 = Tb1683.4744 Then
                Int(1)
              Else
                Int(0)
        In
        If 0 = Ti1687.4739 Then
          Int(0)
        Else
          Let Tu99.4740 : Unit =
            Let Ti1686.4741 : Int =
              Int(0)
            In
            solver_dist.2585.(Ti1686.4741) <- d2.4738          In
          Int(3)
      Else
        Let Tu98.4736 : Unit =
          Let Ti1688.4737 : Int =
            Int(0)
          In
          solver_dist.2585.(Ti1688.4737) <- d1.4734        In
        Int(2)
    Else
      Let Tu97.4732 : Unit =
        Let Ti1690.4733 : Int =
          Int(0)
        In
        solver_dist.2585.(Ti1690.4733) <- d0.4730      In
      Int(1)
  In
  Let Rec solver_surface_fast.2809 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int ( m.2810 dconst.2811 b0.2812 b1.2813 b2.2814 ) =
    Let Tb1619.4714 : Bool =
      Let Td1606.4728 : Float =
        Let Ti1605.4729 : Int =
          Int(0)
        In
        dconst.2811.(Ti1605.4729)      In
      fisneg.2516 Td1606.4728 
    In
    If 0 = Tb1619.4714 Then
      Int(0)
    Else
      Let Tu100.4715 : Unit =
        Let Ti1607.4716 : Int =
          Int(0)
        In
        Let Td1618.4717 : Float =
          Let Td1614.4718 : Float =
            Let Td1610.4722 : Float =
              Let Td1609.4726 : Float =
                Let Ti1608.4727 : Int =
                  Int(1)
                In
                dconst.2811.(Ti1608.4727)              In
              Td1609.4726 *. b0.2812
            In
            Let Td1613.4723 : Float =
              Let Td1612.4724 : Float =
                Let Ti1611.4725 : Int =
                  Int(2)
                In
                dconst.2811.(Ti1611.4725)              In
              Td1612.4724 *. b1.2813
            In
            Td1610.4722 +. Td1613.4723
          In
          Let Td1617.4719 : Float =
            Let Td1616.4720 : Float =
              Let Ti1615.4721 : Int =
                Int(3)
              In
              dconst.2811.(Ti1615.4721)            In
            Td1616.4720 *. b2.2814
          In
          Td1614.4718 +. Td1617.4719
        In
        solver_dist.2585.(Ti1607.4716) <- Td1618.4717      In
      Int(1)
  In
  Let Rec solver_second_fast.2815 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int ( m.2816 dconst.2817 b0.2818 b1.2819 b2.2820 ) =
    Let aa.4677 : Float =
      Let Ti1574.4713 : Int =
        Int(0)
      In
      dconst.2817.(Ti1574.4713)    In
    Let Tb1604.4678 : Bool =
      fiszero.2518 aa.4677 
    In
    If 0 = Tb1604.4678 Then
      Let neg_bb.4679 : Float =
        Let Td1581.4703 : Float =
          Let Td1577.4707 : Float =
            Let Td1576.4711 : Float =
              Let Ti1575.4712 : Int =
                Int(1)
              In
              dconst.2817.(Ti1575.4712)            In
            Td1576.4711 *. b0.2818
          In
          Let Td1580.4708 : Float =
            Let Td1579.4709 : Float =
              Let Ti1578.4710 : Int =
                Int(2)
              In
              dconst.2817.(Ti1578.4710)            In
            Td1579.4709 *. b1.2819
          In
          Td1577.4707 +. Td1580.4708
        In
        Let Td1584.4704 : Float =
          Let Td1583.4705 : Float =
            Let Ti1582.4706 : Int =
              Int(3)
            In
            dconst.2817.(Ti1582.4706)          In
          Td1583.4705 *. b2.2820
        In
        Td1581.4703 +. Td1584.4704
      In
      Let cc0.4680 : Float =
        quadratic.2779 m.2816 b0.2818 b1.2819 b2.2820 
      In
      Let cc.4681 : Float =
        Let Ti1586.4700 : Int =
          o_form.2666 m.2816 
        In
        Let Ti1587.4701 : Int =
          Int(3)
        In
        If Ti1586.4700 = Ti1587.4701 Then
          Let Td1585.4702 : Float =
            Float(1.000000)
          In
          cc0.4680 -. Td1585.4702
        Else
          Var(cc0.4680)
      In
      Let d.4682 : Float =
        Let Td1588.4698 : Float =
          fsqr.2531 neg_bb.4679 
        In
        Let Td1589.4699 : Float =
          aa.4677 *. cc.4681
        In
        Td1588.4698 -. Td1589.4699
      In
      Let Tb1603.4683 : Bool =
        fispos.2514 d.4682 
      In
      If 0 = Tb1603.4683 Then
        Int(0)
      Else
        Let Tu101.4684 : Unit =
          Let Tb1602.4685 : Bool =
            o_isinvert.2670 m.2816 
          In
          If 0 = Tb1602.4685 Then
            Let Ti1590.4692 : Int =
              Int(0)
            In
            Let Td1595.4693 : Float =
              Let Td1592.4694 : Float =
                Let Td1591.4697 : Float =
                  ExtFun:sqrt d.4682 
                In
                neg_bb.4679 -. Td1591.4697
              In
              Let Td1594.4695 : Float =
                Let Ti1593.4696 : Int =
                  Int(4)
                In
                dconst.2817.(Ti1593.4696)              In
              Td1592.4694 *. Td1594.4695
            In
            solver_dist.2585.(Ti1590.4692) <- Td1595.4693          Else
            Let Ti1596.4686 : Int =
              Int(0)
            In
            Let Td1601.4687 : Float =
              Let Td1598.4688 : Float =
                Let Td1597.4691 : Float =
                  ExtFun:sqrt d.4682 
                In
                neg_bb.4679 +. Td1597.4691
              In
              Let Td1600.4689 : Float =
                Let Ti1599.4690 : Int =
                  Int(4)
                In
                dconst.2817.(Ti1599.4690)              In
              Td1598.4688 *. Td1600.4689
            In
            solver_dist.2585.(Ti1596.4686) <- Td1601.4687        In
        Int(1)
    Else
      Int(0)
  In
  Let Rec solver_fast.2821 : Int -> Array(Float) * Array(Array(Float)) -> Array(Float) -> Int ( index.2822 dirvec.2823 org.2824 ) =
    Let m.4659 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
      objects.2578.(index.2822)    In
    Let b0.4660 : Float =
      Let Td1564.4674 : Float =
        Let Ti1563.4676 : Int =
          Int(0)
        In
        org.2824.(Ti1563.4676)      In
      Let Td1565.4675 : Float =
        o_param_x.2682 m.4659 
      In
      Td1564.4674 -. Td1565.4675
    In
    Let b1.4661 : Float =
      Let Td1567.4671 : Float =
        Let Ti1566.4673 : Int =
          Int(1)
        In
        org.2824.(Ti1566.4673)      In
      Let Td1568.4672 : Float =
        o_param_y.2684 m.4659 
      In
      Td1567.4671 -. Td1568.4672
    In
    Let b2.4662 : Float =
      Let Td1570.4668 : Float =
        Let Ti1569.4670 : Int =
          Int(2)
        In
        org.2824.(Ti1569.4670)      In
      Let Td1571.4669 : Float =
        o_param_z.2686 m.4659 
      In
      Td1570.4668 -. Td1571.4669
    In
    Let dconsts.4663 : Array(Array(Float)) =
      d_const.2727 dirvec.2823 
    In
    Let dconst.4664 : Array(Float) =
      dconsts.4663.(index.2822)    In
    Let m_shape.4665 : Int =
      o_form.2666 m.4659 
    In
    If 1 = m_shape.4665 Then
      Let Ta1572.4667 : Array(Float) =
        d_vec.2725 dirvec.2823 
      In
      solver_rect_fast.2802 m.4659 Ta1572.4667 dconst.4664 b0.4660 b1.4661 b2.4662 
    Else
      Let Ti1573.4666 : Int =
        Int(2)
      In
      If m_shape.4665 = Ti1573.4666 Then
        solver_surface_fast.2809 m.4659 dconst.4664 b0.4660 b1.4661 b2.4662 
      Else
        solver_second_fast.2815 m.4659 dconst.4664 b0.4660 b1.4661 b2.4662 
  In
  Let Rec solver_surface_fast2.2825 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int ( m.2826 dconst.2827 sconst.2828 b0.2829 b1.2830 b2.2831 ) =
    Let Tb1562.4649 : Bool =
      Let Td1555.4657 : Float =
        Let Ti1554.4658 : Int =
          Int(0)
        In
        dconst.2827.(Ti1554.4658)      In
      fisneg.2516 Td1555.4657 
    In
    If 0 = Tb1562.4649 Then
      Int(0)
    Else
      Let Tu102.4650 : Unit =
        Let Ti1556.4651 : Int =
          Int(0)
        In
        Let Td1561.4652 : Float =
          Let Td1558.4653 : Float =
            Let Ti1557.4656 : Int =
              Int(0)
            In
            dconst.2827.(Ti1557.4656)          In
          Let Td1560.4654 : Float =
            Let Ti1559.4655 : Int =
              Int(3)
            In
            sconst.2828.(Ti1559.4655)          In
          Td1558.4653 *. Td1560.4654
        In
        solver_dist.2585.(Ti1556.4651) <- Td1561.4652      In
      Int(1)
  In
  Let Rec solver_second_fast2.2832 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int ( m.2833 dconst.2834 sconst.2835 b0.2836 b1.2837 b2.2838 ) =
    Let aa.4615 : Float =
      Let Ti1525.4648 : Int =
        Int(0)
      In
      dconst.2834.(Ti1525.4648)    In
    Let Tb1553.4616 : Bool =
      fiszero.2518 aa.4615 
    In
    If 0 = Tb1553.4616 Then
      Let neg_bb.4617 : Float =
        Let Td1532.4638 : Float =
          Let Td1528.4642 : Float =
            Let Td1527.4646 : Float =
              Let Ti1526.4647 : Int =
                Int(1)
              In
              dconst.2834.(Ti1526.4647)            In
            Td1527.4646 *. b0.2836
          In
          Let Td1531.4643 : Float =
            Let Td1530.4644 : Float =
              Let Ti1529.4645 : Int =
                Int(2)
              In
              dconst.2834.(Ti1529.4645)            In
            Td1530.4644 *. b1.2837
          In
          Td1528.4642 +. Td1531.4643
        In
        Let Td1535.4639 : Float =
          Let Td1534.4640 : Float =
            Let Ti1533.4641 : Int =
              Int(3)
            In
            dconst.2834.(Ti1533.4641)          In
          Td1534.4640 *. b2.2838
        In
        Td1532.4638 +. Td1535.4639
      In
      Let cc.4618 : Float =
        Let Ti1536.4637 : Int =
          Int(3)
        In
        sconst.2835.(Ti1536.4637)      In
      Let d.4619 : Float =
        Let Td1537.4635 : Float =
          fsqr.2531 neg_bb.4617 
        In
        Let Td1538.4636 : Float =
          aa.4615 *. cc.4618
        In
        Td1537.4635 -. Td1538.4636
      In
      Let Tb1552.4620 : Bool =
        fispos.2514 d.4619 
      In
      If 0 = Tb1552.4620 Then
        Int(0)
      Else
        Let Tu103.4621 : Unit =
          Let Tb1551.4622 : Bool =
            o_isinvert.2670 m.2833 
          In
          If 0 = Tb1551.4622 Then
            Let Ti1539.4629 : Int =
              Int(0)
            In
            Let Td1544.4630 : Float =
              Let Td1541.4631 : Float =
                Let Td1540.4634 : Float =
                  ExtFun:sqrt d.4619 
                In
                neg_bb.4617 -. Td1540.4634
              In
              Let Td1543.4632 : Float =
                Let Ti1542.4633 : Int =
                  Int(4)
                In
                dconst.2834.(Ti1542.4633)              In
              Td1541.4631 *. Td1543.4632
            In
            solver_dist.2585.(Ti1539.4629) <- Td1544.4630          Else
            Let Ti1545.4623 : Int =
              Int(0)
            In
            Let Td1550.4624 : Float =
              Let Td1547.4625 : Float =
                Let Td1546.4628 : Float =
                  ExtFun:sqrt d.4619 
                In
                neg_bb.4617 +. Td1546.4628
              In
              Let Td1549.4626 : Float =
                Let Ti1548.4627 : Int =
                  Int(4)
                In
                dconst.2834.(Ti1548.4627)              In
              Td1547.4625 *. Td1549.4626
            In
            solver_dist.2585.(Ti1545.4623) <- Td1550.4624        In
        Int(1)
    Else
      Int(0)
  In
  Let Rec solver_fast2.2839 : Int -> Array(Float) * Array(Array(Float)) -> Int ( index.2840 dirvec.2841 ) =
    Let m.4602 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
      objects.2578.(index.2840)    In
    Let sconst.4603 : Array(Float) =
      o_param_ctbl.2704 m.4602 
    In
    Let b0.4604 : Float =
      Let Ti1520.4614 : Int =
        Int(0)
      In
      sconst.4603.(Ti1520.4614)    In
    Let b1.4605 : Float =
      Let Ti1521.4613 : Int =
        Int(1)
      In
      sconst.4603.(Ti1521.4613)    In
    Let b2.4606 : Float =
      Let Ti1522.4612 : Int =
        Int(2)
      In
      sconst.4603.(Ti1522.4612)    In
    Let dconsts.4607 : Array(Array(Float)) =
      d_const.2727 dirvec.2841 
    In
    Let dconst.4608 : Array(Float) =
      dconsts.4607.(index.2840)    In
    Let m_shape.4609 : Int =
      o_form.2666 m.4602 
    In
    If 1 = m_shape.4609 Then
      Let Ta1523.4611 : Array(Float) =
        d_vec.2725 dirvec.2841 
      In
      solver_rect_fast.2802 m.4602 Ta1523.4611 dconst.4608 b0.4604 b1.4605 b2.4606 
    Else
      Let Ti1524.4610 : Int =
        Int(2)
      In
      If m_shape.4609 = Ti1524.4610 Then
        solver_surface_fast2.2825 m.4602 dconst.4608 sconst.4603 b0.4604 b1.4605 b2.4606 
      Else
        solver_second_fast2.2832 m.4602 dconst.4608 sconst.4603 b0.4604 b1.4605 b2.4606 
  In
  Let Rec setup_rect_table.2842 : Array(Float) -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) ( vec.2843 m.2844 ) =
    Let const.4539 : Array(Float) =
      Let Ti1464.4600 : Int =
        Int(6)
      In
      Let Td1465.4601 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti1464.4600 Td1465.4601 
    In
    Let Tu109.4540 : Unit =
      Let Tb1483.4581 : Bool =
        Let Td1467.4598 : Float =
          Let Ti1466.4599 : Int =
            Int(0)
          In
          vec.2843.(Ti1466.4599)        In
        fiszero.2518 Td1467.4598 
      In
      If 0 = Tb1483.4581 Then
        Let Tu104.4584 : Unit =
          Let Ti1468.4590 : Int =
            Int(0)
          In
          Let Td1475.4591 : Float =
            Let Tb1473.4592 : Bool =
              Let Tb1469.4594 : Bool =
                o_isinvert.2670 m.2844 
              In
              Let Tb1472.4595 : Bool =
                Let Td1471.4596 : Float =
                  Let Ti1470.4597 : Int =
                    Int(0)
                  In
                  vec.2843.(Ti1470.4597)                In
                fisneg.2516 Td1471.4596 
              In
              xor.2607 Tb1469.4594 Tb1472.4595 
            In
            Let Td1474.4593 : Float =
              o_param_a.2674 m.2844 
            In
            fneg_cond.2612 Tb1473.4592 Td1474.4593 
          In
          const.4539.(Ti1468.4590) <- Td1475.4591        In
        Let Ti1476.4585 : Int =
          Int(1)
        In
        Let Td1480.4586 : Float =
          Let Td1477.4587 : Float =
            Float(1.000000)
          In
          Let Td1479.4588 : Float =
            Let Ti1478.4589 : Int =
              Int(0)
            In
            vec.2843.(Ti1478.4589)          In
          Td1477.4587 /. Td1479.4588
        In
        const.4539.(Ti1476.4585) <- Td1480.4586      Else
        Let Ti1481.4582 : Int =
          Int(1)
        In
        Let Td1482.4583 : Float =
          Float(0.000000)
        In
        const.4539.(Ti1481.4582) <- Td1482.4583    In
    Let Tu108.4541 : Unit =
      Let Tb1501.4562 : Bool =
        Let Td1485.4579 : Float =
          Let Ti1484.4580 : Int =
            Int(1)
          In
          vec.2843.(Ti1484.4580)        In
        fiszero.2518 Td1485.4579 
      In
      If 0 = Tb1501.4562 Then
        Let Tu105.4565 : Unit =
          Let Ti1486.4571 : Int =
            Int(2)
          In
          Let Td1493.4572 : Float =
            Let Tb1491.4573 : Bool =
              Let Tb1487.4575 : Bool =
                o_isinvert.2670 m.2844 
              In
              Let Tb1490.4576 : Bool =
                Let Td1489.4577 : Float =
                  Let Ti1488.4578 : Int =
                    Int(1)
                  In
                  vec.2843.(Ti1488.4578)                In
                fisneg.2516 Td1489.4577 
              In
              xor.2607 Tb1487.4575 Tb1490.4576 
            In
            Let Td1492.4574 : Float =
              o_param_b.2676 m.2844 
            In
            fneg_cond.2612 Tb1491.4573 Td1492.4574 
          In
          const.4539.(Ti1486.4571) <- Td1493.4572        In
        Let Ti1494.4566 : Int =
          Int(3)
        In
        Let Td1498.4567 : Float =
          Let Td1495.4568 : Float =
            Float(1.000000)
          In
          Let Td1497.4569 : Float =
            Let Ti1496.4570 : Int =
              Int(1)
            In
            vec.2843.(Ti1496.4570)          In
          Td1495.4568 /. Td1497.4569
        In
        const.4539.(Ti1494.4566) <- Td1498.4567      Else
        Let Ti1499.4563 : Int =
          Int(3)
        In
        Let Td1500.4564 : Float =
          Float(0.000000)
        In
        const.4539.(Ti1499.4563) <- Td1500.4564    In
    Let Tu107.4542 : Unit =
      Let Tb1519.4543 : Bool =
        Let Td1503.4560 : Float =
          Let Ti1502.4561 : Int =
            Int(2)
          In
          vec.2843.(Ti1502.4561)        In
        fiszero.2518 Td1503.4560 
      In
      If 0 = Tb1519.4543 Then
        Let Tu106.4546 : Unit =
          Let Ti1504.4552 : Int =
            Int(4)
          In
          Let Td1511.4553 : Float =
            Let Tb1509.4554 : Bool =
              Let Tb1505.4556 : Bool =
                o_isinvert.2670 m.2844 
              In
              Let Tb1508.4557 : Bool =
                Let Td1507.4558 : Float =
                  Let Ti1506.4559 : Int =
                    Int(2)
                  In
                  vec.2843.(Ti1506.4559)                In
                fisneg.2516 Td1507.4558 
              In
              xor.2607 Tb1505.4556 Tb1508.4557 
            In
            Let Td1510.4555 : Float =
              o_param_c.2678 m.2844 
            In
            fneg_cond.2612 Tb1509.4554 Td1510.4555 
          In
          const.4539.(Ti1504.4552) <- Td1511.4553        In
        Let Ti1512.4547 : Int =
          Int(5)
        In
        Let Td1516.4548 : Float =
          Let Td1513.4549 : Float =
            Float(1.000000)
          In
          Let Td1515.4550 : Float =
            Let Ti1514.4551 : Int =
              Int(2)
            In
            vec.2843.(Ti1514.4551)          In
          Td1513.4549 /. Td1515.4550
        In
        const.4539.(Ti1512.4547) <- Td1516.4548      Else
        Let Ti1517.4544 : Int =
          Int(5)
        In
        Let Td1518.4545 : Float =
          Float(0.000000)
        In
        const.4539.(Ti1517.4544) <- Td1518.4545    In
    Var(const.4539)
  In
  Let Rec setup_surface_table.2845 : Array(Float) -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) ( vec.2846 m.2847 ) =
    Let const.4500 : Array(Float) =
      Let Ti1431.4537 : Int =
        Int(4)
      In
      Let Td1432.4538 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti1431.4537 Td1432.4538 
    In
    Let d.4501 : Float =
      Let Td1441.4524 : Float =
        Let Td1436.4529 : Float =
          Let Td1434.4534 : Float =
            Let Ti1433.4536 : Int =
              Int(0)
            In
            vec.2846.(Ti1433.4536)          In
          Let Td1435.4535 : Float =
            o_param_a.2674 m.2847 
          In
          Td1434.4534 *. Td1435.4535
        In
        Let Td1440.4530 : Float =
          Let Td1438.4531 : Float =
            Let Ti1437.4533 : Int =
              Int(1)
            In
            vec.2846.(Ti1437.4533)          In
          Let Td1439.4532 : Float =
            o_param_b.2676 m.2847 
          In
          Td1438.4531 *. Td1439.4532
        In
        Td1436.4529 +. Td1440.4530
      In
      Let Td1445.4525 : Float =
        Let Td1443.4526 : Float =
          Let Ti1442.4528 : Int =
            Int(2)
          In
          vec.2846.(Ti1442.4528)        In
        Let Td1444.4527 : Float =
          o_param_c.2678 m.2847 
        In
        Td1443.4526 *. Td1444.4527
      In
      Td1441.4524 +. Td1445.4525
    In
    Let Tu113.4502 : Unit =
      Let Tb1463.4503 : Bool =
        fispos.2514 d.4501 
      In
      If 0 = Tb1463.4503 Then
        Let Ti1446.4522 : Int =
          Int(0)
        In
        Let Td1447.4523 : Float =
          Float(0.000000)
        In
        const.4500.(Ti1446.4522) <- Td1447.4523      Else
        Let Tu112.4504 : Unit =
          Let Ti1448.4519 : Int =
            Int(0)
          In
          Let Td1450.4520 : Float =
            Let Td1449.4521 : Float =
              Float(-1.000000)
            In
            Td1449.4521 /. d.4501
          In
          const.4500.(Ti1448.4519) <- Td1450.4520        In
        Let Tu111.4505 : Unit =
          Let Ti1451.4515 : Int =
            Int(1)
          In
          Let Td1454.4516 : Float =
            Let Td1453.4517 : Float =
              Let Td1452.4518 : Float =
                o_param_a.2674 m.2847 
              In
              Td1452.4518 /. d.4501
            In
            fneg.2527 Td1453.4517 
          In
          const.4500.(Ti1451.4515) <- Td1454.4516        In
        Let Tu110.4506 : Unit =
          Let Ti1455.4511 : Int =
            Int(2)
          In
          Let Td1458.4512 : Float =
            Let Td1457.4513 : Float =
              Let Td1456.4514 : Float =
                o_param_b.2676 m.2847 
              In
              Td1456.4514 /. d.4501
            In
            fneg.2527 Td1457.4513 
          In
          const.4500.(Ti1455.4511) <- Td1458.4512        In
        Let Ti1459.4507 : Int =
          Int(3)
        In
        Let Td1462.4508 : Float =
          Let Td1461.4509 : Float =
            Let Td1460.4510 : Float =
              o_param_c.2678 m.2847 
            In
            Td1460.4510 /. d.4501
          In
          fneg.2527 Td1461.4509 
        In
        const.4500.(Ti1459.4507) <- Td1462.4508    In
    Var(const.4500)
  In
  Let Rec setup_second_table.2848 : Array(Float) -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) ( v.2849 m.2850 ) =
    Let const.4423 : Array(Float) =
      Let Ti1366.4498 : Int =
        Int(5)
      In
      Let Td1367.4499 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti1366.4498 Td1367.4499 
    In
    Let aa.4424 : Float =
      Let Td1369.4492 : Float =
        Let Ti1368.4497 : Int =
          Int(0)
        In
        v.2849.(Ti1368.4497)      In
      Let Td1371.4493 : Float =
        Let Ti1370.4496 : Int =
          Int(1)
        In
        v.2849.(Ti1370.4496)      In
      Let Td1373.4494 : Float =
        Let Ti1372.4495 : Int =
          Int(2)
        In
        v.2849.(Ti1372.4495)      In
      quadratic.2779 m.2850 Td1369.4492 Td1371.4493 Td1373.4494 
    In
    Let c1.4425 : Float =
      Let Td1377.4488 : Float =
        Let Td1375.4489 : Float =
          Let Ti1374.4491 : Int =
            Int(0)
          In
          v.2849.(Ti1374.4491)        In
        Let Td1376.4490 : Float =
          o_param_a.2674 m.2850 
        In
        Td1375.4489 *. Td1376.4490
      In
      fneg.2527 Td1377.4488 
    In
    Let c2.4426 : Float =
      Let Td1381.4484 : Float =
        Let Td1379.4485 : Float =
          Let Ti1378.4487 : Int =
            Int(1)
          In
          v.2849.(Ti1378.4487)        In
        Let Td1380.4486 : Float =
          o_param_b.2676 m.2850 
        In
        Td1379.4485 *. Td1380.4486
      In
      fneg.2527 Td1381.4484 
    In
    Let c3.4427 : Float =
      Let Td1385.4480 : Float =
        Let Td1383.4481 : Float =
          Let Ti1382.4483 : Int =
            Int(2)
          In
          v.2849.(Ti1382.4483)        In
        Let Td1384.4482 : Float =
          o_param_c.2678 m.2850 
        In
        Td1383.4481 *. Td1384.4482
      In
      fneg.2527 Td1385.4480 
    In
    Let Tu120.4428 : Unit =
      Let Ti1386.4479 : Int =
        Int(0)
      In
      const.4423.(Ti1386.4479) <- aa.4424    In
    Let Tu119.4429 : Unit =
      Let Ti1426.4435 : Int =
        o_isrot.2672 m.2850 
      In
      If 0 = Ti1426.4435 Then
        Let Tu117.4474 : Unit =
          Let Ti1387.4478 : Int =
            Int(1)
          In
          const.4423.(Ti1387.4478) <- c1.4425        In
        Let Tu116.4475 : Unit =
          Let Ti1388.4477 : Int =
            Int(2)
          In
          const.4423.(Ti1388.4477) <- c2.4426        In
        Let Ti1389.4476 : Int =
          Int(3)
        In
        const.4423.(Ti1389.4476) <- c3.4427      Else
        Let Tu115.4436 : Unit =
          Let Ti1390.4462 : Int =
            Int(1)
          In
          Let Td1401.4463 : Float =
            Let Td1400.4464 : Float =
              Let Td1399.4465 : Float =
                Let Td1394.4466 : Float =
                  Let Td1392.4471 : Float =
                    Let Ti1391.4473 : Int =
                      Int(2)
                    In
                    v.2849.(Ti1391.4473)                  In
                  Let Td1393.4472 : Float =
                    o_param_r2.2700 m.2850 
                  In
                  Td1392.4471 *. Td1393.4472
                In
                Let Td1398.4467 : Float =
                  Let Td1396.4468 : Float =
                    Let Ti1395.4470 : Int =
                      Int(1)
                    In
                    v.2849.(Ti1395.4470)                  In
                  Let Td1397.4469 : Float =
                    o_param_r3.2702 m.2850 
                  In
                  Td1396.4468 *. Td1397.4469
                In
                Td1394.4466 +. Td1398.4467
              In
              fhalf.2529 Td1399.4465 
            In
            c1.4425 -. Td1400.4464
          In
          const.4423.(Ti1390.4462) <- Td1401.4463        In
        Let Tu114.4437 : Unit =
          Let Ti1402.4450 : Int =
            Int(2)
          In
          Let Td1413.4451 : Float =
            Let Td1412.4452 : Float =
              Let Td1411.4453 : Float =
                Let Td1406.4454 : Float =
                  Let Td1404.4459 : Float =
                    Let Ti1403.4461 : Int =
                      Int(2)
                    In
                    v.2849.(Ti1403.4461)                  In
                  Let Td1405.4460 : Float =
                    o_param_r1.2698 m.2850 
                  In
                  Td1404.4459 *. Td1405.4460
                In
                Let Td1410.4455 : Float =
                  Let Td1408.4456 : Float =
                    Let Ti1407.4458 : Int =
                      Int(0)
                    In
                    v.2849.(Ti1407.4458)                  In
                  Let Td1409.4457 : Float =
                    o_param_r3.2702 m.2850 
                  In
                  Td1408.4456 *. Td1409.4457
                In
                Td1406.4454 +. Td1410.4455
              In
              fhalf.2529 Td1411.4453 
            In
            c2.4426 -. Td1412.4452
          In
          const.4423.(Ti1402.4450) <- Td1413.4451        In
        Let Ti1414.4438 : Int =
          Int(3)
        In
        Let Td1425.4439 : Float =
          Let Td1424.4440 : Float =
            Let Td1423.4441 : Float =
              Let Td1418.4442 : Float =
                Let Td1416.4447 : Float =
                  Let Ti1415.4449 : Int =
                    Int(1)
                  In
                  v.2849.(Ti1415.4449)                In
                Let Td1417.4448 : Float =
                  o_param_r1.2698 m.2850 
                In
                Td1416.4447 *. Td1417.4448
              In
              Let Td1422.4443 : Float =
                Let Td1420.4444 : Float =
                  Let Ti1419.4446 : Int =
                    Int(0)
                  In
                  v.2849.(Ti1419.4446)                In
                Let Td1421.4445 : Float =
                  o_param_r2.2700 m.2850 
                In
                Td1420.4444 *. Td1421.4445
              In
              Td1418.4442 +. Td1422.4443
            In
            fhalf.2529 Td1423.4441 
          In
          c3.4427 -. Td1424.4440
        In
        const.4423.(Ti1414.4438) <- Td1425.4439    In
    Let Tu118.4430 : Unit =
      Let Tb1430.4431 : Bool =
        fiszero.2518 aa.4424 
      In
      If 0 = Tb1430.4431 Then
        Let Ti1427.4432 : Int =
          Int(4)
        In
        Let Td1429.4433 : Float =
          Let Td1428.4434 : Float =
            Float(1.000000)
          In
          Td1428.4434 /. aa.4424
        In
        const.4423.(Ti1427.4432) <- Td1429.4433      Else
        ()
    In
    Var(const.4423)
  In
  Let Rec iter_setup_dirvec_constants.2851 : Array(Float) * Array(Array(Float)) -> Int -> Unit ( dirvec.2852 index.2853 ) =
    If 0 <= index.2853 Then
      Let m.4412 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
        objects.2578.(index.2853)      In
      Let dconst.4413 : Array(Array(Float)) =
        d_const.2727 dirvec.2852 
      In
      Let v.4414 : Array(Float) =
        d_vec.2725 dirvec.2852 
      In
      Let m_shape.4415 : Int =
        o_form.2666 m.4412 
      In
      Let Tu121.4416 : Unit =
        If 1 = m_shape.4415 Then
          Let Ta1360.4422 : Array(Float) =
            setup_rect_table.2842 v.4414 m.4412 
          In
          dconst.4413.(index.2853) <- Ta1360.4422        Else
          Let Ti1363.4419 : Int =
            Int(2)
          In
          If m_shape.4415 = Ti1363.4419 Then
            Let Ta1361.4421 : Array(Float) =
              setup_surface_table.2845 v.4414 m.4412 
            In
            dconst.4413.(index.2853) <- Ta1361.4421          Else
            Let Ta1362.4420 : Array(Float) =
              setup_second_table.2848 v.4414 m.4412 
            In
            dconst.4413.(index.2853) <- Ta1362.4420      In
      Let Ti1365.4417 : Int =
        Let Ti1364.4418 : Int =
          Int(1)
        In
        index.2853 - Ti1364.4418
      In
      iter_setup_dirvec_constants.2851 dirvec.2852 Ti1365.4417 
    Else
      ()
  In
  Let Rec setup_dirvec_constants.2854 : Array(Float) * Array(Array(Float)) -> Unit ( dirvec.2855 ) =
    Let Ti1359.4408 : Int =
      Let Ti1357.4409 : Int =
        Let Ti1356.4411 : Int =
          Int(0)
        In
        n_objects.2577.(Ti1356.4411)      In
      Let Ti1358.4410 : Int =
        Int(1)
      In
      Ti1357.4409 - Ti1358.4410
    In
    iter_setup_dirvec_constants.2851 dirvec.2855 Ti1359.4408 
  In
  Let Rec setup_startp_constants.2856 : Array(Float) -> Int -> Unit ( p.2857 index.2858 ) =
    If 0 <= index.2858 Then
      Let obj.4362 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
        objects.2578.(index.2858)      In
      Let sconst.4363 : Array(Float) =
        o_param_ctbl.2704 obj.4362 
      In
      Let m_shape.4364 : Int =
        o_form.2666 obj.4362 
      In
      Let Tu125.4365 : Unit =
        Let Ti1318.4403 : Int =
          Int(0)
        In
        Let Td1322.4404 : Float =
          Let Td1320.4405 : Float =
            Let Ti1319.4407 : Int =
              Int(0)
            In
            p.2857.(Ti1319.4407)          In
          Let Td1321.4406 : Float =
            o_param_x.2682 obj.4362 
          In
          Td1320.4405 -. Td1321.4406
        In
        sconst.4363.(Ti1318.4403) <- Td1322.4404      In
      Let Tu124.4366 : Unit =
        Let Ti1323.4398 : Int =
          Int(1)
        In
        Let Td1327.4399 : Float =
          Let Td1325.4400 : Float =
            Let Ti1324.4402 : Int =
              Int(1)
            In
            p.2857.(Ti1324.4402)          In
          Let Td1326.4401 : Float =
            o_param_y.2684 obj.4362 
          In
          Td1325.4400 -. Td1326.4401
        In
        sconst.4363.(Ti1323.4398) <- Td1327.4399      In
      Let Tu123.4367 : Unit =
        Let Ti1328.4393 : Int =
          Int(2)
        In
        Let Td1332.4394 : Float =
          Let Td1330.4395 : Float =
            Let Ti1329.4397 : Int =
              Int(2)
            In
            p.2857.(Ti1329.4397)          In
          Let Td1331.4396 : Float =
            o_param_z.2686 obj.4362 
          In
          Td1330.4395 -. Td1331.4396
        In
        sconst.4363.(Ti1328.4393) <- Td1332.4394      In
      Let Tu122.4368 : Unit =
        Let Ti1353.4371 : Int =
          Int(2)
        In
        If m_shape.4364 = Ti1353.4371 Then
          Let Ti1333.4384 : Int =
            Int(3)
          In
          Let Td1341.4385 : Float =
            Let Ta1334.4386 : Array(Float) =
              o_param_abc.2680 obj.4362 
            In
            Let Td1336.4387 : Float =
              Let Ti1335.4392 : Int =
                Int(0)
              In
              sconst.4363.(Ti1335.4392)            In
            Let Td1338.4388 : Float =
              Let Ti1337.4391 : Int =
                Int(1)
              In
              sconst.4363.(Ti1337.4391)            In
            Let Td1340.4389 : Float =
              Let Ti1339.4390 : Int =
                Int(2)
              In
              sconst.4363.(Ti1339.4390)            In
            veciprod2.2642 Ta1334.4386 Td1336.4387 Td1338.4388 Td1340.4389 
          In
          sconst.4363.(Ti1333.4384) <- Td1341.4385        Else
          Let Ti1352.4372 : Int =
            Int(2)
          In
          If m_shape.4364 <= Ti1352.4372 Then
            ()
          Else
            Let cc0.4373 : Float =
              Let Td1343.4378 : Float =
                Let Ti1342.4383 : Int =
                  Int(0)
                In
                sconst.4363.(Ti1342.4383)              In
              Let Td1345.4379 : Float =
                Let Ti1344.4382 : Int =
                  Int(1)
                In
                sconst.4363.(Ti1344.4382)              In
              Let Td1347.4380 : Float =
                Let Ti1346.4381 : Int =
                  Int(2)
                In
                sconst.4363.(Ti1346.4381)              In
              quadratic.2779 obj.4362 Td1343.4378 Td1345.4379 Td1347.4380 
            In
            Let Ti1348.4374 : Int =
              Int(3)
            In
            Let Td1351.4375 : Float =
              Let Ti1350.4376 : Int =
                Int(3)
              In
              If m_shape.4364 = Ti1350.4376 Then
                Let Td1349.4377 : Float =
                  Float(1.000000)
                In
                cc0.4373 -. Td1349.4377
              Else
                Var(cc0.4373)
            In
            sconst.4363.(Ti1348.4374) <- Td1351.4375      In
      Let Ti1355.4369 : Int =
        Let Ti1354.4370 : Int =
          Int(1)
        In
        index.2858 - Ti1354.4370
      In
      setup_startp_constants.2856 p.2857 Ti1355.4369 
    Else
      ()
  In
  Let Rec setup_startp.2859 : Array(Float) -> Unit ( p.2860 ) =
    Let Tu126.4357 : Unit =
      veccpy.2628 startp_fast.2598 p.2860 
    In
    Let Ti1317.4358 : Int =
      Let Ti1315.4359 : Int =
        Let Ti1314.4361 : Int =
          Int(0)
        In
        n_objects.2577.(Ti1314.4361)      In
      Let Ti1316.4360 : Int =
        Int(1)
      In
      Ti1315.4359 - Ti1316.4360
    In
    setup_startp_constants.2856 p.2860 Ti1317.4358 
  In
  Let Rec is_rect_outside.2861 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Bool ( m.2862 p0.2863 p1.2864 p2.2865 ) =
    Let Ti1313.4347 : Int =
      Let Tb1311.4349 : Bool =
        Let Td1304.4355 : Float =
          fabs.2523 p0.2863 
        In
        Let Td1305.4356 : Float =
          o_param_a.2674 m.2862 
        In
        fless.2511 Td1304.4355 Td1305.4356 
      In
      If 0 = Tb1311.4349 Then
        Int(0)
      Else
        Let Tb1310.4350 : Bool =
          Let Td1306.4353 : Float =
            fabs.2523 p1.2864 
          In
          Let Td1307.4354 : Float =
            o_param_b.2676 m.2862 
          In
          fless.2511 Td1306.4353 Td1307.4354 
        In
        If 0 = Tb1310.4350 Then
          Int(0)
        Else
          Let Td1308.4351 : Float =
            fabs.2523 p2.2865 
          In
          Let Td1309.4352 : Float =
            o_param_c.2678 m.2862 
          In
          fless.2511 Td1308.4351 Td1309.4352 
    In
    If 0 = Ti1313.4347 Then
      Let Tb1312.4348 : Bool =
        o_isinvert.2670 m.2862 
      In
      If 0 = Tb1312.4348 Then
        Int(1)
      Else
        Int(0)
    Else
      o_isinvert.2670 m.2862 
  In
  Let Rec is_plane_outside.2866 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Bool ( m.2867 p0.2868 p1.2869 p2.2870 ) =
    Let w.4342 : Float =
      Let Ta1300.4346 : Array(Float) =
        o_param_abc.2680 m.2867 
      In
      veciprod2.2642 Ta1300.4346 p0.2868 p1.2869 p2.2870 
    In
    Let Tb1303.4343 : Bool =
      Let Tb1301.4344 : Bool =
        o_isinvert.2670 m.2867 
      In
      Let Tb1302.4345 : Bool =
        fisneg.2516 w.4342 
      In
      xor.2607 Tb1301.4344 Tb1302.4345 
    In
    If 0 = Tb1303.4343 Then
      Int(1)
    Else
      Int(0)
  In
  Let Rec is_second_outside.2871 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Bool ( m.2872 p0.2873 p1.2874 p2.2875 ) =
    Let w.4334 : Float =
      quadratic.2779 m.2872 p0.2873 p1.2874 p2.2875 
    In
    Let w2.4335 : Float =
      Let Ti1295.4339 : Int =
        o_form.2666 m.2872 
      In
      Let Ti1296.4340 : Int =
        Int(3)
      In
      If Ti1295.4339 = Ti1296.4340 Then
        Let Td1294.4341 : Float =
          Float(1.000000)
        In
        w.4334 -. Td1294.4341
      Else
        Var(w.4334)
    In
    Let Tb1299.4336 : Bool =
      Let Tb1297.4337 : Bool =
        o_isinvert.2670 m.2872 
      In
      Let Tb1298.4338 : Bool =
        fisneg.2516 w2.4335 
      In
      xor.2607 Tb1297.4337 Tb1298.4338 
    In
    If 0 = Tb1299.4336 Then
      Int(1)
    Else
      Int(0)
  In
  Let Rec is_outside.2876 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Bool ( m.2877 q0.2878 q1.2879 q2.2880 ) =
    Let p0.4326 : Float =
      Let Td1290.4333 : Float =
        o_param_x.2682 m.2877 
      In
      q0.2878 -. Td1290.4333
    In
    Let p1.4327 : Float =
      Let Td1291.4332 : Float =
        o_param_y.2684 m.2877 
      In
      q1.2879 -. Td1291.4332
    In
    Let p2.4328 : Float =
      Let Td1292.4331 : Float =
        o_param_z.2686 m.2877 
      In
      q2.2880 -. Td1292.4331
    In
    Let m_shape.4329 : Int =
      o_form.2666 m.2877 
    In
    If 1 = m_shape.4329 Then
      is_rect_outside.2861 m.2877 p0.4326 p1.4327 p2.4328 
    Else
      Let Ti1293.4330 : Int =
        Int(2)
      In
      If m_shape.4329 = Ti1293.4330 Then
        is_plane_outside.2866 m.2877 p0.4326 p1.4327 p2.4328 
      Else
        is_second_outside.2871 m.2877 p0.4326 p1.4327 p2.4328 
  In
  Let Rec check_all_inside.2881 : Int -> Array(Int) -> Float -> Float -> Float -> Bool ( ofs.2882 iand.2883 q0.2884 q1.2885 q2.2886 ) =
    Let head.4319 : Int =
      iand.2883.(ofs.2882)    In
    Let Ti1289.4320 : Int =
      Let Ti1284.4325 : Int =
        Int(1)
      In
      -Ti1284.4325
    In
    If head.4319 = Ti1289.4320 Then
      Int(1)
    Else
      Let Tb1288.4321 : Bool =
        Let Tt1285.4324 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
          objects.2578.(head.4319)        In
        is_outside.2876 Tt1285.4324 q0.2884 q1.2885 q2.2886 
      In
      If 0 = Tb1288.4321 Then
        Let Ti1287.4322 : Int =
          Let Ti1286.4323 : Int =
            Int(1)
          In
          ofs.2882 + Ti1286.4323
        In
        check_all_inside.2881 Ti1287.4322 iand.2883 q0.2884 q1.2885 q2.2886 
      Else
        Int(0)
  In
  Let Rec shadow_check_and_group.2887 : Int -> Array(Int) -> Bool ( iand_ofs.2888 and_group.2889 ) =
    Let Ti1282.4282 : Int =
      and_group.2889.(iand_ofs.2888)    In
    Let Ti1283.4283 : Int =
      Let Ti1254.4318 : Int =
        Int(1)
      In
      -Ti1254.4318
    In
    If Ti1282.4282 = Ti1283.4283 Then
      Int(0)
    Else
      Let obj.4284 : Int =
        and_group.2889.(iand_ofs.2888)      In
      Let t0.4285 : Int =
        solver_fast.2821 obj.4284 light_dirvec.2604 intersection_point.2588 
      In
      Let t0p.4286 : Float =
        Let Ti1255.4317 : Int =
          Int(0)
        In
        solver_dist.2585.(Ti1255.4317)      In
      Let Ti1281.4287 : Int =
        If 0 = t0.4285 Then
          Int(0)
        Else
          Let Td1256.4316 : Float =
            Float(-0.200000)
          In
          fless.2511 t0p.4286 Td1256.4316 
      In
      If 0 = Ti1281.4287 Then
        Let Tb1260.4312 : Bool =
          Let Tt1257.4315 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
            objects.2578.(obj.4284)          In
          o_isinvert.2670 Tt1257.4315 
        In
        If 0 = Tb1260.4312 Then
          Int(0)
        Else
          Let Ti1259.4313 : Int =
            Let Ti1258.4314 : Int =
              Int(1)
            In
            iand_ofs.2888 + Ti1258.4314
          In
          shadow_check_and_group.2887 Ti1259.4313 and_group.2889 
      Else
        Let t.4288 : Float =
          Let Td1261.4311 : Float =
            Float(0.010000)
          In
          t0p.4286 +. Td1261.4311
        In
        Let q0.4289 : Float =
          Let Td1264.4306 : Float =
            Let Td1263.4309 : Float =
              Let Ti1262.4310 : Int =
                Int(0)
              In
              light.2581.(Ti1262.4310)            In
            Td1263.4309 *. t.4288
          In
          Let Td1266.4307 : Float =
            Let Ti1265.4308 : Int =
              Int(0)
            In
            intersection_point.2588.(Ti1265.4308)          In
          Td1264.4306 +. Td1266.4307
        In
        Let q1.4290 : Float =
          Let Td1269.4301 : Float =
            Let Td1268.4304 : Float =
              Let Ti1267.4305 : Int =
                Int(1)
              In
              light.2581.(Ti1267.4305)            In
            Td1268.4304 *. t.4288
          In
          Let Td1271.4302 : Float =
            Let Ti1270.4303 : Int =
              Int(1)
            In
            intersection_point.2588.(Ti1270.4303)          In
          Td1269.4301 +. Td1271.4302
        In
        Let q2.4291 : Float =
          Let Td1274.4296 : Float =
            Let Td1273.4299 : Float =
              Let Ti1272.4300 : Int =
                Int(2)
              In
              light.2581.(Ti1272.4300)            In
            Td1273.4299 *. t.4288
          In
          Let Td1276.4297 : Float =
            Let Ti1275.4298 : Int =
              Int(2)
            In
            intersection_point.2588.(Ti1275.4298)          In
          Td1274.4296 +. Td1276.4297
        In
        Let Tb1280.4292 : Bool =
          Let Ti1277.4295 : Int =
            Int(0)
          In
          check_all_inside.2881 Ti1277.4295 and_group.2889 q0.4289 q1.4290 q2.4291 
        In
        If 0 = Tb1280.4292 Then
          Let Ti1279.4293 : Int =
            Let Ti1278.4294 : Int =
              Int(1)
            In
            iand_ofs.2888 + Ti1278.4294
          In
          shadow_check_and_group.2887 Ti1279.4293 and_group.2889 
        Else
          Int(1)
  In
  Let Rec shadow_check_one_or_group.2890 : Int -> Array(Int) -> Bool ( ofs.2891 or_group.2892 ) =
    Let head.4274 : Int =
      or_group.2892.(ofs.2891)    In
    Let Ti1253.4275 : Int =
      Let Ti1249.4281 : Int =
        Int(1)
      In
      -Ti1249.4281
    In
    If head.4274 = Ti1253.4275 Then
      Int(0)
    Else
      Let and_group.4276 : Array(Int) =
        and_net.2583.(head.4274)      In
      Let shadow_p.4277 : Bool =
        Let Ti1250.4280 : Int =
          Int(0)
        In
        shadow_check_and_group.2887 Ti1250.4280 and_group.4276 
      In
      If 0 = shadow_p.4277 Then
        Let Ti1252.4278 : Int =
          Let Ti1251.4279 : Int =
            Int(1)
          In
          ofs.2891 + Ti1251.4279
        In
        shadow_check_one_or_group.2890 Ti1252.4278 or_group.2892 
      Else
        Int(1)
  In
  Let Rec shadow_check_one_or_matrix.2893 : Int -> Array(Array(Int)) -> Bool ( ofs.2894 or_matrix.2895 ) =
    Let head.4254 : Array(Int) =
      or_matrix.2895.(ofs.2894)    In
    Let range_primitive.4255 : Int =
      Let Ti1232.4273 : Int =
        Int(0)
      In
      head.4254.(Ti1232.4273)    In
    Let Ti1248.4256 : Int =
      Let Ti1233.4272 : Int =
        Int(1)
      In
      -Ti1233.4272
    In
    If range_primitive.4255 = Ti1248.4256 Then
      Int(0)
    Else
      Let Ti1247.4257 : Int =
        Let Ti1240.4264 : Int =
          Int(99)
        In
        If range_primitive.4255 = Ti1240.4264 Then
          Int(1)
        Else
          Let t.4265 : Int =
            solver_fast.2821 range_primitive.4255 light_dirvec.2604 intersection_point.2588 
          In
          If 0 = t.4265 Then
            Int(0)
          Else
            Let Tb1239.4266 : Bool =
              Let Td1235.4269 : Float =
                Let Ti1234.4271 : Int =
                  Int(0)
                In
                solver_dist.2585.(Ti1234.4271)              In
              Let Td1236.4270 : Float =
                Float(-0.100000)
              In
              fless.2511 Td1235.4269 Td1236.4270 
            In
            If 0 = Tb1239.4266 Then
              Int(0)
            Else
              Let Tb1238.4267 : Bool =
                Let Ti1237.4268 : Int =
                  Int(1)
                In
                shadow_check_one_or_group.2890 Ti1237.4268 head.4254 
              In
              If 0 = Tb1238.4267 Then
                Int(0)
              Else
                Int(1)
      In
      If 0 = Ti1247.4257 Then
        Let Ti1242.4262 : Int =
          Let Ti1241.4263 : Int =
            Int(1)
          In
          ofs.2894 + Ti1241.4263
        In
        shadow_check_one_or_matrix.2893 Ti1242.4262 or_matrix.2895 
      Else
        Let Tb1246.4258 : Bool =
          Let Ti1243.4261 : Int =
            Int(1)
          In
          shadow_check_one_or_group.2890 Ti1243.4261 head.4254 
        In
        If 0 = Tb1246.4258 Then
          Let Ti1245.4259 : Int =
            Let Ti1244.4260 : Int =
              Int(1)
            In
            ofs.2894 + Ti1244.4260
          In
          shadow_check_one_or_matrix.2893 Ti1245.4259 or_matrix.2895 
        Else
          Int(1)
  In
  Let Rec solve_each_element.2896 : Int -> Array(Int) -> Array(Float) -> Unit ( iand_ofs.2897 and_group.2898 dirvec.2899 ) =
    Let iobj.4208 : Int =
      and_group.2898.(iand_ofs.2897)    In
    Let Ti1231.4209 : Int =
      Let Ti1197.4253 : Int =
        Int(1)
      In
      -Ti1197.4253
    In
    If iobj.4208 = Ti1231.4209 Then
      ()
    Else
      Let t0.4210 : Int =
        solver.2798 iobj.4208 dirvec.2899 startp.2597 
      In
      If 0 = t0.4210 Then
        Let Tb1201.4249 : Bool =
          Let Tt1198.4252 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
            objects.2578.(iobj.4208)          In
          o_isinvert.2670 Tt1198.4252 
        In
        If 0 = Tb1201.4249 Then
          ()
        Else
          Let Ti1200.4250 : Int =
            Let Ti1199.4251 : Int =
              Int(1)
            In
            iand_ofs.2897 + Ti1199.4251
          In
          solve_each_element.2896 Ti1200.4250 and_group.2898 dirvec.2899 
      Else
        Let t0p.4211 : Float =
          Let Ti1202.4248 : Int =
            Int(0)
          In
          solver_dist.2585.(Ti1202.4248)        In
        Let Tu130.4212 : Unit =
          Let Tb1228.4215 : Bool =
            Let Td1203.4247 : Float =
              Float(0.000000)
            In
            fless.2511 Td1203.4247 t0p.4211 
          In
          If 0 = Tb1228.4215 Then
            ()
          Else
            Let Tb1227.4216 : Bool =
              Let Td1205.4245 : Float =
                Let Ti1204.4246 : Int =
                  Int(0)
                In
                tmin.2587.(Ti1204.4246)              In
              fless.2511 t0p.4211 Td1205.4245 
            In
            If 0 = Tb1227.4216 Then
              ()
            Else
              Let t.4217 : Float =
                Let Td1206.4244 : Float =
                  Float(0.010000)
                In
                t0p.4211 +. Td1206.4244
              In
              Let q0.4218 : Float =
                Let Td1209.4239 : Float =
                  Let Td1208.4242 : Float =
                    Let Ti1207.4243 : Int =
                      Int(0)
                    In
                    dirvec.2899.(Ti1207.4243)                  In
                  Td1208.4242 *. t.4217
                In
                Let Td1211.4240 : Float =
                  Let Ti1210.4241 : Int =
                    Int(0)
                  In
                  startp.2597.(Ti1210.4241)                In
                Td1209.4239 +. Td1211.4240
              In
              Let q1.4219 : Float =
                Let Td1214.4234 : Float =
                  Let Td1213.4237 : Float =
                    Let Ti1212.4238 : Int =
                      Int(1)
                    In
                    dirvec.2899.(Ti1212.4238)                  In
                  Td1213.4237 *. t.4217
                In
                Let Td1216.4235 : Float =
                  Let Ti1215.4236 : Int =
                    Int(1)
                  In
                  startp.2597.(Ti1215.4236)                In
                Td1214.4234 +. Td1216.4235
              In
              Let q2.4220 : Float =
                Let Td1219.4229 : Float =
                  Let Td1218.4232 : Float =
                    Let Ti1217.4233 : Int =
                      Int(2)
                    In
                    dirvec.2899.(Ti1217.4233)                  In
                  Td1218.4232 *. t.4217
                In
                Let Td1221.4230 : Float =
                  Let Ti1220.4231 : Int =
                    Int(2)
                  In
                  startp.2597.(Ti1220.4231)                In
                Td1219.4229 +. Td1221.4230
              In
              Let Tb1226.4221 : Bool =
                Let Ti1222.4228 : Int =
                  Int(0)
                In
                check_all_inside.2881 Ti1222.4228 and_group.2898 q0.4218 q1.4219 q2.4220 
              In
              If 0 = Tb1226.4221 Then
                ()
              Else
                Let Tu129.4222 : Unit =
                  Let Ti1223.4227 : Int =
                    Int(0)
                  In
                  tmin.2587.(Ti1223.4227) <- t.4217                In
                Let Tu128.4223 : Unit =
                  vecset.2618 intersection_point.2588 q0.4218 q1.4219 q2.4220 
                In
                Let Tu127.4224 : Unit =
                  Let Ti1224.4226 : Int =
                    Int(0)
                  In
                  intersected_object_id.2589.(Ti1224.4226) <- iobj.4208                In
                Let Ti1225.4225 : Int =
                  Int(0)
                In
                intsec_rectside.2586.(Ti1225.4225) <- t0.4210        In
        Let Ti1230.4213 : Int =
          Let Ti1229.4214 : Int =
            Int(1)
          In
          iand_ofs.2897 + Ti1229.4214
        In
        solve_each_element.2896 Ti1230.4213 and_group.2898 dirvec.2899 
  In
  Let Rec solve_one_or_network.2900 : Int -> Array(Int) -> Array(Float) -> Unit ( ofs.2901 or_group.2902 dirvec.2903 ) =
    Let head.4200 : Int =
      or_group.2902.(ofs.2901)    In
    Let Ti1196.4201 : Int =
      Let Ti1192.4207 : Int =
        Int(1)
      In
      -Ti1192.4207
    In
    If head.4200 = Ti1196.4201 Then
      ()
    Else
      Let and_group.4202 : Array(Int) =
        and_net.2583.(head.4200)      In
      Let Tu131.4203 : Unit =
        Let Ti1193.4206 : Int =
          Int(0)
        In
        solve_each_element.2896 Ti1193.4206 and_group.4202 dirvec.2903 
      In
      Let Ti1195.4204 : Int =
        Let Ti1194.4205 : Int =
          Int(1)
        In
        ofs.2901 + Ti1194.4205
      In
      solve_one_or_network.2900 Ti1195.4204 or_group.2902 dirvec.2903 
  In
  Let Rec trace_or_matrix.2904 : Int -> Array(Array(Int)) -> Array(Float) -> Unit ( ofs.2905 or_network.2906 dirvec.2907 ) =
    Let head.4183 : Array(Int) =
      or_network.2906.(ofs.2905)    In
    Let range_primitive.4184 : Int =
      Let Ti1180.4199 : Int =
        Int(0)
      In
      head.4183.(Ti1180.4199)    In
    Let Ti1191.4185 : Int =
      Let Ti1181.4198 : Int =
        Int(1)
      In
      -Ti1181.4198
    In
    If range_primitive.4184 = Ti1191.4185 Then
      ()
    Else
      Let Tu132.4186 : Unit =
        Let Ti1188.4189 : Int =
          Int(99)
        In
        If range_primitive.4184 = Ti1188.4189 Then
          Let Ti1182.4197 : Int =
            Int(1)
          In
          solve_one_or_network.2900 Ti1182.4197 head.4183 dirvec.2907 
        Else
          Let t.4190 : Int =
            solver.2798 range_primitive.4184 dirvec.2907 startp.2597 
          In
          If 0 = t.4190 Then
            ()
          Else
            Let tp.4191 : Float =
              Let Ti1183.4196 : Int =
                Int(0)
              In
              solver_dist.2585.(Ti1183.4196)            In
            Let Tb1187.4192 : Bool =
              Let Td1185.4194 : Float =
                Let Ti1184.4195 : Int =
                  Int(0)
                In
                tmin.2587.(Ti1184.4195)              In
              fless.2511 tp.4191 Td1185.4194 
            In
            If 0 = Tb1187.4192 Then
              ()
            Else
              Let Ti1186.4193 : Int =
                Int(1)
              In
              solve_one_or_network.2900 Ti1186.4193 head.4183 dirvec.2907 
      In
      Let Ti1190.4187 : Int =
        Let Ti1189.4188 : Int =
          Int(1)
        In
        ofs.2905 + Ti1189.4188
      In
      trace_or_matrix.2904 Ti1190.4187 or_network.2906 dirvec.2907 
  In
  Let Rec judge_intersection.2908 : Array(Float) -> Bool ( dirvec.2909 ) =
    Let Tu134.4171 : Unit =
      Let Ti1171.4181 : Int =
        Int(0)
      In
      Let Td1172.4182 : Float =
        Float(1000000000.000000)
      In
      tmin.2587.(Ti1171.4181) <- Td1172.4182    In
    Let Tu133.4172 : Unit =
      Let Ti1173.4178 : Int =
        Int(0)
      In
      Let Ta1175.4179 : Array(Array(Int)) =
        Let Ti1174.4180 : Int =
          Int(0)
        In
        or_net.2584.(Ti1174.4180)      In
      trace_or_matrix.2904 Ti1173.4178 Ta1175.4179 dirvec.2909 
    In
    Let t.4173 : Float =
      Let Ti1176.4177 : Int =
        Int(0)
      In
      tmin.2587.(Ti1176.4177)    In
    Let Tb1179.4174 : Bool =
      Let Td1177.4176 : Float =
        Float(-0.100000)
      In
      fless.2511 Td1177.4176 t.4173 
    In
    If 0 = Tb1179.4174 Then
      Int(0)
    Else
      Let Td1178.4175 : Float =
        Float(100000000.000000)
      In
      fless.2511 t.4173 Td1178.4175 
  In
  Let Rec solve_each_element_fast.2910 : Int -> Array(Int) -> Array(Float) * Array(Array(Float)) -> Unit ( iand_ofs.2911 and_group.2912 dirvec.2913 ) =
    Let vec.4124 : Array(Float) =
      d_vec.2725 dirvec.2913 
    In
    Let iobj.4125 : Int =
      and_group.2912.(iand_ofs.2911)    In
    Let Ti1170.4126 : Int =
      Let Ti1136.4170 : Int =
        Int(1)
      In
      -Ti1136.4170
    In
    If iobj.4125 = Ti1170.4126 Then
      ()
    Else
      Let t0.4127 : Int =
        solver_fast2.2839 iobj.4125 dirvec.2913 
      In
      If 0 = t0.4127 Then
        Let Tb1140.4166 : Bool =
          Let Tt1137.4169 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
            objects.2578.(iobj.4125)          In
          o_isinvert.2670 Tt1137.4169 
        In
        If 0 = Tb1140.4166 Then
          ()
        Else
          Let Ti1139.4167 : Int =
            Let Ti1138.4168 : Int =
              Int(1)
            In
            iand_ofs.2911 + Ti1138.4168
          In
          solve_each_element_fast.2910 Ti1139.4167 and_group.2912 dirvec.2913 
      Else
        Let t0p.4128 : Float =
          Let Ti1141.4165 : Int =
            Int(0)
          In
          solver_dist.2585.(Ti1141.4165)        In
        Let Tu138.4129 : Unit =
          Let Tb1167.4132 : Bool =
            Let Td1142.4164 : Float =
              Float(0.000000)
            In
            fless.2511 Td1142.4164 t0p.4128 
          In
          If 0 = Tb1167.4132 Then
            ()
          Else
            Let Tb1166.4133 : Bool =
              Let Td1144.4162 : Float =
                Let Ti1143.4163 : Int =
                  Int(0)
                In
                tmin.2587.(Ti1143.4163)              In
              fless.2511 t0p.4128 Td1144.4162 
            In
            If 0 = Tb1166.4133 Then
              ()
            Else
              Let t.4134 : Float =
                Let Td1145.4161 : Float =
                  Float(0.010000)
                In
                t0p.4128 +. Td1145.4161
              In
              Let q0.4135 : Float =
                Let Td1148.4156 : Float =
                  Let Td1147.4159 : Float =
                    Let Ti1146.4160 : Int =
                      Int(0)
                    In
                    vec.4124.(Ti1146.4160)                  In
                  Td1147.4159 *. t.4134
                In
                Let Td1150.4157 : Float =
                  Let Ti1149.4158 : Int =
                    Int(0)
                  In
                  startp_fast.2598.(Ti1149.4158)                In
                Td1148.4156 +. Td1150.4157
              In
              Let q1.4136 : Float =
                Let Td1153.4151 : Float =
                  Let Td1152.4154 : Float =
                    Let Ti1151.4155 : Int =
                      Int(1)
                    In
                    vec.4124.(Ti1151.4155)                  In
                  Td1152.4154 *. t.4134
                In
                Let Td1155.4152 : Float =
                  Let Ti1154.4153 : Int =
                    Int(1)
                  In
                  startp_fast.2598.(Ti1154.4153)                In
                Td1153.4151 +. Td1155.4152
              In
              Let q2.4137 : Float =
                Let Td1158.4146 : Float =
                  Let Td1157.4149 : Float =
                    Let Ti1156.4150 : Int =
                      Int(2)
                    In
                    vec.4124.(Ti1156.4150)                  In
                  Td1157.4149 *. t.4134
                In
                Let Td1160.4147 : Float =
                  Let Ti1159.4148 : Int =
                    Int(2)
                  In
                  startp_fast.2598.(Ti1159.4148)                In
                Td1158.4146 +. Td1160.4147
              In
              Let Tb1165.4138 : Bool =
                Let Ti1161.4145 : Int =
                  Int(0)
                In
                check_all_inside.2881 Ti1161.4145 and_group.2912 q0.4135 q1.4136 q2.4137 
              In
              If 0 = Tb1165.4138 Then
                ()
              Else
                Let Tu137.4139 : Unit =
                  Let Ti1162.4144 : Int =
                    Int(0)
                  In
                  tmin.2587.(Ti1162.4144) <- t.4134                In
                Let Tu136.4140 : Unit =
                  vecset.2618 intersection_point.2588 q0.4135 q1.4136 q2.4137 
                In
                Let Tu135.4141 : Unit =
                  Let Ti1163.4143 : Int =
                    Int(0)
                  In
                  intersected_object_id.2589.(Ti1163.4143) <- iobj.4125                In
                Let Ti1164.4142 : Int =
                  Int(0)
                In
                intsec_rectside.2586.(Ti1164.4142) <- t0.4127        In
        Let Ti1169.4130 : Int =
          Let Ti1168.4131 : Int =
            Int(1)
          In
          iand_ofs.2911 + Ti1168.4131
        In
        solve_each_element_fast.2910 Ti1169.4130 and_group.2912 dirvec.2913 
  In
  Let Rec solve_one_or_network_fast.2914 : Int -> Array(Int) -> Array(Float) * Array(Array(Float)) -> Unit ( ofs.2915 or_group.2916 dirvec.2917 ) =
    Let head.4116 : Int =
      or_group.2916.(ofs.2915)    In
    Let Ti1135.4117 : Int =
      Let Ti1131.4123 : Int =
        Int(1)
      In
      -Ti1131.4123
    In
    If head.4116 = Ti1135.4117 Then
      ()
    Else
      Let and_group.4118 : Array(Int) =
        and_net.2583.(head.4116)      In
      Let Tu139.4119 : Unit =
        Let Ti1132.4122 : Int =
          Int(0)
        In
        solve_each_element_fast.2910 Ti1132.4122 and_group.4118 dirvec.2917 
      In
      Let Ti1134.4120 : Int =
        Let Ti1133.4121 : Int =
          Int(1)
        In
        ofs.2915 + Ti1133.4121
      In
      solve_one_or_network_fast.2914 Ti1134.4120 or_group.2916 dirvec.2917 
  In
  Let Rec trace_or_matrix_fast.2918 : Int -> Array(Array(Int)) -> Array(Float) * Array(Array(Float)) -> Unit ( ofs.2919 or_network.2920 dirvec.2921 ) =
    Let head.4099 : Array(Int) =
      or_network.2920.(ofs.2919)    In
    Let range_primitive.4100 : Int =
      Let Ti1119.4115 : Int =
        Int(0)
      In
      head.4099.(Ti1119.4115)    In
    Let Ti1130.4101 : Int =
      Let Ti1120.4114 : Int =
        Int(1)
      In
      -Ti1120.4114
    In
    If range_primitive.4100 = Ti1130.4101 Then
      ()
    Else
      Let Tu140.4102 : Unit =
        Let Ti1127.4105 : Int =
          Int(99)
        In
        If range_primitive.4100 = Ti1127.4105 Then
          Let Ti1121.4113 : Int =
            Int(1)
          In
          solve_one_or_network_fast.2914 Ti1121.4113 head.4099 dirvec.2921 
        Else
          Let t.4106 : Int =
            solver_fast2.2839 range_primitive.4100 dirvec.2921 
          In
          If 0 = t.4106 Then
            ()
          Else
            Let tp.4107 : Float =
              Let Ti1122.4112 : Int =
                Int(0)
              In
              solver_dist.2585.(Ti1122.4112)            In
            Let Tb1126.4108 : Bool =
              Let Td1124.4110 : Float =
                Let Ti1123.4111 : Int =
                  Int(0)
                In
                tmin.2587.(Ti1123.4111)              In
              fless.2511 tp.4107 Td1124.4110 
            In
            If 0 = Tb1126.4108 Then
              ()
            Else
              Let Ti1125.4109 : Int =
                Int(1)
              In
              solve_one_or_network_fast.2914 Ti1125.4109 head.4099 dirvec.2921 
      In
      Let Ti1129.4103 : Int =
        Let Ti1128.4104 : Int =
          Int(1)
        In
        ofs.2919 + Ti1128.4104
      In
      trace_or_matrix_fast.2918 Ti1129.4103 or_network.2920 dirvec.2921 
  In
  Let Rec judge_intersection_fast.2922 : Array(Float) * Array(Array(Float)) -> Bool ( dirvec.2923 ) =
    Let Tu142.4087 : Unit =
      Let Ti1110.4097 : Int =
        Int(0)
      In
      Let Td1111.4098 : Float =
        Float(1000000000.000000)
      In
      tmin.2587.(Ti1110.4097) <- Td1111.4098    In
    Let Tu141.4088 : Unit =
      Let Ti1112.4094 : Int =
        Int(0)
      In
      Let Ta1114.4095 : Array(Array(Int)) =
        Let Ti1113.4096 : Int =
          Int(0)
        In
        or_net.2584.(Ti1113.4096)      In
      trace_or_matrix_fast.2918 Ti1112.4094 Ta1114.4095 dirvec.2923 
    In
    Let t.4089 : Float =
      Let Ti1115.4093 : Int =
        Int(0)
      In
      tmin.2587.(Ti1115.4093)    In
    Let Tb1118.4090 : Bool =
      Let Td1116.4092 : Float =
        Float(-0.100000)
      In
      fless.2511 Td1116.4092 t.4089 
    In
    If 0 = Tb1118.4090 Then
      Int(0)
    Else
      Let Td1117.4091 : Float =
        Float(100000000.000000)
      In
      fless.2511 t.4089 Td1117.4091 
  In
  Let Rec get_nvector_rect.2924 : Array(Float) -> Unit ( dirvec.2925 ) =
    Let rectside.4077 : Int =
      Let Ti1102.4086 : Int =
        Int(0)
      In
      intsec_rectside.2586.(Ti1102.4086)    In
    Let Tu143.4078 : Unit =
      vecbzero.2626 nvector.2590 
    In
    Let Ti1104.4079 : Int =
      Let Ti1103.4085 : Int =
        Int(1)
      In
      rectside.4077 - Ti1103.4085
    In
    Let Td1109.4080 : Float =
      Let Td1108.4081 : Float =
        Let Td1107.4082 : Float =
          Let Ti1106.4083 : Int =
            Let Ti1105.4084 : Int =
              Int(1)
            In
            rectside.4077 - Ti1105.4084
          In
          dirvec.2925.(Ti1106.4083)        In
        sgn.2610 Td1107.4082 
      In
      fneg.2527 Td1108.4081 
    In
    nvector.2590.(Ti1104.4079) <- Td1109.4080  In
  Let Rec get_nvector_plane.2926 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit ( m.2927 ) =
    Let Tu145.4066 : Unit =
      Let Ti1093.4074 : Int =
        Int(0)
      In
      Let Td1095.4075 : Float =
        Let Td1094.4076 : Float =
          o_param_a.2674 m.2927 
        In
        fneg.2527 Td1094.4076 
      In
      nvector.2590.(Ti1093.4074) <- Td1095.4075    In
    Let Tu144.4067 : Unit =
      Let Ti1096.4071 : Int =
        Int(1)
      In
      Let Td1098.4072 : Float =
        Let Td1097.4073 : Float =
          o_param_b.2676 m.2927 
        In
        fneg.2527 Td1097.4073 
      In
      nvector.2590.(Ti1096.4071) <- Td1098.4072    In
    Let Ti1099.4068 : Int =
      Int(2)
    In
    Let Td1101.4069 : Float =
      Let Td1100.4070 : Float =
        o_param_c.2678 m.2927 
      In
      fneg.2527 Td1100.4070 
    In
    nvector.2590.(Ti1099.4068) <- Td1101.4069  In
  Let Rec get_nvector_second.2928 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit ( m.2929 ) =
    Let p0.4014 : Float =
      Let Td1053.4063 : Float =
        Let Ti1052.4065 : Int =
          Int(0)
        In
        intersection_point.2588.(Ti1052.4065)      In
      Let Td1054.4064 : Float =
        o_param_x.2682 m.2929 
      In
      Td1053.4063 -. Td1054.4064
    In
    Let p1.4015 : Float =
      Let Td1056.4060 : Float =
        Let Ti1055.4062 : Int =
          Int(1)
        In
        intersection_point.2588.(Ti1055.4062)      In
      Let Td1057.4061 : Float =
        o_param_y.2684 m.2929 
      In
      Td1056.4060 -. Td1057.4061
    In
    Let p2.4016 : Float =
      Let Td1059.4057 : Float =
        Let Ti1058.4059 : Int =
          Int(2)
        In
        intersection_point.2588.(Ti1058.4059)      In
      Let Td1060.4058 : Float =
        o_param_z.2686 m.2929 
      In
      Td1059.4057 -. Td1060.4058
    In
    Let d0.4017 : Float =
      Let Td1061.4056 : Float =
        o_param_a.2674 m.2929 
      In
      p0.4014 *. Td1061.4056
    In
    Let d1.4018 : Float =
      Let Td1062.4055 : Float =
        o_param_b.2676 m.2929 
      In
      p1.4015 *. Td1062.4055
    In
    Let d2.4019 : Float =
      Let Td1063.4054 : Float =
        o_param_c.2678 m.2929 
      In
      p2.4016 *. Td1063.4054
    In
    Let Tu150.4020 : Unit =
      Let Ti1091.4022 : Int =
        o_isrot.2672 m.2929 
      In
      If 0 = Ti1091.4022 Then
        Let Tu147.4049 : Unit =
          Let Ti1064.4053 : Int =
            Int(0)
          In
          nvector.2590.(Ti1064.4053) <- d0.4017        In
        Let Tu146.4050 : Unit =
          Let Ti1065.4052 : Int =
            Int(1)
          In
          nvector.2590.(Ti1065.4052) <- d1.4018        In
        Let Ti1066.4051 : Int =
          Int(2)
        In
        nvector.2590.(Ti1066.4051) <- d2.4019      Else
        Let Tu149.4023 : Unit =
          Let Ti1067.4041 : Int =
            Int(0)
          In
          Let Td1074.4042 : Float =
            Let Td1073.4043 : Float =
              Let Td1072.4044 : Float =
                Let Td1069.4045 : Float =
                  Let Td1068.4048 : Float =
                    o_param_r3.2702 m.2929 
                  In
                  p1.4015 *. Td1068.4048
                In
                Let Td1071.4046 : Float =
                  Let Td1070.4047 : Float =
                    o_param_r2.2700 m.2929 
                  In
                  p2.4016 *. Td1070.4047
                In
                Td1069.4045 +. Td1071.4046
              In
              fhalf.2529 Td1072.4044 
            In
            d0.4017 +. Td1073.4043
          In
          nvector.2590.(Ti1067.4041) <- Td1074.4042        In
        Let Tu148.4024 : Unit =
          Let Ti1075.4033 : Int =
            Int(1)
          In
          Let Td1082.4034 : Float =
            Let Td1081.4035 : Float =
              Let Td1080.4036 : Float =
                Let Td1077.4037 : Float =
                  Let Td1076.4040 : Float =
                    o_param_r3.2702 m.2929 
                  In
                  p0.4014 *. Td1076.4040
                In
                Let Td1079.4038 : Float =
                  Let Td1078.4039 : Float =
                    o_param_r1.2698 m.2929 
                  In
                  p2.4016 *. Td1078.4039
                In
                Td1077.4037 +. Td1079.4038
              In
              fhalf.2529 Td1080.4036 
            In
            d1.4018 +. Td1081.4035
          In
          nvector.2590.(Ti1075.4033) <- Td1082.4034        In
        Let Ti1083.4025 : Int =
          Int(2)
        In
        Let Td1090.4026 : Float =
          Let Td1089.4027 : Float =
            Let Td1088.4028 : Float =
              Let Td1085.4029 : Float =
                Let Td1084.4032 : Float =
                  o_param_r2.2700 m.2929 
                In
                p0.4014 *. Td1084.4032
              In
              Let Td1087.4030 : Float =
                Let Td1086.4031 : Float =
                  o_param_r1.2698 m.2929 
                In
                p1.4015 *. Td1086.4031
              In
              Td1085.4029 +. Td1087.4030
            In
            fhalf.2529 Td1088.4028 
          In
          d2.4019 +. Td1089.4027
        In
        nvector.2590.(Ti1083.4025) <- Td1090.4026    In
    Let Tb1092.4021 : Bool =
      o_isinvert.2670 m.2929 
    In
    vecunit_sgn.2636 nvector.2590 Tb1092.4021 
  In
  Let Rec get_nvector.2930 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Unit ( m.2931 dirvec.2932 ) =
    Let m_shape.4012 : Int =
      o_form.2666 m.2931 
    In
    If 1 = m_shape.4012 Then
      get_nvector_rect.2924 dirvec.2932 
    Else
      Let Ti1051.4013 : Int =
        Int(2)
      In
      If m_shape.4012 = Ti1051.4013 Then
        get_nvector_plane.2926 m.2931 
      Else
        get_nvector_second.2928 m.2931 
  In
  Let Rec utexture.2933 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Unit ( m.2934 p.2935 ) =
    Let m_tex.3865 : Int =
      o_texturetype.2664 m.2934 
    In
    Let Tu155.3866 : Unit =
      Let Ti934.4010 : Int =
        Int(0)
      In
      Let Td935.4011 : Float =
        o_color_red.2692 m.2934 
      In
      texture_color.2591.(Ti934.4010) <- Td935.4011    In
    Let Tu154.3867 : Unit =
      Let Ti936.4008 : Int =
        Int(1)
      In
      Let Td937.4009 : Float =
        o_color_green.2694 m.2934 
      In
      texture_color.2591.(Ti936.4008) <- Td937.4009    In
    Let Tu153.3868 : Unit =
      Let Ti938.4006 : Int =
        Int(2)
      In
      Let Td939.4007 : Float =
        o_color_blue.2696 m.2934 
      In
      texture_color.2591.(Ti938.4006) <- Td939.4007    In
    If 1 = m_tex.3865 Then
      Let w1.3980 : Float =
        Let Td941.4003 : Float =
          Let Ti940.4005 : Int =
            Int(0)
          In
          p.2935.(Ti940.4005)        In
        Let Td942.4004 : Float =
          o_param_x.2682 m.2934 
        In
        Td941.4003 -. Td942.4004
      In
      Let flag1.3981 : Bool =
        Let d1.3996 : Float =
          Let Td945.3999 : Float =
            Let Td944.4001 : Float =
              Let Td943.4002 : Float =
                Float(0.050000)
              In
              w1.3980 *. Td943.4002
            In
            ExtFun:floor Td944.4001 
          In
          Let Td946.4000 : Float =
            Float(20.000000)
          In
          Td945.3999 *. Td946.4000
        In
        Let Td947.3997 : Float =
          w1.3980 -. d1.3996
        In
        Let Td948.3998 : Float =
          Float(10.000000)
        In
        fless.2511 Td947.3997 Td948.3998 
      In
      Let w3.3982 : Float =
        Let Td950.3993 : Float =
          Let Ti949.3995 : Int =
            Int(2)
          In
          p.2935.(Ti949.3995)        In
        Let Td951.3994 : Float =
          o_param_z.2686 m.2934 
        In
        Td950.3993 -. Td951.3994
      In
      Let flag2.3983 : Bool =
        Let d2.3986 : Float =
          Let Td954.3989 : Float =
            Let Td953.3991 : Float =
              Let Td952.3992 : Float =
                Float(0.050000)
              In
              w3.3982 *. Td952.3992
            In
            ExtFun:floor Td953.3991 
          In
          Let Td955.3990 : Float =
            Float(20.000000)
          In
          Td954.3989 *. Td955.3990
        In
        Let Td956.3987 : Float =
          w3.3982 -. d2.3986
        In
        Let Td957.3988 : Float =
          Float(10.000000)
        In
        fless.2511 Td956.3987 Td957.3988 
      In
      Let Ti958.3984 : Int =
        Int(1)
      In
      Let Td959.3985 : Float =
        If 0 = flag1.3981 Then
          If 0 = flag2.3983 Then
            Float(255.000000)
          Else
            Float(0.000000)
        Else
          If 0 = flag2.3983 Then
            Float(0.000000)
          Else
            Float(255.000000)
      In
      texture_color.2591.(Ti958.3984) <- Td959.3985    Else
      Let Ti1050.3869 : Int =
        Int(2)
      In
      If m_tex.3865 = Ti1050.3869 Then
        Let w2.3965 : Float =
          Let Td964.3975 : Float =
            Let Td963.3976 : Float =
              Let Td961.3977 : Float =
                Let Ti960.3979 : Int =
                  Int(1)
                In
                p.2935.(Ti960.3979)              In
              Let Td962.3978 : Float =
                Float(0.250000)
              In
              Td961.3977 *. Td962.3978
            In
            sin.2546 Td963.3976 
          In
          fsqr.2531 Td964.3975 
        In
        Let Tu151.3966 : Unit =
          Let Ti965.3972 : Int =
            Int(0)
          In
          Let Td967.3973 : Float =
            Let Td966.3974 : Float =
              Float(255.000000)
            In
            Td966.3974 *. w2.3965
          In
          texture_color.2591.(Ti965.3972) <- Td967.3973        In
        Let Ti968.3967 : Int =
          Int(1)
        In
        Let Td972.3968 : Float =
          Let Td969.3969 : Float =
            Float(255.000000)
          In
          Let Td971.3970 : Float =
            Let Td970.3971 : Float =
              Float(1.000000)
            In
            Td970.3971 -. w2.3965
          In
          Td969.3969 *. Td971.3970
        In
        texture_color.2591.(Ti968.3967) <- Td972.3968      Else
        Let Ti1049.3870 : Int =
          Int(3)
        In
        If m_tex.3865 = Ti1049.3870 Then
          Let w1.3936 : Float =
            Let Td974.3962 : Float =
              Let Ti973.3964 : Int =
                Int(0)
              In
              p.2935.(Ti973.3964)            In
            Let Td975.3963 : Float =
              o_param_x.2682 m.2934 
            In
            Td974.3962 -. Td975.3963
          In
          Let w3.3937 : Float =
            Let Td977.3959 : Float =
              Let Ti976.3961 : Int =
                Int(2)
              In
              p.2935.(Ti976.3961)            In
            Let Td978.3960 : Float =
              o_param_z.2686 m.2934 
            In
            Td977.3959 -. Td978.3960
          In
          Let w2.3938 : Float =
            Let Td982.3954 : Float =
              Let Td981.3956 : Float =
                Let Td979.3957 : Float =
                  fsqr.2531 w1.3936 
                In
                Let Td980.3958 : Float =
                  fsqr.2531 w3.3937 
                In
                Td979.3957 +. Td980.3958
              In
              ExtFun:sqrt Td981.3956 
            In
            Let Td983.3955 : Float =
              Float(10.000000)
            In
            Td982.3954 /. Td983.3955
          In
          Let w4.3939 : Float =
            Let Td985.3951 : Float =
              Let Td984.3953 : Float =
                ExtFun:floor w2.3938 
              In
              w2.3938 -. Td984.3953
            In
            Let Td986.3952 : Float =
              Float(3.141593)
            In
            Td985.3951 *. Td986.3952
          In
          Let cws.3940 : Float =
            Let Td987.3950 : Float =
              cos.2548 w4.3939 
            In
            fsqr.2531 Td987.3950 
          In
          Let Tu152.3941 : Unit =
            Let Ti988.3947 : Int =
              Int(1)
            In
            Let Td990.3948 : Float =
              Let Td989.3949 : Float =
                Float(255.000000)
              In
              cws.3940 *. Td989.3949
            In
            texture_color.2591.(Ti988.3947) <- Td990.3948          In
          Let Ti991.3942 : Int =
            Int(2)
          In
          Let Td995.3943 : Float =
            Let Td993.3944 : Float =
              Let Td992.3946 : Float =
                Float(1.000000)
              In
              Td992.3946 -. cws.3940
            In
            Let Td994.3945 : Float =
              Float(255.000000)
            In
            Td993.3944 *. Td994.3945
          In
          texture_color.2591.(Ti991.3942) <- Td995.3943        Else
          Let Ti1048.3871 : Int =
            Int(4)
          In
          If m_tex.3865 = Ti1048.3871 Then
            Let w1.3872 : Float =
              Let Td999.3930 : Float =
                Let Td997.3933 : Float =
                  Let Ti996.3935 : Int =
                    Int(0)
                  In
                  p.2935.(Ti996.3935)                In
                Let Td998.3934 : Float =
                  o_param_x.2682 m.2934 
                In
                Td997.3933 -. Td998.3934
              In
              Let Td1001.3931 : Float =
                Let Td1000.3932 : Float =
                  o_param_a.2674 m.2934 
                In
                ExtFun:sqrt Td1000.3932 
              In
              Td999.3930 *. Td1001.3931
            In
            Let w3.3873 : Float =
              Let Td1005.3924 : Float =
                Let Td1003.3927 : Float =
                  Let Ti1002.3929 : Int =
                    Int(2)
                  In
                  p.2935.(Ti1002.3929)                In
                Let Td1004.3928 : Float =
                  o_param_z.2686 m.2934 
                In
                Td1003.3927 -. Td1004.3928
              In
              Let Td1007.3925 : Float =
                Let Td1006.3926 : Float =
                  o_param_c.2678 m.2934 
                In
                ExtFun:sqrt Td1006.3926 
              In
              Td1005.3924 *. Td1007.3925
            In
            Let w4.3874 : Float =
              Let Td1008.3922 : Float =
                fsqr.2531 w1.3872 
              In
              Let Td1009.3923 : Float =
                fsqr.2531 w3.3873 
              In
              Td1008.3922 +. Td1009.3923
            In
            Let w7.3875 : Float =
              Let Tb1017.3913 : Bool =
                Let Td1010.3920 : Float =
                  fabs.2523 w1.3872 
                In
                Let Td1011.3921 : Float =
                  Float(0.000100)
                In
                fless.2511 Td1010.3920 Td1011.3921 
              In
              If 0 = Tb1017.3913 Then
                Let w5.3914 : Float =
                  Let Td1012.3919 : Float =
                    w3.3873 /. w1.3872
                  In
                  fabs.2523 Td1012.3919 
                In
                Let Td1015.3915 : Float =
                  Let Td1013.3917 : Float =
                    atan.2540 w5.3914 
                  In
                  Let Td1014.3918 : Float =
                    Float(30.000000)
                  In
                  Td1013.3917 *. Td1014.3918
                In
                Let Td1016.3916 : Float =
                  Float(3.141593)
                In
                Td1015.3915 /. Td1016.3916
              Else
                Float(15.000000)
            In
            Let w9.3876 : Float =
              Let Td1018.3912 : Float =
                ExtFun:floor w7.3875 
              In
              w7.3875 -. Td1018.3912
            In
            Let w2.3877 : Float =
              Let Td1022.3906 : Float =
                Let Td1020.3909 : Float =
                  Let Ti1019.3911 : Int =
                    Int(1)
                  In
                  p.2935.(Ti1019.3911)                In
                Let Td1021.3910 : Float =
                  o_param_y.2684 m.2934 
                In
                Td1020.3909 -. Td1021.3910
              In
              Let Td1024.3907 : Float =
                Let Td1023.3908 : Float =
                  o_param_b.2676 m.2934 
                In
                ExtFun:sqrt Td1023.3908 
              In
              Td1022.3906 *. Td1024.3907
            In
            Let w8.3878 : Float =
              Let Tb1032.3897 : Bool =
                Let Td1025.3904 : Float =
                  fabs.2523 w4.3874 
                In
                Let Td1026.3905 : Float =
                  Float(0.000100)
                In
                fless.2511 Td1025.3904 Td1026.3905 
              In
              If 0 = Tb1032.3897 Then
                Let w6.3898 : Float =
                  Let Td1027.3903 : Float =
                    w2.3877 /. w4.3874
                  In
                  fabs.2523 Td1027.3903 
                In
                Let Td1030.3899 : Float =
                  Let Td1028.3901 : Float =
                    atan.2540 w6.3898 
                  In
                  Let Td1029.3902 : Float =
                    Float(30.000000)
                  In
                  Td1028.3901 *. Td1029.3902
                In
                Let Td1031.3900 : Float =
                  Float(3.141593)
                In
                Td1030.3899 /. Td1031.3900
              Else
                Float(15.000000)
            In
            Let w10.3879 : Float =
              Let Td1033.3896 : Float =
                ExtFun:floor w8.3878 
              In
              w8.3878 -. Td1033.3896
            In
            Let w11.3880 : Float =
              Let Td1038.3888 : Float =
                Let Td1034.3892 : Float =
                  Float(0.150000)
                In
                Let Td1037.3893 : Float =
                  Let Td1036.3894 : Float =
                    Let Td1035.3895 : Float =
                      Float(0.500000)
                    In
                    Td1035.3895 -. w9.3876
                  In
                  fsqr.2531 Td1036.3894 
                In
                Td1034.3892 -. Td1037.3893
              In
              Let Td1041.3889 : Float =
                Let Td1040.3890 : Float =
                  Let Td1039.3891 : Float =
                    Float(0.500000)
                  In
                  Td1039.3891 -. w10.3879
                In
                fsqr.2531 Td1040.3890 
              In
              Td1038.3888 -. Td1041.3889
            In
            Let w12.3881 : Float =
              Let Tb1042.3887 : Bool =
                fisneg.2516 w11.3880 
              In
              If 0 = Tb1042.3887 Then
                Var(w11.3880)
              Else
                Float(0.000000)
            In
            Let Ti1043.3882 : Int =
              Int(2)
            In
            Let Td1047.3883 : Float =
              Let Td1045.3884 : Float =
                Let Td1044.3886 : Float =
                  Float(255.000000)
                In
                Td1044.3886 *. w12.3881
              In
              Let Td1046.3885 : Float =
                Float(0.300000)
              In
              Td1045.3884 /. Td1046.3885
            In
            texture_color.2591.(Ti1043.3882) <- Td1047.3883          Else
            ()
  In
  Let Rec add_light.2936 : Float -> Float -> Float -> Unit ( bright.2937 hilight.2938 hilight_scale.2939 ) =
    Let Tu158.3845 : Unit =
      Let Tb918.3864 : Bool =
        fispos.2514 bright.2937 
      In
      If 0 = Tb918.3864 Then
        ()
      Else
        vecaccum.2647 rgb.2593 bright.2937 texture_color.2591 
    In
    Let Tb933.3846 : Bool =
      fispos.2514 hilight.2938 
    In
    If 0 = Tb933.3846 Then
      ()
    Else
      Let ihl.3847 : Float =
        Let Td920.3862 : Float =
          Let Td919.3863 : Float =
            fsqr.2531 hilight.2938 
          In
          fsqr.2531 Td919.3863 
        In
        Td920.3862 *. hilight_scale.2939
      In
      Let Tu157.3848 : Unit =
        Let Ti921.3858 : Int =
          Int(0)
        In
        Let Td924.3859 : Float =
          Let Td923.3860 : Float =
            Let Ti922.3861 : Int =
              Int(0)
            In
            rgb.2593.(Ti922.3861)          In
          Td923.3860 +. ihl.3847
        In
        rgb.2593.(Ti921.3858) <- Td924.3859      In
      Let Tu156.3849 : Unit =
        Let Ti925.3854 : Int =
          Int(1)
        In
        Let Td928.3855 : Float =
          Let Td927.3856 : Float =
            Let Ti926.3857 : Int =
              Int(1)
            In
            rgb.2593.(Ti926.3857)          In
          Td927.3856 +. ihl.3847
        In
        rgb.2593.(Ti925.3854) <- Td928.3855      In
      Let Ti929.3850 : Int =
        Int(2)
      In
      Let Td932.3851 : Float =
        Let Td931.3852 : Float =
          Let Ti930.3853 : Int =
            Int(2)
          In
          rgb.2593.(Ti930.3853)        In
        Td931.3852 +. ihl.3847
      In
      rgb.2593.(Ti929.3850) <- Td932.3851  In
  Let Rec trace_reflections.2940 : Int -> Float -> Float -> Array(Float) -> Unit ( index.2941 diffuse.2942 hilight_scale.2943 dirvec.2944 ) =
    If 0 <= index.2941 Then
      Let rinfo.3819 : Int * Array(Float) * Array(Array(Float)) * Float =
        reflections.2605.(index.2941)      In
      Let dvec.3820 : Array(Float) * Array(Array(Float)) =
        r_dvec.2731 rinfo.3819 
      In
      Let Tu159.3821 : Unit =
        Let Tb915.3824 : Bool =
          judge_intersection_fast.2922 dvec.3820 
        In
        If 0 = Tb915.3824 Then
          ()
        Else
          Let surface_id.3825 : Int =
            Let Ti903.3839 : Int =
              Let Ti901.3842 : Int =
                Let Ti900.3844 : Int =
                  Int(0)
                In
                intersected_object_id.2589.(Ti900.3844)              In
              Let Ti902.3843 : Int =
                Int(2)
              In
              Ti901.3842 << Ti902.3843
            In
            Let Ti905.3840 : Int =
              Let Ti904.3841 : Int =
                Int(0)
              In
              intsec_rectside.2586.(Ti904.3841)            In
            Ti903.3839 + Ti905.3840
          In
          Let Ti914.3826 : Int =
            r_surface_id.2729 rinfo.3819 
          In
          If surface_id.3825 = Ti914.3826 Then
            Let Tb913.3827 : Bool =
              Let Ti906.3836 : Int =
                Int(0)
              In
              Let Ta908.3837 : Array(Array(Int)) =
                Let Ti907.3838 : Int =
                  Int(0)
                In
                or_net.2584.(Ti907.3838)              In
              shadow_check_one_or_matrix.2893 Ti906.3836 Ta908.3837 
            In
            If 0 = Tb913.3827 Then
              Let p.3828 : Float =
                Let Ta909.3835 : Array(Float) =
                  d_vec.2725 dvec.3820 
                In
                veciprod.2639 nvector.2590 Ta909.3835 
              In
              Let scale.3829 : Float =
                r_bright.2733 rinfo.3819 
              In
              Let bright.3830 : Float =
                Let Td910.3834 : Float =
                  scale.3829 *. diffuse.2942
                In
                Td910.3834 *. p.3828
              In
              Let hilight.3831 : Float =
                Let Td912.3832 : Float =
                  Let Ta911.3833 : Array(Float) =
                    d_vec.2725 dvec.3820 
                  In
                  veciprod.2639 dirvec.2944 Ta911.3833 
                In
                scale.3829 *. Td912.3832
              In
              add_light.2936 bright.3830 hilight.3831 hilight_scale.2943 
            Else
              ()
          Else
            ()
      In
      Let Ti917.3822 : Int =
        Let Ti916.3823 : Int =
          Int(1)
        In
        index.2941 - Ti916.3823
      In
      trace_reflections.2940 Ti917.3822 diffuse.2942 hilight_scale.2943 dirvec.2944 
    Else
      ()
  In
  Let Rec trace_ray.2945 : Int -> Float -> Array(Float) -> Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Float -> Unit ( nref.2946 energy.2947 dirvec.2948 pixel.2949 dist.2950 ) =
    Let Ti899.3713 : Int =
      Int(4)
    In
    If nref.2946 <= Ti899.3713 Then
      Let surface_ids.3714 : Array(Int) =
        p_surface_ids.2710 pixel.2949 
      In
      Let Tb898.3715 : Bool =
        judge_intersection.2908 dirvec.2948 
      In
      If 0 = Tb898.3715 Then
        Let Tu176.3793 : Unit =
          Let Ti828.3817 : Int =
            Let Ti827.3818 : Int =
              Int(1)
            In
            -Ti827.3818
          In
          surface_ids.3714.(nref.2946) <- Ti828.3817        In
        If 0 = nref.2946 Then
          ()
        Else
          Let hl.3794 : Float =
            Let Td829.3816 : Float =
              veciprod.2639 dirvec.2948 light.2581 
            In
            fneg.2527 Td829.3816 
          In
          Let Tb847.3795 : Bool =
            fispos.2514 hl.3794 
          In
          If 0 = Tb847.3795 Then
            ()
          Else
            Let ihl.3796 : Float =
              Let Td832.3811 : Float =
                Let Td831.3814 : Float =
                  Let Td830.3815 : Float =
                    fsqr.2531 hl.3794 
                  In
                  Td830.3815 *. hl.3794
                In
                Td831.3814 *. energy.2947
              In
              Let Td834.3812 : Float =
                Let Ti833.3813 : Int =
                  Int(0)
                In
                beam.2582.(Ti833.3813)              In
              Td832.3811 *. Td834.3812
            In
            Let Tu175.3797 : Unit =
              Let Ti835.3807 : Int =
                Int(0)
              In
              Let Td838.3808 : Float =
                Let Td837.3809 : Float =
                  Let Ti836.3810 : Int =
                    Int(0)
                  In
                  rgb.2593.(Ti836.3810)                In
                Td837.3809 +. ihl.3796
              In
              rgb.2593.(Ti835.3807) <- Td838.3808            In
            Let Tu174.3798 : Unit =
              Let Ti839.3803 : Int =
                Int(1)
              In
              Let Td842.3804 : Float =
                Let Td841.3805 : Float =
                  Let Ti840.3806 : Int =
                    Int(1)
                  In
                  rgb.2593.(Ti840.3806)                In
                Td841.3805 +. ihl.3796
              In
              rgb.2593.(Ti839.3803) <- Td842.3804            In
            Let Ti843.3799 : Int =
              Int(2)
            In
            Let Td846.3800 : Float =
              Let Td845.3801 : Float =
                Let Ti844.3802 : Int =
                  Int(2)
                In
                rgb.2593.(Ti844.3802)              In
              Td845.3801 +. ihl.3796
            In
            rgb.2593.(Ti843.3799) <- Td846.3800      Else
        Let obj_id.3716 : Int =
          Let Ti848.3792 : Int =
            Int(0)
          In
          intersected_object_id.2589.(Ti848.3792)        In
        Let obj.3717 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
          objects.2578.(obj_id.3716)        In
        Let m_surface.3718 : Int =
          o_reflectiontype.2668 obj.3717 
        In
        Let diffuse.3719 : Float =
          Let Td849.3791 : Float =
            o_diffuse.2688 obj.3717 
          In
          Td849.3791 *. energy.2947
        In
        Let Tu173.3720 : Unit =
          get_nvector.2930 obj.3717 dirvec.2948 
        In
        Let Tu172.3721 : Unit =
          veccpy.2628 startp.2597 intersection_point.2588 
        In
        Let Tu171.3722 : Unit =
          utexture.2933 obj.3717 intersection_point.2588 
        In
        Let Tu170.3723 : Unit =
          Let Ti854.3786 : Int =
            Let Ti851.3787 : Int =
              Let Ti850.3790 : Int =
                Int(2)
              In
              obj_id.3716 << Ti850.3790
            In
            Let Ti853.3788 : Int =
              Let Ti852.3789 : Int =
                Int(0)
              In
              intsec_rectside.2586.(Ti852.3789)            In
            Ti851.3787 + Ti853.3788
          In
          surface_ids.3714.(nref.2946) <- Ti854.3786        In
        Let intersection_points.3724 : Array(Array(Float)) =
          p_intersection_points.2708 pixel.2949 
        In
        Let Tu169.3725 : Unit =
          Let Ta855.3785 : Array(Float) =
            intersection_points.3724.(nref.2946)          In
          veccpy.2628 Ta855.3785 intersection_point.2588 
        In
        Let calc_diffuse.3726 : Array(Bool) =
          p_calc_diffuse.2712 pixel.2949 
        In
        Let Tu168.3727 : Unit =
          Let Tb867.3768 : Bool =
            Let Td856.3783 : Float =
              o_diffuse.2688 obj.3717 
            In
            Let Td857.3784 : Float =
              Float(0.500000)
            In
            fless.2511 Td856.3783 Td857.3784 
          In
          If 0 = Tb867.3768 Then
            Let Tu162.3770 : Unit =
              Let Ti858.3782 : Int =
                Int(1)
              In
              calc_diffuse.3726.(nref.2946) <- Ti858.3782            In
            Let energya.3771 : Array(Array(Float)) =
              p_energy.2714 pixel.2949 
            In
            Let Tu161.3772 : Unit =
              Let Ta859.3781 : Array(Float) =
                energya.3771.(nref.2946)              In
              veccpy.2628 Ta859.3781 texture_color.2591 
            In
            Let Tu160.3773 : Unit =
              Let Ta860.3776 : Array(Float) =
                energya.3771.(nref.2946)              In
              Let Td864.3777 : Float =
                Let Td863.3778 : Float =
                  Let Td861.3779 : Float =
                    Float(1.000000)
                  In
                  Let Td862.3780 : Float =
                    Float(256.000000)
                  In
                  Td861.3779 /. Td862.3780
                In
                Td863.3778 *. diffuse.3719
              In
              vecscale.2657 Ta860.3776 Td864.3777 
            In
            Let nvectors.3774 : Array(Array(Float)) =
              p_nvectors.2723 pixel.2949 
            In
            Let Ta865.3775 : Array(Float) =
              nvectors.3774.(nref.2946)            In
            veccpy.2628 Ta865.3775 nvector.2590 
          Else
            Let Ti866.3769 : Int =
              Int(0)
            In
            calc_diffuse.3726.(nref.2946) <- Ti866.3769        In
        Let w.3728 : Float =
          Let Td868.3766 : Float =
            Float(-2.000000)
          In
          Let Td869.3767 : Float =
            veciprod.2639 dirvec.2948 nvector.2590 
          In
          Td868.3766 *. Td869.3767
        In
        Let Tu167.3729 : Unit =
          vecaccum.2647 dirvec.2948 w.3728 nvector.2590 
        In
        Let hilight_scale.3730 : Float =
          Let Td870.3765 : Float =
            o_hilight.2690 obj.3717 
          In
          energy.2947 *. Td870.3765
        In
        Let Tu166.3731 : Unit =
          Let Tb877.3756 : Bool =
            Let Ti871.3762 : Int =
              Int(0)
            In
            Let Ta873.3763 : Array(Array(Int)) =
              Let Ti872.3764 : Int =
                Int(0)
              In
              or_net.2584.(Ti872.3764)            In
            shadow_check_one_or_matrix.2893 Ti871.3762 Ta873.3763 
          In
          If 0 = Tb877.3756 Then
            Let bright.3757 : Float =
              Let Td875.3760 : Float =
                Let Td874.3761 : Float =
                  veciprod.2639 nvector.2590 light.2581 
                In
                fneg.2527 Td874.3761 
              In
              Td875.3760 *. diffuse.3719
            In
            Let hilight.3758 : Float =
              Let Td876.3759 : Float =
                veciprod.2639 dirvec.2948 light.2581 
              In
              fneg.2527 Td876.3759 
            In
            add_light.2936 bright.3757 hilight.3758 hilight_scale.3730 
          Else
            ()
        In
        Let Tu165.3732 : Unit =
          setup_startp.2859 intersection_point.2588 
        In
        Let Tu164.3733 : Unit =
          Let Ti881.3752 : Int =
            Let Ti879.3753 : Int =
              Let Ti878.3755 : Int =
                Int(0)
              In
              n_reflections.2606.(Ti878.3755)            In
            Let Ti880.3754 : Int =
              Int(1)
            In
            Ti879.3753 - Ti880.3754
          In
          trace_reflections.2940 Ti881.3752 diffuse.3719 hilight_scale.3730 dirvec.2948 
        In
        Let Tb897.3734 : Bool =
          Let Td882.3751 : Float =
            Float(0.100000)
          In
          fless.2511 Td882.3751 energy.2947 
        In
        If 0 = Tb897.3734 Then
          ()
        Else
          Let Tu163.3735 : Unit =
            Let Ti887.3746 : Int =
              Int(4)
            In
            If Ti887.3746 <= nref.2946 Then
              ()
            Else
              Let Ti884.3747 : Int =
                Let Ti883.3750 : Int =
                  Int(1)
                In
                nref.2946 + Ti883.3750
              In
              Let Ti886.3748 : Int =
                Let Ti885.3749 : Int =
                  Int(1)
                In
                -Ti885.3749
              In
              surface_ids.3714.(Ti884.3747) <- Ti886.3748          In
          Let Ti896.3736 : Int =
            Int(2)
          In
          If m_surface.3718 = Ti896.3736 Then
            Let energy2.3737 : Float =
              Let Td890.3743 : Float =
                Let Td888.3744 : Float =
                  Float(1.000000)
                In
                Let Td889.3745 : Float =
                  o_diffuse.2688 obj.3717 
                In
                Td888.3744 -. Td889.3745
              In
              energy.2947 *. Td890.3743
            In
            Let Ti892.3738 : Int =
              Let Ti891.3742 : Int =
                Int(1)
              In
              nref.2946 + Ti891.3742
            In
            Let Td895.3739 : Float =
              Let Td894.3740 : Float =
                Let Ti893.3741 : Int =
                  Int(0)
                In
                tmin.2587.(Ti893.3741)              In
              dist.2950 +. Td894.3740
            In
            trace_ray.2945 Ti892.3738 energy2.3737 dirvec.2948 pixel.2949 Td895.3739 
          Else
            ()
    Else
      ()
  In
  Let Rec trace_diffuse_ray.2951 : Array(Float) * Array(Array(Float)) -> Float -> Unit ( dirvec.2952 energy.2953 ) =
    Let Tb826.3695 : Bool =
      judge_intersection_fast.2922 dirvec.2952 
    In
    If 0 = Tb826.3695 Then
      ()
    Else
      Let obj.3696 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
        Let Ti815.3711 : Int =
          Let Ti814.3712 : Int =
            Int(0)
          In
          intersected_object_id.2589.(Ti814.3712)        In
        objects.2578.(Ti815.3711)      In
      Let Tu178.3697 : Unit =
        Let Ta816.3710 : Array(Float) =
          d_vec.2725 dirvec.2952 
        In
        get_nvector.2930 obj.3696 Ta816.3710 
      In
      Let Tu177.3698 : Unit =
        utexture.2933 obj.3696 intersection_point.2588 
      In
      Let Tb825.3699 : Bool =
        Let Ti817.3707 : Int =
          Int(0)
        In
        Let Ta819.3708 : Array(Array(Int)) =
          Let Ti818.3709 : Int =
            Int(0)
          In
          or_net.2584.(Ti818.3709)        In
        shadow_check_one_or_matrix.2893 Ti817.3707 Ta819.3708 
      In
      If 0 = Tb825.3699 Then
        Let br.3700 : Float =
          Let Td820.3706 : Float =
            veciprod.2639 nvector.2590 light.2581 
          In
          fneg.2527 Td820.3706 
        In
        Let bright.3701 : Float =
          Let Tb821.3705 : Bool =
            fispos.2514 br.3700 
          In
          If 0 = Tb821.3705 Then
            Float(0.000000)
          Else
            Var(br.3700)
        In
        Let Td824.3702 : Float =
          Let Td822.3703 : Float =
            energy.2953 *. bright.3701
          In
          Let Td823.3704 : Float =
            o_diffuse.2688 obj.3696 
          In
          Td822.3703 *. Td823.3704
        In
        vecaccum.2647 diffuse_ray.2592 Td824.3702 texture_color.2591 
      Else
        ()
  In
  Let Rec iter_trace_diffuse_rays.2954 : Array(Array(Float) * Array(Array(Float))) -> Array(Float) -> Array(Float) -> Int -> Unit ( dirvec_group.2955 nvector.2956 org.2957 index.2958 ) =
    If 0 <= index.2958 Then
      Let p.3680 : Float =
        Let Ta802.3693 : Array(Float) =
          Let Tt801.3694 : Array(Float) * Array(Array(Float)) =
            dirvec_group.2955.(index.2958)          In
          d_vec.2725 Tt801.3694 
        In
        veciprod.2639 Ta802.3693 nvector.2956 
      In
      Let Tu179.3681 : Unit =
        Let Tb811.3684 : Bool =
          fisneg.2516 p.3680 
        In
        If 0 = Tb811.3684 Then
          Let Tt803.3690 : Array(Float) * Array(Array(Float)) =
            dirvec_group.2955.(index.2958)          In
          Let Td805.3691 : Float =
            Let Td804.3692 : Float =
              Float(150.000000)
            In
            p.3680 /. Td804.3692
          In
          trace_diffuse_ray.2951 Tt803.3690 Td805.3691 
        Else
          Let Tt808.3685 : Array(Float) * Array(Array(Float)) =
            Let Ti807.3688 : Int =
              Let Ti806.3689 : Int =
                Int(1)
              In
              index.2958 + Ti806.3689
            In
            dirvec_group.2955.(Ti807.3688)          In
          Let Td810.3686 : Float =
            Let Td809.3687 : Float =
              Float(-150.000000)
            In
            p.3680 /. Td809.3687
          In
          trace_diffuse_ray.2951 Tt808.3685 Td810.3686 
      In
      Let Ti813.3682 : Int =
        Let Ti812.3683 : Int =
          Int(2)
        In
        index.2958 - Ti812.3683
      In
      iter_trace_diffuse_rays.2954 dirvec_group.2955 nvector.2956 org.2957 Ti813.3682 
    Else
      ()
  In
  Let Rec trace_diffuse_rays.2959 : Array(Array(Float) * Array(Array(Float))) -> Array(Float) -> Array(Float) -> Unit ( dirvec_group.2960 nvector.2961 org.2962 ) =
    Let Tu180.3678 : Unit =
      setup_startp.2859 org.2962 
    In
    Let Ti800.3679 : Int =
      Int(118)
    In
    iter_trace_diffuse_rays.2954 dirvec_group.2960 nvector.2961 org.2962 Ti800.3679 
  In
  Let Rec trace_diffuse_ray_80percent.2963 : Int -> Array(Float) -> Array(Float) -> Unit ( group_id.2964 nvector.2965 org.2966 ) =
    Let Tu184.3661 : Unit =
      If 0 = group_id.2964 Then
        ()
      Else
        Let Ta788.3676 : Array(Array(Float) * Array(Array(Float))) =
          Let Ti787.3677 : Int =
            Int(0)
          In
          dirvecs.2603.(Ti787.3677)        In
        trace_diffuse_rays.2959 Ta788.3676 nvector.2965 org.2966 
    In
    Let Tu183.3662 : Unit =
      If 1 = group_id.2964 Then
        ()
      Else
        Let Ta790.3674 : Array(Array(Float) * Array(Array(Float))) =
          Let Ti789.3675 : Int =
            Int(1)
          In
          dirvecs.2603.(Ti789.3675)        In
        trace_diffuse_rays.2959 Ta790.3674 nvector.2965 org.2966 
    In
    Let Tu182.3663 : Unit =
      Let Ti793.3671 : Int =
        Int(2)
      In
      If group_id.2964 = Ti793.3671 Then
        ()
      Else
        Let Ta792.3672 : Array(Array(Float) * Array(Array(Float))) =
          Let Ti791.3673 : Int =
            Int(2)
          In
          dirvecs.2603.(Ti791.3673)        In
        trace_diffuse_rays.2959 Ta792.3672 nvector.2965 org.2966 
    In
    Let Tu181.3664 : Unit =
      Let Ti796.3668 : Int =
        Int(3)
      In
      If group_id.2964 = Ti796.3668 Then
        ()
      Else
        Let Ta795.3669 : Array(Array(Float) * Array(Array(Float))) =
          Let Ti794.3670 : Int =
            Int(3)
          In
          dirvecs.2603.(Ti794.3670)        In
        trace_diffuse_rays.2959 Ta795.3669 nvector.2965 org.2966 
    In
    Let Ti799.3665 : Int =
      Int(4)
    In
    If group_id.2964 = Ti799.3665 Then
      ()
    Else
      Let Ta798.3666 : Array(Array(Float) * Array(Array(Float))) =
        Let Ti797.3667 : Int =
          Int(4)
        In
        dirvecs.2603.(Ti797.3667)      In
      trace_diffuse_rays.2959 Ta798.3666 nvector.2965 org.2966 
  In
  Let Rec calc_diffuse_using_1point.2967 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit ( pixel.2968 nref.2969 ) =
    Let ray20p.3650 : Array(Array(Float)) =
      p_received_ray_20percent.2716 pixel.2968 
    In
    Let nvectors.3651 : Array(Array(Float)) =
      p_nvectors.2723 pixel.2968 
    In
    Let intersection_points.3652 : Array(Array(Float)) =
      p_intersection_points.2708 pixel.2968 
    In
    Let energya.3653 : Array(Array(Float)) =
      p_energy.2714 pixel.2968 
    In
    Let Tu186.3654 : Unit =
      Let Ta782.3660 : Array(Float) =
        ray20p.3650.(nref.2969)      In
      veccpy.2628 diffuse_ray.2592 Ta782.3660 
    In
    Let Tu185.3655 : Unit =
      Let Ti783.3657 : Int =
        p_group_id.2718 pixel.2968 
      In
      Let Ta784.3658 : Array(Float) =
        nvectors.3651.(nref.2969)      In
      Let Ta785.3659 : Array(Float) =
        intersection_points.3652.(nref.2969)      In
      trace_diffuse_ray_80percent.2963 Ti783.3657 Ta784.3658 Ta785.3659 
    In
    Let Ta786.3656 : Array(Float) =
      energya.3653.(nref.2969)    In
    vecaccumv.2660 rgb.2593 Ta786.3656 diffuse_ray.2592 
  In
  Let Rec calc_diffuse_using_5points.2970 : Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Unit ( x.2971 prev.2972 cur.2973 next.2974 nref.2975 ) =
    Let r_up.3623 : Array(Array(Float)) =
      Let Tt766.3649 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        prev.2972.(x.2971)      In
      p_received_ray_20percent.2716 Tt766.3649 
    In
    Let r_left.3624 : Array(Array(Float)) =
      Let Tt769.3646 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        Let Ti768.3647 : Int =
          Let Ti767.3648 : Int =
            Int(1)
          In
          x.2971 - Ti767.3648
        In
        cur.2973.(Ti768.3647)      In
      p_received_ray_20percent.2716 Tt769.3646 
    In
    Let r_center.3625 : Array(Array(Float)) =
      Let Tt770.3645 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        cur.2973.(x.2971)      In
      p_received_ray_20percent.2716 Tt770.3645 
    In
    Let r_right.3626 : Array(Array(Float)) =
      Let Tt773.3642 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        Let Ti772.3643 : Int =
          Let Ti771.3644 : Int =
            Int(1)
          In
          x.2971 + Ti771.3644
        In
        cur.2973.(Ti772.3643)      In
      p_received_ray_20percent.2716 Tt773.3642 
    In
    Let r_down.3627 : Array(Array(Float)) =
      Let Tt774.3641 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        next.2974.(x.2971)      In
      p_received_ray_20percent.2716 Tt774.3641 
    In
    Let Tu191.3628 : Unit =
      Let Ta775.3640 : Array(Float) =
        r_up.3623.(nref.2975)      In
      veccpy.2628 diffuse_ray.2592 Ta775.3640 
    In
    Let Tu190.3629 : Unit =
      Let Ta776.3639 : Array(Float) =
        r_left.3624.(nref.2975)      In
      vecadd.2651 diffuse_ray.2592 Ta776.3639 
    In
    Let Tu189.3630 : Unit =
      Let Ta777.3638 : Array(Float) =
        r_center.3625.(nref.2975)      In
      vecadd.2651 diffuse_ray.2592 Ta777.3638 
    In
    Let Tu188.3631 : Unit =
      Let Ta778.3637 : Array(Float) =
        r_right.3626.(nref.2975)      In
      vecadd.2651 diffuse_ray.2592 Ta778.3637 
    In
    Let Tu187.3632 : Unit =
      Let Ta779.3636 : Array(Float) =
        r_down.3627.(nref.2975)      In
      vecadd.2651 diffuse_ray.2592 Ta779.3636 
    In
    Let energya.3633 : Array(Array(Float)) =
      Let Tt780.3635 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        cur.2973.(x.2971)      In
      p_energy.2714 Tt780.3635 
    In
    Let Ta781.3634 : Array(Float) =
      energya.3633.(nref.2975)    In
    vecaccumv.2660 rgb.2593 Ta781.3634 diffuse_ray.2592 
  In
  Let Rec do_without_neighbors.2976 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit ( pixel.2977 nref.2978 ) =
    Let Ti765.3615 : Int =
      Int(4)
    In
    If nref.2978 <= Ti765.3615 Then
      Let surface_ids.3616 : Array(Int) =
        p_surface_ids.2710 pixel.2977 
      In
      Let Ti764.3617 : Int =
        surface_ids.3616.(nref.2978)      In
      If 0 <= Ti764.3617 Then
        Let calc_diffuse.3618 : Array(Bool) =
          p_calc_diffuse.2712 pixel.2977 
        In
        Let Tu192.3619 : Unit =
          Let Tb761.3622 : Bool =
            calc_diffuse.3618.(nref.2978)          In
          If 0 = Tb761.3622 Then
            ()
          Else
            calc_diffuse_using_1point.2967 pixel.2977 nref.2978 
        In
        Let Ti763.3620 : Int =
          Let Ti762.3621 : Int =
            Int(1)
          In
          nref.2978 + Ti762.3621
        In
        do_without_neighbors.2976 pixel.2977 Ti763.3620 
      Else
        ()
    Else
      ()
  In
  Let Rec neighbors_exist.2979 : Int -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Bool ( x.2980 y.2981 next.2982 ) =
    Let Ti759.3607 : Int =
      Let Ti753.3614 : Int =
        Int(1)
      In
      image_size.2594.(Ti753.3614)    In
    Let Ti760.3608 : Int =
      Let Ti754.3613 : Int =
        Int(1)
      In
      y.2981 + Ti754.3613
    In
    If Ti759.3607 <= Ti760.3608 Then
      Int(0)
    Else
      If y.2981 <= 0 Then
        Int(0)
      Else
        Let Ti757.3609 : Int =
          Let Ti755.3612 : Int =
            Int(0)
          In
          image_size.2594.(Ti755.3612)        In
        Let Ti758.3610 : Int =
          Let Ti756.3611 : Int =
            Int(1)
          In
          x.2980 + Ti756.3611
        In
        If Ti757.3609 <= Ti758.3610 Then
          Int(0)
        Else
          If x.2980 <= 0 Then
            Int(0)
          Else
            Int(1)
  In
  Let Rec get_surface_id.2983 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Int ( pixel.2984 index.2985 ) =
    Let surface_ids.3606 : Array(Int) =
      p_surface_ids.2710 pixel.2984 
    In
    surface_ids.3606.(index.2985)  In
  Let Rec neighbors_are_available.2986 : Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Bool ( x.2987 prev.2988 cur.2989 next.2990 nref.2991 ) =
    Let sid_center.3592 : Int =
      Let Tt740.3605 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        cur.2989.(x.2987)      In
      get_surface_id.2983 Tt740.3605 nref.2991 
    In
    Let Ti752.3593 : Int =
      Let Tt741.3604 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        prev.2988.(x.2987)      In
      get_surface_id.2983 Tt741.3604 nref.2991 
    In
    If Ti752.3593 = sid_center.3592 Then
      Let Ti751.3594 : Int =
        Let Tt742.3603 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
          next.2990.(x.2987)        In
        get_surface_id.2983 Tt742.3603 nref.2991 
      In
      If Ti751.3594 = sid_center.3592 Then
        Let Ti750.3595 : Int =
          Let Tt745.3600 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
            Let Ti744.3601 : Int =
              Let Ti743.3602 : Int =
                Int(1)
              In
              x.2987 - Ti743.3602
            In
            cur.2989.(Ti744.3601)          In
          get_surface_id.2983 Tt745.3600 nref.2991 
        In
        If Ti750.3595 = sid_center.3592 Then
          Let Ti749.3596 : Int =
            Let Tt748.3597 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
              Let Ti747.3598 : Int =
                Let Ti746.3599 : Int =
                  Int(1)
                In
                x.2987 + Ti746.3599
              In
              cur.2989.(Ti747.3598)            In
            get_surface_id.2983 Tt748.3597 nref.2991 
          In
          If Ti749.3596 = sid_center.3592 Then
            Int(1)
          Else
            Int(0)
        Else
          Int(0)
      Else
        Int(0)
    Else
      Int(0)
  In
  Let Rec try_exploit_neighbors.2992 : Int -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Unit ( x.2993 y.2994 prev.2995 cur.2996 next.2997 nref.2998 ) =
    Let pixel.3582 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
      cur.2996.(x.2993)    In
    Let Ti739.3583 : Int =
      Int(4)
    In
    If nref.2998 <= Ti739.3583 Then
      Let Ti738.3584 : Int =
        get_surface_id.2983 pixel.3582 nref.2998 
      In
      If 0 <= Ti738.3584 Then
        Let Tb737.3585 : Bool =
          neighbors_are_available.2986 x.2993 prev.2995 cur.2996 next.2997 nref.2998 
        In
        If 0 = Tb737.3585 Then
          Let Tt733.3591 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
            cur.2996.(x.2993)          In
          do_without_neighbors.2976 Tt733.3591 nref.2998 
        Else
          Let calc_diffuse.3586 : Array(Bool) =
            p_calc_diffuse.2712 pixel.3582 
          In
          Let Tu193.3587 : Unit =
            Let Tb734.3590 : Bool =
              calc_diffuse.3586.(nref.2998)            In
            If 0 = Tb734.3590 Then
              ()
            Else
              calc_diffuse_using_5points.2970 x.2993 prev.2995 cur.2996 next.2997 nref.2998 
          In
          Let Ti736.3588 : Int =
            Let Ti735.3589 : Int =
              Int(1)
            In
            nref.2998 + Ti735.3589
          In
          try_exploit_neighbors.2992 x.2993 y.2994 prev.2995 cur.2996 next.2997 Ti736.3588 
      Else
        ()
    Else
      ()
  In
  Let Rec write_ppm_header.2999 : Unit -> Unit ( Tu194.3000 ) =
    Let Tu202.3561 : Unit =
      Let Ti720.3581 : Int =
        Int(80)
      In
      ExtFun:print_char Ti720.3581 
    In
    Let Tu201.3562 : Unit =
      Let Ti723.3578 : Int =
        Let Ti721.3579 : Int =
          Int(48)
        In
        Let Ti722.3580 : Int =
          Int(3)
        In
        Ti721.3579 + Ti722.3580
      In
      ExtFun:print_char Ti723.3578 
    In
    Let Tu200.3563 : Unit =
      Let Ti724.3577 : Int =
        Int(10)
      In
      ExtFun:print_char Ti724.3577 
    In
    Let Tu199.3564 : Unit =
      Let Ti726.3575 : Int =
        Let Ti725.3576 : Int =
          Int(0)
        In
        image_size.2594.(Ti725.3576)      In
      print_int.2575 Ti726.3575 
    In
    Let Tu198.3565 : Unit =
      Let Ti727.3574 : Int =
        Int(32)
      In
      ExtFun:print_char Ti727.3574 
    In
    Let Tu197.3566 : Unit =
      Let Ti729.3572 : Int =
        Let Ti728.3573 : Int =
          Int(1)
        In
        image_size.2594.(Ti728.3573)      In
      print_int.2575 Ti729.3572 
    In
    Let Tu196.3567 : Unit =
      Let Ti730.3571 : Int =
        Int(32)
      In
      ExtFun:print_char Ti730.3571 
    In
    Let Tu195.3568 : Unit =
      Let Ti731.3570 : Int =
        Int(255)
      In
      print_int.2575 Ti731.3570 
    In
    Let Ti732.3569 : Int =
      Int(10)
    In
    ExtFun:print_char Ti732.3569 
  In
  Let Rec write_rgb_element.3001 : Float -> Unit ( x.3002 ) =
    Let ix.3558 : Int =
      ExtFun:int_of_float x.3002 
    In
    Let elem.3559 : Int =
      Let Ti719.3560 : Int =
        Int(255)
      In
      If ix.3558 <= Ti719.3560 Then
        If 0 <= ix.3558 Then
          Var(ix.3558)
        Else
          Int(0)
      Else
        Int(255)
    In
    print_int.2575 elem.3559 
  In
  Let Rec write_rgb.3003 : Unit -> Unit ( Tu203.3004 ) =
    Let Tu208.3544 : Unit =
      Let Td711.3556 : Float =
        Let Ti710.3557 : Int =
          Int(0)
        In
        rgb.2593.(Ti710.3557)      In
      write_rgb_element.3001 Td711.3556 
    In
    Let Tu207.3545 : Unit =
      Let Ti712.3555 : Int =
        Int(32)
      In
      ExtFun:print_char Ti712.3555 
    In
    Let Tu206.3546 : Unit =
      Let Td714.3553 : Float =
        Let Ti713.3554 : Int =
          Int(1)
        In
        rgb.2593.(Ti713.3554)      In
      write_rgb_element.3001 Td714.3553 
    In
    Let Tu205.3547 : Unit =
      Let Ti715.3552 : Int =
        Int(32)
      In
      ExtFun:print_char Ti715.3552 
    In
    Let Tu204.3548 : Unit =
      Let Td717.3550 : Float =
        Let Ti716.3551 : Int =
          Int(2)
        In
        rgb.2593.(Ti716.3551)      In
      write_rgb_element.3001 Td717.3550 
    In
    Let Ti718.3549 : Int =
      Int(10)
    In
    ExtFun:print_char Ti718.3549 
  In
  Let Rec pretrace_diffuse_rays.3005 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit ( pixel.3006 nref.3007 ) =
    Let Ti709.3527 : Int =
      Int(4)
    In
    If nref.3007 <= Ti709.3527 Then
      Let sid.3528 : Int =
        get_surface_id.2983 pixel.3006 nref.3007 
      In
      If 0 <= sid.3528 Then
        Let calc_diffuse.3529 : Array(Bool) =
          p_calc_diffuse.2712 pixel.3006 
        In
        Let Tu211.3530 : Unit =
          Let Tb706.3533 : Bool =
            calc_diffuse.3529.(nref.3007)          In
          If 0 = Tb706.3533 Then
            ()
          Else
            Let group_id.3534 : Int =
              p_group_id.2718 pixel.3006 
            In
            Let Tu210.3535 : Unit =
              vecbzero.2626 diffuse_ray.2592 
            In
            Let nvectors.3536 : Array(Array(Float)) =
              p_nvectors.2723 pixel.3006 
            In
            Let intersection_points.3537 : Array(Array(Float)) =
              p_intersection_points.2708 pixel.3006 
            In
            Let Tu209.3538 : Unit =
              Let Ta702.3541 : Array(Array(Float) * Array(Array(Float))) =
                dirvecs.2603.(group_id.3534)              In
              Let Ta703.3542 : Array(Float) =
                nvectors.3536.(nref.3007)              In
              Let Ta704.3543 : Array(Float) =
                intersection_points.3537.(nref.3007)              In
              trace_diffuse_rays.2959 Ta702.3541 Ta703.3542 Ta704.3543 
            In
            Let ray20p.3539 : Array(Array(Float)) =
              p_received_ray_20percent.2716 pixel.3006 
            In
            Let Ta705.3540 : Array(Float) =
              ray20p.3539.(nref.3007)            In
            veccpy.2628 Ta705.3540 diffuse_ray.2592 
        In
        Let Ti708.3531 : Int =
          Let Ti707.3532 : Int =
            Int(1)
          In
          nref.3007 + Ti707.3532
        In
        pretrace_diffuse_rays.3005 pixel.3006 Ti708.3531 
      Else
        ()
    Else
      ()
  In
  Let Rec pretrace_pixels.3008 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Int -> Float -> Float -> Float -> Unit ( line.3009 x.3010 group_id.3011 lc0.3012 lc1.3013 lc2.3014 ) =
    If 0 <= x.3010 Then
      Let xdisp.3481 : Float =
        Let Td668.3521 : Float =
          Let Ti667.3526 : Int =
            Int(0)
          In
          scan_pitch.2596.(Ti667.3526)        In
        Let Td672.3522 : Float =
          Let Ti671.3523 : Int =
            Let Ti670.3524 : Int =
              Let Ti669.3525 : Int =
                Int(0)
              In
              image_center.2595.(Ti669.3525)            In
            x.3010 - Ti670.3524
          In
          ExtFun:float_of_int Ti671.3523 
        In
        Td668.3521 *. Td672.3522
      In
      Let Tu221.3482 : Unit =
        Let Ti673.3516 : Int =
          Int(0)
        In
        Let Td677.3517 : Float =
          Let Td676.3518 : Float =
            Let Td675.3519 : Float =
              Let Ti674.3520 : Int =
                Int(0)
              In
              screenx_dir.2599.(Ti674.3520)            In
            xdisp.3481 *. Td675.3519
          In
          Td676.3518 +. lc0.3012
        In
        ptrace_dirvec.2602.(Ti673.3516) <- Td677.3517      In
      Let Tu220.3483 : Unit =
        Let Ti678.3511 : Int =
          Int(1)
        In
        Let Td682.3512 : Float =
          Let Td681.3513 : Float =
            Let Td680.3514 : Float =
              Let Ti679.3515 : Int =
                Int(1)
              In
              screenx_dir.2599.(Ti679.3515)            In
            xdisp.3481 *. Td680.3514
          In
          Td681.3513 +. lc1.3013
        In
        ptrace_dirvec.2602.(Ti678.3511) <- Td682.3512      In
      Let Tu219.3484 : Unit =
        Let Ti683.3506 : Int =
          Int(2)
        In
        Let Td687.3507 : Float =
          Let Td686.3508 : Float =
            Let Td685.3509 : Float =
              Let Ti684.3510 : Int =
                Int(2)
              In
              screenx_dir.2599.(Ti684.3510)            In
            xdisp.3481 *. Td685.3509
          In
          Td686.3508 +. lc2.3014
        In
        ptrace_dirvec.2602.(Ti683.3506) <- Td687.3507      In
      Let Tu218.3485 : Unit =
        Let Ti688.3505 : Int =
          Int(0)
        In
        vecunit_sgn.2636 ptrace_dirvec.2602 Ti688.3505 
      In
      Let Tu217.3486 : Unit =
        vecbzero.2626 rgb.2593 
      In
      Let Tu216.3487 : Unit =
        veccpy.2628 startp.2597 viewpoint.2580 
      In
      Let Tu215.3488 : Unit =
        Let Ti689.3501 : Int =
          Int(0)
        In
        Let Td690.3502 : Float =
          Float(1.000000)
        In
        Let Tt691.3503 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
          line.3009.(x.3010)        In
        Let Td692.3504 : Float =
          Float(0.000000)
        In
        trace_ray.2945 Ti689.3501 Td690.3502 ptrace_dirvec.2602 Tt691.3503 Td692.3504 
      In
      Let Tu214.3489 : Unit =
        Let Ta694.3499 : Array(Float) =
          Let Tt693.3500 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
            line.3009.(x.3010)          In
          p_rgb.2706 Tt693.3500 
        In
        veccpy.2628 Ta694.3499 rgb.2593 
      In
      Let Tu213.3490 : Unit =
        Let Tt695.3498 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
          line.3009.(x.3010)        In
        p_set_group_id.2720 Tt695.3498 group_id.3011 
      In
      Let Tu212.3491 : Unit =
        Let Tt696.3496 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
          line.3009.(x.3010)        In
        Let Ti697.3497 : Int =
          Int(0)
        In
        pretrace_diffuse_rays.3005 Tt696.3496 Ti697.3497 
      In
      Let Ti699.3492 : Int =
        Let Ti698.3495 : Int =
          Int(1)
        In
        x.3010 - Ti698.3495
      In
      Let Ti701.3493 : Int =
        Let Ti700.3494 : Int =
          Int(1)
        In
        add_mod5.2615 group_id.3011 Ti700.3494 
      In
      pretrace_pixels.3008 line.3009 Ti699.3492 Ti701.3493 lc0.3012 lc1.3013 lc2.3014 
    Else
      ()
  In
  Let Rec pretrace_line.3015 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Int -> Unit ( line.3016 y.3017 group_id.3018 ) =
    Let ydisp.3452 : Float =
      Let Td643.3475 : Float =
        Let Ti642.3480 : Int =
          Int(0)
        In
        scan_pitch.2596.(Ti642.3480)      In
      Let Td647.3476 : Float =
        Let Ti646.3477 : Int =
          Let Ti645.3478 : Int =
            Let Ti644.3479 : Int =
              Int(1)
            In
            image_center.2595.(Ti644.3479)          In
          y.3017 - Ti645.3478
        In
        ExtFun:float_of_int Ti646.3477 
      In
      Td643.3475 *. Td647.3476
    In
    Let lc0.3453 : Float =
      Let Td650.3470 : Float =
        Let Td649.3473 : Float =
          Let Ti648.3474 : Int =
            Int(0)
          In
          screeny_dir.2600.(Ti648.3474)        In
        ydisp.3452 *. Td649.3473
      In
      Let Td652.3471 : Float =
        Let Ti651.3472 : Int =
          Int(0)
        In
        screenz_dir.2601.(Ti651.3472)      In
      Td650.3470 +. Td652.3471
    In
    Let lc1.3454 : Float =
      Let Td655.3465 : Float =
        Let Td654.3468 : Float =
          Let Ti653.3469 : Int =
            Int(1)
          In
          screeny_dir.2600.(Ti653.3469)        In
        ydisp.3452 *. Td654.3468
      In
      Let Td657.3466 : Float =
        Let Ti656.3467 : Int =
          Int(1)
        In
        screenz_dir.2601.(Ti656.3467)      In
      Td655.3465 +. Td657.3466
    In
    Let lc2.3455 : Float =
      Let Td660.3460 : Float =
        Let Td659.3463 : Float =
          Let Ti658.3464 : Int =
            Int(2)
          In
          screeny_dir.2600.(Ti658.3464)        In
        ydisp.3452 *. Td659.3463
      In
      Let Td662.3461 : Float =
        Let Ti661.3462 : Int =
          Int(2)
        In
        screenz_dir.2601.(Ti661.3462)      In
      Td660.3460 +. Td662.3461
    In
    Let Ti666.3456 : Int =
      Let Ti664.3457 : Int =
        Let Ti663.3459 : Int =
          Int(0)
        In
        image_size.2594.(Ti663.3459)      In
      Let Ti665.3458 : Int =
        Int(1)
      In
      Ti664.3457 - Ti665.3458
    In
    pretrace_pixels.3008 line.3016 Ti666.3456 group_id.3018 lc0.3453 lc1.3454 lc2.3455 
  In
  Let Rec scan_pixel.3019 : Int -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Unit ( x.3020 y.3021 prev.3022 cur.3023 next.3024 ) =
    Let Ti641.3438 : Int =
      Let Ti631.3451 : Int =
        Int(0)
      In
      image_size.2594.(Ti631.3451)    In
    If Ti641.3438 <= x.3020 Then
      ()
    Else
      Let Tu224.3439 : Unit =
        Let Ta633.3449 : Array(Float) =
          Let Tt632.3450 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
            cur.3023.(x.3020)          In
          p_rgb.2706 Tt632.3450 
        In
        veccpy.2628 rgb.2593 Ta633.3449 
      In
      Let Tu223.3440 : Unit =
        Let Tb637.3445 : Bool =
          neighbors_exist.2979 x.3020 y.3021 next.3024 
        In
        If 0 = Tb637.3445 Then
          Let Tt634.3447 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
            cur.3023.(x.3020)          In
          Let Ti635.3448 : Int =
            Int(0)
          In
          do_without_neighbors.2976 Tt634.3447 Ti635.3448 
        Else
          Let Ti636.3446 : Int =
            Int(0)
          In
          try_exploit_neighbors.2992 x.3020 y.3021 prev.3022 cur.3023 next.3024 Ti636.3446 
      In
      Let Tu222.3441 : Unit =
        Let Tu638.3444 : Unit =
          ()
        In
        write_rgb.3003 Tu638.3444 
      In
      Let Ti640.3442 : Int =
        Let Ti639.3443 : Int =
          Int(1)
        In
        x.3020 + Ti639.3443
      In
      scan_pixel.3019 Ti640.3442 y.3021 prev.3022 cur.3023 next.3024 
  In
  Let Rec scan_line.3025 : Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Unit ( y.3026 prev.3027 cur.3028 next.3029 group_id.3030 ) =
    Let Ti630.3423 : Int =
      Let Ti618.3437 : Int =
        Int(1)
      In
      image_size.2594.(Ti618.3437)    In
    If Ti630.3423 <= y.3026 Then
      ()
    Else
      Let Tu226.3424 : Unit =
        Let Ti624.3431 : Int =
          Let Ti620.3434 : Int =
            Let Ti619.3436 : Int =
              Int(1)
            In
            image_size.2594.(Ti619.3436)          In
          Let Ti621.3435 : Int =
            Int(1)
          In
          Ti620.3434 - Ti621.3435
        In
        If Ti624.3431 <= y.3026 Then
          ()
        Else
          Let Ti623.3432 : Int =
            Let Ti622.3433 : Int =
              Int(1)
            In
            y.3026 + Ti622.3433
          In
          pretrace_line.3015 next.3029 Ti623.3432 group_id.3030 
      In
      Let Tu225.3425 : Unit =
        Let Ti625.3430 : Int =
          Int(0)
        In
        scan_pixel.3019 Ti625.3430 y.3026 prev.3027 cur.3028 next.3029 
      In
      Let Ti627.3426 : Int =
        Let Ti626.3429 : Int =
          Int(1)
        In
        y.3026 + Ti626.3429
      In
      Let Ti629.3427 : Int =
        Let Ti628.3428 : Int =
          Int(2)
        In
        add_mod5.2615 group_id.3030 Ti628.3428 
      In
      scan_line.3025 Ti627.3426 cur.3028 next.3029 prev.3027 Ti629.3427 
  In
  Let Rec create_float5x3array.3031 : Unit -> Array(Array(Float)) ( Tu227.3032 ) =
    Let vec.3398 : Array(Float) =
      Let Ti599.3421 : Int =
        Int(3)
      In
      Let Td600.3422 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti599.3421 Td600.3422 
    In
    Let array.3399 : Array(Array(Float)) =
      Let Ti601.3420 : Int =
        Int(5)
      In
      ExtFun:create_array Ti601.3420 vec.3398 
    In
    Let Tu231.3400 : Unit =
      Let Ti602.3416 : Int =
        Int(1)
      In
      Let Ta605.3417 : Array(Float) =
        Let Ti603.3418 : Int =
          Int(3)
        In
        Let Td604.3419 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti603.3418 Td604.3419 
      In
      array.3399.(Ti602.3416) <- Ta605.3417    In
    Let Tu230.3401 : Unit =
      Let Ti606.3412 : Int =
        Int(2)
      In
      Let Ta609.3413 : Array(Float) =
        Let Ti607.3414 : Int =
          Int(3)
        In
        Let Td608.3415 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti607.3414 Td608.3415 
      In
      array.3399.(Ti606.3412) <- Ta609.3413    In
    Let Tu229.3402 : Unit =
      Let Ti610.3408 : Int =
        Int(3)
      In
      Let Ta613.3409 : Array(Float) =
        Let Ti611.3410 : Int =
          Int(3)
        In
        Let Td612.3411 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti611.3410 Td612.3411 
      In
      array.3399.(Ti610.3408) <- Ta613.3409    In
    Let Tu228.3403 : Unit =
      Let Ti614.3404 : Int =
        Int(4)
      In
      Let Ta617.3405 : Array(Float) =
        Let Ti615.3406 : Int =
          Int(3)
        In
        Let Td616.3407 : Float =
          Float(0.000000)
        In
        ExtFun:create_float_array Ti615.3406 Td616.3407 
      In
      array.3399.(Ti614.3404) <- Ta617.3405    In
    Var(array.3399)
  In
  Let Rec create_pixel.3033 : Unit -> Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) ( Tu232.3034 ) =
    Let m_rgb.3378 : Array(Float) =
      Let Ti587.3396 : Int =
        Int(3)
      In
      Let Td588.3397 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti587.3396 Td588.3397 
    In
    Let m_isect_ps.3379 : Array(Array(Float)) =
      Let Tu589.3395 : Unit =
        ()
      In
      create_float5x3array.3031 Tu589.3395 
    In
    Let m_sids.3380 : Array(Int) =
      Let Ti590.3393 : Int =
        Int(5)
      In
      Let Ti591.3394 : Int =
        Int(0)
      In
      ExtFun:create_array Ti590.3393 Ti591.3394 
    In
    Let m_cdif.3381 : Array(Bool) =
      Let Ti592.3391 : Int =
        Int(5)
      In
      Let Ti593.3392 : Int =
        Int(0)
      In
      ExtFun:create_array Ti592.3391 Ti593.3392 
    In
    Let m_engy.3382 : Array(Array(Float)) =
      Let Tu594.3390 : Unit =
        ()
      In
      create_float5x3array.3031 Tu594.3390 
    In
    Let m_r20p.3383 : Array(Array(Float)) =
      Let Tu595.3389 : Unit =
        ()
      In
      create_float5x3array.3031 Tu595.3389 
    In
    Let m_gid.3384 : Array(Int) =
      Let Ti596.3387 : Int =
        Int(1)
      In
      Let Ti597.3388 : Int =
        Int(0)
      In
      ExtFun:create_array Ti596.3387 Ti597.3388 
    In
    Let m_nvectors.3385 : Array(Array(Float)) =
      Let Tu598.3386 : Unit =
        ()
      In
      create_float5x3array.3031 Tu598.3386 
    In
    (m_rgb.3378, m_isect_ps.3379, m_sids.3380, m_cdif.3381, m_engy.3382, m_r20p.3383, m_gid.3384, m_nvectors.3385, )
  In
  Let Rec init_line_elements.3035 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) ( line.3036 n.3037 ) =
    If 0 <= n.3037 Then
      Let Tu233.3373 : Unit =
        Let Tt584.3376 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
          Let Tu583.3377 : Unit =
            ()
          In
          create_pixel.3033 Tu583.3377 
        In
        line.3036.(n.3037) <- Tt584.3376      In
      Let Ti586.3374 : Int =
        Let Ti585.3375 : Int =
          Int(1)
        In
        n.3037 - Ti585.3375
      In
      init_line_elements.3035 line.3036 Ti586.3374 
    Else
      Var(line.3036)
  In
  Let Rec create_pixelline.3038 : Unit -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) ( Tu234.3039 ) =
    Let line.3364 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) =
      Let Ti576.3369 : Int =
        Let Ti575.3372 : Int =
          Int(0)
        In
        image_size.2594.(Ti575.3372)      In
      Let Tt578.3370 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        Let Tu577.3371 : Unit =
          ()
        In
        create_pixel.3033 Tu577.3371 
      In
      ExtFun:create_array Ti576.3369 Tt578.3370 
    In
    Let Ti582.3365 : Int =
      Let Ti580.3366 : Int =
        Let Ti579.3368 : Int =
          Int(0)
        In
        image_size.2594.(Ti579.3368)      In
      Let Ti581.3367 : Int =
        Int(2)
      In
      Ti580.3366 - Ti581.3367
    In
    init_line_elements.3035 line.3364 Ti582.3365 
  In
  Let Rec tan.3040 : Float -> Float ( x.3041 ) =
    Let Td573.3362 : Float =
      sin.2546 x.3041 
    In
    Let Td574.3363 : Float =
      cos.2548 x.3041 
    In
    Td573.3362 /. Td574.3363
  In
  Let Rec adjust_position.3042 : Float -> Float -> Float ( h.3043 ratio.3044 ) =
    Let l.3353 : Float =
      Let Td570.3359 : Float =
        Let Td568.3360 : Float =
          h.3043 *. h.3043
        In
        Let Td569.3361 : Float =
          Float(0.100000)
        In
        Td568.3360 +. Td569.3361
      In
      ExtFun:sqrt Td570.3359 
    In
    Let tan_h.3354 : Float =
      Let Td571.3358 : Float =
        Float(1.000000)
      In
      Td571.3358 /. l.3353
    In
    Let theta_h.3355 : Float =
      atan.2540 tan_h.3354 
    In
    Let tan_m.3356 : Float =
      Let Td572.3357 : Float =
        theta_h.3355 *. ratio.3044
      In
      tan.3040 Td572.3357 
    In
    tan_m.3356 *. l.3353
  In
  Let Rec calc_dirvec.3045 : Int -> Float -> Float -> Float -> Float -> Int -> Int -> Unit ( icount.3046 x.3047 y.3048 rx.3049 ry.3050 group_id.3051 index.3052 ) =
    Let Ti567.3301 : Int =
      Int(5)
    In
    If Ti567.3301 <= icount.3046 Then
      Let l.3306 : Float =
        Let Td531.3348 : Float =
          Let Td529.3349 : Float =
            Let Td527.3351 : Float =
              fsqr.2531 x.3047 
            In
            Let Td528.3352 : Float =
              fsqr.2531 y.3048 
            In
            Td527.3351 +. Td528.3352
          In
          Let Td530.3350 : Float =
            Float(1.000000)
          In
          Td529.3349 +. Td530.3350
        In
        ExtFun:sqrt Td531.3348 
      In
      Let vx.3307 : Float =
        x.3047 /. l.3306
      In
      Let vy.3308 : Float =
        y.3048 /. l.3306
      In
      Let vz.3309 : Float =
        Let Td532.3347 : Float =
          Float(1.000000)
        In
        Td532.3347 /. l.3306
      In
      Let dgroup.3310 : Array(Array(Float) * Array(Array(Float))) =
        dirvecs.2603.(group_id.3051)      In
      Let Tu239.3311 : Unit =
        Let Ta534.3345 : Array(Float) =
          Let Tt533.3346 : Array(Float) * Array(Array(Float)) =
            dgroup.3310.(index.3052)          In
          d_vec.2725 Tt533.3346 
        In
        vecset.2618 Ta534.3345 vx.3307 vy.3308 vz.3309 
      In
      Let Tu238.3312 : Unit =
        Let Ta538.3340 : Array(Float) =
          Let Tt537.3342 : Array(Float) * Array(Array(Float)) =
            Let Ti536.3343 : Int =
              Let Ti535.3344 : Int =
                Int(40)
              In
              index.3052 + Ti535.3344
            In
            dgroup.3310.(Ti536.3343)          In
          d_vec.2725 Tt537.3342 
        In
        Let Td539.3341 : Float =
          fneg.2527 vy.3308 
        In
        vecset.2618 Ta538.3340 vx.3307 vz.3309 Td539.3341 
      In
      Let Tu237.3313 : Unit =
        Let Ta543.3334 : Array(Float) =
          Let Tt542.3337 : Array(Float) * Array(Array(Float)) =
            Let Ti541.3338 : Int =
              Let Ti540.3339 : Int =
                Int(80)
              In
              index.3052 + Ti540.3339
            In
            dgroup.3310.(Ti541.3338)          In
          d_vec.2725 Tt542.3337 
        In
        Let Td544.3335 : Float =
          fneg.2527 vx.3307 
        In
        Let Td545.3336 : Float =
          fneg.2527 vy.3308 
        In
        vecset.2618 Ta543.3334 vz.3309 Td544.3335 Td545.3336 
      In
      Let Tu236.3314 : Unit =
        Let Ta549.3327 : Array(Float) =
          Let Tt548.3331 : Array(Float) * Array(Array(Float)) =
            Let Ti547.3332 : Int =
              Let Ti546.3333 : Int =
                Int(1)
              In
              index.3052 + Ti546.3333
            In
            dgroup.3310.(Ti547.3332)          In
          d_vec.2725 Tt548.3331 
        In
        Let Td550.3328 : Float =
          fneg.2527 vx.3307 
        In
        Let Td551.3329 : Float =
          fneg.2527 vy.3308 
        In
        Let Td552.3330 : Float =
          fneg.2527 vz.3309 
        In
        vecset.2618 Ta549.3327 Td550.3328 Td551.3329 Td552.3330 
      In
      Let Tu235.3315 : Unit =
        Let Ta556.3321 : Array(Float) =
          Let Tt555.3324 : Array(Float) * Array(Array(Float)) =
            Let Ti554.3325 : Int =
              Let Ti553.3326 : Int =
                Int(41)
              In
              index.3052 + Ti553.3326
            In
            dgroup.3310.(Ti554.3325)          In
          d_vec.2725 Tt555.3324 
        In
        Let Td557.3322 : Float =
          fneg.2527 vx.3307 
        In
        Let Td558.3323 : Float =
          fneg.2527 vz.3309 
        In
        vecset.2618 Ta556.3321 Td557.3322 Td558.3323 vy.3308 
      In
      Let Ta562.3316 : Array(Float) =
        Let Tt561.3318 : Array(Float) * Array(Array(Float)) =
          Let Ti560.3319 : Int =
            Let Ti559.3320 : Int =
              Int(81)
            In
            index.3052 + Ti559.3320
          In
          dgroup.3310.(Ti560.3319)        In
        d_vec.2725 Tt561.3318 
      In
      Let Td563.3317 : Float =
        fneg.2527 vz.3309 
      In
      vecset.2618 Ta562.3316 Td563.3317 vx.3307 vy.3308 
    Else
      Let x2.3302 : Float =
        adjust_position.3042 y.3048 rx.3049 
      In
      Let Ti565.3303 : Int =
        Let Ti564.3305 : Int =
          Int(1)
        In
        icount.3046 + Ti564.3305
      In
      Let Td566.3304 : Float =
        adjust_position.3042 x2.3302 ry.3050 
      In
      calc_dirvec.3045 Ti565.3303 x2.3302 Td566.3304 rx.3049 ry.3050 group_id.3051 index.3052 
  In
  Let Rec calc_dirvecs.3053 : Int -> Float -> Int -> Int -> Unit ( col.3054 ry.3055 group_id.3056 index.3057 ) =
    If 0 <= col.3054 Then
      Let rx.3277 : Float =
        Let Td509.3297 : Float =
          Let Td507.3299 : Float =
            ExtFun:float_of_int col.3054 
          In
          Let Td508.3300 : Float =
            Float(0.200000)
          In
          Td507.3299 *. Td508.3300
        In
        Let Td510.3298 : Float =
          Float(0.900000)
        In
        Td509.3297 -. Td510.3298
      In
      Let Tu241.3278 : Unit =
        Let Ti511.3294 : Int =
          Int(0)
        In
        Let Td512.3295 : Float =
          Float(0.000000)
        In
        Let Td513.3296 : Float =
          Float(0.000000)
        In
        calc_dirvec.3045 Ti511.3294 Td512.3295 Td513.3296 rx.3277 ry.3055 group_id.3056 index.3057 
      In
      Let rx2.3279 : Float =
        Let Td516.3290 : Float =
          Let Td514.3292 : Float =
            ExtFun:float_of_int col.3054 
          In
          Let Td515.3293 : Float =
            Float(0.200000)
          In
          Td514.3292 *. Td515.3293
        In
        Let Td517.3291 : Float =
          Float(0.100000)
        In
        Td516.3290 +. Td517.3291
      In
      Let Tu240.3280 : Unit =
        Let Ti518.3285 : Int =
          Int(0)
        In
        Let Td519.3286 : Float =
          Float(0.000000)
        In
        Let Td520.3287 : Float =
          Float(0.000000)
        In
        Let Ti522.3288 : Int =
          Let Ti521.3289 : Int =
            Int(2)
          In
          index.3057 + Ti521.3289
        In
        calc_dirvec.3045 Ti518.3285 Td519.3286 Td520.3287 rx2.3279 ry.3055 group_id.3056 Ti522.3288 
      In
      Let Ti524.3281 : Int =
        Let Ti523.3284 : Int =
          Int(1)
        In
        col.3054 - Ti523.3284
      In
      Let Ti526.3282 : Int =
        Let Ti525.3283 : Int =
          Int(1)
        In
        add_mod5.2615 group_id.3056 Ti525.3283 
      In
      calc_dirvecs.3053 Ti524.3281 ry.3055 Ti526.3282 index.3057 
    Else
      ()
  In
  Let Rec calc_dirvec_rows.3058 : Int -> Int -> Int -> Unit ( row.3059 group_id.3060 index.3061 ) =
    If 0 <= row.3059 Then
      Let ry.3264 : Float =
        Let Td498.3273 : Float =
          Let Td496.3275 : Float =
            ExtFun:float_of_int row.3059 
          In
          Let Td497.3276 : Float =
            Float(0.200000)
          In
          Td496.3275 *. Td497.3276
        In
        Let Td499.3274 : Float =
          Float(0.900000)
        In
        Td498.3273 -. Td499.3274
      In
      Let Tu242.3265 : Unit =
        Let Ti500.3272 : Int =
          Int(4)
        In
        calc_dirvecs.3053 Ti500.3272 ry.3264 group_id.3060 index.3061 
      In
      Let Ti502.3266 : Int =
        Let Ti501.3271 : Int =
          Int(1)
        In
        row.3059 - Ti501.3271
      In
      Let Ti504.3267 : Int =
        Let Ti503.3270 : Int =
          Int(2)
        In
        add_mod5.2615 group_id.3060 Ti503.3270 
      In
      Let Ti506.3268 : Int =
        Let Ti505.3269 : Int =
          Int(4)
        In
        index.3061 + Ti505.3269
      In
      calc_dirvec_rows.3058 Ti502.3266 Ti504.3267 Ti506.3268 
    Else
      ()
  In
  Let Rec create_dirvec.3062 : Unit -> Array(Float) * Array(Array(Float)) ( Tu243.3063 ) =
    Let v3.3258 : Array(Float) =
      Let Ti492.3262 : Int =
        Int(3)
      In
      Let Td493.3263 : Float =
        Float(0.000000)
      In
      ExtFun:create_float_array Ti492.3262 Td493.3263 
    In
    Let consts.3259 : Array(Array(Float)) =
      Let Ti495.3260 : Int =
        Let Ti494.3261 : Int =
          Int(0)
        In
        n_objects.2577.(Ti494.3261)      In
      ExtFun:create_array Ti495.3260 v3.3258 
    In
    (v3.3258, consts.3259, )
  In
  Let Rec create_dirvec_elements.3064 : Array(Array(Float) * Array(Array(Float))) -> Int -> Unit ( d.3065 index.3066 ) =
    If 0 <= index.3066 Then
      Let Tu244.3253 : Unit =
        Let Tt489.3256 : Array(Float) * Array(Array(Float)) =
          Let Tu488.3257 : Unit =
            ()
          In
          create_dirvec.3062 Tu488.3257 
        In
        d.3065.(index.3066) <- Tt489.3256      In
      Let Ti491.3254 : Int =
        Let Ti490.3255 : Int =
          Int(1)
        In
        index.3066 - Ti490.3255
      In
      create_dirvec_elements.3064 d.3065 Ti491.3254 
    Else
      ()
  In
  Let Rec create_dirvecs.3067 : Int -> Unit ( index.3068 ) =
    If 0 <= index.3068 Then
      Let Tu246.3243 : Unit =
        Let Ta483.3249 : Array(Array(Float) * Array(Array(Float))) =
          Let Ti480.3250 : Int =
            Int(120)
          In
          Let Tt482.3251 : Array(Float) * Array(Array(Float)) =
            Let Tu481.3252 : Unit =
              ()
            In
            create_dirvec.3062 Tu481.3252 
          In
          ExtFun:create_array Ti480.3250 Tt482.3251 
        In
        dirvecs.2603.(index.3068) <- Ta483.3249      In
      Let Tu245.3244 : Unit =
        Let Ta484.3247 : Array(Array(Float) * Array(Array(Float))) =
          dirvecs.2603.(index.3068)        In
        Let Ti485.3248 : Int =
          Int(118)
        In
        create_dirvec_elements.3064 Ta484.3247 Ti485.3248 
      In
      Let Ti487.3245 : Int =
        Let Ti486.3246 : Int =
          Int(1)
        In
        index.3068 - Ti486.3246
      In
      create_dirvecs.3067 Ti487.3245 
    Else
      ()
  In
  Let Rec init_dirvec_constants.3069 : Array(Array(Float) * Array(Array(Float))) -> Int -> Unit ( vecset.3070 index.3071 ) =
    If 0 <= index.3071 Then
      Let Tu247.3239 : Unit =
        Let Tt477.3242 : Array(Float) * Array(Array(Float)) =
          vecset.3070.(index.3071)        In
        setup_dirvec_constants.2854 Tt477.3242 
      In
      Let Ti479.3240 : Int =
        Let Ti478.3241 : Int =
          Int(1)
        In
        index.3071 - Ti478.3241
      In
      init_dirvec_constants.3069 vecset.3070 Ti479.3240 
    Else
      ()
  In
  Let Rec init_vecset_constants.3072 : Int -> Unit ( index.3073 ) =
    If 0 <= index.3073 Then
      Let Tu248.3234 : Unit =
        Let Ta473.3237 : Array(Array(Float) * Array(Array(Float))) =
          dirvecs.2603.(index.3073)        In
        Let Ti474.3238 : Int =
          Int(119)
        In
        init_dirvec_constants.3069 Ta473.3237 Ti474.3238 
      In
      Let Ti476.3235 : Int =
        Let Ti475.3236 : Int =
          Int(1)
        In
        index.3073 - Ti475.3236
      In
      init_vecset_constants.3072 Ti476.3235 
    Else
      ()
  In
  Let Rec init_dirvecs.3074 : Unit -> Unit ( Tu249.3075 ) =
    Let Tu251.3227 : Unit =
      Let Ti468.3233 : Int =
        Int(4)
      In
      create_dirvecs.3067 Ti468.3233 
    In
    Let Tu250.3228 : Unit =
      Let Ti469.3230 : Int =
        Int(9)
      In
      Let Ti470.3231 : Int =
        Int(0)
      In
      Let Ti471.3232 : Int =
        Int(0)
      In
      calc_dirvec_rows.3058 Ti469.3230 Ti470.3231 Ti471.3232 
    In
    Let Ti472.3229 : Int =
      Int(4)
    In
    init_vecset_constants.3072 Ti472.3229 
  In
  Let Rec add_reflection.3076 : Int -> Int -> Float -> Float -> Float -> Float -> Unit ( index.3077 surface_id.3078 bright.3079 v0.3080 v1.3081 v2.3082 ) =
    Let dvec.3221 : Array(Float) * Array(Array(Float)) =
      Let Tu465.3226 : Unit =
        ()
      In
      create_dirvec.3062 Tu465.3226 
    In
    Let Tu253.3222 : Unit =
      Let Ta466.3225 : Array(Float) =
        d_vec.2725 dvec.3221 
      In
      vecset.2618 Ta466.3225 v0.3080 v1.3081 v2.3082 
    In
    Let Tu252.3223 : Unit =
      setup_dirvec_constants.2854 dvec.3221 
    In
    Let Tt467.3224 : Int * Array(Float) * Array(Array(Float)) * Float =
      (surface_id.3078, dvec.3221, bright.3079, )
    In
    reflections.2605.(index.3077) <- Tt467.3224  In
  Let Rec setup_rect_reflection.3083 : Int -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit ( obj_id.3084 obj.3085 ) =
    Let sid.3183 : Int =
      Let Ti436.3220 : Int =
        Int(2)
      In
      obj_id.3084 << Ti436.3220
    In
    Let nr.3184 : Int =
      Let Ti437.3219 : Int =
        Int(0)
      In
      n_reflections.2606.(Ti437.3219)    In
    Let br.3185 : Float =
      Let Td438.3217 : Float =
        Float(1.000000)
      In
      Let Td439.3218 : Float =
        o_diffuse.2688 obj.3085 
      In
      Td438.3217 -. Td439.3218
    In
    Let n0.3186 : Float =
      Let Td441.3215 : Float =
        Let Ti440.3216 : Int =
          Int(0)
        In
        light.2581.(Ti440.3216)      In
      fneg.2527 Td441.3215 
    In
    Let n1.3187 : Float =
      Let Td443.3213 : Float =
        Let Ti442.3214 : Int =
          Int(1)
        In
        light.2581.(Ti442.3214)      In
      fneg.2527 Td443.3213 
    In
    Let n2.3188 : Float =
      Let Td445.3211 : Float =
        Let Ti444.3212 : Int =
          Int(2)
        In
        light.2581.(Ti444.3212)      In
      fneg.2527 Td445.3211 
    In
    Let Tu256.3189 : Unit =
      Let Ti447.3207 : Int =
        Let Ti446.3210 : Int =
          Int(1)
        In
        sid.3183 + Ti446.3210
      In
      Let Td449.3208 : Float =
        Let Ti448.3209 : Int =
          Int(0)
        In
        light.2581.(Ti448.3209)      In
      add_reflection.3076 nr.3184 Ti447.3207 br.3185 Td449.3208 n1.3187 n2.3188 
    In
    Let Tu255.3190 : Unit =
      Let Ti451.3201 : Int =
        Let Ti450.3206 : Int =
          Int(1)
        In
        nr.3184 + Ti450.3206
      In
      Let Ti453.3202 : Int =
        Let Ti452.3205 : Int =
          Int(2)
        In
        sid.3183 + Ti452.3205
      In
      Let Td455.3203 : Float =
        Let Ti454.3204 : Int =
          Int(1)
        In
        light.2581.(Ti454.3204)      In
      add_reflection.3076 Ti451.3201 Ti453.3202 br.3185 n0.3186 Td455.3203 n2.3188 
    In
    Let Tu254.3191 : Unit =
      Let Ti457.3195 : Int =
        Let Ti456.3200 : Int =
          Int(2)
        In
        nr.3184 + Ti456.3200
      In
      Let Ti459.3196 : Int =
        Let Ti458.3199 : Int =
          Int(3)
        In
        sid.3183 + Ti458.3199
      In
      Let Td461.3197 : Float =
        Let Ti460.3198 : Int =
          Int(2)
        In
        light.2581.(Ti460.3198)      In
      add_reflection.3076 Ti457.3195 Ti459.3196 br.3185 n0.3186 n1.3187 Td461.3197 
    In
    Let Ti462.3192 : Int =
      Int(0)
    In
    Let Ti464.3193 : Int =
      Let Ti463.3194 : Int =
        Int(3)
      In
      nr.3184 + Ti463.3194
    In
    n_reflections.2606.(Ti462.3192) <- Ti464.3193  In
  Let Rec setup_surface_reflection.3086 : Int -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit ( obj_id.3087 obj.3088 ) =
    Let sid.3147 : Int =
      Let Ti406.3180 : Int =
        Let Ti405.3182 : Int =
          Int(2)
        In
        obj_id.3087 << Ti405.3182
      In
      Let Ti407.3181 : Int =
        Int(1)
      In
      Ti406.3180 + Ti407.3181
    In
    Let nr.3148 : Int =
      Let Ti408.3179 : Int =
        Int(0)
      In
      n_reflections.2606.(Ti408.3179)    In
    Let br.3149 : Float =
      Let Td409.3177 : Float =
        Float(1.000000)
      In
      Let Td410.3178 : Float =
        o_diffuse.2688 obj.3088 
      In
      Td409.3177 -. Td410.3178
    In
    Let p.3150 : Float =
      Let Ta411.3176 : Array(Float) =
        o_param_abc.2680 obj.3088 
      In
      veciprod.2639 light.2581 Ta411.3176 
    In
    Let Tu257.3151 : Unit =
      Let Td418.3155 : Float =
        Let Td415.3170 : Float =
          Let Td414.3173 : Float =
            Let Td412.3174 : Float =
              Float(2.000000)
            In
            Let Td413.3175 : Float =
              o_param_a.2674 obj.3088 
            In
            Td412.3174 *. Td413.3175
          In
          Td414.3173 *. p.3150
        In
        Let Td417.3171 : Float =
          Let Ti416.3172 : Int =
            Int(0)
          In
          light.2581.(Ti416.3172)        In
        Td415.3170 -. Td417.3171
      In
      Let Td425.3156 : Float =
        Let Td422.3164 : Float =
          Let Td421.3167 : Float =
            Let Td419.3168 : Float =
              Float(2.000000)
            In
            Let Td420.3169 : Float =
              o_param_b.2676 obj.3088 
            In
            Td419.3168 *. Td420.3169
          In
          Td421.3167 *. p.3150
        In
        Let Td424.3165 : Float =
          Let Ti423.3166 : Int =
            Int(1)
          In
          light.2581.(Ti423.3166)        In
        Td422.3164 -. Td424.3165
      In
      Let Td432.3157 : Float =
        Let Td429.3158 : Float =
          Let Td428.3161 : Float =
            Let Td426.3162 : Float =
              Float(2.000000)
            In
            Let Td427.3163 : Float =
              o_param_c.2678 obj.3088 
            In
            Td426.3162 *. Td427.3163
          In
          Td428.3161 *. p.3150
        In
        Let Td431.3159 : Float =
          Let Ti430.3160 : Int =
            Int(2)
          In
          light.2581.(Ti430.3160)        In
        Td429.3158 -. Td431.3159
      In
      add_reflection.3076 nr.3148 sid.3147 br.3149 Td418.3155 Td425.3156 Td432.3157 
    In
    Let Ti433.3152 : Int =
      Int(0)
    In
    Let Ti435.3153 : Int =
      Let Ti434.3154 : Int =
        Int(1)
      In
      nr.3148 + Ti434.3154
    In
    n_reflections.2606.(Ti433.3152) <- Ti435.3153  In
  Let Rec setup_reflections.3089 : Int -> Unit ( obj_id.3090 ) =
    If 0 <= obj_id.3090 Then
      Let obj.3139 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
        objects.2578.(obj_id.3090)      In
      Let Ti403.3140 : Int =
        o_reflectiontype.2668 obj.3139 
      In
      Let Ti404.3141 : Int =
        Int(2)
      In
      If Ti403.3140 = Ti404.3141 Then
        Let Tb402.3142 : Bool =
          Let Td399.3145 : Float =
            o_diffuse.2688 obj.3139 
          In
          Let Td400.3146 : Float =
            Float(1.000000)
          In
          fless.2511 Td399.3145 Td400.3146 
        In
        If 0 = Tb402.3142 Then
          ()
        Else
          Let m_shape.3143 : Int =
            o_form.2666 obj.3139 
          In
          If 1 = m_shape.3143 Then
            setup_rect_reflection.3083 obj_id.3090 obj.3139 
          Else
            Let Ti401.3144 : Int =
              Int(2)
            In
            If m_shape.3143 = Ti401.3144 Then
              setup_surface_reflection.3086 obj_id.3090 obj.3139 
            Else
              ()
      Else
        ()
    Else
      ()
  In
  Let Rec rt.3091 : Int -> Int -> Unit ( size_x.3092 size_y.3093 ) =
    Let Tu269.3097 : Unit =
      Let Ti372.3138 : Int =
        Int(0)
      In
      image_size.2594.(Ti372.3138) <- size_x.3092    In
    Let Tu268.3098 : Unit =
      Let Ti373.3137 : Int =
        Int(1)
      In
      image_size.2594.(Ti373.3137) <- size_y.3093    In
    Let Tu267.3099 : Unit =
      Let Ti374.3134 : Int =
        Int(0)
      In
      Let Ti376.3135 : Int =
        Let Ti375.3136 : Int =
          Int(-1)
        In
        size_x.3092 << Ti375.3136
      In
      image_center.2595.(Ti374.3134) <- Ti376.3135    In
    Let Tu266.3100 : Unit =
      Let Ti377.3131 : Int =
        Int(1)
      In
      Let Ti379.3132 : Int =
        Let Ti378.3133 : Int =
          Int(-1)
        In
        size_y.3093 << Ti378.3133
      In
      image_center.2595.(Ti377.3131) <- Ti379.3132    In
    Let Tu265.3101 : Unit =
      Let Ti380.3127 : Int =
        Int(0)
      In
      Let Td383.3128 : Float =
        Let Td381.3129 : Float =
          Float(128.000000)
        In
        Let Td382.3130 : Float =
          ExtFun:float_of_int size_x.3092 
        In
        Td381.3129 /. Td382.3130
      In
      scan_pitch.2596.(Ti380.3127) <- Td383.3128    In
    Let prev.3102 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) =
      Let Tu384.3126 : Unit =
        ()
      In
      create_pixelline.3038 Tu384.3126 
    In
    Let cur.3103 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) =
      Let Tu385.3125 : Unit =
        ()
      In
      create_pixelline.3038 Tu385.3125 
    In
    Let next.3104 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) =
      Let Tu386.3124 : Unit =
        ()
      In
      create_pixelline.3038 Tu386.3124 
    In
    Let Tu264.3105 : Unit =
      Let Tu387.3123 : Unit =
        ()
      In
      read_parameter.2756 Tu387.3123 
    In
    Let Tu263.3106 : Unit =
      Let Tu388.3122 : Unit =
        ()
      In
      write_ppm_header.2999 Tu388.3122 
    In
    Let Tu262.3107 : Unit =
      Let Tu389.3121 : Unit =
        ()
      In
      init_dirvecs.3074 Tu389.3121 
    In
    Let Tu261.3108 : Unit =
      Let Ta390.3120 : Array(Float) =
        d_vec.2725 light_dirvec.2604 
      In
      veccpy.2628 Ta390.3120 light.2581 
    In
    Let Tu260.3109 : Unit =
      setup_dirvec_constants.2854 light_dirvec.2604 
    In
    Let Tu259.3110 : Unit =
      Let Ti394.3116 : Int =
        Let Ti392.3117 : Int =
          Let Ti391.3119 : Int =
            Int(0)
          In
          n_objects.2577.(Ti391.3119)        In
        Let Ti393.3118 : Int =
          Int(1)
        In
        Ti392.3117 - Ti393.3118
      In
      setup_reflections.3089 Ti394.3116 
    In
    Let Tu258.3111 : Unit =
      Let Ti395.3114 : Int =
        Int(0)
      In
      Let Ti396.3115 : Int =
        Int(0)
      In
      pretrace_line.3015 cur.3103 Ti395.3114 Ti396.3115 
    In
    Let Ti397.3112 : Int =
      Int(0)
    In
    Let Ti398.3113 : Int =
      Int(2)
    In
    scan_line.3025 Ti397.3112 prev.3102 cur.3103 next.3104 Ti398.3113 
  In
  Let Tu270.3094 : Unit =
    Let Ti370.3095 : Int =
      Int(128)
    In
    Let Ti371.3096 : Int =
      Int(128)
    In
    rt.3091 Ti370.3095 Ti371.3096 
  In
  Int(0)


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App


	KNormal.App

Print Closure_t(Closure.ml):
  Int -> Int -> Bool fequal.2508 ((a.2509 : Int) (b.2510 : Int) )
    
    If a.2509 = b.2510 Then
      Int (1)
    Then
      Int (0)
  Float -> Float -> Bool fless.2511 ((a.2512 : Float) (b.2513 : Float) )
    
    If b.2513 <= a.2512 Then
      Int (0)
    Then
      Int (1)
  Float -> Bool fispos.2514 ((a.2515 : Float) )
    
    Let Td2507.6251 : Float =
      Float (0.000000)
    In
    If a.2515 <= Td2507.6251 Then
      Int (0)
    Then
      Int (1)
  Float -> Bool fisneg.2516 ((a.2517 : Float) )
    
    Let Td2506.6250 : Float =
      Float (0.000000)
    In
    If Td2506.6250 <= a.2517 Then
      Int (0)
    Then
      Int (1)
  Float -> Bool fiszero.2518 ((a.2519 : Float) )
    
    Let Td2505.6249 : Float =
      Float (0.000000)
    In
    If a.2519 = Td2505.6249 Then
      Int (1)
    Then
      Int (0)
  Int -> Int -> Bool xor.2520 ((a.2521 : Int) (b.2522 : Int) )
    
    If a.2521 = b.2522 Then
      Int (0)
    Then
      Int (1)
  Float -> Float fabs.2523 ((a.2524 : Float) )
    
    Let Td2504.6248 : Float =
      Float (0.000000)
    In
    If Td2504.6248 <= a.2524 Then
      Var (a.2524)
    Then
      FNegD (a.2524)
  Float -> Float abs_float.2525 ((x.2526 : Float) )
    
    AppClosure fabs.2523 (x.2526 )
  Float -> Float fneg.2527 ((a.2528 : Float) )
    
    FNegD (a.2528)
  Float -> Float fhalf.2529 ((a.2530 : Float) )
    
    Let Td2503.6247 : Float =
      Float (2.000000)
    In
    a.2530 /. Td2503.6247
  Float -> Float fsqr.2531 ((a.2532 : Float) )
    
    a.2532 *. a.2532
  Float -> Float -> Float -> Float atan_sub.2536 ((i.2537 : Float) (xx.2538 : Float) (y.2539 : Float) )
    
    Let Td2502.6234 : Float =
      Float (0.500000)
    In
    If Td2502.6234 <= i.2537 Then
      Let Td2493.6235 : Float =
        Let Td2492.6244 : Float =
          Float (1.000000)
        In
        i.2537 -. Td2492.6244
      In
      Let Td2501.6236 : Float =
        Let Td2495.6237 : Float =
          Let Td2494.6243 : Float =
            i.2537 *. i.2537
          In
          Td2494.6243 *. xx.2538
        In
        Let Td2500.6238 : Float =
          Let Td2499.6239 : Float =
            Let Td2497.6240 : Float =
              Let Td2496.6242 : Float =
                Float (2.000000)
              In
              Td2496.6242 *. i.2537
            In
            Let Td2498.6241 : Float =
              Float (1.000000)
            In
            Td2497.6240 +. Td2498.6241
          In
          Td2499.6239 +. y.2539
        In
        Td2495.6237 /. Td2500.6238
      In
      AppClosure atan_sub.2536 (Td2493.6235 xx.2538 Td2501.6236 )
    Then
      Var (y.2539)
  Float -> Float atan.2540 ((x.2541 : Float) )
    (pi.2533 : Float) 
    Let sgn.6214 : Int =
      Let Td2478.6231 : Float =
        Float (1.000000)
      In
      If x.2541 <= Td2478.6231 Then
        Let Td2477.6232 : Float =
          Float (-1.000000)
        In
        If Td2477.6232 <= x.2541 Then
          Int (0)
        Then
          Let Ti2476.6233 : Int =
            Int (1)
          In
          Neg (Ti2476.6233)
      Then
        Int (1)
    In
    Let x.6215 : Float =
      Let Td2480.6228 : Float =
        AppClosure fabs.2523 (x.2541 )
      In
      Let Td2481.6229 : Float =
        Float (1.000000)
      In
      If Td2480.6228 <= Td2481.6229 Then
        Var (x.2541)
      Then
        Let Td2479.6230 : Float =
          Float (1.000000)
        In
        Td2479.6230 /. x.2541
    In
    Let a.6216 : Float =
      Let Td2482.6225 : Float =
        Float (11.000000)
      In
      Let Td2483.6226 : Float =
        x.6215 *. x.6215
      In
      Let Td2484.6227 : Float =
        Float (0.000000)
      In
      AppClosure atan_sub.2536 (Td2482.6225 Td2483.6226 Td2484.6227 )
    In
    Let b.6217 : Float =
      Let Td2486.6223 : Float =
        Let Td2485.6224 : Float =
          Float (1.000000)
        In
        Td2485.6224 +. a.6216
      In
      x.6215 /. Td2486.6223
    In
    If sgn.6214 <= 0 Then
      If 0 <= sgn.6214 Then
        Var (b.6217)
      Then
        Let Td2489.6220 : Float =
          Let Td2487.6221 : Float =
            FNegD (pi.2533)
          In
          Let Td2488.6222 : Float =
            Float (2.000000)
          In
          Td2487.6221 /. Td2488.6222
        In
        Td2489.6220 -. b.6217
    Then
      Let Td2491.6218 : Float =
        Let Td2490.6219 : Float =
          Float (2.000000)
        In
        pi.2533 /. Td2490.6219
      In
      Td2491.6218 -. b.6217
  Float -> Float -> Float -> Float tan_sub.6199 ((i.6200 : Float) (xx.6201 : Float) (y.6202 : Float) )
    
    Let Td2475.6209 : Float =
      Float (2.500000)
    In
    If Td2475.6209 <= i.6200 Then
      Let Td2472.6210 : Float =
        Let Td2471.6213 : Float =
          Float (2.000000)
        In
        i.6200 -. Td2471.6213
      In
      Let Td2474.6211 : Float =
        Let Td2473.6212 : Float =
          i.6200 -. y.6202
        In
        xx.6201 /. Td2473.6212
      In
      AppClosure tan_sub.6199 (Td2472.6210 xx.6201 Td2474.6211 )
    Then
      Var (y.6202)
  Float -> Float tan.2542 ((x.2543 : Float) )
    
    Let Td2470.6203 : Float =
      Let Td2465.6204 : Float =
        Float (1.000000)
      In
      Let Td2469.6205 : Float =
        Let Td2466.6206 : Float =
          Float (9.000000)
        In
        Let Td2467.6207 : Float =
          x.2543 *. x.2543
        In
        Let Td2468.6208 : Float =
          Float (0.000000)
        In
        AppClosure tan_sub.6199 (Td2466.6206 Td2467.6207 Td2468.6208 )
      In
      Td2465.6204 -. Td2469.6205
    In
    x.2543 /. Td2470.6203
  Float -> Float sin_sub.2544 ((x.2545 : Float) )
    (pi2.2534 : Float) 
    If x.2545 <= pi2.2534 Then
      Let Td2463.6197 : Float =
        Float (0.000000)
      In
      If Td2463.6197 <= x.2545 Then
        Var (x.2545)
      Then
        Let Td2462.6198 : Float =
          x.2545 +. pi2.2534
        In
        AppClosure sin_sub.2544 (Td2462.6198 )
    Then
      Let Td2464.6196 : Float =
        x.2545 -. pi2.2534
      In
      AppClosure sin_sub.2544 (Td2464.6196 )
  Float -> Float sin.2546 ((x.2547 : Float) )
    (pi.2533 : Float) (pi2.2534 : Float) (pih.2535 : Float) (sin_sub.2544 : Float -> Float) 
    Let s1.6180 : Bool =
      Let Td2454.6195 : Float =
        Float (0.000000)
      In
      If x.2547 <= Td2454.6195 Then
        Int (0)
      Then
        Int (1)
    In
    Let x0.6181 : Float =
      AppClosure fabs.2523 (x.2547 )
    In
    Let x1.6182 : Float =
      AppClosure sin_sub.2544 (x0.6181 )
    In
    Let s2.6183 : Bool =
      If x1.6182 <= pi.2533 Then
        Var (s1.6180)
      Then
        If 0 = s1.6180 Then
          Int (1)
        Then
          Int (0)
    In
    Let x2.6184 : Float =
      If x1.6182 <= pi.2533 Then
        Var (x1.6182)
      Then
        pi2.2534 -. x1.6182
    In
    Let x3.6185 : Float =
      If x2.6184 <= pih.2535 Then
        Var (x2.6184)
      Then
        pi.2533 -. x2.6184
    In
    Let t.6186 : Float =
      Let Td2456.6193 : Float =
        Let Td2455.6194 : Float =
          Float (0.500000)
        In
        x3.6185 *. Td2455.6194
      In
      AppClosure tan.2542 (Td2456.6193 )
    In
    Let ans.6187 : Float =
      Let Td2458.6188 : Float =
        Let Td2457.6192 : Float =
          Float (2.000000)
        In
        Td2457.6192 *. t.6186
      In
      Let Td2461.6189 : Float =
        Let Td2459.6190 : Float =
          Float (1.000000)
        In
        Let Td2460.6191 : Float =
          t.6186 *. t.6186
        In
        Td2459.6190 +. Td2460.6191
      In
      Td2458.6188 /. Td2461.6189
    In
    If 0 = s2.6183 Then
      AppClosure fneg.2527 (ans.6187 )
    Then
      Var (ans.6187)
  Float -> Float cos.2548 ((x.2549 : Float) )
    (sin.2546 : Float -> Float) 
    Let Td2453.6178 : Float =
      Let Td2452.6179 : Float =
        Float (1.570796)
      In
      Td2452.6179 -. x.2549
    In
    AppClosure sin.2546 (Td2453.6178 )
  Int -> Int mul10.2550 ((x.2551 : Int) )
    
    Let Ti2449.6174 : Int =
      Let Ti2448.6177 : Int =
        Int (3)
      In
      x.2551 << Ti2448.6177
    In
    Let Ti2451.6175 : Int =
      Let Ti2450.6176 : Int =
        Int (1)
      In
      x.2551 << Ti2450.6176
    In
    Ti2449.6174 + Ti2451.6175
  Bool -> Int -> Int read_int_token.2554 ((in_token.2555 : Bool) (prev.2556 : Int) )
    (read_int_ans.2552 : Array(Int)) (read_int_s.2553 : Array(Int)) 
    Let c.6141 : Int =
      Let Tu2423.6169 : Unit =
        Unit
      In
      AppClosure min_caml_input_char (Tu2423.6169 )
    In
    Let flg.6142 : Bool =
      Let Ti2425.6167 : Int =
        Int (48)
      In
      If Ti2425.6167 <= c.6141 Then
        Let Ti2424.6168 : Int =
          Int (57)
        In
        If c.6141 <= Ti2424.6168 Then
          Int (0)
        Then
          Int (1)
      Then
        Int (1)
    In
    If 0 = flg.6142 Then
      Let Tu2.6149 : Unit =
        Let Ti2433.6159 : Int =
          Let Ti2426.6166 : Int =
            Int (0)
          In
          read_int_s.2553.(Ti2426.6166)
        In
        If 0 = Ti2433.6159 Then
          Let Ti2432.6160 : Int =
            Int (45)
          In
          If prev.2556 = Ti2432.6160 Then
            Let Ti2427.6163 : Int =
              Int (0)
            In
            Let Ti2429.6164 : Int =
              Let Ti2428.6165 : Int =
                Int (1)
              In
              Neg (Ti2428.6165)
            In
            read_int_s.2553.(Ti2427.6163) <- Ti2429.6164
          Then
            Let Ti2430.6161 : Int =
              Int (0)
            In
            Let Ti2431.6162 : Int =
              Int (1)
            In
            read_int_s.2553.(Ti2430.6161) <- Ti2431.6162
        Then
          Unit
      In
      Let Tu1.6150 : Unit =
        Let Ti2434.6152 : Int =
          Int (0)
        In
        Let Ti2440.6153 : Int =
          Let Ti2437.6154 : Int =
            Let Ti2436.6157 : Int =
              Let Ti2435.6158 : Int =
                Int (0)
              In
              read_int_ans.2552.(Ti2435.6158)
            In
            AppClosure mul10.2550 (Ti2436.6157 )
          In
          Let Ti2439.6155 : Int =
            Let Ti2438.6156 : Int =
              Int (48)
            In
            c.6141 - Ti2438.6156
          In
          Ti2437.6154 + Ti2439.6155
        In
        read_int_ans.2552.(Ti2434.6152) <- Ti2440.6153
      In
      Let Ti2441.6151 : Int =
        Int (1)
      In
      AppClosure read_int_token.2554 (Ti2441.6151 c.6141 )
    Then
      If 0 = in_token.2555 Then
        Let Ti2442.6148 : Int =
          Int (0)
        In
        AppClosure read_int_token.2554 (Ti2442.6148 c.6141 )
      Then
        Let Ti2447.6143 : Int =
          Let Ti2443.6147 : Int =
            Int (0)
          In
          read_int_s.2553.(Ti2443.6147)
        In
        If 1 = Ti2447.6143 Then
          Let Ti2444.6146 : Int =
            Int (0)
          In
          read_int_ans.2552.(Ti2444.6146)
        Then
          Let Ti2446.6144 : Int =
            Let Ti2445.6145 : Int =
              Int (0)
            In
            read_int_ans.2552.(Ti2445.6145)
          In
          Neg (Ti2446.6144)
  Unit -> Int read_int.2557 ((Tu3.2558 : Unit) )
    (read_int_ans.2552 : Array(Int)) (read_int_s.2553 : Array(Int)) (read_int_token.2554 : Bool -> Int -> Int) 
    Let Tu5.6133 : Unit =
      Let Ti2417.6139 : Int =
        Int (0)
      In
      Let Ti2418.6140 : Int =
        Int (0)
      In
      read_int_ans.2552.(Ti2417.6139) <- Ti2418.6140
    In
    Let Tu4.6134 : Unit =
      Let Ti2419.6137 : Int =
        Int (0)
      In
      Let Ti2420.6138 : Int =
        Int (0)
      In
      read_int_s.2553.(Ti2419.6137) <- Ti2420.6138
    In
    Let Ti2421.6135 : Int =
      Int (0)
    In
    Let Ti2422.6136 : Int =
      Int (32)
    In
    AppClosure read_int_token.2554 (Ti2421.6135 Ti2422.6136 )
  Bool -> Int -> Int read_float_token1.2563 ((in_token.2564 : Bool) (prev.2565 : Int) )
    (read_float_i.2559 : Array(Int)) (read_float_s.2562 : Array(Int)) 
    Let c.6101 : Int =
      Let Tu2397.6124 : Unit =
        Unit
      In
      AppClosure min_caml_input_char (Tu2397.6124 )
    In
    Let flg.6102 : Bool =
      Let Ti2399.6122 : Int =
        Int (48)
      In
      If Ti2399.6122 <= c.6101 Then
        Let Ti2398.6123 : Int =
          Int (57)
        In
        If c.6101 <= Ti2398.6123 Then
          Int (0)
        Then
          Int (1)
      Then
        Int (1)
    In
    If 0 = flg.6102 Then
      Let Tu7.6104 : Unit =
        Let Ti2407.6114 : Int =
          Let Ti2400.6121 : Int =
            Int (0)
          In
          read_float_s.2562.(Ti2400.6121)
        In
        If 0 = Ti2407.6114 Then
          Let Ti2406.6115 : Int =
            Int (45)
          In
          If prev.2565 = Ti2406.6115 Then
            Let Ti2401.6118 : Int =
              Int (0)
            In
            Let Ti2403.6119 : Int =
              Let Ti2402.6120 : Int =
                Int (1)
              In
              Neg (Ti2402.6120)
            In
            read_float_s.2562.(Ti2401.6118) <- Ti2403.6119
          Then
            Let Ti2404.6116 : Int =
              Int (0)
            In
            Let Ti2405.6117 : Int =
              Int (1)
            In
            read_float_s.2562.(Ti2404.6116) <- Ti2405.6117
        Then
          Unit
      In
      Let Tu6.6105 : Unit =
        Let Ti2408.6107 : Int =
          Int (0)
        In
        Let Ti2414.6108 : Int =
          Let Ti2411.6109 : Int =
            Let Ti2410.6112 : Int =
              Let Ti2409.6113 : Int =
                Int (0)
              In
              read_float_i.2559.(Ti2409.6113)
            In
            AppClosure mul10.2550 (Ti2410.6112 )
          In
          Let Ti2413.6110 : Int =
            Let Ti2412.6111 : Int =
              Int (48)
            In
            c.6101 - Ti2412.6111
          In
          Ti2411.6109 + Ti2413.6110
        In
        read_float_i.2559.(Ti2408.6107) <- Ti2414.6108
      In
      Let Ti2415.6106 : Int =
        Int (1)
      In
      AppClosure read_float_token1.2563 (Ti2415.6106 c.6101 )
    Then
      If 0 = in_token.2564 Then
        Let Ti2416.6103 : Int =
          Int (0)
        In
        AppClosure read_float_token1.2563 (Ti2416.6103 c.6101 )
      Then
        Var (c.6101)
  Bool -> Unit read_float_token2.2566 ((in_token.2567 : Bool) )
    (read_float_exp.2561 : Array(Int)) (read_float_f.2560 : Array(Int)) 
    Let c.6081 : Int =
      Let Tu2381.6100 : Unit =
        Unit
      In
      AppClosure min_caml_input_char (Tu2381.6100 )
    In
    Let flg.6082 : Bool =
      Let Ti2383.6098 : Int =
        Int (48)
      In
      If Ti2383.6098 <= c.6081 Then
        Let Ti2382.6099 : Int =
          Int (57)
        In
        If c.6081 <= Ti2382.6099 Then
          Int (0)
        Then
          Int (1)
      Then
        Int (1)
    In
    If 0 = flg.6082 Then
      Let Tu9.6084 : Unit =
        Let Ti2384.6091 : Int =
          Int (0)
        In
        Let Ti2390.6092 : Int =
          Let Ti2387.6093 : Int =
            Let Ti2386.6096 : Int =
              Let Ti2385.6097 : Int =
                Int (0)
              In
              read_float_f.2560.(Ti2385.6097)
            In
            AppClosure mul10.2550 (Ti2386.6096 )
          In
          Let Ti2389.6094 : Int =
            Let Ti2388.6095 : Int =
              Int (48)
            In
            c.6081 - Ti2388.6095
          In
          Ti2387.6093 + Ti2389.6094
        In
        read_float_f.2560.(Ti2384.6091) <- Ti2390.6092
      In
      Let Tu8.6085 : Unit =
        Let Ti2391.6087 : Int =
          Int (0)
        In
        Let Ti2394.6088 : Int =
          Let Ti2393.6089 : Int =
            Let Ti2392.6090 : Int =
              Int (0)
            In
            read_float_exp.2561.(Ti2392.6090)
          In
          AppClosure mul10.2550 (Ti2393.6089 )
        In
        read_float_exp.2561.(Ti2391.6087) <- Ti2394.6088
      In
      Let Ti2395.6086 : Int =
        Int (1)
      In
      AppClosure read_float_token2.2566 (Ti2395.6086 )
    Then
      If 0 = in_token.2567 Then
        Let Ti2396.6083 : Int =
          Int (0)
        In
        AppClosure read_float_token2.2566 (Ti2396.6083 )
      Then
        Unit
  Unit -> Float read_float.2568 ((Tu10.2569 : Unit) )
    (read_float_exp.2561 : Array(Int)) (read_float_f.2560 : Array(Int)) (read_float_i.2559 : Array(Int)) (read_float_s.2562 : Array(Int)) (read_float_token1.2563 : Bool -> Int -> Int) (read_float_token2.2566 : Bool -> Unit) 
    Let Tu15.6048 : Unit =
      Let Ti2355.6079 : Int =
        Int (0)
      In
      Let Ti2356.6080 : Int =
        Int (0)
      In
      read_float_i.2559.(Ti2355.6079) <- Ti2356.6080
    In
    Let Tu14.6049 : Unit =
      Let Ti2357.6077 : Int =
        Int (0)
      In
      Let Ti2358.6078 : Int =
        Int (0)
      In
      read_float_f.2560.(Ti2357.6077) <- Ti2358.6078
    In
    Let Tu13.6050 : Unit =
      Let Ti2359.6075 : Int =
        Int (0)
      In
      Let Ti2360.6076 : Int =
        Int (1)
      In
      read_float_exp.2561.(Ti2359.6075) <- Ti2360.6076
    In
    Let Tu12.6051 : Unit =
      Let Ti2361.6073 : Int =
        Int (0)
      In
      Let Ti2362.6074 : Int =
        Int (0)
      In
      read_float_s.2562.(Ti2361.6073) <- Ti2362.6074
    In
    Let nextch.6052 : Int =
      Let Ti2363.6071 : Int =
        Int (0)
      In
      Let Ti2364.6072 : Int =
        Int (32)
      In
      AppClosure read_float_token1.2563 (Ti2363.6071 Ti2364.6072 )
    In
    Let ans.6053 : Float =
      Let Ti2378.6056 : Int =
        Int (46)
      In
      If nextch.6052 = Ti2378.6056 Then
        Let Tu11.6059 : Unit =
          Let Ti2365.6070 : Int =
            Int (0)
          In
          AppClosure read_float_token2.2566 (Ti2365.6070 )
        In
        Let Td2368.6060 : Float =
          Let Ti2367.6068 : Int =
            Let Ti2366.6069 : Int =
              Int (0)
            In
            read_float_i.2559.(Ti2366.6069)
          In
          AppClosure min_caml_float_of_int (Ti2367.6068 )
        In
        Let Td2375.6061 : Float =
          Let Td2371.6062 : Float =
            Let Ti2370.6066 : Int =
              Let Ti2369.6067 : Int =
                Int (0)
              In
              read_float_f.2560.(Ti2369.6067)
            In
            AppClosure min_caml_float_of_int (Ti2370.6066 )
          In
          Let Td2374.6063 : Float =
            Let Ti2373.6064 : Int =
              Let Ti2372.6065 : Int =
                Int (0)
              In
              read_float_exp.2561.(Ti2372.6065)
            In
            AppClosure min_caml_float_of_int (Ti2373.6064 )
          In
          Td2371.6062 /. Td2374.6063
        In
        Td2368.6060 +. Td2375.6061
      Then
        Let Ti2377.6057 : Int =
          Let Ti2376.6058 : Int =
            Int (0)
          In
          read_float_i.2559.(Ti2376.6058)
        In
        AppClosure min_caml_float_of_int (Ti2377.6057 )
    In
    Let Ti2380.6054 : Int =
      Let Ti2379.6055 : Int =
        Int (0)
      In
      read_float_s.2562.(Ti2379.6055)
    In
    If 1 = Ti2380.6054 Then
      Var (ans.6053)
    Then
      FNegD (ans.6053)
  Int -> Int -> Int -> Int -> Int div_binary_search.2570 ((a.2571 : Int) (b.2572 : Int) (left.2573 : Int) (right.2574 : Int) )
    
    Let mid.6043 : Int =
      Let Ti2352.6046 : Int =
        left.2573 + right.2574
      In
      Let Ti2353.6047 : Int =
        Int (-1)
      In
      Ti2352.6046 << Ti2353.6047
    In
    Let x.6044 : Int =
      mid.6043 * b.2572
    In
    Let Ti2354.6045 : Int =
      right.2574 - left.2573
    In
    If Ti2354.6045 <= 1 Then
      Var (left.2573)
    Then
      If a.2571 <= x.6044 Then
        If x.6044 = a.2571 Then
          Var (mid.6043)
        Then
          AppClosure div_binary_search.2570 (a.2571 b.2572 left.2573 mid.6043 )
      Then
        AppClosure div_binary_search.2570 (a.2571 b.2572 mid.6043 right.2574 )
  Int -> Unit print_int.2575 ((x.2576 : Int) )
    
    Let Ti2351.5998 : Int =
      Int (10000)
    In
    If x.2576 <= Ti2351.5998 Then
      If 0 <= x.2576 Then
        Let tx.6002 : Int =
          Let Ti2325.6040 : Int =
            Int (1000)
          In
          Let Ti2326.6041 : Int =
            Int (0)
          In
          Let Ti2327.6042 : Int =
            Int (10)
          In
          AppClosure div_binary_search.2570 (x.2576 Ti2325.6040 Ti2326.6041 Ti2327.6042 )
        In
        Let dx.6003 : Int =
          Let Ti2328.6039 : Int =
            Int (1000)
          In
          tx.6002 * Ti2328.6039
        In
        Let x.6004 : Int =
          x.2576 - dx.6003
        In
        Let flg.6005 : Bool =
          If tx.6002 <= 0 Then
            Int (0)
          Then
            Let Tu17.6036 : Unit =
              Let Ti2330.6037 : Int =
                Let Ti2329.6038 : Int =
                  Int (48)
                In
                Ti2329.6038 + tx.6002
              In
              AppClosure min_caml_print_char (Ti2330.6037 )
            In
            Int (1)
        In
        Let tx.6006 : Int =
          Let Ti2331.6033 : Int =
            Int (100)
          In
          Let Ti2332.6034 : Int =
            Int (0)
          In
          Let Ti2333.6035 : Int =
            Int (10)
          In
          AppClosure div_binary_search.2570 (x.6004 Ti2331.6033 Ti2332.6034 Ti2333.6035 )
        In
        Let dx.6007 : Int =
          Let Ti2334.6032 : Int =
            Int (100)
          In
          tx.6006 * Ti2334.6032
        In
        Let x.6008 : Int =
          x.6004 - dx.6007
        In
        Let flg.6009 : Bool =
          If tx.6006 <= 0 Then
            If 0 = flg.6005 Then
              Int (0)
            Then
              Let Tu18.6029 : Unit =
                Let Ti2336.6030 : Int =
                  Let Ti2335.6031 : Int =
                    Int (48)
                  In
                  Ti2335.6031 + tx.6006
                In
                AppClosure min_caml_print_char (Ti2336.6030 )
              In
              Int (1)
          Then
            Let Tu19.6026 : Unit =
              Let Ti2338.6027 : Int =
                Let Ti2337.6028 : Int =
                  Int (48)
                In
                Ti2337.6028 + tx.6006
              In
              AppClosure min_caml_print_char (Ti2338.6027 )
            In
            Int (1)
        In
        Let tx.6010 : Int =
          Let Ti2339.6023 : Int =
            Int (10)
          In
          Let Ti2340.6024 : Int =
            Int (0)
          In
          Let Ti2341.6025 : Int =
            Int (10)
          In
          AppClosure div_binary_search.2570 (x.6008 Ti2339.6023 Ti2340.6024 Ti2341.6025 )
        In
        Let dx.6011 : Int =
          Let Ti2342.6022 : Int =
            Int (10)
          In
          tx.6010 * Ti2342.6022
        In
        Let x.6012 : Int =
          x.6008 - dx.6011
        In
        Let flg.6013 : Bool =
          If tx.6010 <= 0 Then
            If 0 = flg.6009 Then
              Int (0)
            Then
              Let Tu20.6019 : Unit =
                Let Ti2344.6020 : Int =
                  Let Ti2343.6021 : Int =
                    Int (48)
                  In
                  Ti2343.6021 + tx.6010
                In
                AppClosure min_caml_print_char (Ti2344.6020 )
              In
              Int (1)
          Then
            Let Tu21.6016 : Unit =
              Let Ti2346.6017 : Int =
                Let Ti2345.6018 : Int =
                  Int (48)
                In
                Ti2345.6018 + tx.6010
              In
              AppClosure min_caml_print_char (Ti2346.6017 )
            In
            Int (1)
        In
        Let Ti2348.6014 : Int =
          Let Ti2347.6015 : Int =
            Int (48)
          In
          Ti2347.6015 + x.6012
        In
        AppClosure min_caml_print_char (Ti2348.6014 )
      Then
        Let Tu16.5999 : Unit =
          Let Ti2349.6001 : Int =
            Int (45)
          In
          AppClosure min_caml_print_char (Ti2349.6001 )
        In
        Let Ti2350.6000 : Int =
          Neg (x.2576)
        In
        AppClosure print_int.2575 (Ti2350.6000 )
    Then
      Unit
  Bool -> Bool -> Bool xor.2607 ((x.2608 : Bool) (y.2609 : Bool) )
    
    If 0 = x.2608 Then
      Var (y.2609)
    Then
      If 0 = y.2609 Then
        Int (1)
      Then
        Int (0)
  Float -> Float sgn.2610 ((x.2611 : Float) )
    
    Let Tb2324.5901 : Bool =
      AppClosure fiszero.2518 (x.2611 )
    In
    If 0 = Tb2324.5901 Then
      Let Tb2323.5902 : Bool =
        AppClosure fispos.2514 (x.2611 )
      In
      If 0 = Tb2323.5902 Then
        Float (-1.000000)
      Then
        Float (1.000000)
    Then
      Float (0.000000)
  Bool -> Float -> Float fneg_cond.2612 ((cond.2613 : Bool) (x.2614 : Float) )
    
    If 0 = cond.2613 Then
      AppClosure fneg.2527 (x.2614 )
    Then
      Var (x.2614)
  Int -> Int -> Int add_mod5.2615 ((x.2616 : Int) (y.2617 : Int) )
    
    Let sum.5898 : Int =
      x.2616 + y.2617
    In
    Let Ti2322.5899 : Int =
      Int (5)
    In
    If Ti2322.5899 <= sum.5898 Then
      Let Ti2321.5900 : Int =
        Int (5)
      In
      sum.5898 - Ti2321.5900
    Then
      Var (sum.5898)
  Array(Float) -> Float -> Float -> Float -> Unit vecset.2618 ((v.2619 : Array(Float)) (x.2620 : Float) (y.2621 : Float) (z.2622 : Float) )
    
    Let Tu23.5893 : Unit =
      Let Ti2318.5897 : Int =
        Int (0)
      In
      v.2619.(Ti2318.5897) <- x.2620
    In
    Let Tu22.5894 : Unit =
      Let Ti2319.5896 : Int =
        Int (1)
      In
      v.2619.(Ti2319.5896) <- y.2621
    In
    Let Ti2320.5895 : Int =
      Int (2)
    In
    v.2619.(Ti2320.5895) <- z.2622
  Array(Float) -> Float -> Unit vecfill.2623 ((v.2624 : Array(Float)) (elem.2625 : Float) )
    
    Let Tu25.5888 : Unit =
      Let Ti2315.5892 : Int =
        Int (0)
      In
      v.2624.(Ti2315.5892) <- elem.2625
    In
    Let Tu24.5889 : Unit =
      Let Ti2316.5891 : Int =
        Int (1)
      In
      v.2624.(Ti2316.5891) <- elem.2625
    In
    Let Ti2317.5890 : Int =
      Int (2)
    In
    v.2624.(Ti2317.5890) <- elem.2625
  Array(Float) -> Unit vecbzero.2626 ((v.2627 : Array(Float)) )
    
    Let Td2314.5887 : Float =
      Float (0.000000)
    In
    AppClosure vecfill.2623 (v.2627 Td2314.5887 )
  Array(Float) -> Array(Float) -> Unit veccpy.2628 ((dest.2629 : Array(Float)) (src.2630 : Array(Float)) )
    
    Let Tu27.5876 : Unit =
      Let Ti2305.5884 : Int =
        Int (0)
      In
      Let Td2307.5885 : Float =
        Let Ti2306.5886 : Int =
          Int (0)
        In
        src.2630.(Ti2306.5886)
      In
      dest.2629.(Ti2305.5884) <- Td2307.5885
    In
    Let Tu26.5877 : Unit =
      Let Ti2308.5881 : Int =
        Int (1)
      In
      Let Td2310.5882 : Float =
        Let Ti2309.5883 : Int =
          Int (1)
        In
        src.2630.(Ti2309.5883)
      In
      dest.2629.(Ti2308.5881) <- Td2310.5882
    In
    Let Ti2311.5878 : Int =
      Int (2)
    In
    Let Td2313.5879 : Float =
      Let Ti2312.5880 : Int =
        Int (2)
      In
      src.2630.(Ti2312.5880)
    In
    dest.2629.(Ti2311.5878) <- Td2313.5879
  Array(Float) -> Array(Float) -> Float vecdist2.2631 ((p.2632 : Array(Float)) (q.2633 : Array(Float)) )
    
    Let Td2298.5857 : Float =
      Let Td2291.5864 : Float =
        Let Td2290.5871 : Float =
          Let Td2287.5872 : Float =
            Let Ti2286.5875 : Int =
              Int (0)
            In
            p.2632.(Ti2286.5875)
          In
          Let Td2289.5873 : Float =
            Let Ti2288.5874 : Int =
              Int (0)
            In
            q.2633.(Ti2288.5874)
          In
          Td2287.5872 -. Td2289.5873
        In
        AppClosure fsqr.2531 (Td2290.5871 )
      In
      Let Td2297.5865 : Float =
        Let Td2296.5866 : Float =
          Let Td2293.5867 : Float =
            Let Ti2292.5870 : Int =
              Int (1)
            In
            p.2632.(Ti2292.5870)
          In
          Let Td2295.5868 : Float =
            Let Ti2294.5869 : Int =
              Int (1)
            In
            q.2633.(Ti2294.5869)
          In
          Td2293.5867 -. Td2295.5868
        In
        AppClosure fsqr.2531 (Td2296.5866 )
      In
      Td2291.5864 +. Td2297.5865
    In
    Let Td2304.5858 : Float =
      Let Td2303.5859 : Float =
        Let Td2300.5860 : Float =
          Let Ti2299.5863 : Int =
            Int (2)
          In
          p.2632.(Ti2299.5863)
        In
        Let Td2302.5861 : Float =
          Let Ti2301.5862 : Int =
            Int (2)
          In
          q.2633.(Ti2301.5862)
        In
        Td2300.5860 -. Td2302.5861
      In
      AppClosure fsqr.2531 (Td2303.5859 )
    In
    Td2298.5857 +. Td2304.5858
  Array(Float) -> Unit vecunit.2634 ((v.2635 : Array(Float)) )
    
    Let il.5829 : Float =
      Let Td2261.5844 : Float =
        Float (1.000000)
      In
      Let Td2273.5845 : Float =
        Let Td2272.5846 : Float =
          Let Td2268.5847 : Float =
            Let Td2264.5851 : Float =
              Let Td2263.5855 : Float =
                Let Ti2262.5856 : Int =
                  Int (0)
                In
                v.2635.(Ti2262.5856)
              In
              AppClosure fsqr.2531 (Td2263.5855 )
            In
            Let Td2267.5852 : Float =
              Let Td2266.5853 : Float =
                Let Ti2265.5854 : Int =
                  Int (1)
                In
                v.2635.(Ti2265.5854)
              In
              AppClosure fsqr.2531 (Td2266.5853 )
            In
            Td2264.5851 +. Td2267.5852
          In
          Let Td2271.5848 : Float =
            Let Td2270.5849 : Float =
              Let Ti2269.5850 : Int =
                Int (2)
              In
              v.2635.(Ti2269.5850)
            In
            AppClosure fsqr.2531 (Td2270.5849 )
          In
          Td2268.5847 +. Td2271.5848
        In
        AppClosure min_caml_sqrt (Td2272.5846 )
      In
      Td2261.5844 /. Td2273.5845
    In
    Let Tu29.5830 : Unit =
      Let Ti2274.5840 : Int =
        Int (0)
      In
      Let Td2277.5841 : Float =
        Let Td2276.5842 : Float =
          Let Ti2275.5843 : Int =
            Int (0)
          In
          v.2635.(Ti2275.5843)
        In
        Td2276.5842 *. il.5829
      In
      v.2635.(Ti2274.5840) <- Td2277.5841
    In
    Let Tu28.5831 : Unit =
      Let Ti2278.5836 : Int =
        Int (1)
      In
      Let Td2281.5837 : Float =
        Let Td2280.5838 : Float =
          Let Ti2279.5839 : Int =
            Int (1)
          In
          v.2635.(Ti2279.5839)
        In
        Td2280.5838 *. il.5829
      In
      v.2635.(Ti2278.5836) <- Td2281.5837
    In
    Let Ti2282.5832 : Int =
      Int (2)
    In
    Let Td2285.5833 : Float =
      Let Td2284.5834 : Float =
        Let Ti2283.5835 : Int =
          Int (2)
        In
        v.2635.(Ti2283.5835)
      In
      Td2284.5834 *. il.5829
    In
    v.2635.(Ti2282.5832) <- Td2285.5833
  Array(Float) -> Bool -> Unit vecunit_sgn.2636 ((v.2637 : Array(Float)) (inv.2638 : Bool) )
    
    Let l.5799 : Float =
      Let Td2245.5818 : Float =
        Let Td2241.5819 : Float =
          Let Td2237.5823 : Float =
            Let Td2236.5827 : Float =
              Let Ti2235.5828 : Int =
                Int (0)
              In
              v.2637.(Ti2235.5828)
            In
            AppClosure fsqr.2531 (Td2236.5827 )
          In
          Let Td2240.5824 : Float =
            Let Td2239.5825 : Float =
              Let Ti2238.5826 : Int =
                Int (1)
              In
              v.2637.(Ti2238.5826)
            In
            AppClosure fsqr.2531 (Td2239.5825 )
          In
          Td2237.5823 +. Td2240.5824
        In
        Let Td2244.5820 : Float =
          Let Td2243.5821 : Float =
            Let Ti2242.5822 : Int =
              Int (2)
            In
            v.2637.(Ti2242.5822)
          In
          AppClosure fsqr.2531 (Td2243.5821 )
        In
        Td2241.5819 +. Td2244.5820
      In
      AppClosure min_caml_sqrt (Td2245.5818 )
    In
    Let il.5800 : Float =
      Let Tb2248.5815 : Bool =
        AppClosure fiszero.2518 (l.5799 )
      In
      If 0 = Tb2248.5815 Then
        If 0 = inv.2638 Then
          Let Td2246.5817 : Float =
            Float (1.000000)
          In
          Td2246.5817 /. l.5799
        Then
          Let Td2247.5816 : Float =
            Float (-1.000000)
          In
          Td2247.5816 /. l.5799
      Then
        Float (1.000000)
    In
    Let Tu31.5801 : Unit =
      Let Ti2249.5811 : Int =
        Int (0)
      In
      Let Td2252.5812 : Float =
        Let Td2251.5813 : Float =
          Let Ti2250.5814 : Int =
            Int (0)
          In
          v.2637.(Ti2250.5814)
        In
        Td2251.5813 *. il.5800
      In
      v.2637.(Ti2249.5811) <- Td2252.5812
    In
    Let Tu30.5802 : Unit =
      Let Ti2253.5807 : Int =
        Int (1)
      In
      Let Td2256.5808 : Float =
        Let Td2255.5809 : Float =
          Let Ti2254.5810 : Int =
            Int (1)
          In
          v.2637.(Ti2254.5810)
        In
        Td2255.5809 *. il.5800
      In
      v.2637.(Ti2253.5807) <- Td2256.5808
    In
    Let Ti2257.5803 : Int =
      Int (2)
    In
    Let Td2260.5804 : Float =
      Let Td2259.5805 : Float =
        Let Ti2258.5806 : Int =
          Int (2)
        In
        v.2637.(Ti2258.5806)
      In
      Td2259.5805 *. il.5800
    In
    v.2637.(Ti2257.5803) <- Td2260.5804
  Array(Float) -> Array(Float) -> Float veciprod.2639 ((v.2640 : Array(Float)) (w.2641 : Array(Float)) )
    
    Let Td2229.5783 : Float =
      Let Td2223.5789 : Float =
        Let Td2220.5795 : Float =
          Let Ti2219.5798 : Int =
            Int (0)
          In
          v.2640.(Ti2219.5798)
        In
        Let Td2222.5796 : Float =
          Let Ti2221.5797 : Int =
            Int (0)
          In
          w.2641.(Ti2221.5797)
        In
        Td2220.5795 *. Td2222.5796
      In
      Let Td2228.5790 : Float =
        Let Td2225.5791 : Float =
          Let Ti2224.5794 : Int =
            Int (1)
          In
          v.2640.(Ti2224.5794)
        In
        Let Td2227.5792 : Float =
          Let Ti2226.5793 : Int =
            Int (1)
          In
          w.2641.(Ti2226.5793)
        In
        Td2225.5791 *. Td2227.5792
      In
      Td2223.5789 +. Td2228.5790
    In
    Let Td2234.5784 : Float =
      Let Td2231.5785 : Float =
        Let Ti2230.5788 : Int =
          Int (2)
        In
        v.2640.(Ti2230.5788)
      In
      Let Td2233.5786 : Float =
        Let Ti2232.5787 : Int =
          Int (2)
        In
        w.2641.(Ti2232.5787)
      In
      Td2231.5785 *. Td2233.5786
    In
    Td2229.5783 +. Td2234.5784
  Array(Float) -> Float -> Float -> Float -> Float veciprod2.2642 ((v.2643 : Array(Float)) (w0.2644 : Float) (w1.2645 : Float) (w2.2646 : Float) )
    
    Let Td2215.5773 : Float =
      Let Td2211.5777 : Float =
        Let Td2210.5781 : Float =
          Let Ti2209.5782 : Int =
            Int (0)
          In
          v.2643.(Ti2209.5782)
        In
        Td2210.5781 *. w0.2644
      In
      Let Td2214.5778 : Float =
        Let Td2213.5779 : Float =
          Let Ti2212.5780 : Int =
            Int (1)
          In
          v.2643.(Ti2212.5780)
        In
        Td2213.5779 *. w1.2645
      In
      Td2211.5777 +. Td2214.5778
    In
    Let Td2218.5774 : Float =
      Let Td2217.5775 : Float =
        Let Ti2216.5776 : Int =
          Int (2)
        In
        v.2643.(Ti2216.5776)
      In
      Td2217.5775 *. w2.2646
    In
    Td2215.5773 +. Td2218.5774
  Array(Float) -> Float -> Array(Float) -> Unit vecaccum.2647 ((dest.2648 : Array(Float)) (scale.2649 : Float) (v.2650 : Array(Float)) )
    
    Let Tu33.5750 : Unit =
      Let Ti2188.5766 : Int =
        Int (0)
      In
      Let Td2194.5767 : Float =
        Let Td2190.5768 : Float =
          Let Ti2189.5772 : Int =
            Int (0)
          In
          dest.2648.(Ti2189.5772)
        In
        Let Td2193.5769 : Float =
          Let Td2192.5770 : Float =
            Let Ti2191.5771 : Int =
              Int (0)
            In
            v.2650.(Ti2191.5771)
          In
          scale.2649 *. Td2192.5770
        In
        Td2190.5768 +. Td2193.5769
      In
      dest.2648.(Ti2188.5766) <- Td2194.5767
    In
    Let Tu32.5751 : Unit =
      Let Ti2195.5759 : Int =
        Int (1)
      In
      Let Td2201.5760 : Float =
        Let Td2197.5761 : Float =
          Let Ti2196.5765 : Int =
            Int (1)
          In
          dest.2648.(Ti2196.5765)
        In
        Let Td2200.5762 : Float =
          Let Td2199.5763 : Float =
            Let Ti2198.5764 : Int =
              Int (1)
            In
            v.2650.(Ti2198.5764)
          In
          scale.2649 *. Td2199.5763
        In
        Td2197.5761 +. Td2200.5762
      In
      dest.2648.(Ti2195.5759) <- Td2201.5760
    In
    Let Ti2202.5752 : Int =
      Int (2)
    In
    Let Td2208.5753 : Float =
      Let Td2204.5754 : Float =
        Let Ti2203.5758 : Int =
          Int (2)
        In
        dest.2648.(Ti2203.5758)
      In
      Let Td2207.5755 : Float =
        Let Td2206.5756 : Float =
          Let Ti2205.5757 : Int =
            Int (2)
          In
          v.2650.(Ti2205.5757)
        In
        scale.2649 *. Td2206.5756
      In
      Td2204.5754 +. Td2207.5755
    In
    dest.2648.(Ti2202.5752) <- Td2208.5753
  Array(Float) -> Array(Float) -> Unit vecadd.2651 ((dest.2652 : Array(Float)) (v.2653 : Array(Float)) )
    
    Let Tu35.5730 : Unit =
      Let Ti2170.5744 : Int =
        Int (0)
      In
      Let Td2175.5745 : Float =
        Let Td2172.5746 : Float =
          Let Ti2171.5749 : Int =
            Int (0)
          In
          dest.2652.(Ti2171.5749)
        In
        Let Td2174.5747 : Float =
          Let Ti2173.5748 : Int =
            Int (0)
          In
          v.2653.(Ti2173.5748)
        In
        Td2172.5746 +. Td2174.5747
      In
      dest.2652.(Ti2170.5744) <- Td2175.5745
    In
    Let Tu34.5731 : Unit =
      Let Ti2176.5738 : Int =
        Int (1)
      In
      Let Td2181.5739 : Float =
        Let Td2178.5740 : Float =
          Let Ti2177.5743 : Int =
            Int (1)
          In
          dest.2652.(Ti2177.5743)
        In
        Let Td2180.5741 : Float =
          Let Ti2179.5742 : Int =
            Int (1)
          In
          v.2653.(Ti2179.5742)
        In
        Td2178.5740 +. Td2180.5741
      In
      dest.2652.(Ti2176.5738) <- Td2181.5739
    In
    Let Ti2182.5732 : Int =
      Int (2)
    In
    Let Td2187.5733 : Float =
      Let Td2184.5734 : Float =
        Let Ti2183.5737 : Int =
          Int (2)
        In
        dest.2652.(Ti2183.5737)
      In
      Let Td2186.5735 : Float =
        Let Ti2185.5736 : Int =
          Int (2)
        In
        v.2653.(Ti2185.5736)
      In
      Td2184.5734 +. Td2186.5735
    In
    dest.2652.(Ti2182.5732) <- Td2187.5733
  Array(Float) -> Array(Float) -> Unit vecmul.2654 ((dest.2655 : Array(Float)) (v.2656 : Array(Float)) )
    
    Let Tu37.5710 : Unit =
      Let Ti2152.5724 : Int =
        Int (0)
      In
      Let Td2157.5725 : Float =
        Let Td2154.5726 : Float =
          Let Ti2153.5729 : Int =
            Int (0)
          In
          dest.2655.(Ti2153.5729)
        In
        Let Td2156.5727 : Float =
          Let Ti2155.5728 : Int =
            Int (0)
          In
          v.2656.(Ti2155.5728)
        In
        Td2154.5726 *. Td2156.5727
      In
      dest.2655.(Ti2152.5724) <- Td2157.5725
    In
    Let Tu36.5711 : Unit =
      Let Ti2158.5718 : Int =
        Int (1)
      In
      Let Td2163.5719 : Float =
        Let Td2160.5720 : Float =
          Let Ti2159.5723 : Int =
            Int (1)
          In
          dest.2655.(Ti2159.5723)
        In
        Let Td2162.5721 : Float =
          Let Ti2161.5722 : Int =
            Int (1)
          In
          v.2656.(Ti2161.5722)
        In
        Td2160.5720 *. Td2162.5721
      In
      dest.2655.(Ti2158.5718) <- Td2163.5719
    In
    Let Ti2164.5712 : Int =
      Int (2)
    In
    Let Td2169.5713 : Float =
      Let Td2166.5714 : Float =
        Let Ti2165.5717 : Int =
          Int (2)
        In
        dest.2655.(Ti2165.5717)
      In
      Let Td2168.5715 : Float =
        Let Ti2167.5716 : Int =
          Int (2)
        In
        v.2656.(Ti2167.5716)
      In
      Td2166.5714 *. Td2168.5715
    In
    dest.2655.(Ti2164.5712) <- Td2169.5713
  Array(Float) -> Float -> Unit vecscale.2657 ((dest.2658 : Array(Float)) (scale.2659 : Float) )
    
    Let Tu39.5696 : Unit =
      Let Ti2140.5706 : Int =
        Int (0)
      In
      Let Td2143.5707 : Float =
        Let Td2142.5708 : Float =
          Let Ti2141.5709 : Int =
            Int (0)
          In
          dest.2658.(Ti2141.5709)
        In
        Td2142.5708 *. scale.2659
      In
      dest.2658.(Ti2140.5706) <- Td2143.5707
    In
    Let Tu38.5697 : Unit =
      Let Ti2144.5702 : Int =
        Int (1)
      In
      Let Td2147.5703 : Float =
        Let Td2146.5704 : Float =
          Let Ti2145.5705 : Int =
            Int (1)
          In
          dest.2658.(Ti2145.5705)
        In
        Td2146.5704 *. scale.2659
      In
      dest.2658.(Ti2144.5702) <- Td2147.5703
    In
    Let Ti2148.5698 : Int =
      Int (2)
    In
    Let Td2151.5699 : Float =
      Let Td2150.5700 : Float =
        Let Ti2149.5701 : Int =
          Int (2)
        In
        dest.2658.(Ti2149.5701)
      In
      Td2150.5700 *. scale.2659
    In
    dest.2658.(Ti2148.5698) <- Td2151.5699
  Array(Float) -> Array(Float) -> Array(Float) -> Unit vecaccumv.2660 ((dest.2661 : Array(Float)) (v.2662 : Array(Float)) (w.2663 : Array(Float)) )
    
    Let Tu41.5667 : Unit =
      Let Ti2113.5687 : Int =
        Int (0)
      In
      Let Td2121.5688 : Float =
        Let Td2115.5689 : Float =
          Let Ti2114.5695 : Int =
            Int (0)
          In
          dest.2661.(Ti2114.5695)
        In
        Let Td2120.5690 : Float =
          Let Td2117.5691 : Float =
            Let Ti2116.5694 : Int =
              Int (0)
            In
            v.2662.(Ti2116.5694)
          In
          Let Td2119.5692 : Float =
            Let Ti2118.5693 : Int =
              Int (0)
            In
            w.2663.(Ti2118.5693)
          In
          Td2117.5691 *. Td2119.5692
        In
        Td2115.5689 +. Td2120.5690
      In
      dest.2661.(Ti2113.5687) <- Td2121.5688
    In
    Let Tu40.5668 : Unit =
      Let Ti2122.5678 : Int =
        Int (1)
      In
      Let Td2130.5679 : Float =
        Let Td2124.5680 : Float =
          Let Ti2123.5686 : Int =
            Int (1)
          In
          dest.2661.(Ti2123.5686)
        In
        Let Td2129.5681 : Float =
          Let Td2126.5682 : Float =
            Let Ti2125.5685 : Int =
              Int (1)
            In
            v.2662.(Ti2125.5685)
          In
          Let Td2128.5683 : Float =
            Let Ti2127.5684 : Int =
              Int (1)
            In
            w.2663.(Ti2127.5684)
          In
          Td2126.5682 *. Td2128.5683
        In
        Td2124.5680 +. Td2129.5681
      In
      dest.2661.(Ti2122.5678) <- Td2130.5679
    In
    Let Ti2131.5669 : Int =
      Int (2)
    In
    Let Td2139.5670 : Float =
      Let Td2133.5671 : Float =
        Let Ti2132.5677 : Int =
          Int (2)
        In
        dest.2661.(Ti2132.5677)
      In
      Let Td2138.5672 : Float =
        Let Td2135.5673 : Float =
          Let Ti2134.5676 : Int =
            Int (2)
          In
          v.2662.(Ti2134.5676)
        In
        Let Td2137.5674 : Float =
          Let Ti2136.5675 : Int =
            Int (2)
          In
          w.2663.(Ti2136.5675)
        In
        Td2135.5673 *. Td2137.5674
      In
      Td2133.5671 +. Td2138.5672
    In
    dest.2661.(Ti2131.5669) <- Td2139.5670
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Int o_texturetype.2664 ((m.2665 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (m_tex.5656 : Int, xm_shape.5657 : Int, xm_surface.5658 : Int, xm_isrot.5659 : Int, xm_abc.5660 : Array(Float), xm_xyz.5661 : Array(Float), xm_invert.5662 : Bool, xm_surfparams.5663 : Array(Float), xm_color.5664 : Array(Float), xm_rot123.5665 : Array(Float)xm_ctbl.5666 : Array(Float)) = m.2665 In
    Var (m_tex.5656)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Int o_form.2666 ((m.2667 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5645 : Int, m_shape.5646 : Int, xm_surface.5647 : Int, xm_isrot.5648 : Int, xm_abc.5649 : Array(Float), xm_xyz.5650 : Array(Float), xm_invert.5651 : Bool, xm_surfparams.5652 : Array(Float), xm_color.5653 : Array(Float), xm_rot123.5654 : Array(Float)xm_ctbl.5655 : Array(Float)) = m.2667 In
    Var (m_shape.5646)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Int o_reflectiontype.2668 ((m.2669 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5634 : Int, xm_shape.5635 : Int, m_surface.5636 : Int, xm_isrot.5637 : Int, xm_abc.5638 : Array(Float), xm_xyz.5639 : Array(Float), xm_invert.5640 : Bool, xm_surfparams.5641 : Array(Float), xm_color.5642 : Array(Float), xm_rot123.5643 : Array(Float)xm_ctbl.5644 : Array(Float)) = m.2669 In
    Var (m_surface.5636)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Bool o_isinvert.2670 ((m.2671 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5623 : Int, xm_shape.5624 : Int, xm_surface.5625 : Int, xm_isrot.5626 : Int, xm_abc.5627 : Array(Float), xm_xyz.5628 : Array(Float), m_invert.5629 : Bool, xm_surfparams.5630 : Array(Float), xm_color.5631 : Array(Float), xm_rot123.5632 : Array(Float)xm_ctbl.5633 : Array(Float)) = m.2671 In
    Var (m_invert.5629)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Int o_isrot.2672 ((m.2673 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5612 : Int, xm_shape.5613 : Int, xm_surface.5614 : Int, m_isrot.5615 : Int, xm_abc.5616 : Array(Float), xm_xyz.5617 : Array(Float), xm_invert.5618 : Bool, xm_surfparams.5619 : Array(Float), xm_color.5620 : Array(Float), xm_rot123.5621 : Array(Float)xm_ctbl.5622 : Array(Float)) = m.2673 In
    Var (m_isrot.5615)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float o_param_a.2674 ((m.2675 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5600 : Int, xm_shape.5601 : Int, xm_surface.5602 : Int, xm_isrot.5603 : Int, m_abc.5604 : Array(Float), xm_xyz.5605 : Array(Float), xm_invert.5606 : Bool, xm_surfparams.5607 : Array(Float), xm_color.5608 : Array(Float), xm_rot123.5609 : Array(Float)xm_ctbl.5610 : Array(Float)) = m.2675 In
    Let Ti2112.5611 : Int =
      Int (0)
    In
    m_abc.5604.(Ti2112.5611)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float o_param_b.2676 ((m.2677 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5588 : Int, xm_shape.5589 : Int, xm_surface.5590 : Int, xm_isrot.5591 : Int, m_abc.5592 : Array(Float), xm_xyz.5593 : Array(Float), xm_invert.5594 : Bool, xm_surfparams.5595 : Array(Float), xm_color.5596 : Array(Float), xm_rot123.5597 : Array(Float)xm_ctbl.5598 : Array(Float)) = m.2677 In
    Let Ti2111.5599 : Int =
      Int (1)
    In
    m_abc.5592.(Ti2111.5599)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float o_param_c.2678 ((m.2679 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5576 : Int, xm_shape.5577 : Int, xm_surface.5578 : Int, xm_isrot.5579 : Int, m_abc.5580 : Array(Float), xm_xyz.5581 : Array(Float), xm_invert.5582 : Bool, xm_surfparams.5583 : Array(Float), xm_color.5584 : Array(Float), xm_rot123.5585 : Array(Float)xm_ctbl.5586 : Array(Float)) = m.2679 In
    Let Ti2110.5587 : Int =
      Int (2)
    In
    m_abc.5580.(Ti2110.5587)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) o_param_abc.2680 ((m.2681 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5565 : Int, xm_shape.5566 : Int, xm_surface.5567 : Int, xm_isrot.5568 : Int, m_abc.5569 : Array(Float), xm_xyz.5570 : Array(Float), xm_invert.5571 : Bool, xm_surfparams.5572 : Array(Float), xm_color.5573 : Array(Float), xm_rot123.5574 : Array(Float)xm_ctbl.5575 : Array(Float)) = m.2681 In
    Var (m_abc.5569)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float o_param_x.2682 ((m.2683 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5553 : Int, xm_shape.5554 : Int, xm_surface.5555 : Int, xm_isrot.5556 : Int, xm_abc.5557 : Array(Float), m_xyz.5558 : Array(Float), xm_invert.5559 : Bool, xm_surfparams.5560 : Array(Float), xm_color.5561 : Array(Float), xm_rot123.5562 : Array(Float)xm_ctbl.5563 : Array(Float)) = m.2683 In
    Let Ti2109.5564 : Int =
      Int (0)
    In
    m_xyz.5558.(Ti2109.5564)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float o_param_y.2684 ((m.2685 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5541 : Int, xm_shape.5542 : Int, xm_surface.5543 : Int, xm_isrot.5544 : Int, xm_abc.5545 : Array(Float), m_xyz.5546 : Array(Float), xm_invert.5547 : Bool, xm_surfparams.5548 : Array(Float), xm_color.5549 : Array(Float), xm_rot123.5550 : Array(Float)xm_ctbl.5551 : Array(Float)) = m.2685 In
    Let Ti2108.5552 : Int =
      Int (1)
    In
    m_xyz.5546.(Ti2108.5552)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float o_param_z.2686 ((m.2687 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5529 : Int, xm_shape.5530 : Int, xm_surface.5531 : Int, xm_isrot.5532 : Int, xm_abc.5533 : Array(Float), m_xyz.5534 : Array(Float), xm_invert.5535 : Bool, xm_surfparams.5536 : Array(Float), xm_color.5537 : Array(Float), xm_rot123.5538 : Array(Float)xm_ctbl.5539 : Array(Float)) = m.2687 In
    Let Ti2107.5540 : Int =
      Int (2)
    In
    m_xyz.5534.(Ti2107.5540)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float o_diffuse.2688 ((m.2689 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5517 : Int, xm_shape.5518 : Int, xm_surface.5519 : Int, xm_isrot.5520 : Int, xm_abc.5521 : Array(Float), xm_xyz.5522 : Array(Float), xm_invert.5523 : Bool, m_surfparams.5524 : Array(Float), xm_color.5525 : Array(Float), xm_rot123.5526 : Array(Float)xm_ctbl.5527 : Array(Float)) = m.2689 In
    Let Ti2106.5528 : Int =
      Int (0)
    In
    m_surfparams.5524.(Ti2106.5528)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float o_hilight.2690 ((m.2691 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5505 : Int, xm_shape.5506 : Int, xm_surface.5507 : Int, xm_isrot.5508 : Int, xm_abc.5509 : Array(Float), xm_xyz.5510 : Array(Float), xm_invert.5511 : Bool, m_surfparams.5512 : Array(Float), xm_color.5513 : Array(Float), xm_rot123.5514 : Array(Float)xm_ctbl.5515 : Array(Float)) = m.2691 In
    Let Ti2105.5516 : Int =
      Int (1)
    In
    m_surfparams.5512.(Ti2105.5516)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float o_color_red.2692 ((m.2693 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5493 : Int, xm_shape.5494 : Int, m_surface.5495 : Int, xm_isrot.5496 : Int, xm_abc.5497 : Array(Float), xm_xyz.5498 : Array(Float), xm_invert.5499 : Bool, xm_surfparams.5500 : Array(Float), m_color.5501 : Array(Float), xm_rot123.5502 : Array(Float)xm_ctbl.5503 : Array(Float)) = m.2693 In
    Let Ti2104.5504 : Int =
      Int (0)
    In
    m_color.5501.(Ti2104.5504)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float o_color_green.2694 ((m.2695 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5481 : Int, xm_shape.5482 : Int, m_surface.5483 : Int, xm_isrot.5484 : Int, xm_abc.5485 : Array(Float), xm_xyz.5486 : Array(Float), xm_invert.5487 : Bool, xm_surfparams.5488 : Array(Float), m_color.5489 : Array(Float), xm_rot123.5490 : Array(Float)xm_ctbl.5491 : Array(Float)) = m.2695 In
    Let Ti2103.5492 : Int =
      Int (1)
    In
    m_color.5489.(Ti2103.5492)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float o_color_blue.2696 ((m.2697 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5469 : Int, xm_shape.5470 : Int, m_surface.5471 : Int, xm_isrot.5472 : Int, xm_abc.5473 : Array(Float), xm_xyz.5474 : Array(Float), xm_invert.5475 : Bool, xm_surfparams.5476 : Array(Float), m_color.5477 : Array(Float), xm_rot123.5478 : Array(Float)xm_ctbl.5479 : Array(Float)) = m.2697 In
    Let Ti2102.5480 : Int =
      Int (2)
    In
    m_color.5477.(Ti2102.5480)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float o_param_r1.2698 ((m.2699 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5457 : Int, xm_shape.5458 : Int, xm_surface.5459 : Int, xm_isrot.5460 : Int, xm_abc.5461 : Array(Float), xm_xyz.5462 : Array(Float), xm_invert.5463 : Bool, xm_surfparams.5464 : Array(Float), xm_color.5465 : Array(Float), m_rot123.5466 : Array(Float)xm_ctbl.5467 : Array(Float)) = m.2699 In
    Let Ti2101.5468 : Int =
      Int (0)
    In
    m_rot123.5466.(Ti2101.5468)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float o_param_r2.2700 ((m.2701 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5445 : Int, xm_shape.5446 : Int, xm_surface.5447 : Int, xm_isrot.5448 : Int, xm_abc.5449 : Array(Float), xm_xyz.5450 : Array(Float), xm_invert.5451 : Bool, xm_surfparams.5452 : Array(Float), xm_color.5453 : Array(Float), m_rot123.5454 : Array(Float)xm_ctbl.5455 : Array(Float)) = m.2701 In
    Let Ti2100.5456 : Int =
      Int (1)
    In
    m_rot123.5454.(Ti2100.5456)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float o_param_r3.2702 ((m.2703 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5433 : Int, xm_shape.5434 : Int, xm_surface.5435 : Int, xm_isrot.5436 : Int, xm_abc.5437 : Array(Float), xm_xyz.5438 : Array(Float), xm_invert.5439 : Bool, xm_surfparams.5440 : Array(Float), xm_color.5441 : Array(Float), m_rot123.5442 : Array(Float)xm_ctbl.5443 : Array(Float)) = m.2703 In
    Let Ti2099.5444 : Int =
      Int (2)
    In
    m_rot123.5442.(Ti2099.5444)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) o_param_ctbl.2704 ((m.2705 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let (xm_tex.5422 : Int, xm_shape.5423 : Int, xm_surface.5424 : Int, xm_isrot.5425 : Int, xm_abc.5426 : Array(Float), xm_xyz.5427 : Array(Float), xm_invert.5428 : Bool, xm_surfparams.5429 : Array(Float), xm_color.5430 : Array(Float), xm_rot123.5431 : Array(Float)m_ctbl.5432 : Array(Float)) = m.2705 In
    Var (m_ctbl.5432)
  Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Float) p_rgb.2706 ((pixel.2707 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) )
    
    Let (m_rgb.5414 : Array(Float), xm_isect_ps.5415 : Array(Array(Float)), xm_sids.5416 : Array(Int), xm_cdif.5417 : Array(Bool), xm_engy.5418 : Array(Array(Float)), xm_r20p.5419 : Array(Array(Float)), xm_gid.5420 : Array(Int)xm_nvectors.5421 : Array(Array(Float))) = pixel.2707 In
    Var (m_rgb.5414)
  Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Array(Float)) p_intersection_points.2708 ((pixel.2709 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) )
    
    Let (xm_rgb.5406 : Array(Float), m_isect_ps.5407 : Array(Array(Float)), xm_sids.5408 : Array(Int), xm_cdif.5409 : Array(Bool), xm_engy.5410 : Array(Array(Float)), xm_r20p.5411 : Array(Array(Float)), xm_gid.5412 : Array(Int)xm_nvectors.5413 : Array(Array(Float))) = pixel.2709 In
    Var (m_isect_ps.5407)
  Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Int) p_surface_ids.2710 ((pixel.2711 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) )
    
    Let (xm_rgb.5398 : Array(Float), xm_isect_ps.5399 : Array(Array(Float)), m_sids.5400 : Array(Int), xm_cdif.5401 : Array(Bool), xm_engy.5402 : Array(Array(Float)), xm_r20p.5403 : Array(Array(Float)), xm_gid.5404 : Array(Int)xm_nvectors.5405 : Array(Array(Float))) = pixel.2711 In
    Var (m_sids.5400)
  Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Bool) p_calc_diffuse.2712 ((pixel.2713 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) )
    
    Let (xm_rgb.5390 : Array(Float), xm_isect_ps.5391 : Array(Array(Float)), xm_sids.5392 : Array(Int), m_cdif.5393 : Array(Bool), xm_engy.5394 : Array(Array(Float)), xm_r20p.5395 : Array(Array(Float)), xm_gid.5396 : Array(Int)xm_nvectors.5397 : Array(Array(Float))) = pixel.2713 In
    Var (m_cdif.5393)
  Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Array(Float)) p_energy.2714 ((pixel.2715 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) )
    
    Let (xm_rgb.5382 : Array(Float), xm_isect_ps.5383 : Array(Array(Float)), xm_sids.5384 : Array(Int), xm_cdif.5385 : Array(Bool), m_engy.5386 : Array(Array(Float)), xm_r20p.5387 : Array(Array(Float)), xm_gid.5388 : Array(Int)xm_nvectors.5389 : Array(Array(Float))) = pixel.2715 In
    Var (m_engy.5386)
  Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Array(Float)) p_received_ray_20percent.2716 ((pixel.2717 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) )
    
    Let (xm_rgb.5374 : Array(Float), xm_isect_ps.5375 : Array(Array(Float)), xm_sids.5376 : Array(Int), xm_cdif.5377 : Array(Bool), xm_engy.5378 : Array(Array(Float)), m_r20p.5379 : Array(Array(Float)), xm_gid.5380 : Array(Int)xm_nvectors.5381 : Array(Array(Float))) = pixel.2717 In
    Var (m_r20p.5379)
  Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int p_group_id.2718 ((pixel.2719 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) )
    
    Let (xm_rgb.5365 : Array(Float), xm_isect_ps.5366 : Array(Array(Float)), xm_sids.5367 : Array(Int), xm_cdif.5368 : Array(Bool), xm_engy.5369 : Array(Array(Float)), xm_r20p.5370 : Array(Array(Float)), m_gid.5371 : Array(Int)xm_nvectors.5372 : Array(Array(Float))) = pixel.2719 In
    Let Ti2098.5373 : Int =
      Int (0)
    In
    m_gid.5371.(Ti2098.5373)
  Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit p_set_group_id.2720 ((pixel.2721 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) (id.2722 : Int) )
    
    Let (xm_rgb.5356 : Array(Float), xm_isect_ps.5357 : Array(Array(Float)), xm_sids.5358 : Array(Int), xm_cdif.5359 : Array(Bool), xm_engy.5360 : Array(Array(Float)), xm_r20p.5361 : Array(Array(Float)), m_gid.5362 : Array(Int)xm_nvectors.5363 : Array(Array(Float))) = pixel.2721 In
    Let Ti2097.5364 : Int =
      Int (0)
    In
    m_gid.5362.(Ti2097.5364) <- id.2722
  Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Array(Array(Float)) p_nvectors.2723 ((pixel.2724 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) )
    
    Let (xm_rgb.5348 : Array(Float), xm_isect_ps.5349 : Array(Array(Float)), xm_sids.5350 : Array(Int), xm_cdif.5351 : Array(Bool), xm_engy.5352 : Array(Array(Float)), xm_r20p.5353 : Array(Array(Float)), xm_gid.5354 : Array(Int)m_nvectors.5355 : Array(Array(Float))) = pixel.2724 In
    Var (m_nvectors.5355)
  Array(Float) * Array(Array(Float)) -> Array(Float) d_vec.2725 ((d.2726 : Array(Float) * Array(Array(Float))) )
    
    Let (m_vec.5346 : Array(Float)xm_const.5347 : Array(Array(Float))) = d.2726 In
    Var (m_vec.5346)
  Array(Float) * Array(Array(Float)) -> Array(Array(Float)) d_const.2727 ((d.2728 : Array(Float) * Array(Array(Float))) )
    
    Let (dm_vec.5344 : Array(Float)m_const.5345 : Array(Array(Float))) = d.2728 In
    Var (m_const.5345)
  Int * Array(Float) * Array(Array(Float)) * Float -> Int r_surface_id.2729 ((r.2730 : Int * Array(Float) * Array(Array(Float)) * Float) )
    
    Let (m_sid.5341 : Int, xm_dvec.5342 : Array(Float) * Array(Array(Float))xm_br.5343 : Float) = r.2730 In
    Var (m_sid.5341)
  Int * Array(Float) * Array(Array(Float)) * Float -> Array(Float) * Array(Array(Float)) r_dvec.2731 ((r.2732 : Int * Array(Float) * Array(Array(Float)) * Float) )
    
    Let (xm_sid.5338 : Int, m_dvec.5339 : Array(Float) * Array(Array(Float))xm_br.5340 : Float) = r.2732 In
    Var (m_dvec.5339)
  Int * Array(Float) * Array(Array(Float)) * Float -> Float r_bright.2733 ((r.2734 : Int * Array(Float) * Array(Array(Float)) * Float) )
    
    Let (xm_sid.5335 : Int, xm_dvec.5336 : Array(Float) * Array(Array(Float))m_br.5337 : Float) = r.2734 In
    Var (m_br.5337)
  Float -> Float rad.2735 ((x.2736 : Float) )
    
    Let Td2096.5334 : Float =
      Float (0.017453)
    In
    x.2736 *. Td2096.5334
  Unit -> Unit read_screen_settings.2737 ((Tu42.2738 : Unit) )
    (cos.2548 : Float -> Float) (read_float.2568 : Unit -> Float) (screen.2579 : Array(Float)) (screenx_dir.2599 : Array(Float)) (screeny_dir.2600 : Array(Float)) (screenz_dir.2601 : Array(Float)) (sin.2546 : Float -> Float) (viewpoint.2580 : Array(Float)) 
    Let Tu56.5259 : Unit =
      Let Ti2041.5331 : Int =
        Int (0)
      In
      Let Td2043.5332 : Float =
        Let Tu2042.5333 : Unit =
          Unit
        In
        AppClosure read_float.2568 (Tu2042.5333 )
      In
      screen.2579.(Ti2041.5331) <- Td2043.5332
    In
    Let Tu55.5260 : Unit =
      Let Ti2044.5328 : Int =
        Int (1)
      In
      Let Td2046.5329 : Float =
        Let Tu2045.5330 : Unit =
          Unit
        In
        AppClosure read_float.2568 (Tu2045.5330 )
      In
      screen.2579.(Ti2044.5328) <- Td2046.5329
    In
    Let Tu54.5261 : Unit =
      Let Ti2047.5325 : Int =
        Int (2)
      In
      Let Td2049.5326 : Float =
        Let Tu2048.5327 : Unit =
          Unit
        In
        AppClosure read_float.2568 (Tu2048.5327 )
      In
      screen.2579.(Ti2047.5325) <- Td2049.5326
    In
    Let v1.5262 : Float =
      Let Td2051.5323 : Float =
        Let Tu2050.5324 : Unit =
          Unit
        In
        AppClosure read_float.2568 (Tu2050.5324 )
      In
      AppClosure rad.2735 (Td2051.5323 )
    In
    Let cos_v1.5263 : Float =
      AppClosure cos.2548 (v1.5262 )
    In
    Let sin_v1.5264 : Float =
      AppClosure sin.2546 (v1.5262 )
    In
    Let v2.5265 : Float =
      Let Td2053.5321 : Float =
        Let Tu2052.5322 : Unit =
          Unit
        In
        AppClosure read_float.2568 (Tu2052.5322 )
      In
      AppClosure rad.2735 (Td2053.5321 )
    In
    Let cos_v2.5266 : Float =
      AppClosure cos.2548 (v2.5265 )
    In
    Let sin_v2.5267 : Float =
      AppClosure sin.2546 (v2.5265 )
    In
    Let Tu53.5268 : Unit =
      Let Ti2054.5317 : Int =
        Int (0)
      In
      Let Td2057.5318 : Float =
        Let Td2055.5319 : Float =
          cos_v1.5263 *. sin_v2.5267
        In
        Let Td2056.5320 : Float =
          Float (200.000000)
        In
        Td2055.5319 *. Td2056.5320
      In
      screenz_dir.2601.(Ti2054.5317) <- Td2057.5318
    In
    Let Tu52.5269 : Unit =
      Let Ti2058.5314 : Int =
        Int (1)
      In
      Let Td2060.5315 : Float =
        Let Td2059.5316 : Float =
          Float (-200.000000)
        In
        sin_v1.5264 *. Td2059.5316
      In
      screenz_dir.2601.(Ti2058.5314) <- Td2060.5315
    In
    Let Tu51.5270 : Unit =
      Let Ti2061.5310 : Int =
        Int (2)
      In
      Let Td2064.5311 : Float =
        Let Td2062.5312 : Float =
          cos_v1.5263 *. cos_v2.5266
        In
        Let Td2063.5313 : Float =
          Float (200.000000)
        In
        Td2062.5312 *. Td2063.5313
      In
      screenz_dir.2601.(Ti2061.5310) <- Td2064.5311
    In
    Let Tu50.5271 : Unit =
      Let Ti2065.5309 : Int =
        Int (0)
      In
      screenx_dir.2599.(Ti2065.5309) <- cos_v2.5266
    In
    Let Tu49.5272 : Unit =
      Let Ti2066.5307 : Int =
        Int (1)
      In
      Let Td2067.5308 : Float =
        Float (0.000000)
      In
      screenx_dir.2599.(Ti2066.5307) <- Td2067.5308
    In
    Let Tu48.5273 : Unit =
      Let Ti2068.5305 : Int =
        Int (2)
      In
      Let Td2069.5306 : Float =
        AppClosure fneg.2527 (sin_v2.5267 )
      In
      screenx_dir.2599.(Ti2068.5305) <- Td2069.5306
    In
    Let Tu47.5274 : Unit =
      Let Ti2070.5302 : Int =
        Int (0)
      In
      Let Td2072.5303 : Float =
        Let Td2071.5304 : Float =
          AppClosure fneg.2527 (sin_v1.5264 )
        In
        Td2071.5304 *. sin_v2.5267
      In
      screeny_dir.2600.(Ti2070.5302) <- Td2072.5303
    In
    Let Tu46.5275 : Unit =
      Let Ti2073.5300 : Int =
        Int (1)
      In
      Let Td2074.5301 : Float =
        AppClosure fneg.2527 (cos_v1.5263 )
      In
      screeny_dir.2600.(Ti2073.5300) <- Td2074.5301
    In
    Let Tu45.5276 : Unit =
      Let Ti2075.5297 : Int =
        Int (2)
      In
      Let Td2077.5298 : Float =
        Let Td2076.5299 : Float =
          AppClosure fneg.2527 (sin_v1.5264 )
        In
        Td2076.5299 *. cos_v2.5266
      In
      screeny_dir.2600.(Ti2075.5297) <- Td2077.5298
    In
    Let Tu44.5277 : Unit =
      Let Ti2078.5291 : Int =
        Int (0)
      In
      Let Td2083.5292 : Float =
        Let Td2080.5293 : Float =
          Let Ti2079.5296 : Int =
            Int (0)
          In
          screen.2579.(Ti2079.5296)
        In
        Let Td2082.5294 : Float =
          Let Ti2081.5295 : Int =
            Int (0)
          In
          screenz_dir.2601.(Ti2081.5295)
        In
        Td2080.5293 -. Td2082.5294
      In
      viewpoint.2580.(Ti2078.5291) <- Td2083.5292
    In
    Let Tu43.5278 : Unit =
      Let Ti2084.5285 : Int =
        Int (1)
      In
      Let Td2089.5286 : Float =
        Let Td2086.5287 : Float =
          Let Ti2085.5290 : Int =
            Int (1)
          In
          screen.2579.(Ti2085.5290)
        In
        Let Td2088.5288 : Float =
          Let Ti2087.5289 : Int =
            Int (1)
          In
          screenz_dir.2601.(Ti2087.5289)
        In
        Td2086.5287 -. Td2088.5288
      In
      viewpoint.2580.(Ti2084.5285) <- Td2089.5286
    In
    Let Ti2090.5279 : Int =
      Int (2)
    In
    Let Td2095.5280 : Float =
      Let Td2092.5281 : Float =
        Let Ti2091.5284 : Int =
          Int (2)
        In
        screen.2579.(Ti2091.5284)
      In
      Let Td2094.5282 : Float =
        Let Ti2093.5283 : Int =
          Int (2)
        In
        screenz_dir.2601.(Ti2093.5283)
      In
      Td2092.5281 -. Td2094.5282
    In
    viewpoint.2580.(Ti2090.5279) <- Td2095.5280
  Unit -> Unit read_light.2739 ((Tu57.2740 : Unit) )
    (beam.2582 : Array(Float)) (cos.2548 : Float -> Float) (light.2581 : Array(Float)) (read_float.2568 : Unit -> Float) (read_int.2557 : Unit -> Int) (sin.2546 : Float -> Float) 
    Let nl.5235 : Int =
      Let Tu2027.5258 : Unit =
        Unit
      In
      AppClosure read_int.2557 (Tu2027.5258 )
    In
    Let l1.5236 : Float =
      Let Td2029.5256 : Float =
        Let Tu2028.5257 : Unit =
          Unit
        In
        AppClosure read_float.2568 (Tu2028.5257 )
      In
      AppClosure rad.2735 (Td2029.5256 )
    In
    Let sl1.5237 : Float =
      AppClosure sin.2546 (l1.5236 )
    In
    Let Tu60.5238 : Unit =
      Let Ti2030.5254 : Int =
        Int (1)
      In
      Let Td2031.5255 : Float =
        AppClosure fneg.2527 (sl1.5237 )
      In
      light.2581.(Ti2030.5254) <- Td2031.5255
    In
    Let l2.5239 : Float =
      Let Td2033.5252 : Float =
        Let Tu2032.5253 : Unit =
          Unit
        In
        AppClosure read_float.2568 (Tu2032.5253 )
      In
      AppClosure rad.2735 (Td2033.5252 )
    In
    Let cl1.5240 : Float =
      AppClosure cos.2548 (l1.5236 )
    In
    Let sl2.5241 : Float =
      AppClosure sin.2546 (l2.5239 )
    In
    Let Tu59.5242 : Unit =
      Let Ti2034.5250 : Int =
        Int (0)
      In
      Let Td2035.5251 : Float =
        cl1.5240 *. sl2.5241
      In
      light.2581.(Ti2034.5250) <- Td2035.5251
    In
    Let cl2.5243 : Float =
      AppClosure cos.2548 (l2.5239 )
    In
    Let Tu58.5244 : Unit =
      Let Ti2036.5248 : Int =
        Int (2)
      In
      Let Td2037.5249 : Float =
        cl1.5240 *. cl2.5243
      In
      light.2581.(Ti2036.5248) <- Td2037.5249
    In
    Let Ti2038.5245 : Int =
      Int (0)
    In
    Let Td2040.5246 : Float =
      Let Tu2039.5247 : Unit =
        Unit
      In
      AppClosure read_float.2568 (Tu2039.5247 )
    In
    beam.2582.(Ti2038.5245) <- Td2040.5246
  Array(Float) -> Array(Float) -> Unit rotate_quadratic_matrix.2741 ((abc.2742 : Array(Float)) (rot.2743 : Array(Float)) )
    (cos.2548 : Float -> Float) (sin.2546 : Float -> Float) 
    Let cos_x.5125 : Float =
      Let Td1941.5233 : Float =
        Let Ti1940.5234 : Int =
          Int (0)
        In
        rot.2743.(Ti1940.5234)
      In
      AppClosure cos.2548 (Td1941.5233 )
    In
    Let sin_x.5126 : Float =
      Let Td1943.5231 : Float =
        Let Ti1942.5232 : Int =
          Int (0)
        In
        rot.2743.(Ti1942.5232)
      In
      AppClosure sin.2546 (Td1943.5231 )
    In
    Let cos_y.5127 : Float =
      Let Td1945.5229 : Float =
        Let Ti1944.5230 : Int =
          Int (1)
        In
        rot.2743.(Ti1944.5230)
      In
      AppClosure cos.2548 (Td1945.5229 )
    In
    Let sin_y.5128 : Float =
      Let Td1947.5227 : Float =
        Let Ti1946.5228 : Int =
          Int (1)
        In
        rot.2743.(Ti1946.5228)
      In
      AppClosure sin.2546 (Td1947.5227 )
    In
    Let cos_z.5129 : Float =
      Let Td1949.5225 : Float =
        Let Ti1948.5226 : Int =
          Int (2)
        In
        rot.2743.(Ti1948.5226)
      In
      AppClosure cos.2548 (Td1949.5225 )
    In
    Let sin_z.5130 : Float =
      Let Td1951.5223 : Float =
        Let Ti1950.5224 : Int =
          Int (2)
        In
        rot.2743.(Ti1950.5224)
      In
      AppClosure sin.2546 (Td1951.5223 )
    In
    Let m00.5131 : Float =
      cos_y.5127 *. cos_z.5129
    In
    Let m01.5132 : Float =
      Let Td1953.5220 : Float =
        Let Td1952.5222 : Float =
          sin_x.5126 *. sin_y.5128
        In
        Td1952.5222 *. cos_z.5129
      In
      Let Td1954.5221 : Float =
        cos_x.5125 *. sin_z.5130
      In
      Td1953.5220 -. Td1954.5221
    In
    Let m02.5133 : Float =
      Let Td1956.5217 : Float =
        Let Td1955.5219 : Float =
          cos_x.5125 *. sin_y.5128
        In
        Td1955.5219 *. cos_z.5129
      In
      Let Td1957.5218 : Float =
        sin_x.5126 *. sin_z.5130
      In
      Td1956.5217 +. Td1957.5218
    In
    Let m10.5134 : Float =
      cos_y.5127 *. sin_z.5130
    In
    Let m11.5135 : Float =
      Let Td1959.5214 : Float =
        Let Td1958.5216 : Float =
          sin_x.5126 *. sin_y.5128
        In
        Td1958.5216 *. sin_z.5130
      In
      Let Td1960.5215 : Float =
        cos_x.5125 *. cos_z.5129
      In
      Td1959.5214 +. Td1960.5215
    In
    Let m12.5136 : Float =
      Let Td1962.5211 : Float =
        Let Td1961.5213 : Float =
          cos_x.5125 *. sin_y.5128
        In
        Td1961.5213 *. sin_z.5130
      In
      Let Td1963.5212 : Float =
        sin_x.5126 *. cos_z.5129
      In
      Td1962.5211 -. Td1963.5212
    In
    Let m20.5137 : Float =
      AppClosure fneg.2527 (sin_y.5128 )
    In
    Let m21.5138 : Float =
      sin_x.5126 *. cos_y.5127
    In
    Let m22.5139 : Float =
      cos_x.5125 *. cos_y.5127
    In
    Let ao.5140 : Float =
      Let Ti1964.5210 : Int =
        Int (0)
      In
      abc.2742.(Ti1964.5210)
    In
    Let bo.5141 : Float =
      Let Ti1965.5209 : Int =
        Int (1)
      In
      abc.2742.(Ti1965.5209)
    In
    Let co.5142 : Float =
      Let Ti1966.5208 : Int =
        Int (2)
      In
      abc.2742.(Ti1966.5208)
    In
    Let Tu65.5143 : Unit =
      Let Ti1967.5199 : Int =
        Int (0)
      In
      Let Td1975.5200 : Float =
        Let Td1972.5201 : Float =
          Let Td1969.5204 : Float =
            Let Td1968.5207 : Float =
              AppClosure fsqr.2531 (m00.5131 )
            In
            ao.5140 *. Td1968.5207
          In
          Let Td1971.5205 : Float =
            Let Td1970.5206 : Float =
              AppClosure fsqr.2531 (m10.5134 )
            In
            bo.5141 *. Td1970.5206
          In
          Td1969.5204 +. Td1971.5205
        In
        Let Td1974.5202 : Float =
          Let Td1973.5203 : Float =
            AppClosure fsqr.2531 (m20.5137 )
          In
          co.5142 *. Td1973.5203
        In
        Td1972.5201 +. Td1974.5202
      In
      abc.2742.(Ti1967.5199) <- Td1975.5200
    In
    Let Tu64.5144 : Unit =
      Let Ti1976.5190 : Int =
        Int (1)
      In
      Let Td1984.5191 : Float =
        Let Td1981.5192 : Float =
          Let Td1978.5195 : Float =
            Let Td1977.5198 : Float =
              AppClosure fsqr.2531 (m01.5132 )
            In
            ao.5140 *. Td1977.5198
          In
          Let Td1980.5196 : Float =
            Let Td1979.5197 : Float =
              AppClosure fsqr.2531 (m11.5135 )
            In
            bo.5141 *. Td1979.5197
          In
          Td1978.5195 +. Td1980.5196
        In
        Let Td1983.5193 : Float =
          Let Td1982.5194 : Float =
            AppClosure fsqr.2531 (m21.5138 )
          In
          co.5142 *. Td1982.5194
        In
        Td1981.5192 +. Td1983.5193
      In
      abc.2742.(Ti1976.5190) <- Td1984.5191
    In
    Let Tu63.5145 : Unit =
      Let Ti1985.5181 : Int =
        Int (2)
      In
      Let Td1993.5182 : Float =
        Let Td1990.5183 : Float =
          Let Td1987.5186 : Float =
            Let Td1986.5189 : Float =
              AppClosure fsqr.2531 (m02.5133 )
            In
            ao.5140 *. Td1986.5189
          In
          Let Td1989.5187 : Float =
            Let Td1988.5188 : Float =
              AppClosure fsqr.2531 (m12.5136 )
            In
            bo.5141 *. Td1988.5188
          In
          Td1987.5186 +. Td1989.5187
        In
        Let Td1992.5184 : Float =
          Let Td1991.5185 : Float =
            AppClosure fsqr.2531 (m22.5139 )
          In
          co.5142 *. Td1991.5185
        In
        Td1990.5183 +. Td1992.5184
      In
      abc.2742.(Ti1985.5181) <- Td1993.5182
    In
    Let Tu62.5146 : Unit =
      Let Ti1994.5170 : Int =
        Int (0)
      In
      Let Td2004.5171 : Float =
        Let Td1995.5172 : Float =
          Float (2.000000)
        In
        Let Td2003.5173 : Float =
          Let Td2000.5174 : Float =
            Let Td1997.5177 : Float =
              Let Td1996.5180 : Float =
                ao.5140 *. m01.5132
              In
              Td1996.5180 *. m02.5133
            In
            Let Td1999.5178 : Float =
              Let Td1998.5179 : Float =
                bo.5141 *. m11.5135
              In
              Td1998.5179 *. m12.5136
            In
            Td1997.5177 +. Td1999.5178
          In
          Let Td2002.5175 : Float =
            Let Td2001.5176 : Float =
              co.5142 *. m21.5138
            In
            Td2001.5176 *. m22.5139
          In
          Td2000.5174 +. Td2002.5175
        In
        Td1995.5172 *. Td2003.5173
      In
      rot.2743.(Ti1994.5170) <- Td2004.5171
    In
    Let Tu61.5147 : Unit =
      Let Ti2005.5159 : Int =
        Int (1)
      In
      Let Td2015.5160 : Float =
        Let Td2006.5161 : Float =
          Float (2.000000)
        In
        Let Td2014.5162 : Float =
          Let Td2011.5163 : Float =
            Let Td2008.5166 : Float =
              Let Td2007.5169 : Float =
                ao.5140 *. m00.5131
              In
              Td2007.5169 *. m02.5133
            In
            Let Td2010.5167 : Float =
              Let Td2009.5168 : Float =
                bo.5141 *. m10.5134
              In
              Td2009.5168 *. m12.5136
            In
            Td2008.5166 +. Td2010.5167
          In
          Let Td2013.5164 : Float =
            Let Td2012.5165 : Float =
              co.5142 *. m20.5137
            In
            Td2012.5165 *. m22.5139
          In
          Td2011.5163 +. Td2013.5164
        In
        Td2006.5161 *. Td2014.5162
      In
      rot.2743.(Ti2005.5159) <- Td2015.5160
    In
    Let Ti2016.5148 : Int =
      Int (2)
    In
    Let Td2026.5149 : Float =
      Let Td2017.5150 : Float =
        Float (2.000000)
      In
      Let Td2025.5151 : Float =
        Let Td2022.5152 : Float =
          Let Td2019.5155 : Float =
            Let Td2018.5158 : Float =
              ao.5140 *. m00.5131
            In
            Td2018.5158 *. m01.5132
          In
          Let Td2021.5156 : Float =
            Let Td2020.5157 : Float =
              bo.5141 *. m10.5134
            In
            Td2020.5157 *. m11.5135
          In
          Td2019.5155 +. Td2021.5156
        In
        Let Td2024.5153 : Float =
          Let Td2023.5154 : Float =
            co.5142 *. m20.5137
          In
          Td2023.5154 *. m21.5138
        In
        Td2022.5152 +. Td2024.5153
      In
      Td2017.5150 *. Td2025.5151
    In
    rot.2743.(Ti2016.5148) <- Td2026.5149
  Int -> Bool read_nth_object.2744 ((n.2745 : Int) )
    (objects.2578 : Array(Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float))) (read_float.2568 : Unit -> Float) (read_int.2557 : Unit -> Int) (rotate_quadratic_matrix.2741 : Array(Float) -> Array(Float) -> Unit) 
    Let texture.5003 : Int =
      Let Tu1853.5124 : Unit =
        Unit
      In
      AppClosure read_int.2557 (Tu1853.5124 )
    In
    Let Ti1939.5004 : Int =
      Let Ti1854.5123 : Int =
        Int (1)
      In
      Neg (Ti1854.5123)
    In
    If texture.5003 = Ti1939.5004 Then
      Int (0)
    Then
      Let form.5005 : Int =
        Let Tu1855.5122 : Unit =
          Unit
        In
        AppClosure read_int.2557 (Tu1855.5122 )
      In
      Let refltype.5006 : Int =
        Let Tu1856.5121 : Unit =
          Unit
        In
        AppClosure read_int.2557 (Tu1856.5121 )
      In
      Let isrot_p.5007 : Int =
        Let Tu1857.5120 : Unit =
          Unit
        In
        AppClosure read_int.2557 (Tu1857.5120 )
      In
      Let abc.5008 : Array(Float) =
        Let Ti1858.5118 : Int =
          Int (3)
        In
        Let Td1859.5119 : Float =
          Float (0.000000)
        In
        AppClosure min_caml_create_float_array (Ti1858.5118 Td1859.5119 )
      In
      Let Tu84.5009 : Unit =
        Let Ti1860.5115 : Int =
          Int (0)
        In
        Let Td1862.5116 : Float =
          Let Tu1861.5117 : Unit =
            Unit
          In
          AppClosure read_float.2568 (Tu1861.5117 )
        In
        abc.5008.(Ti1860.5115) <- Td1862.5116
      In
      Let Tu83.5010 : Unit =
        Let Ti1863.5112 : Int =
          Int (1)
        In
        Let Td1865.5113 : Float =
          Let Tu1864.5114 : Unit =
            Unit
          In
          AppClosure read_float.2568 (Tu1864.5114 )
        In
        abc.5008.(Ti1863.5112) <- Td1865.5113
      In
      Let Tu82.5011 : Unit =
        Let Ti1866.5109 : Int =
          Int (2)
        In
        Let Td1868.5110 : Float =
          Let Tu1867.5111 : Unit =
            Unit
          In
          AppClosure read_float.2568 (Tu1867.5111 )
        In
        abc.5008.(Ti1866.5109) <- Td1868.5110
      In
      Let xyz.5012 : Array(Float) =
        Let Ti1869.5107 : Int =
          Int (3)
        In
        Let Td1870.5108 : Float =
          Float (0.000000)
        In
        AppClosure min_caml_create_float_array (Ti1869.5107 Td1870.5108 )
      In
      Let Tu81.5013 : Unit =
        Let Ti1871.5104 : Int =
          Int (0)
        In
        Let Td1873.5105 : Float =
          Let Tu1872.5106 : Unit =
            Unit
          In
          AppClosure read_float.2568 (Tu1872.5106 )
        In
        xyz.5012.(Ti1871.5104) <- Td1873.5105
      In
      Let Tu80.5014 : Unit =
        Let Ti1874.5101 : Int =
          Int (1)
        In
        Let Td1876.5102 : Float =
          Let Tu1875.5103 : Unit =
            Unit
          In
          AppClosure read_float.2568 (Tu1875.5103 )
        In
        xyz.5012.(Ti1874.5101) <- Td1876.5102
      In
      Let Tu79.5015 : Unit =
        Let Ti1877.5098 : Int =
          Int (2)
        In
        Let Td1879.5099 : Float =
          Let Tu1878.5100 : Unit =
            Unit
          In
          AppClosure read_float.2568 (Tu1878.5100 )
        In
        xyz.5012.(Ti1877.5098) <- Td1879.5099
      In
      Let m_invert.5016 : Bool =
        Let Td1881.5096 : Float =
          Let Tu1880.5097 : Unit =
            Unit
          In
          AppClosure read_float.2568 (Tu1880.5097 )
        In
        AppClosure fisneg.2516 (Td1881.5096 )
      In
      Let reflparam.5017 : Array(Float) =
        Let Ti1882.5094 : Int =
          Int (2)
        In
        Let Td1883.5095 : Float =
          Float (0.000000)
        In
        AppClosure min_caml_create_float_array (Ti1882.5094 Td1883.5095 )
      In
      Let Tu78.5018 : Unit =
        Let Ti1884.5091 : Int =
          Int (0)
        In
        Let Td1886.5092 : Float =
          Let Tu1885.5093 : Unit =
            Unit
          In
          AppClosure read_float.2568 (Tu1885.5093 )
        In
        reflparam.5017.(Ti1884.5091) <- Td1886.5092
      In
      Let Tu77.5019 : Unit =
        Let Ti1887.5088 : Int =
          Int (1)
        In
        Let Td1889.5089 : Float =
          Let Tu1888.5090 : Unit =
            Unit
          In
          AppClosure read_float.2568 (Tu1888.5090 )
        In
        reflparam.5017.(Ti1887.5088) <- Td1889.5089
      In
      Let color.5020 : Array(Float) =
        Let Ti1890.5086 : Int =
          Int (3)
        In
        Let Td1891.5087 : Float =
          Float (0.000000)
        In
        AppClosure min_caml_create_float_array (Ti1890.5086 Td1891.5087 )
      In
      Let Tu76.5021 : Unit =
        Let Ti1892.5083 : Int =
          Int (0)
        In
        Let Td1894.5084 : Float =
          Let Tu1893.5085 : Unit =
            Unit
          In
          AppClosure read_float.2568 (Tu1893.5085 )
        In
        color.5020.(Ti1892.5083) <- Td1894.5084
      In
      Let Tu75.5022 : Unit =
        Let Ti1895.5080 : Int =
          Int (1)
        In
        Let Td1897.5081 : Float =
          Let Tu1896.5082 : Unit =
            Unit
          In
          AppClosure read_float.2568 (Tu1896.5082 )
        In
        color.5020.(Ti1895.5080) <- Td1897.5081
      In
      Let Tu74.5023 : Unit =
        Let Ti1898.5077 : Int =
          Int (2)
        In
        Let Td1900.5078 : Float =
          Let Tu1899.5079 : Unit =
            Unit
          In
          AppClosure read_float.2568 (Tu1899.5079 )
        In
        color.5020.(Ti1898.5077) <- Td1900.5078
      In
      Let rotation.5024 : Array(Float) =
        Let Ti1901.5075 : Int =
          Int (3)
        In
        Let Td1902.5076 : Float =
          Float (0.000000)
        In
        AppClosure min_caml_create_float_array (Ti1901.5075 Td1902.5076 )
      In
      Let Tu73.5025 : Unit =
        If 0 = isrot_p.5007 Then
          Unit
        Then
          Let Tu67.5061 : Unit =
            Let Ti1903.5071 : Int =
              Int (0)
            In
            Let Td1906.5072 : Float =
              Let Td1905.5073 : Float =
                Let Tu1904.5074 : Unit =
                  Unit
                In
                AppClosure read_float.2568 (Tu1904.5074 )
              In
              AppClosure rad.2735 (Td1905.5073 )
            In
            rotation.5024.(Ti1903.5071) <- Td1906.5072
          In
          Let Tu66.5062 : Unit =
            Let Ti1907.5067 : Int =
              Int (1)
            In
            Let Td1910.5068 : Float =
              Let Td1909.5069 : Float =
                Let Tu1908.5070 : Unit =
                  Unit
                In
                AppClosure read_float.2568 (Tu1908.5070 )
              In
              AppClosure rad.2735 (Td1909.5069 )
            In
            rotation.5024.(Ti1907.5067) <- Td1910.5068
          In
          Let Ti1911.5063 : Int =
            Int (2)
          In
          Let Td1914.5064 : Float =
            Let Td1913.5065 : Float =
              Let Tu1912.5066 : Unit =
                Unit
              In
              AppClosure read_float.2568 (Tu1912.5066 )
            In
            AppClosure rad.2735 (Td1913.5065 )
          In
          rotation.5024.(Ti1911.5063) <- Td1914.5064
      In
      Let m_invert2.5026 : Bool =
        Let Ti1915.5060 : Int =
          Int (2)
        In
        If form.5005 = Ti1915.5060 Then
          Int (1)
        Then
          Var (m_invert.5016)
      In
      Let ctbl.5027 : Array(Float) =
        Let Ti1916.5058 : Int =
          Int (4)
        In
        Let Td1917.5059 : Float =
          Float (0.000000)
        In
        AppClosure min_caml_create_float_array (Ti1916.5058 Td1917.5059 )
      In
      Let obj.5028 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
        Tuple (texture.5003, form.5005, refltype.5006, isrot_p.5007, abc.5008, xyz.5012, m_invert2.5026, reflparam.5017, color.5020, rotation.5024, ctbl.5027, )
      In
      Let Tu72.5029 : Unit =
        objects.2578.(n.2745) <- obj.5028
      In
      Let Tu71.5030 : Unit =
        Let Ti1938.5032 : Int =
          Int (3)
        In
        If form.5005 = Ti1938.5032 Then
          Let a.5035 : Float =
            Let Ti1918.5057 : Int =
              Int (0)
            In
            abc.5008.(Ti1918.5057)
          In
          Let Tu69.5036 : Unit =
            Let Ti1919.5052 : Int =
              Int (0)
            In
            Let Td1923.5053 : Float =
              Let Tb1922.5054 : Bool =
                AppClosure fiszero.2518 (a.5035 )
              In
              If 0 = Tb1922.5054 Then
                Let Td1920.5055 : Float =
                  AppClosure sgn.2610 (a.5035 )
                In
                Let Td1921.5056 : Float =
                  AppClosure fsqr.2531 (a.5035 )
                In
                Td1920.5055 /. Td1921.5056
              Then
                Float (0.000000)
            In
            abc.5008.(Ti1919.5052) <- Td1923.5053
          In
          Let b.5037 : Float =
            Let Ti1924.5051 : Int =
              Int (1)
            In
            abc.5008.(Ti1924.5051)
          In
          Let Tu68.5038 : Unit =
            Let Ti1925.5046 : Int =
              Int (1)
            In
            Let Td1929.5047 : Float =
              Let Tb1928.5048 : Bool =
                AppClosure fiszero.2518 (b.5037 )
              In
              If 0 = Tb1928.5048 Then
                Let Td1926.5049 : Float =
                  AppClosure sgn.2610 (b.5037 )
                In
                Let Td1927.5050 : Float =
                  AppClosure fsqr.2531 (b.5037 )
                In
                Td1926.5049 /. Td1927.5050
              Then
                Float (0.000000)
            In
            abc.5008.(Ti1925.5046) <- Td1929.5047
          In
          Let c.5039 : Float =
            Let Ti1930.5045 : Int =
              Int (2)
            In
            abc.5008.(Ti1930.5045)
          In
          Let Ti1931.5040 : Int =
            Int (2)
          In
          Let Td1935.5041 : Float =
            Let Tb1934.5042 : Bool =
              AppClosure fiszero.2518 (c.5039 )
            In
            If 0 = Tb1934.5042 Then
              Let Td1932.5043 : Float =
                AppClosure sgn.2610 (c.5039 )
              In
              Let Td1933.5044 : Float =
                AppClosure fsqr.2531 (c.5039 )
              In
              Td1932.5043 /. Td1933.5044
            Then
              Float (0.000000)
          In
          abc.5008.(Ti1931.5040) <- Td1935.5041
        Then
          Let Ti1937.5033 : Int =
            Int (2)
          In
          If form.5005 = Ti1937.5033 Then
            Let Ti1936.5034 : Int =
              If 0 = m_invert.5016 Then
                Int (1)
              Then
                Int (0)
            In
            AppClosure vecunit_sgn.2636 (abc.5008 Ti1936.5034 )
          Then
            Unit
      In
      Let Tu70.5031 : Unit =
        If 0 = isrot_p.5007 Then
          Unit
        Then
          AppClosure rotate_quadratic_matrix.2741 (abc.5008 rotation.5024 )
      In
      Int (1)
  Int -> Unit read_object.2746 ((n.2747 : Int) )
    (n_objects.2577 : Array(Int)) (read_nth_object.2744 : Int -> Bool) 
    Let Ti1852.4998 : Int =
      Int (60)
    In
    If Ti1852.4998 <= n.2747 Then
      Unit
    Then
      Let Tb1851.4999 : Bool =
        AppClosure read_nth_object.2744 (n.2747 )
      In
      If 0 = Tb1851.4999 Then
        Let Ti1848.5002 : Int =
          Int (0)
        In
        n_objects.2577.(Ti1848.5002) <- n.2747
      Then
        Let Ti1850.5000 : Int =
          Let Ti1849.5001 : Int =
            Int (1)
          In
          n.2747 + Ti1849.5001
        In
        AppClosure read_object.2746 (Ti1850.5000 )
  Unit -> Unit read_all_object.2748 ((Tu85.2749 : Unit) )
    (read_object.2746 : Int -> Unit) 
    Let Ti1847.4997 : Int =
      Int (0)
    In
    AppClosure read_object.2746 (Ti1847.4997 )
  Int -> Array(Int) read_net_item.2750 ((length.2751 : Int) )
    (read_int.2557 : Unit -> Int) 
    Let item.4985 : Int =
      Let Tu1838.4996 : Unit =
        Unit
      In
      AppClosure read_int.2557 (Tu1838.4996 )
    In
    Let Ti1846.4986 : Int =
      Let Ti1839.4995 : Int =
        Int (1)
      In
      Neg (Ti1839.4995)
    In
    If item.4985 = Ti1846.4986 Then
      Let Ti1841.4991 : Int =
        Let Ti1840.4994 : Int =
          Int (1)
        In
        length.2751 + Ti1840.4994
      In
      Let Ti1843.4992 : Int =
        Let Ti1842.4993 : Int =
          Int (1)
        In
        Neg (Ti1842.4993)
      In
      AppClosure min_caml_create_array (Ti1841.4991 Ti1843.4992 )
    Then
      Let v.4987 : Array(Int) =
        Let Ti1845.4989 : Int =
          Let Ti1844.4990 : Int =
            Int (1)
          In
          length.2751 + Ti1844.4990
        In
        AppClosure read_net_item.2750 (Ti1845.4989 )
      In
      Let Tu86.4988 : Unit =
        v.4987.(length.2751) <- item.4985
      In
      Var (v.4987)
  Int -> Array(Array(Int)) read_or_network.2752 ((length.2753 : Int) )
    (read_net_item.2750 : Int -> Array(Int)) 
    Let net.4973 : Array(Int) =
      Let Ti1829.4984 : Int =
        Int (0)
      In
      AppClosure read_net_item.2750 (Ti1829.4984 )
    In
    Let Ti1836.4974 : Int =
      Let Ti1830.4983 : Int =
        Int (0)
      In
      net.4973.(Ti1830.4983)
    In
    Let Ti1837.4975 : Int =
      Let Ti1831.4982 : Int =
        Int (1)
      In
      Neg (Ti1831.4982)
    In
    If Ti1836.4974 = Ti1837.4975 Then
      Let Ti1833.4980 : Int =
        Let Ti1832.4981 : Int =
          Int (1)
        In
        length.2753 + Ti1832.4981
      In
      AppClosure min_caml_create_array (Ti1833.4980 net.4973 )
    Then
      Let v.4976 : Array(Array(Int)) =
        Let Ti1835.4978 : Int =
          Let Ti1834.4979 : Int =
            Int (1)
          In
          length.2753 + Ti1834.4979
        In
        AppClosure read_or_network.2752 (Ti1835.4978 )
      In
      Let Tu87.4977 : Unit =
        v.4976.(length.2753) <- net.4973
      In
      Var (v.4976)
  Int -> Unit read_and_network.2754 ((n.2755 : Int) )
    (and_net.2583 : Array(Array(Int))) (read_net_item.2750 : Int -> Array(Int)) 
    Let net.4964 : Array(Int) =
      Let Ti1822.4972 : Int =
        Int (0)
      In
      AppClosure read_net_item.2750 (Ti1822.4972 )
    In
    Let Ti1827.4965 : Int =
      Let Ti1823.4971 : Int =
        Int (0)
      In
      net.4964.(Ti1823.4971)
    In
    Let Ti1828.4966 : Int =
      Let Ti1824.4970 : Int =
        Int (1)
      In
      Neg (Ti1824.4970)
    In
    If Ti1827.4965 = Ti1828.4966 Then
      Unit
    Then
      Let Tu88.4967 : Unit =
        and_net.2583.(n.2755) <- net.4964
      In
      Let Ti1826.4968 : Int =
        Let Ti1825.4969 : Int =
          Int (1)
        In
        n.2755 + Ti1825.4969
      In
      AppClosure read_and_network.2754 (Ti1826.4968 )
  Unit -> Unit read_parameter.2756 ((Tu89.2757 : Unit) )
    (or_net.2584 : Array(Array(Array(Int)))) (read_all_object.2748 : Unit -> Unit) (read_and_network.2754 : Int -> Unit) (read_light.2739 : Unit -> Unit) (read_or_network.2752 : Int -> Array(Array(Int))) (read_screen_settings.2737 : Unit -> Unit) 
    Let Tu93.4953 : Unit =
      Let Tu1815.4963 : Unit =
        Unit
      In
      AppClosure read_screen_settings.2737 (Tu1815.4963 )
    In
    Let Tu92.4954 : Unit =
      Let Tu1816.4962 : Unit =
        Unit
      In
      AppClosure read_light.2739 (Tu1816.4962 )
    In
    Let Tu91.4955 : Unit =
      Let Tu1817.4961 : Unit =
        Unit
      In
      AppClosure read_all_object.2748 (Tu1817.4961 )
    In
    Let Tu90.4956 : Unit =
      Let Ti1818.4960 : Int =
        Int (0)
      In
      AppClosure read_and_network.2754 (Ti1818.4960 )
    In
    Let Ti1819.4957 : Int =
      Int (0)
    In
    Let Ta1821.4958 : Array(Array(Int)) =
      Let Ti1820.4959 : Int =
        Int (0)
      In
      AppClosure read_or_network.2752 (Ti1820.4959 )
    In
    or_net.2584.(Ti1819.4957) <- Ta1821.4958
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int -> Int -> Int -> Bool solver_rect_surface.2758 ((m.2759 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) (dirvec.2760 : Array(Float)) (b0.2761 : Float) (b1.2762 : Float) (b2.2763 : Float) (i0.2764 : Int) (i1.2765 : Int) (i2.2766 : Int) )
    (solver_dist.2585 : Array(Float)) 
    Let Tb1814.4927 : Bool =
      Let Td1793.4952 : Float =
        dirvec.2760.(i0.2764)
      In
      AppClosure fiszero.2518 (Td1793.4952 )
    In
    If 0 = Tb1814.4927 Then
      Let abc.4928 : Array(Float) =
        AppClosure o_param_abc.2680 (m.2759 )
      In
      Let d.4929 : Float =
        Let Tb1797.4947 : Bool =
          Let Tb1794.4949 : Bool =
            AppClosure o_isinvert.2670 (m.2759 )
          In
          Let Tb1796.4950 : Bool =
            Let Td1795.4951 : Float =
              dirvec.2760.(i0.2764)
            In
            AppClosure fisneg.2516 (Td1795.4951 )
          In
          AppClosure xor.2607 (Tb1794.4949 Tb1796.4950 )
        In
        Let Td1798.4948 : Float =
          abc.4928.(i0.2764)
        In
        AppClosure fneg_cond.2612 (Tb1797.4947 Td1798.4948 )
      In
      Let d2.4930 : Float =
        Let Td1799.4945 : Float =
          d.4929 -. b0.2761
        In
        Let Td1800.4946 : Float =
          dirvec.2760.(i0.2764)
        In
        Td1799.4945 /. Td1800.4946
      In
      Let Tb1813.4931 : Bool =
        Let Td1804.4940 : Float =
          Let Td1803.4942 : Float =
            Let Td1802.4943 : Float =
              Let Td1801.4944 : Float =
                dirvec.2760.(i1.2765)
              In
              d2.4930 *. Td1801.4944
            In
            Td1802.4943 +. b1.2762
          In
          AppClosure fabs.2523 (Td1803.4942 )
        In
        Let Td1805.4941 : Float =
          abc.4928.(i1.2765)
        In
        AppClosure fless.2511 (Td1804.4940 Td1805.4941 )
      In
      If 0 = Tb1813.4931 Then
        Int (0)
      Then
        Let Tb1812.4932 : Bool =
          Let Td1809.4935 : Float =
            Let Td1808.4937 : Float =
              Let Td1807.4938 : Float =
                Let Td1806.4939 : Float =
                  dirvec.2760.(i2.2766)
                In
                d2.4930 *. Td1806.4939
              In
              Td1807.4938 +. b2.2763
            In
            AppClosure fabs.2523 (Td1808.4937 )
          In
          Let Td1810.4936 : Float =
            abc.4928.(i2.2766)
          In
          AppClosure fless.2511 (Td1809.4935 Td1810.4936 )
        In
        If 0 = Tb1812.4932 Then
          Int (0)
        Then
          Let Tu94.4933 : Unit =
            Let Ti1811.4934 : Int =
              Int (0)
            In
            solver_dist.2585.(Ti1811.4934) <- d2.4930
          In
          Int (1)
    Then
      Int (0)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int solver_rect.2767 ((m.2768 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) (dirvec.2769 : Array(Float)) (b0.2770 : Float) (b1.2771 : Float) (b2.2772 : Float) )
    (solver_rect_surface.2758 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int -> Int -> Int -> Bool) 
    Let Tb1792.4915 : Bool =
      Let Ti1781.4924 : Int =
        Int (0)
      In
      Let Ti1782.4925 : Int =
        Int (1)
      In
      Let Ti1783.4926 : Int =
        Int (2)
      In
      AppClosure solver_rect_surface.2758 (m.2768 dirvec.2769 b0.2770 b1.2771 b2.2772 Ti1781.4924 Ti1782.4925 Ti1783.4926 )
    In
    If 0 = Tb1792.4915 Then
      Let Tb1791.4916 : Bool =
        Let Ti1784.4921 : Int =
          Int (1)
        In
        Let Ti1785.4922 : Int =
          Int (2)
        In
        Let Ti1786.4923 : Int =
          Int (0)
        In
        AppClosure solver_rect_surface.2758 (m.2768 dirvec.2769 b1.2771 b2.2772 b0.2770 Ti1784.4921 Ti1785.4922 Ti1786.4923 )
      In
      If 0 = Tb1791.4916 Then
        Let Tb1790.4917 : Bool =
          Let Ti1787.4918 : Int =
            Int (2)
          In
          Let Ti1788.4919 : Int =
            Int (0)
          In
          Let Ti1789.4920 : Int =
            Int (1)
          In
          AppClosure solver_rect_surface.2758 (m.2768 dirvec.2769 b2.2772 b0.2770 b1.2771 Ti1787.4918 Ti1788.4919 Ti1789.4920 )
        In
        If 0 = Tb1790.4917 Then
          Int (0)
        Then
          Int (3)
      Then
        Int (2)
    Then
      Int (1)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int solver_surface.2773 ((m.2774 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) (dirvec.2775 : Array(Float)) (b0.2776 : Float) (b1.2777 : Float) (b2.2778 : Float) )
    (solver_dist.2585 : Array(Float)) 
    Let abc.4907 : Array(Float) =
      AppClosure o_param_abc.2680 (m.2774 )
    In
    Let d.4908 : Float =
      AppClosure veciprod.2639 (dirvec.2775 abc.4907 )
    In
    Let Tb1780.4909 : Bool =
      AppClosure fispos.2514 (d.4908 )
    In
    If 0 = Tb1780.4909 Then
      Int (0)
    Then
      Let Tu95.4910 : Unit =
        Let Ti1776.4911 : Int =
          Int (0)
        In
        Let Td1779.4912 : Float =
          Let Td1778.4913 : Float =
            Let Td1777.4914 : Float =
              AppClosure veciprod2.2642 (abc.4907 b0.2776 b1.2777 b2.2778 )
            In
            AppClosure fneg.2527 (Td1777.4914 )
          In
          Td1778.4913 /. d.4908
        In
        solver_dist.2585.(Ti1776.4911) <- Td1779.4912
      In
      Int (1)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Float quadratic.2779 ((m.2780 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) (v0.2781 : Float) (v1.2782 : Float) (v2.2783 : Float) )
    
    Let diag_part.4884 : Float =
      Let Td1760.4897 : Float =
        Let Td1756.4901 : Float =
          Let Td1754.4905 : Float =
            AppClosure fsqr.2531 (v0.2781 )
          In
          Let Td1755.4906 : Float =
            AppClosure o_param_a.2674 (m.2780 )
          In
          Td1754.4905 *. Td1755.4906
        In
        Let Td1759.4902 : Float =
          Let Td1757.4903 : Float =
            AppClosure fsqr.2531 (v1.2782 )
          In
          Let Td1758.4904 : Float =
            AppClosure o_param_b.2676 (m.2780 )
          In
          Td1757.4903 *. Td1758.4904
        In
        Td1756.4901 +. Td1759.4902
      In
      Let Td1763.4898 : Float =
        Let Td1761.4899 : Float =
          AppClosure fsqr.2531 (v2.2783 )
        In
        Let Td1762.4900 : Float =
          AppClosure o_param_c.2678 (m.2780 )
        In
        Td1761.4899 *. Td1762.4900
      In
      Td1760.4897 +. Td1763.4898
    In
    Let Ti1775.4885 : Int =
      AppClosure o_isrot.2672 (m.2780 )
    In
    If 0 = Ti1775.4885 Then
      Var (diag_part.4884)
    Then
      Let Td1771.4886 : Float =
        Let Td1767.4890 : Float =
          Let Td1766.4894 : Float =
            Let Td1764.4895 : Float =
              v1.2782 *. v2.2783
            In
            Let Td1765.4896 : Float =
              AppClosure o_param_r1.2698 (m.2780 )
            In
            Td1764.4895 *. Td1765.4896
          In
          diag_part.4884 +. Td1766.4894
        In
        Let Td1770.4891 : Float =
          Let Td1768.4892 : Float =
            v2.2783 *. v0.2781
          In
          Let Td1769.4893 : Float =
            AppClosure o_param_r2.2700 (m.2780 )
          In
          Td1768.4892 *. Td1769.4893
        In
        Td1767.4890 +. Td1770.4891
      In
      Let Td1774.4887 : Float =
        Let Td1772.4888 : Float =
          v0.2781 *. v1.2782
        In
        Let Td1773.4889 : Float =
          AppClosure o_param_r3.2702 (m.2780 )
        In
        Td1772.4888 *. Td1773.4889
      In
      Td1771.4886 +. Td1774.4887
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Float -> Float -> Float -> Float bilinear.2784 ((m.2785 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) (v0.2786 : Float) (v1.2787 : Float) (v2.2788 : Float) (w0.2789 : Float) (w1.2790 : Float) (w2.2791 : Float) )
    
    Let diag_part.4854 : Float =
      Let Td1731.4874 : Float =
        Let Td1727.4878 : Float =
          Let Td1725.4882 : Float =
            v0.2786 *. w0.2789
          In
          Let Td1726.4883 : Float =
            AppClosure o_param_a.2674 (m.2785 )
          In
          Td1725.4882 *. Td1726.4883
        In
        Let Td1730.4879 : Float =
          Let Td1728.4880 : Float =
            v1.2787 *. w1.2790
          In
          Let Td1729.4881 : Float =
            AppClosure o_param_b.2676 (m.2785 )
          In
          Td1728.4880 *. Td1729.4881
        In
        Td1727.4878 +. Td1730.4879
      In
      Let Td1734.4875 : Float =
        Let Td1732.4876 : Float =
          v2.2788 *. w2.2791
        In
        Let Td1733.4877 : Float =
          AppClosure o_param_c.2678 (m.2785 )
        In
        Td1732.4876 *. Td1733.4877
      In
      Td1731.4874 +. Td1734.4875
    In
    Let Ti1753.4855 : Int =
      AppClosure o_isrot.2672 (m.2785 )
    In
    If 0 = Ti1753.4855 Then
      Var (diag_part.4854)
    Then
      Let Td1752.4856 : Float =
        Let Td1751.4857 : Float =
          Let Td1745.4858 : Float =
            Let Td1739.4864 : Float =
              Let Td1737.4870 : Float =
                Let Td1735.4872 : Float =
                  v2.2788 *. w1.2790
                In
                Let Td1736.4873 : Float =
                  v1.2787 *. w2.2791
                In
                Td1735.4872 +. Td1736.4873
              In
              Let Td1738.4871 : Float =
                AppClosure o_param_r1.2698 (m.2785 )
              In
              Td1737.4870 *. Td1738.4871
            In
            Let Td1744.4865 : Float =
              Let Td1742.4866 : Float =
                Let Td1740.4868 : Float =
                  v0.2786 *. w2.2791
                In
                Let Td1741.4869 : Float =
                  v2.2788 *. w0.2789
                In
                Td1740.4868 +. Td1741.4869
              In
              Let Td1743.4867 : Float =
                AppClosure o_param_r2.2700 (m.2785 )
              In
              Td1742.4866 *. Td1743.4867
            In
            Td1739.4864 +. Td1744.4865
          In
          Let Td1750.4859 : Float =
            Let Td1748.4860 : Float =
              Let Td1746.4862 : Float =
                v0.2786 *. w1.2790
              In
              Let Td1747.4863 : Float =
                v1.2787 *. w0.2789
              In
              Td1746.4862 +. Td1747.4863
            In
            Let Td1749.4861 : Float =
              AppClosure o_param_r3.2702 (m.2785 )
            In
            Td1748.4860 *. Td1749.4861
          In
          Td1745.4858 +. Td1750.4859
        In
        AppClosure fhalf.2529 (Td1751.4857 )
      In
      diag_part.4854 +. Td1752.4856
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int solver_second.2792 ((m.2793 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) (dirvec.2794 : Array(Float)) (b0.2795 : Float) (b1.2796 : Float) (b2.2797 : Float) )
    (solver_dist.2585 : Array(Float)) 
    Let aa.4823 : Float =
      Let Td1703.4848 : Float =
        Let Ti1702.4853 : Int =
          Int (0)
        In
        dirvec.2794.(Ti1702.4853)
      In
      Let Td1705.4849 : Float =
        Let Ti1704.4852 : Int =
          Int (1)
        In
        dirvec.2794.(Ti1704.4852)
      In
      Let Td1707.4850 : Float =
        Let Ti1706.4851 : Int =
          Int (2)
        In
        dirvec.2794.(Ti1706.4851)
      In
      AppClosure quadratic.2779 (m.2793 Td1703.4848 Td1705.4849 Td1707.4850 )
    In
    Let Tb1724.4824 : Bool =
      AppClosure fiszero.2518 (aa.4823 )
    In
    If 0 = Tb1724.4824 Then
      Let bb.4825 : Float =
        Let Td1709.4842 : Float =
          Let Ti1708.4847 : Int =
            Int (0)
          In
          dirvec.2794.(Ti1708.4847)
        In
        Let Td1711.4843 : Float =
          Let Ti1710.4846 : Int =
            Int (1)
          In
          dirvec.2794.(Ti1710.4846)
        In
        Let Td1713.4844 : Float =
          Let Ti1712.4845 : Int =
            Int (2)
          In
          dirvec.2794.(Ti1712.4845)
        In
        AppClosure bilinear.2784 (m.2793 Td1709.4842 Td1711.4843 Td1713.4844 b0.2795 b1.2796 b2.2797 )
      In
      Let cc0.4826 : Float =
        AppClosure quadratic.2779 (m.2793 b0.2795 b1.2796 b2.2797 )
      In
      Let cc.4827 : Float =
        Let Ti1715.4839 : Int =
          AppClosure o_form.2666 (m.2793 )
        In
        Let Ti1716.4840 : Int =
          Int (3)
        In
        If Ti1715.4839 = Ti1716.4840 Then
          Let Td1714.4841 : Float =
            Float (1.000000)
          In
          cc0.4826 -. Td1714.4841
        Then
          Var (cc0.4826)
      In
      Let d.4828 : Float =
        Let Td1717.4837 : Float =
          AppClosure fsqr.2531 (bb.4825 )
        In
        Let Td1718.4838 : Float =
          aa.4823 *. cc.4827
        In
        Td1717.4837 -. Td1718.4838
      In
      Let Tb1723.4829 : Bool =
        AppClosure fispos.2514 (d.4828 )
      In
      If 0 = Tb1723.4829 Then
        Int (0)
      Then
        Let sd.4830 : Float =
          AppClosure min_caml_sqrt (d.4828 )
        In
        Let t1.4831 : Float =
          Let Tb1719.4836 : Bool =
            AppClosure o_isinvert.2670 (m.2793 )
          In
          If 0 = Tb1719.4836 Then
            AppClosure fneg.2527 (sd.4830 )
          Then
            Var (sd.4830)
        In
        Let Tu96.4832 : Unit =
          Let Ti1720.4833 : Int =
            Int (0)
          In
          Let Td1722.4834 : Float =
            Let Td1721.4835 : Float =
              t1.4831 -. bb.4825
            In
            Td1721.4835 /. aa.4823
          In
          solver_dist.2585.(Ti1720.4833) <- Td1722.4834
        In
        Int (1)
    Then
      Int (0)
  Int -> Array(Float) -> Array(Float) -> Int solver.2798 ((index.2799 : Int) (dirvec.2800 : Array(Float)) (org.2801 : Array(Float)) )
    (objects.2578 : Array(Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float))) (solver_rect.2767 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int) (solver_second.2792 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int) (solver_surface.2773 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int) 
    Let m.4808 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
      objects.2578.(index.2799)
    In
    Let b0.4809 : Float =
      Let Td1693.4820 : Float =
        Let Ti1692.4822 : Int =
          Int (0)
        In
        org.2801.(Ti1692.4822)
      In
      Let Td1694.4821 : Float =
        AppClosure o_param_x.2682 (m.4808 )
      In
      Td1693.4820 -. Td1694.4821
    In
    Let b1.4810 : Float =
      Let Td1696.4817 : Float =
        Let Ti1695.4819 : Int =
          Int (1)
        In
        org.2801.(Ti1695.4819)
      In
      Let Td1697.4818 : Float =
        AppClosure o_param_y.2684 (m.4808 )
      In
      Td1696.4817 -. Td1697.4818
    In
    Let b2.4811 : Float =
      Let Td1699.4814 : Float =
        Let Ti1698.4816 : Int =
          Int (2)
        In
        org.2801.(Ti1698.4816)
      In
      Let Td1700.4815 : Float =
        AppClosure o_param_z.2686 (m.4808 )
      In
      Td1699.4814 -. Td1700.4815
    In
    Let m_shape.4812 : Int =
      AppClosure o_form.2666 (m.4808 )
    In
    If 1 = m_shape.4812 Then
      AppClosure solver_rect.2767 (m.4808 dirvec.2800 b0.4809 b1.4810 b2.4811 )
    Then
      Let Ti1701.4813 : Int =
        Int (2)
      In
      If m_shape.4812 = Ti1701.4813 Then
        AppClosure solver_surface.2773 (m.4808 dirvec.2800 b0.4809 b1.4810 b2.4811 )
      Then
        AppClosure solver_second.2792 (m.4808 dirvec.2800 b0.4809 b1.4810 b2.4811 )
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int solver_rect_fast.2802 ((m.2803 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) (v.2804 : Array(Float)) (dconst.2805 : Array(Float)) (b0.2806 : Float) (b1.2807 : Float) (b2.2808 : Float) )
    (solver_dist.2585 : Array(Float)) 
    Let d0.4730 : Float =
      Let Td1622.4803 : Float =
        Let Td1621.4806 : Float =
          Let Ti1620.4807 : Int =
            Int (0)
          In
          dconst.2805.(Ti1620.4807)
        In
        Td1621.4806 -. b0.2806
      In
      Let Td1624.4804 : Float =
        Let Ti1623.4805 : Int =
          Int (1)
        In
        dconst.2805.(Ti1623.4805)
      In
      Td1622.4803 *. Td1624.4804
    In
    Let Ti1691.4731 : Int =
      Let Tb1641.4786 : Bool =
        Let Td1629.4797 : Float =
          Let Td1628.4799 : Float =
            Let Td1627.4800 : Float =
              Let Td1626.4801 : Float =
                Let Ti1625.4802 : Int =
                  Int (1)
                In
                v.2804.(Ti1625.4802)
              In
              d0.4730 *. Td1626.4801
            In
            Td1627.4800 +. b1.2807
          In
          AppClosure fabs.2523 (Td1628.4799 )
        In
        Let Td1630.4798 : Float =
          AppClosure o_param_b.2676 (m.2803 )
        In
        AppClosure fless.2511 (Td1629.4797 Td1630.4798 )
      In
      If 0 = Tb1641.4786 Then
        Int (0)
      Then
        Let Tb1640.4787 : Bool =
          Let Td1635.4791 : Float =
            Let Td1634.4793 : Float =
              Let Td1633.4794 : Float =
                Let Td1632.4795 : Float =
                  Let Ti1631.4796 : Int =
                    Int (2)
                  In
                  v.2804.(Ti1631.4796)
                In
                d0.4730 *. Td1632.4795
              In
              Td1633.4794 +. b2.2808
            In
            AppClosure fabs.2523 (Td1634.4793 )
          In
          Let Td1636.4792 : Float =
            AppClosure o_param_c.2678 (m.2803 )
          In
          AppClosure fless.2511 (Td1635.4791 Td1636.4792 )
        In
        If 0 = Tb1640.4787 Then
          Int (0)
        Then
          Let Tb1639.4788 : Bool =
            Let Td1638.4789 : Float =
              Let Ti1637.4790 : Int =
                Int (1)
              In
              dconst.2805.(Ti1637.4790)
            In
            AppClosure fiszero.2518 (Td1638.4789 )
          In
          If 0 = Tb1639.4788 Then
            Int (1)
          Then
            Int (0)
    In
    If 0 = Ti1691.4731 Then
      Let d1.4734 : Float =
        Let Td1644.4781 : Float =
          Let Td1643.4784 : Float =
            Let Ti1642.4785 : Int =
              Int (2)
            In
            dconst.2805.(Ti1642.4785)
          In
          Td1643.4784 -. b1.2807
        In
        Let Td1646.4782 : Float =
          Let Ti1645.4783 : Int =
            Int (3)
          In
          dconst.2805.(Ti1645.4783)
        In
        Td1644.4781 *. Td1646.4782
      In
      Let Ti1689.4735 : Int =
        Let Tb1663.4764 : Bool =
          Let Td1651.4775 : Float =
            Let Td1650.4777 : Float =
              Let Td1649.4778 : Float =
                Let Td1648.4779 : Float =
                  Let Ti1647.4780 : Int =
                    Int (0)
                  In
                  v.2804.(Ti1647.4780)
                In
                d1.4734 *. Td1648.4779
              In
              Td1649.4778 +. b0.2806
            In
            AppClosure fabs.2523 (Td1650.4777 )
          In
          Let Td1652.4776 : Float =
            AppClosure o_param_a.2674 (m.2803 )
          In
          AppClosure fless.2511 (Td1651.4775 Td1652.4776 )
        In
        If 0 = Tb1663.4764 Then
          Int (0)
        Then
          Let Tb1662.4765 : Bool =
            Let Td1657.4769 : Float =
              Let Td1656.4771 : Float =
                Let Td1655.4772 : Float =
                  Let Td1654.4773 : Float =
                    Let Ti1653.4774 : Int =
                      Int (2)
                    In
                    v.2804.(Ti1653.4774)
                  In
                  d1.4734 *. Td1654.4773
                In
                Td1655.4772 +. b2.2808
              In
              AppClosure fabs.2523 (Td1656.4771 )
            In
            Let Td1658.4770 : Float =
              AppClosure o_param_c.2678 (m.2803 )
            In
            AppClosure fless.2511 (Td1657.4769 Td1658.4770 )
          In
          If 0 = Tb1662.4765 Then
            Int (0)
          Then
            Let Tb1661.4766 : Bool =
              Let Td1660.4767 : Float =
                Let Ti1659.4768 : Int =
                  Int (3)
                In
                dconst.2805.(Ti1659.4768)
              In
              AppClosure fiszero.2518 (Td1660.4767 )
            In
            If 0 = Tb1661.4766 Then
              Int (1)
            Then
              Int (0)
      In
      If 0 = Ti1689.4735 Then
        Let d2.4738 : Float =
          Let Td1666.4759 : Float =
            Let Td1665.4762 : Float =
              Let Ti1664.4763 : Int =
                Int (4)
              In
              dconst.2805.(Ti1664.4763)
            In
            Td1665.4762 -. b2.2808
          In
          Let Td1668.4760 : Float =
            Let Ti1667.4761 : Int =
              Int (5)
            In
            dconst.2805.(Ti1667.4761)
          In
          Td1666.4759 *. Td1668.4760
        In
        Let Ti1687.4739 : Int =
          Let Tb1685.4742 : Bool =
            Let Td1673.4753 : Float =
              Let Td1672.4755 : Float =
                Let Td1671.4756 : Float =
                  Let Td1670.4757 : Float =
                    Let Ti1669.4758 : Int =
                      Int (0)
                    In
                    v.2804.(Ti1669.4758)
                  In
                  d2.4738 *. Td1670.4757
                In
                Td1671.4756 +. b0.2806
              In
              AppClosure fabs.2523 (Td1672.4755 )
            In
            Let Td1674.4754 : Float =
              AppClosure o_param_a.2674 (m.2803 )
            In
            AppClosure fless.2511 (Td1673.4753 Td1674.4754 )
          In
          If 0 = Tb1685.4742 Then
            Int (0)
          Then
            Let Tb1684.4743 : Bool =
              Let Td1679.4747 : Float =
                Let Td1678.4749 : Float =
                  Let Td1677.4750 : Float =
                    Let Td1676.4751 : Float =
                      Let Ti1675.4752 : Int =
                        Int (1)
                      In
                      v.2804.(Ti1675.4752)
                    In
                    d2.4738 *. Td1676.4751
                  In
                  Td1677.4750 +. b1.2807
                In
                AppClosure fabs.2523 (Td1678.4749 )
              In
              Let Td1680.4748 : Float =
                AppClosure o_param_b.2676 (m.2803 )
              In
              AppClosure fless.2511 (Td1679.4747 Td1680.4748 )
            In
            If 0 = Tb1684.4743 Then
              Int (0)
            Then
              Let Tb1683.4744 : Bool =
                Let Td1682.4745 : Float =
                  Let Ti1681.4746 : Int =
                    Int (5)
                  In
                  dconst.2805.(Ti1681.4746)
                In
                AppClosure fiszero.2518 (Td1682.4745 )
              In
              If 0 = Tb1683.4744 Then
                Int (1)
              Then
                Int (0)
        In
        If 0 = Ti1687.4739 Then
          Int (0)
        Then
          Let Tu99.4740 : Unit =
            Let Ti1686.4741 : Int =
              Int (0)
            In
            solver_dist.2585.(Ti1686.4741) <- d2.4738
          In
          Int (3)
      Then
        Let Tu98.4736 : Unit =
          Let Ti1688.4737 : Int =
            Int (0)
          In
          solver_dist.2585.(Ti1688.4737) <- d1.4734
        In
        Int (2)
    Then
      Let Tu97.4732 : Unit =
        Let Ti1690.4733 : Int =
          Int (0)
        In
        solver_dist.2585.(Ti1690.4733) <- d0.4730
      In
      Int (1)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int solver_surface_fast.2809 ((m.2810 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) (dconst.2811 : Array(Float)) (b0.2812 : Float) (b1.2813 : Float) (b2.2814 : Float) )
    (solver_dist.2585 : Array(Float)) 
    Let Tb1619.4714 : Bool =
      Let Td1606.4728 : Float =
        Let Ti1605.4729 : Int =
          Int (0)
        In
        dconst.2811.(Ti1605.4729)
      In
      AppClosure fisneg.2516 (Td1606.4728 )
    In
    If 0 = Tb1619.4714 Then
      Int (0)
    Then
      Let Tu100.4715 : Unit =
        Let Ti1607.4716 : Int =
          Int (0)
        In
        Let Td1618.4717 : Float =
          Let Td1614.4718 : Float =
            Let Td1610.4722 : Float =
              Let Td1609.4726 : Float =
                Let Ti1608.4727 : Int =
                  Int (1)
                In
                dconst.2811.(Ti1608.4727)
              In
              Td1609.4726 *. b0.2812
            In
            Let Td1613.4723 : Float =
              Let Td1612.4724 : Float =
                Let Ti1611.4725 : Int =
                  Int (2)
                In
                dconst.2811.(Ti1611.4725)
              In
              Td1612.4724 *. b1.2813
            In
            Td1610.4722 +. Td1613.4723
          In
          Let Td1617.4719 : Float =
            Let Td1616.4720 : Float =
              Let Ti1615.4721 : Int =
                Int (3)
              In
              dconst.2811.(Ti1615.4721)
            In
            Td1616.4720 *. b2.2814
          In
          Td1614.4718 +. Td1617.4719
        In
        solver_dist.2585.(Ti1607.4716) <- Td1618.4717
      In
      Int (1)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int solver_second_fast.2815 ((m.2816 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) (dconst.2817 : Array(Float)) (b0.2818 : Float) (b1.2819 : Float) (b2.2820 : Float) )
    (solver_dist.2585 : Array(Float)) 
    Let aa.4677 : Float =
      Let Ti1574.4713 : Int =
        Int (0)
      In
      dconst.2817.(Ti1574.4713)
    In
    Let Tb1604.4678 : Bool =
      AppClosure fiszero.2518 (aa.4677 )
    In
    If 0 = Tb1604.4678 Then
      Let neg_bb.4679 : Float =
        Let Td1581.4703 : Float =
          Let Td1577.4707 : Float =
            Let Td1576.4711 : Float =
              Let Ti1575.4712 : Int =
                Int (1)
              In
              dconst.2817.(Ti1575.4712)
            In
            Td1576.4711 *. b0.2818
          In
          Let Td1580.4708 : Float =
            Let Td1579.4709 : Float =
              Let Ti1578.4710 : Int =
                Int (2)
              In
              dconst.2817.(Ti1578.4710)
            In
            Td1579.4709 *. b1.2819
          In
          Td1577.4707 +. Td1580.4708
        In
        Let Td1584.4704 : Float =
          Let Td1583.4705 : Float =
            Let Ti1582.4706 : Int =
              Int (3)
            In
            dconst.2817.(Ti1582.4706)
          In
          Td1583.4705 *. b2.2820
        In
        Td1581.4703 +. Td1584.4704
      In
      Let cc0.4680 : Float =
        AppClosure quadratic.2779 (m.2816 b0.2818 b1.2819 b2.2820 )
      In
      Let cc.4681 : Float =
        Let Ti1586.4700 : Int =
          AppClosure o_form.2666 (m.2816 )
        In
        Let Ti1587.4701 : Int =
          Int (3)
        In
        If Ti1586.4700 = Ti1587.4701 Then
          Let Td1585.4702 : Float =
            Float (1.000000)
          In
          cc0.4680 -. Td1585.4702
        Then
          Var (cc0.4680)
      In
      Let d.4682 : Float =
        Let Td1588.4698 : Float =
          AppClosure fsqr.2531 (neg_bb.4679 )
        In
        Let Td1589.4699 : Float =
          aa.4677 *. cc.4681
        In
        Td1588.4698 -. Td1589.4699
      In
      Let Tb1603.4683 : Bool =
        AppClosure fispos.2514 (d.4682 )
      In
      If 0 = Tb1603.4683 Then
        Int (0)
      Then
        Let Tu101.4684 : Unit =
          Let Tb1602.4685 : Bool =
            AppClosure o_isinvert.2670 (m.2816 )
          In
          If 0 = Tb1602.4685 Then
            Let Ti1590.4692 : Int =
              Int (0)
            In
            Let Td1595.4693 : Float =
              Let Td1592.4694 : Float =
                Let Td1591.4697 : Float =
                  AppClosure min_caml_sqrt (d.4682 )
                In
                neg_bb.4679 -. Td1591.4697
              In
              Let Td1594.4695 : Float =
                Let Ti1593.4696 : Int =
                  Int (4)
                In
                dconst.2817.(Ti1593.4696)
              In
              Td1592.4694 *. Td1594.4695
            In
            solver_dist.2585.(Ti1590.4692) <- Td1595.4693
          Then
            Let Ti1596.4686 : Int =
              Int (0)
            In
            Let Td1601.4687 : Float =
              Let Td1598.4688 : Float =
                Let Td1597.4691 : Float =
                  AppClosure min_caml_sqrt (d.4682 )
                In
                neg_bb.4679 +. Td1597.4691
              In
              Let Td1600.4689 : Float =
                Let Ti1599.4690 : Int =
                  Int (4)
                In
                dconst.2817.(Ti1599.4690)
              In
              Td1598.4688 *. Td1600.4689
            In
            solver_dist.2585.(Ti1596.4686) <- Td1601.4687
        In
        Int (1)
    Then
      Int (0)
  Int -> Array(Float) * Array(Array(Float)) -> Array(Float) -> Int solver_fast.2821 ((index.2822 : Int) (dirvec.2823 : Array(Float) * Array(Array(Float))) (org.2824 : Array(Float)) )
    (objects.2578 : Array(Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float))) (solver_rect_fast.2802 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int) (solver_second_fast.2815 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int) (solver_surface_fast.2809 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int) 
    Let m.4659 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
      objects.2578.(index.2822)
    In
    Let b0.4660 : Float =
      Let Td1564.4674 : Float =
        Let Ti1563.4676 : Int =
          Int (0)
        In
        org.2824.(Ti1563.4676)
      In
      Let Td1565.4675 : Float =
        AppClosure o_param_x.2682 (m.4659 )
      In
      Td1564.4674 -. Td1565.4675
    In
    Let b1.4661 : Float =
      Let Td1567.4671 : Float =
        Let Ti1566.4673 : Int =
          Int (1)
        In
        org.2824.(Ti1566.4673)
      In
      Let Td1568.4672 : Float =
        AppClosure o_param_y.2684 (m.4659 )
      In
      Td1567.4671 -. Td1568.4672
    In
    Let b2.4662 : Float =
      Let Td1570.4668 : Float =
        Let Ti1569.4670 : Int =
          Int (2)
        In
        org.2824.(Ti1569.4670)
      In
      Let Td1571.4669 : Float =
        AppClosure o_param_z.2686 (m.4659 )
      In
      Td1570.4668 -. Td1571.4669
    In
    Let dconsts.4663 : Array(Array(Float)) =
      AppClosure d_const.2727 (dirvec.2823 )
    In
    Let dconst.4664 : Array(Float) =
      dconsts.4663.(index.2822)
    In
    Let m_shape.4665 : Int =
      AppClosure o_form.2666 (m.4659 )
    In
    If 1 = m_shape.4665 Then
      Let Ta1572.4667 : Array(Float) =
        AppClosure d_vec.2725 (dirvec.2823 )
      In
      AppClosure solver_rect_fast.2802 (m.4659 Ta1572.4667 dconst.4664 b0.4660 b1.4661 b2.4662 )
    Then
      Let Ti1573.4666 : Int =
        Int (2)
      In
      If m_shape.4665 = Ti1573.4666 Then
        AppClosure solver_surface_fast.2809 (m.4659 dconst.4664 b0.4660 b1.4661 b2.4662 )
      Then
        AppClosure solver_second_fast.2815 (m.4659 dconst.4664 b0.4660 b1.4661 b2.4662 )
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int solver_surface_fast2.2825 ((m.2826 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) (dconst.2827 : Array(Float)) (sconst.2828 : Array(Float)) (b0.2829 : Float) (b1.2830 : Float) (b2.2831 : Float) )
    (solver_dist.2585 : Array(Float)) 
    Let Tb1562.4649 : Bool =
      Let Td1555.4657 : Float =
        Let Ti1554.4658 : Int =
          Int (0)
        In
        dconst.2827.(Ti1554.4658)
      In
      AppClosure fisneg.2516 (Td1555.4657 )
    In
    If 0 = Tb1562.4649 Then
      Int (0)
    Then
      Let Tu102.4650 : Unit =
        Let Ti1556.4651 : Int =
          Int (0)
        In
        Let Td1561.4652 : Float =
          Let Td1558.4653 : Float =
            Let Ti1557.4656 : Int =
              Int (0)
            In
            dconst.2827.(Ti1557.4656)
          In
          Let Td1560.4654 : Float =
            Let Ti1559.4655 : Int =
              Int (3)
            In
            sconst.2828.(Ti1559.4655)
          In
          Td1558.4653 *. Td1560.4654
        In
        solver_dist.2585.(Ti1556.4651) <- Td1561.4652
      In
      Int (1)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int solver_second_fast2.2832 ((m.2833 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) (dconst.2834 : Array(Float)) (sconst.2835 : Array(Float)) (b0.2836 : Float) (b1.2837 : Float) (b2.2838 : Float) )
    (solver_dist.2585 : Array(Float)) 
    Let aa.4615 : Float =
      Let Ti1525.4648 : Int =
        Int (0)
      In
      dconst.2834.(Ti1525.4648)
    In
    Let Tb1553.4616 : Bool =
      AppClosure fiszero.2518 (aa.4615 )
    In
    If 0 = Tb1553.4616 Then
      Let neg_bb.4617 : Float =
        Let Td1532.4638 : Float =
          Let Td1528.4642 : Float =
            Let Td1527.4646 : Float =
              Let Ti1526.4647 : Int =
                Int (1)
              In
              dconst.2834.(Ti1526.4647)
            In
            Td1527.4646 *. b0.2836
          In
          Let Td1531.4643 : Float =
            Let Td1530.4644 : Float =
              Let Ti1529.4645 : Int =
                Int (2)
              In
              dconst.2834.(Ti1529.4645)
            In
            Td1530.4644 *. b1.2837
          In
          Td1528.4642 +. Td1531.4643
        In
        Let Td1535.4639 : Float =
          Let Td1534.4640 : Float =
            Let Ti1533.4641 : Int =
              Int (3)
            In
            dconst.2834.(Ti1533.4641)
          In
          Td1534.4640 *. b2.2838
        In
        Td1532.4638 +. Td1535.4639
      In
      Let cc.4618 : Float =
        Let Ti1536.4637 : Int =
          Int (3)
        In
        sconst.2835.(Ti1536.4637)
      In
      Let d.4619 : Float =
        Let Td1537.4635 : Float =
          AppClosure fsqr.2531 (neg_bb.4617 )
        In
        Let Td1538.4636 : Float =
          aa.4615 *. cc.4618
        In
        Td1537.4635 -. Td1538.4636
      In
      Let Tb1552.4620 : Bool =
        AppClosure fispos.2514 (d.4619 )
      In
      If 0 = Tb1552.4620 Then
        Int (0)
      Then
        Let Tu103.4621 : Unit =
          Let Tb1551.4622 : Bool =
            AppClosure o_isinvert.2670 (m.2833 )
          In
          If 0 = Tb1551.4622 Then
            Let Ti1539.4629 : Int =
              Int (0)
            In
            Let Td1544.4630 : Float =
              Let Td1541.4631 : Float =
                Let Td1540.4634 : Float =
                  AppClosure min_caml_sqrt (d.4619 )
                In
                neg_bb.4617 -. Td1540.4634
              In
              Let Td1543.4632 : Float =
                Let Ti1542.4633 : Int =
                  Int (4)
                In
                dconst.2834.(Ti1542.4633)
              In
              Td1541.4631 *. Td1543.4632
            In
            solver_dist.2585.(Ti1539.4629) <- Td1544.4630
          Then
            Let Ti1545.4623 : Int =
              Int (0)
            In
            Let Td1550.4624 : Float =
              Let Td1547.4625 : Float =
                Let Td1546.4628 : Float =
                  AppClosure min_caml_sqrt (d.4619 )
                In
                neg_bb.4617 +. Td1546.4628
              In
              Let Td1549.4626 : Float =
                Let Ti1548.4627 : Int =
                  Int (4)
                In
                dconst.2834.(Ti1548.4627)
              In
              Td1547.4625 *. Td1549.4626
            In
            solver_dist.2585.(Ti1545.4623) <- Td1550.4624
        In
        Int (1)
    Then
      Int (0)
  Int -> Array(Float) * Array(Array(Float)) -> Int solver_fast2.2839 ((index.2840 : Int) (dirvec.2841 : Array(Float) * Array(Array(Float))) )
    (objects.2578 : Array(Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float))) (solver_rect_fast.2802 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int) (solver_second_fast2.2832 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int) (solver_surface_fast2.2825 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int) 
    Let m.4602 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
      objects.2578.(index.2840)
    In
    Let sconst.4603 : Array(Float) =
      AppClosure o_param_ctbl.2704 (m.4602 )
    In
    Let b0.4604 : Float =
      Let Ti1520.4614 : Int =
        Int (0)
      In
      sconst.4603.(Ti1520.4614)
    In
    Let b1.4605 : Float =
      Let Ti1521.4613 : Int =
        Int (1)
      In
      sconst.4603.(Ti1521.4613)
    In
    Let b2.4606 : Float =
      Let Ti1522.4612 : Int =
        Int (2)
      In
      sconst.4603.(Ti1522.4612)
    In
    Let dconsts.4607 : Array(Array(Float)) =
      AppClosure d_const.2727 (dirvec.2841 )
    In
    Let dconst.4608 : Array(Float) =
      dconsts.4607.(index.2840)
    In
    Let m_shape.4609 : Int =
      AppClosure o_form.2666 (m.4602 )
    In
    If 1 = m_shape.4609 Then
      Let Ta1523.4611 : Array(Float) =
        AppClosure d_vec.2725 (dirvec.2841 )
      In
      AppClosure solver_rect_fast.2802 (m.4602 Ta1523.4611 dconst.4608 b0.4604 b1.4605 b2.4606 )
    Then
      Let Ti1524.4610 : Int =
        Int (2)
      In
      If m_shape.4609 = Ti1524.4610 Then
        AppClosure solver_surface_fast2.2825 (m.4602 dconst.4608 sconst.4603 b0.4604 b1.4605 b2.4606 )
      Then
        AppClosure solver_second_fast2.2832 (m.4602 dconst.4608 sconst.4603 b0.4604 b1.4605 b2.4606 )
  Array(Float) -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) setup_rect_table.2842 ((vec.2843 : Array(Float)) (m.2844 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let const.4539 : Array(Float) =
      Let Ti1464.4600 : Int =
        Int (6)
      In
      Let Td1465.4601 : Float =
        Float (0.000000)
      In
      AppClosure min_caml_create_float_array (Ti1464.4600 Td1465.4601 )
    In
    Let Tu109.4540 : Unit =
      Let Tb1483.4581 : Bool =
        Let Td1467.4598 : Float =
          Let Ti1466.4599 : Int =
            Int (0)
          In
          vec.2843.(Ti1466.4599)
        In
        AppClosure fiszero.2518 (Td1467.4598 )
      In
      If 0 = Tb1483.4581 Then
        Let Tu104.4584 : Unit =
          Let Ti1468.4590 : Int =
            Int (0)
          In
          Let Td1475.4591 : Float =
            Let Tb1473.4592 : Bool =
              Let Tb1469.4594 : Bool =
                AppClosure o_isinvert.2670 (m.2844 )
              In
              Let Tb1472.4595 : Bool =
                Let Td1471.4596 : Float =
                  Let Ti1470.4597 : Int =
                    Int (0)
                  In
                  vec.2843.(Ti1470.4597)
                In
                AppClosure fisneg.2516 (Td1471.4596 )
              In
              AppClosure xor.2607 (Tb1469.4594 Tb1472.4595 )
            In
            Let Td1474.4593 : Float =
              AppClosure o_param_a.2674 (m.2844 )
            In
            AppClosure fneg_cond.2612 (Tb1473.4592 Td1474.4593 )
          In
          const.4539.(Ti1468.4590) <- Td1475.4591
        In
        Let Ti1476.4585 : Int =
          Int (1)
        In
        Let Td1480.4586 : Float =
          Let Td1477.4587 : Float =
            Float (1.000000)
          In
          Let Td1479.4588 : Float =
            Let Ti1478.4589 : Int =
              Int (0)
            In
            vec.2843.(Ti1478.4589)
          In
          Td1477.4587 /. Td1479.4588
        In
        const.4539.(Ti1476.4585) <- Td1480.4586
      Then
        Let Ti1481.4582 : Int =
          Int (1)
        In
        Let Td1482.4583 : Float =
          Float (0.000000)
        In
        const.4539.(Ti1481.4582) <- Td1482.4583
    In
    Let Tu108.4541 : Unit =
      Let Tb1501.4562 : Bool =
        Let Td1485.4579 : Float =
          Let Ti1484.4580 : Int =
            Int (1)
          In
          vec.2843.(Ti1484.4580)
        In
        AppClosure fiszero.2518 (Td1485.4579 )
      In
      If 0 = Tb1501.4562 Then
        Let Tu105.4565 : Unit =
          Let Ti1486.4571 : Int =
            Int (2)
          In
          Let Td1493.4572 : Float =
            Let Tb1491.4573 : Bool =
              Let Tb1487.4575 : Bool =
                AppClosure o_isinvert.2670 (m.2844 )
              In
              Let Tb1490.4576 : Bool =
                Let Td1489.4577 : Float =
                  Let Ti1488.4578 : Int =
                    Int (1)
                  In
                  vec.2843.(Ti1488.4578)
                In
                AppClosure fisneg.2516 (Td1489.4577 )
              In
              AppClosure xor.2607 (Tb1487.4575 Tb1490.4576 )
            In
            Let Td1492.4574 : Float =
              AppClosure o_param_b.2676 (m.2844 )
            In
            AppClosure fneg_cond.2612 (Tb1491.4573 Td1492.4574 )
          In
          const.4539.(Ti1486.4571) <- Td1493.4572
        In
        Let Ti1494.4566 : Int =
          Int (3)
        In
        Let Td1498.4567 : Float =
          Let Td1495.4568 : Float =
            Float (1.000000)
          In
          Let Td1497.4569 : Float =
            Let Ti1496.4570 : Int =
              Int (1)
            In
            vec.2843.(Ti1496.4570)
          In
          Td1495.4568 /. Td1497.4569
        In
        const.4539.(Ti1494.4566) <- Td1498.4567
      Then
        Let Ti1499.4563 : Int =
          Int (3)
        In
        Let Td1500.4564 : Float =
          Float (0.000000)
        In
        const.4539.(Ti1499.4563) <- Td1500.4564
    In
    Let Tu107.4542 : Unit =
      Let Tb1519.4543 : Bool =
        Let Td1503.4560 : Float =
          Let Ti1502.4561 : Int =
            Int (2)
          In
          vec.2843.(Ti1502.4561)
        In
        AppClosure fiszero.2518 (Td1503.4560 )
      In
      If 0 = Tb1519.4543 Then
        Let Tu106.4546 : Unit =
          Let Ti1504.4552 : Int =
            Int (4)
          In
          Let Td1511.4553 : Float =
            Let Tb1509.4554 : Bool =
              Let Tb1505.4556 : Bool =
                AppClosure o_isinvert.2670 (m.2844 )
              In
              Let Tb1508.4557 : Bool =
                Let Td1507.4558 : Float =
                  Let Ti1506.4559 : Int =
                    Int (2)
                  In
                  vec.2843.(Ti1506.4559)
                In
                AppClosure fisneg.2516 (Td1507.4558 )
              In
              AppClosure xor.2607 (Tb1505.4556 Tb1508.4557 )
            In
            Let Td1510.4555 : Float =
              AppClosure o_param_c.2678 (m.2844 )
            In
            AppClosure fneg_cond.2612 (Tb1509.4554 Td1510.4555 )
          In
          const.4539.(Ti1504.4552) <- Td1511.4553
        In
        Let Ti1512.4547 : Int =
          Int (5)
        In
        Let Td1516.4548 : Float =
          Let Td1513.4549 : Float =
            Float (1.000000)
          In
          Let Td1515.4550 : Float =
            Let Ti1514.4551 : Int =
              Int (2)
            In
            vec.2843.(Ti1514.4551)
          In
          Td1513.4549 /. Td1515.4550
        In
        const.4539.(Ti1512.4547) <- Td1516.4548
      Then
        Let Ti1517.4544 : Int =
          Int (5)
        In
        Let Td1518.4545 : Float =
          Float (0.000000)
        In
        const.4539.(Ti1517.4544) <- Td1518.4545
    In
    Var (const.4539)
  Array(Float) -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) setup_surface_table.2845 ((vec.2846 : Array(Float)) (m.2847 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let const.4500 : Array(Float) =
      Let Ti1431.4537 : Int =
        Int (4)
      In
      Let Td1432.4538 : Float =
        Float (0.000000)
      In
      AppClosure min_caml_create_float_array (Ti1431.4537 Td1432.4538 )
    In
    Let d.4501 : Float =
      Let Td1441.4524 : Float =
        Let Td1436.4529 : Float =
          Let Td1434.4534 : Float =
            Let Ti1433.4536 : Int =
              Int (0)
            In
            vec.2846.(Ti1433.4536)
          In
          Let Td1435.4535 : Float =
            AppClosure o_param_a.2674 (m.2847 )
          In
          Td1434.4534 *. Td1435.4535
        In
        Let Td1440.4530 : Float =
          Let Td1438.4531 : Float =
            Let Ti1437.4533 : Int =
              Int (1)
            In
            vec.2846.(Ti1437.4533)
          In
          Let Td1439.4532 : Float =
            AppClosure o_param_b.2676 (m.2847 )
          In
          Td1438.4531 *. Td1439.4532
        In
        Td1436.4529 +. Td1440.4530
      In
      Let Td1445.4525 : Float =
        Let Td1443.4526 : Float =
          Let Ti1442.4528 : Int =
            Int (2)
          In
          vec.2846.(Ti1442.4528)
        In
        Let Td1444.4527 : Float =
          AppClosure o_param_c.2678 (m.2847 )
        In
        Td1443.4526 *. Td1444.4527
      In
      Td1441.4524 +. Td1445.4525
    In
    Let Tu113.4502 : Unit =
      Let Tb1463.4503 : Bool =
        AppClosure fispos.2514 (d.4501 )
      In
      If 0 = Tb1463.4503 Then
        Let Ti1446.4522 : Int =
          Int (0)
        In
        Let Td1447.4523 : Float =
          Float (0.000000)
        In
        const.4500.(Ti1446.4522) <- Td1447.4523
      Then
        Let Tu112.4504 : Unit =
          Let Ti1448.4519 : Int =
            Int (0)
          In
          Let Td1450.4520 : Float =
            Let Td1449.4521 : Float =
              Float (-1.000000)
            In
            Td1449.4521 /. d.4501
          In
          const.4500.(Ti1448.4519) <- Td1450.4520
        In
        Let Tu111.4505 : Unit =
          Let Ti1451.4515 : Int =
            Int (1)
          In
          Let Td1454.4516 : Float =
            Let Td1453.4517 : Float =
              Let Td1452.4518 : Float =
                AppClosure o_param_a.2674 (m.2847 )
              In
              Td1452.4518 /. d.4501
            In
            AppClosure fneg.2527 (Td1453.4517 )
          In
          const.4500.(Ti1451.4515) <- Td1454.4516
        In
        Let Tu110.4506 : Unit =
          Let Ti1455.4511 : Int =
            Int (2)
          In
          Let Td1458.4512 : Float =
            Let Td1457.4513 : Float =
              Let Td1456.4514 : Float =
                AppClosure o_param_b.2676 (m.2847 )
              In
              Td1456.4514 /. d.4501
            In
            AppClosure fneg.2527 (Td1457.4513 )
          In
          const.4500.(Ti1455.4511) <- Td1458.4512
        In
        Let Ti1459.4507 : Int =
          Int (3)
        In
        Let Td1462.4508 : Float =
          Let Td1461.4509 : Float =
            Let Td1460.4510 : Float =
              AppClosure o_param_c.2678 (m.2847 )
            In
            Td1460.4510 /. d.4501
          In
          AppClosure fneg.2527 (Td1461.4509 )
        In
        const.4500.(Ti1459.4507) <- Td1462.4508
    In
    Var (const.4500)
  Array(Float) -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) setup_second_table.2848 ((v.2849 : Array(Float)) (m.2850 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    
    Let const.4423 : Array(Float) =
      Let Ti1366.4498 : Int =
        Int (5)
      In
      Let Td1367.4499 : Float =
        Float (0.000000)
      In
      AppClosure min_caml_create_float_array (Ti1366.4498 Td1367.4499 )
    In
    Let aa.4424 : Float =
      Let Td1369.4492 : Float =
        Let Ti1368.4497 : Int =
          Int (0)
        In
        v.2849.(Ti1368.4497)
      In
      Let Td1371.4493 : Float =
        Let Ti1370.4496 : Int =
          Int (1)
        In
        v.2849.(Ti1370.4496)
      In
      Let Td1373.4494 : Float =
        Let Ti1372.4495 : Int =
          Int (2)
        In
        v.2849.(Ti1372.4495)
      In
      AppClosure quadratic.2779 (m.2850 Td1369.4492 Td1371.4493 Td1373.4494 )
    In
    Let c1.4425 : Float =
      Let Td1377.4488 : Float =
        Let Td1375.4489 : Float =
          Let Ti1374.4491 : Int =
            Int (0)
          In
          v.2849.(Ti1374.4491)
        In
        Let Td1376.4490 : Float =
          AppClosure o_param_a.2674 (m.2850 )
        In
        Td1375.4489 *. Td1376.4490
      In
      AppClosure fneg.2527 (Td1377.4488 )
    In
    Let c2.4426 : Float =
      Let Td1381.4484 : Float =
        Let Td1379.4485 : Float =
          Let Ti1378.4487 : Int =
            Int (1)
          In
          v.2849.(Ti1378.4487)
        In
        Let Td1380.4486 : Float =
          AppClosure o_param_b.2676 (m.2850 )
        In
        Td1379.4485 *. Td1380.4486
      In
      AppClosure fneg.2527 (Td1381.4484 )
    In
    Let c3.4427 : Float =
      Let Td1385.4480 : Float =
        Let Td1383.4481 : Float =
          Let Ti1382.4483 : Int =
            Int (2)
          In
          v.2849.(Ti1382.4483)
        In
        Let Td1384.4482 : Float =
          AppClosure o_param_c.2678 (m.2850 )
        In
        Td1383.4481 *. Td1384.4482
      In
      AppClosure fneg.2527 (Td1385.4480 )
    In
    Let Tu120.4428 : Unit =
      Let Ti1386.4479 : Int =
        Int (0)
      In
      const.4423.(Ti1386.4479) <- aa.4424
    In
    Let Tu119.4429 : Unit =
      Let Ti1426.4435 : Int =
        AppClosure o_isrot.2672 (m.2850 )
      In
      If 0 = Ti1426.4435 Then
        Let Tu117.4474 : Unit =
          Let Ti1387.4478 : Int =
            Int (1)
          In
          const.4423.(Ti1387.4478) <- c1.4425
        In
        Let Tu116.4475 : Unit =
          Let Ti1388.4477 : Int =
            Int (2)
          In
          const.4423.(Ti1388.4477) <- c2.4426
        In
        Let Ti1389.4476 : Int =
          Int (3)
        In
        const.4423.(Ti1389.4476) <- c3.4427
      Then
        Let Tu115.4436 : Unit =
          Let Ti1390.4462 : Int =
            Int (1)
          In
          Let Td1401.4463 : Float =
            Let Td1400.4464 : Float =
              Let Td1399.4465 : Float =
                Let Td1394.4466 : Float =
                  Let Td1392.4471 : Float =
                    Let Ti1391.4473 : Int =
                      Int (2)
                    In
                    v.2849.(Ti1391.4473)
                  In
                  Let Td1393.4472 : Float =
                    AppClosure o_param_r2.2700 (m.2850 )
                  In
                  Td1392.4471 *. Td1393.4472
                In
                Let Td1398.4467 : Float =
                  Let Td1396.4468 : Float =
                    Let Ti1395.4470 : Int =
                      Int (1)
                    In
                    v.2849.(Ti1395.4470)
                  In
                  Let Td1397.4469 : Float =
                    AppClosure o_param_r3.2702 (m.2850 )
                  In
                  Td1396.4468 *. Td1397.4469
                In
                Td1394.4466 +. Td1398.4467
              In
              AppClosure fhalf.2529 (Td1399.4465 )
            In
            c1.4425 -. Td1400.4464
          In
          const.4423.(Ti1390.4462) <- Td1401.4463
        In
        Let Tu114.4437 : Unit =
          Let Ti1402.4450 : Int =
            Int (2)
          In
          Let Td1413.4451 : Float =
            Let Td1412.4452 : Float =
              Let Td1411.4453 : Float =
                Let Td1406.4454 : Float =
                  Let Td1404.4459 : Float =
                    Let Ti1403.4461 : Int =
                      Int (2)
                    In
                    v.2849.(Ti1403.4461)
                  In
                  Let Td1405.4460 : Float =
                    AppClosure o_param_r1.2698 (m.2850 )
                  In
                  Td1404.4459 *. Td1405.4460
                In
                Let Td1410.4455 : Float =
                  Let Td1408.4456 : Float =
                    Let Ti1407.4458 : Int =
                      Int (0)
                    In
                    v.2849.(Ti1407.4458)
                  In
                  Let Td1409.4457 : Float =
                    AppClosure o_param_r3.2702 (m.2850 )
                  In
                  Td1408.4456 *. Td1409.4457
                In
                Td1406.4454 +. Td1410.4455
              In
              AppClosure fhalf.2529 (Td1411.4453 )
            In
            c2.4426 -. Td1412.4452
          In
          const.4423.(Ti1402.4450) <- Td1413.4451
        In
        Let Ti1414.4438 : Int =
          Int (3)
        In
        Let Td1425.4439 : Float =
          Let Td1424.4440 : Float =
            Let Td1423.4441 : Float =
              Let Td1418.4442 : Float =
                Let Td1416.4447 : Float =
                  Let Ti1415.4449 : Int =
                    Int (1)
                  In
                  v.2849.(Ti1415.4449)
                In
                Let Td1417.4448 : Float =
                  AppClosure o_param_r1.2698 (m.2850 )
                In
                Td1416.4447 *. Td1417.4448
              In
              Let Td1422.4443 : Float =
                Let Td1420.4444 : Float =
                  Let Ti1419.4446 : Int =
                    Int (0)
                  In
                  v.2849.(Ti1419.4446)
                In
                Let Td1421.4445 : Float =
                  AppClosure o_param_r2.2700 (m.2850 )
                In
                Td1420.4444 *. Td1421.4445
              In
              Td1418.4442 +. Td1422.4443
            In
            AppClosure fhalf.2529 (Td1423.4441 )
          In
          c3.4427 -. Td1424.4440
        In
        const.4423.(Ti1414.4438) <- Td1425.4439
    In
    Let Tu118.4430 : Unit =
      Let Tb1430.4431 : Bool =
        AppClosure fiszero.2518 (aa.4424 )
      In
      If 0 = Tb1430.4431 Then
        Let Ti1427.4432 : Int =
          Int (4)
        In
        Let Td1429.4433 : Float =
          Let Td1428.4434 : Float =
            Float (1.000000)
          In
          Td1428.4434 /. aa.4424
        In
        const.4423.(Ti1427.4432) <- Td1429.4433
      Then
        Unit
    In
    Var (const.4423)
  Array(Float) * Array(Array(Float)) -> Int -> Unit iter_setup_dirvec_constants.2851 ((dirvec.2852 : Array(Float) * Array(Array(Float))) (index.2853 : Int) )
    (objects.2578 : Array(Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float))) 
    If 0 <= index.2853 Then
      Let m.4412 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
        objects.2578.(index.2853)
      In
      Let dconst.4413 : Array(Array(Float)) =
        AppClosure d_const.2727 (dirvec.2852 )
      In
      Let v.4414 : Array(Float) =
        AppClosure d_vec.2725 (dirvec.2852 )
      In
      Let m_shape.4415 : Int =
        AppClosure o_form.2666 (m.4412 )
      In
      Let Tu121.4416 : Unit =
        If 1 = m_shape.4415 Then
          Let Ta1360.4422 : Array(Float) =
            AppClosure setup_rect_table.2842 (v.4414 m.4412 )
          In
          dconst.4413.(index.2853) <- Ta1360.4422
        Then
          Let Ti1363.4419 : Int =
            Int (2)
          In
          If m_shape.4415 = Ti1363.4419 Then
            Let Ta1361.4421 : Array(Float) =
              AppClosure setup_surface_table.2845 (v.4414 m.4412 )
            In
            dconst.4413.(index.2853) <- Ta1361.4421
          Then
            Let Ta1362.4420 : Array(Float) =
              AppClosure setup_second_table.2848 (v.4414 m.4412 )
            In
            dconst.4413.(index.2853) <- Ta1362.4420
      In
      Let Ti1365.4417 : Int =
        Let Ti1364.4418 : Int =
          Int (1)
        In
        index.2853 - Ti1364.4418
      In
      AppClosure iter_setup_dirvec_constants.2851 (dirvec.2852 Ti1365.4417 )
    Then
      Unit
  Array(Float) * Array(Array(Float)) -> Unit setup_dirvec_constants.2854 ((dirvec.2855 : Array(Float) * Array(Array(Float))) )
    (iter_setup_dirvec_constants.2851 : Array(Float) * Array(Array(Float)) -> Int -> Unit) (n_objects.2577 : Array(Int)) 
    Let Ti1359.4408 : Int =
      Let Ti1357.4409 : Int =
        Let Ti1356.4411 : Int =
          Int (0)
        In
        n_objects.2577.(Ti1356.4411)
      In
      Let Ti1358.4410 : Int =
        Int (1)
      In
      Ti1357.4409 - Ti1358.4410
    In
    AppClosure iter_setup_dirvec_constants.2851 (dirvec.2855 Ti1359.4408 )
  Array(Float) -> Int -> Unit setup_startp_constants.2856 ((p.2857 : Array(Float)) (index.2858 : Int) )
    (objects.2578 : Array(Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float))) 
    If 0 <= index.2858 Then
      Let obj.4362 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
        objects.2578.(index.2858)
      In
      Let sconst.4363 : Array(Float) =
        AppClosure o_param_ctbl.2704 (obj.4362 )
      In
      Let m_shape.4364 : Int =
        AppClosure o_form.2666 (obj.4362 )
      In
      Let Tu125.4365 : Unit =
        Let Ti1318.4403 : Int =
          Int (0)
        In
        Let Td1322.4404 : Float =
          Let Td1320.4405 : Float =
            Let Ti1319.4407 : Int =
              Int (0)
            In
            p.2857.(Ti1319.4407)
          In
          Let Td1321.4406 : Float =
            AppClosure o_param_x.2682 (obj.4362 )
          In
          Td1320.4405 -. Td1321.4406
        In
        sconst.4363.(Ti1318.4403) <- Td1322.4404
      In
      Let Tu124.4366 : Unit =
        Let Ti1323.4398 : Int =
          Int (1)
        In
        Let Td1327.4399 : Float =
          Let Td1325.4400 : Float =
            Let Ti1324.4402 : Int =
              Int (1)
            In
            p.2857.(Ti1324.4402)
          In
          Let Td1326.4401 : Float =
            AppClosure o_param_y.2684 (obj.4362 )
          In
          Td1325.4400 -. Td1326.4401
        In
        sconst.4363.(Ti1323.4398) <- Td1327.4399
      In
      Let Tu123.4367 : Unit =
        Let Ti1328.4393 : Int =
          Int (2)
        In
        Let Td1332.4394 : Float =
          Let Td1330.4395 : Float =
            Let Ti1329.4397 : Int =
              Int (2)
            In
            p.2857.(Ti1329.4397)
          In
          Let Td1331.4396 : Float =
            AppClosure o_param_z.2686 (obj.4362 )
          In
          Td1330.4395 -. Td1331.4396
        In
        sconst.4363.(Ti1328.4393) <- Td1332.4394
      In
      Let Tu122.4368 : Unit =
        Let Ti1353.4371 : Int =
          Int (2)
        In
        If m_shape.4364 = Ti1353.4371 Then
          Let Ti1333.4384 : Int =
            Int (3)
          In
          Let Td1341.4385 : Float =
            Let Ta1334.4386 : Array(Float) =
              AppClosure o_param_abc.2680 (obj.4362 )
            In
            Let Td1336.4387 : Float =
              Let Ti1335.4392 : Int =
                Int (0)
              In
              sconst.4363.(Ti1335.4392)
            In
            Let Td1338.4388 : Float =
              Let Ti1337.4391 : Int =
                Int (1)
              In
              sconst.4363.(Ti1337.4391)
            In
            Let Td1340.4389 : Float =
              Let Ti1339.4390 : Int =
                Int (2)
              In
              sconst.4363.(Ti1339.4390)
            In
            AppClosure veciprod2.2642 (Ta1334.4386 Td1336.4387 Td1338.4388 Td1340.4389 )
          In
          sconst.4363.(Ti1333.4384) <- Td1341.4385
        Then
          Let Ti1352.4372 : Int =
            Int (2)
          In
          If m_shape.4364 <= Ti1352.4372 Then
            Unit
          Then
            Let cc0.4373 : Float =
              Let Td1343.4378 : Float =
                Let Ti1342.4383 : Int =
                  Int (0)
                In
                sconst.4363.(Ti1342.4383)
              In
              Let Td1345.4379 : Float =
                Let Ti1344.4382 : Int =
                  Int (1)
                In
                sconst.4363.(Ti1344.4382)
              In
              Let Td1347.4380 : Float =
                Let Ti1346.4381 : Int =
                  Int (2)
                In
                sconst.4363.(Ti1346.4381)
              In
              AppClosure quadratic.2779 (obj.4362 Td1343.4378 Td1345.4379 Td1347.4380 )
            In
            Let Ti1348.4374 : Int =
              Int (3)
            In
            Let Td1351.4375 : Float =
              Let Ti1350.4376 : Int =
                Int (3)
              In
              If m_shape.4364 = Ti1350.4376 Then
                Let Td1349.4377 : Float =
                  Float (1.000000)
                In
                cc0.4373 -. Td1349.4377
              Then
                Var (cc0.4373)
            In
            sconst.4363.(Ti1348.4374) <- Td1351.4375
      In
      Let Ti1355.4369 : Int =
        Let Ti1354.4370 : Int =
          Int (1)
        In
        index.2858 - Ti1354.4370
      In
      AppClosure setup_startp_constants.2856 (p.2857 Ti1355.4369 )
    Then
      Unit
  Array(Float) -> Unit setup_startp.2859 ((p.2860 : Array(Float)) )
    (n_objects.2577 : Array(Int)) (setup_startp_constants.2856 : Array(Float) -> Int -> Unit) (startp_fast.2598 : Array(Float)) 
    Let Tu126.4357 : Unit =
      AppClosure veccpy.2628 (startp_fast.2598 p.2860 )
    In
    Let Ti1317.4358 : Int =
      Let Ti1315.4359 : Int =
        Let Ti1314.4361 : Int =
          Int (0)
        In
        n_objects.2577.(Ti1314.4361)
      In
      Let Ti1316.4360 : Int =
        Int (1)
      In
      Ti1315.4359 - Ti1316.4360
    In
    AppClosure setup_startp_constants.2856 (p.2860 Ti1317.4358 )
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Bool is_rect_outside.2861 ((m.2862 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) (p0.2863 : Float) (p1.2864 : Float) (p2.2865 : Float) )
    
    Let Ti1313.4347 : Int =
      Let Tb1311.4349 : Bool =
        Let Td1304.4355 : Float =
          AppClosure fabs.2523 (p0.2863 )
        In
        Let Td1305.4356 : Float =
          AppClosure o_param_a.2674 (m.2862 )
        In
        AppClosure fless.2511 (Td1304.4355 Td1305.4356 )
      In
      If 0 = Tb1311.4349 Then
        Int (0)
      Then
        Let Tb1310.4350 : Bool =
          Let Td1306.4353 : Float =
            AppClosure fabs.2523 (p1.2864 )
          In
          Let Td1307.4354 : Float =
            AppClosure o_param_b.2676 (m.2862 )
          In
          AppClosure fless.2511 (Td1306.4353 Td1307.4354 )
        In
        If 0 = Tb1310.4350 Then
          Int (0)
        Then
          Let Td1308.4351 : Float =
            AppClosure fabs.2523 (p2.2865 )
          In
          Let Td1309.4352 : Float =
            AppClosure o_param_c.2678 (m.2862 )
          In
          AppClosure fless.2511 (Td1308.4351 Td1309.4352 )
    In
    If 0 = Ti1313.4347 Then
      Let Tb1312.4348 : Bool =
        AppClosure o_isinvert.2670 (m.2862 )
      In
      If 0 = Tb1312.4348 Then
        Int (1)
      Then
        Int (0)
    Then
      AppClosure o_isinvert.2670 (m.2862 )
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Bool is_plane_outside.2866 ((m.2867 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) (p0.2868 : Float) (p1.2869 : Float) (p2.2870 : Float) )
    
    Let w.4342 : Float =
      Let Ta1300.4346 : Array(Float) =
        AppClosure o_param_abc.2680 (m.2867 )
      In
      AppClosure veciprod2.2642 (Ta1300.4346 p0.2868 p1.2869 p2.2870 )
    In
    Let Tb1303.4343 : Bool =
      Let Tb1301.4344 : Bool =
        AppClosure o_isinvert.2670 (m.2867 )
      In
      Let Tb1302.4345 : Bool =
        AppClosure fisneg.2516 (w.4342 )
      In
      AppClosure xor.2607 (Tb1301.4344 Tb1302.4345 )
    In
    If 0 = Tb1303.4343 Then
      Int (1)
    Then
      Int (0)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Bool is_second_outside.2871 ((m.2872 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) (p0.2873 : Float) (p1.2874 : Float) (p2.2875 : Float) )
    
    Let w.4334 : Float =
      AppClosure quadratic.2779 (m.2872 p0.2873 p1.2874 p2.2875 )
    In
    Let w2.4335 : Float =
      Let Ti1295.4339 : Int =
        AppClosure o_form.2666 (m.2872 )
      In
      Let Ti1296.4340 : Int =
        Int (3)
      In
      If Ti1295.4339 = Ti1296.4340 Then
        Let Td1294.4341 : Float =
          Float (1.000000)
        In
        w.4334 -. Td1294.4341
      Then
        Var (w.4334)
    In
    Let Tb1299.4336 : Bool =
      Let Tb1297.4337 : Bool =
        AppClosure o_isinvert.2670 (m.2872 )
      In
      Let Tb1298.4338 : Bool =
        AppClosure fisneg.2516 (w2.4335 )
      In
      AppClosure xor.2607 (Tb1297.4337 Tb1298.4338 )
    In
    If 0 = Tb1299.4336 Then
      Int (1)
    Then
      Int (0)
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Float -> Float -> Float -> Bool is_outside.2876 ((m.2877 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) (q0.2878 : Float) (q1.2879 : Float) (q2.2880 : Float) )
    
    Let p0.4326 : Float =
      Let Td1290.4333 : Float =
        AppClosure o_param_x.2682 (m.2877 )
      In
      q0.2878 -. Td1290.4333
    In
    Let p1.4327 : Float =
      Let Td1291.4332 : Float =
        AppClosure o_param_y.2684 (m.2877 )
      In
      q1.2879 -. Td1291.4332
    In
    Let p2.4328 : Float =
      Let Td1292.4331 : Float =
        AppClosure o_param_z.2686 (m.2877 )
      In
      q2.2880 -. Td1292.4331
    In
    Let m_shape.4329 : Int =
      AppClosure o_form.2666 (m.2877 )
    In
    If 1 = m_shape.4329 Then
      AppClosure is_rect_outside.2861 (m.2877 p0.4326 p1.4327 p2.4328 )
    Then
      Let Ti1293.4330 : Int =
        Int (2)
      In
      If m_shape.4329 = Ti1293.4330 Then
        AppClosure is_plane_outside.2866 (m.2877 p0.4326 p1.4327 p2.4328 )
      Then
        AppClosure is_second_outside.2871 (m.2877 p0.4326 p1.4327 p2.4328 )
  Int -> Array(Int) -> Float -> Float -> Float -> Bool check_all_inside.2881 ((ofs.2882 : Int) (iand.2883 : Array(Int)) (q0.2884 : Float) (q1.2885 : Float) (q2.2886 : Float) )
    (objects.2578 : Array(Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float))) 
    Let head.4319 : Int =
      iand.2883.(ofs.2882)
    In
    Let Ti1289.4320 : Int =
      Let Ti1284.4325 : Int =
        Int (1)
      In
      Neg (Ti1284.4325)
    In
    If head.4319 = Ti1289.4320 Then
      Int (1)
    Then
      Let Tb1288.4321 : Bool =
        Let Tt1285.4324 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
          objects.2578.(head.4319)
        In
        AppClosure is_outside.2876 (Tt1285.4324 q0.2884 q1.2885 q2.2886 )
      In
      If 0 = Tb1288.4321 Then
        Let Ti1287.4322 : Int =
          Let Ti1286.4323 : Int =
            Int (1)
          In
          ofs.2882 + Ti1286.4323
        In
        AppClosure check_all_inside.2881 (Ti1287.4322 iand.2883 q0.2884 q1.2885 q2.2886 )
      Then
        Int (0)
  Int -> Array(Int) -> Bool shadow_check_and_group.2887 ((iand_ofs.2888 : Int) (and_group.2889 : Array(Int)) )
    (check_all_inside.2881 : Int -> Array(Int) -> Float -> Float -> Float -> Bool) (intersection_point.2588 : Array(Float)) (light.2581 : Array(Float)) (light_dirvec.2604 : Array(Float) * Array(Array(Float))) (objects.2578 : Array(Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float))) (solver_dist.2585 : Array(Float)) (solver_fast.2821 : Int -> Array(Float) * Array(Array(Float)) -> Array(Float) -> Int) 
    Let Ti1282.4282 : Int =
      and_group.2889.(iand_ofs.2888)
    In
    Let Ti1283.4283 : Int =
      Let Ti1254.4318 : Int =
        Int (1)
      In
      Neg (Ti1254.4318)
    In
    If Ti1282.4282 = Ti1283.4283 Then
      Int (0)
    Then
      Let obj.4284 : Int =
        and_group.2889.(iand_ofs.2888)
      In
      Let t0.4285 : Int =
        AppClosure solver_fast.2821 (obj.4284 light_dirvec.2604 intersection_point.2588 )
      In
      Let t0p.4286 : Float =
        Let Ti1255.4317 : Int =
          Int (0)
        In
        solver_dist.2585.(Ti1255.4317)
      In
      Let Ti1281.4287 : Int =
        If 0 = t0.4285 Then
          Int (0)
        Then
          Let Td1256.4316 : Float =
            Float (-0.200000)
          In
          AppClosure fless.2511 (t0p.4286 Td1256.4316 )
      In
      If 0 = Ti1281.4287 Then
        Let Tb1260.4312 : Bool =
          Let Tt1257.4315 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
            objects.2578.(obj.4284)
          In
          AppClosure o_isinvert.2670 (Tt1257.4315 )
        In
        If 0 = Tb1260.4312 Then
          Int (0)
        Then
          Let Ti1259.4313 : Int =
            Let Ti1258.4314 : Int =
              Int (1)
            In
            iand_ofs.2888 + Ti1258.4314
          In
          AppClosure shadow_check_and_group.2887 (Ti1259.4313 and_group.2889 )
      Then
        Let t.4288 : Float =
          Let Td1261.4311 : Float =
            Float (0.010000)
          In
          t0p.4286 +. Td1261.4311
        In
        Let q0.4289 : Float =
          Let Td1264.4306 : Float =
            Let Td1263.4309 : Float =
              Let Ti1262.4310 : Int =
                Int (0)
              In
              light.2581.(Ti1262.4310)
            In
            Td1263.4309 *. t.4288
          In
          Let Td1266.4307 : Float =
            Let Ti1265.4308 : Int =
              Int (0)
            In
            intersection_point.2588.(Ti1265.4308)
          In
          Td1264.4306 +. Td1266.4307
        In
        Let q1.4290 : Float =
          Let Td1269.4301 : Float =
            Let Td1268.4304 : Float =
              Let Ti1267.4305 : Int =
                Int (1)
              In
              light.2581.(Ti1267.4305)
            In
            Td1268.4304 *. t.4288
          In
          Let Td1271.4302 : Float =
            Let Ti1270.4303 : Int =
              Int (1)
            In
            intersection_point.2588.(Ti1270.4303)
          In
          Td1269.4301 +. Td1271.4302
        In
        Let q2.4291 : Float =
          Let Td1274.4296 : Float =
            Let Td1273.4299 : Float =
              Let Ti1272.4300 : Int =
                Int (2)
              In
              light.2581.(Ti1272.4300)
            In
            Td1273.4299 *. t.4288
          In
          Let Td1276.4297 : Float =
            Let Ti1275.4298 : Int =
              Int (2)
            In
            intersection_point.2588.(Ti1275.4298)
          In
          Td1274.4296 +. Td1276.4297
        In
        Let Tb1280.4292 : Bool =
          Let Ti1277.4295 : Int =
            Int (0)
          In
          AppClosure check_all_inside.2881 (Ti1277.4295 and_group.2889 q0.4289 q1.4290 q2.4291 )
        In
        If 0 = Tb1280.4292 Then
          Let Ti1279.4293 : Int =
            Let Ti1278.4294 : Int =
              Int (1)
            In
            iand_ofs.2888 + Ti1278.4294
          In
          AppClosure shadow_check_and_group.2887 (Ti1279.4293 and_group.2889 )
        Then
          Int (1)
  Int -> Array(Int) -> Bool shadow_check_one_or_group.2890 ((ofs.2891 : Int) (or_group.2892 : Array(Int)) )
    (and_net.2583 : Array(Array(Int))) (shadow_check_and_group.2887 : Int -> Array(Int) -> Bool) 
    Let head.4274 : Int =
      or_group.2892.(ofs.2891)
    In
    Let Ti1253.4275 : Int =
      Let Ti1249.4281 : Int =
        Int (1)
      In
      Neg (Ti1249.4281)
    In
    If head.4274 = Ti1253.4275 Then
      Int (0)
    Then
      Let and_group.4276 : Array(Int) =
        and_net.2583.(head.4274)
      In
      Let shadow_p.4277 : Bool =
        Let Ti1250.4280 : Int =
          Int (0)
        In
        AppClosure shadow_check_and_group.2887 (Ti1250.4280 and_group.4276 )
      In
      If 0 = shadow_p.4277 Then
        Let Ti1252.4278 : Int =
          Let Ti1251.4279 : Int =
            Int (1)
          In
          ofs.2891 + Ti1251.4279
        In
        AppClosure shadow_check_one_or_group.2890 (Ti1252.4278 or_group.2892 )
      Then
        Int (1)
  Int -> Array(Array(Int)) -> Bool shadow_check_one_or_matrix.2893 ((ofs.2894 : Int) (or_matrix.2895 : Array(Array(Int))) )
    (intersection_point.2588 : Array(Float)) (light_dirvec.2604 : Array(Float) * Array(Array(Float))) (shadow_check_one_or_group.2890 : Int -> Array(Int) -> Bool) (solver_dist.2585 : Array(Float)) (solver_fast.2821 : Int -> Array(Float) * Array(Array(Float)) -> Array(Float) -> Int) 
    Let head.4254 : Array(Int) =
      or_matrix.2895.(ofs.2894)
    In
    Let range_primitive.4255 : Int =
      Let Ti1232.4273 : Int =
        Int (0)
      In
      head.4254.(Ti1232.4273)
    In
    Let Ti1248.4256 : Int =
      Let Ti1233.4272 : Int =
        Int (1)
      In
      Neg (Ti1233.4272)
    In
    If range_primitive.4255 = Ti1248.4256 Then
      Int (0)
    Then
      Let Ti1247.4257 : Int =
        Let Ti1240.4264 : Int =
          Int (99)
        In
        If range_primitive.4255 = Ti1240.4264 Then
          Int (1)
        Then
          Let t.4265 : Int =
            AppClosure solver_fast.2821 (range_primitive.4255 light_dirvec.2604 intersection_point.2588 )
          In
          If 0 = t.4265 Then
            Int (0)
          Then
            Let Tb1239.4266 : Bool =
              Let Td1235.4269 : Float =
                Let Ti1234.4271 : Int =
                  Int (0)
                In
                solver_dist.2585.(Ti1234.4271)
              In
              Let Td1236.4270 : Float =
                Float (-0.100000)
              In
              AppClosure fless.2511 (Td1235.4269 Td1236.4270 )
            In
            If 0 = Tb1239.4266 Then
              Int (0)
            Then
              Let Tb1238.4267 : Bool =
                Let Ti1237.4268 : Int =
                  Int (1)
                In
                AppClosure shadow_check_one_or_group.2890 (Ti1237.4268 head.4254 )
              In
              If 0 = Tb1238.4267 Then
                Int (0)
              Then
                Int (1)
      In
      If 0 = Ti1247.4257 Then
        Let Ti1242.4262 : Int =
          Let Ti1241.4263 : Int =
            Int (1)
          In
          ofs.2894 + Ti1241.4263
        In
        AppClosure shadow_check_one_or_matrix.2893 (Ti1242.4262 or_matrix.2895 )
      Then
        Let Tb1246.4258 : Bool =
          Let Ti1243.4261 : Int =
            Int (1)
          In
          AppClosure shadow_check_one_or_group.2890 (Ti1243.4261 head.4254 )
        In
        If 0 = Tb1246.4258 Then
          Let Ti1245.4259 : Int =
            Let Ti1244.4260 : Int =
              Int (1)
            In
            ofs.2894 + Ti1244.4260
          In
          AppClosure shadow_check_one_or_matrix.2893 (Ti1245.4259 or_matrix.2895 )
        Then
          Int (1)
  Int -> Array(Int) -> Array(Float) -> Unit solve_each_element.2896 ((iand_ofs.2897 : Int) (and_group.2898 : Array(Int)) (dirvec.2899 : Array(Float)) )
    (check_all_inside.2881 : Int -> Array(Int) -> Float -> Float -> Float -> Bool) (intersected_object_id.2589 : Array(Int)) (intersection_point.2588 : Array(Float)) (intsec_rectside.2586 : Array(Int)) (objects.2578 : Array(Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float))) (solver.2798 : Int -> Array(Float) -> Array(Float) -> Int) (solver_dist.2585 : Array(Float)) (startp.2597 : Array(Float)) (tmin.2587 : Array(Float)) 
    Let iobj.4208 : Int =
      and_group.2898.(iand_ofs.2897)
    In
    Let Ti1231.4209 : Int =
      Let Ti1197.4253 : Int =
        Int (1)
      In
      Neg (Ti1197.4253)
    In
    If iobj.4208 = Ti1231.4209 Then
      Unit
    Then
      Let t0.4210 : Int =
        AppClosure solver.2798 (iobj.4208 dirvec.2899 startp.2597 )
      In
      If 0 = t0.4210 Then
        Let Tb1201.4249 : Bool =
          Let Tt1198.4252 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
            objects.2578.(iobj.4208)
          In
          AppClosure o_isinvert.2670 (Tt1198.4252 )
        In
        If 0 = Tb1201.4249 Then
          Unit
        Then
          Let Ti1200.4250 : Int =
            Let Ti1199.4251 : Int =
              Int (1)
            In
            iand_ofs.2897 + Ti1199.4251
          In
          AppClosure solve_each_element.2896 (Ti1200.4250 and_group.2898 dirvec.2899 )
      Then
        Let t0p.4211 : Float =
          Let Ti1202.4248 : Int =
            Int (0)
          In
          solver_dist.2585.(Ti1202.4248)
        In
        Let Tu130.4212 : Unit =
          Let Tb1228.4215 : Bool =
            Let Td1203.4247 : Float =
              Float (0.000000)
            In
            AppClosure fless.2511 (Td1203.4247 t0p.4211 )
          In
          If 0 = Tb1228.4215 Then
            Unit
          Then
            Let Tb1227.4216 : Bool =
              Let Td1205.4245 : Float =
                Let Ti1204.4246 : Int =
                  Int (0)
                In
                tmin.2587.(Ti1204.4246)
              In
              AppClosure fless.2511 (t0p.4211 Td1205.4245 )
            In
            If 0 = Tb1227.4216 Then
              Unit
            Then
              Let t.4217 : Float =
                Let Td1206.4244 : Float =
                  Float (0.010000)
                In
                t0p.4211 +. Td1206.4244
              In
              Let q0.4218 : Float =
                Let Td1209.4239 : Float =
                  Let Td1208.4242 : Float =
                    Let Ti1207.4243 : Int =
                      Int (0)
                    In
                    dirvec.2899.(Ti1207.4243)
                  In
                  Td1208.4242 *. t.4217
                In
                Let Td1211.4240 : Float =
                  Let Ti1210.4241 : Int =
                    Int (0)
                  In
                  startp.2597.(Ti1210.4241)
                In
                Td1209.4239 +. Td1211.4240
              In
              Let q1.4219 : Float =
                Let Td1214.4234 : Float =
                  Let Td1213.4237 : Float =
                    Let Ti1212.4238 : Int =
                      Int (1)
                    In
                    dirvec.2899.(Ti1212.4238)
                  In
                  Td1213.4237 *. t.4217
                In
                Let Td1216.4235 : Float =
                  Let Ti1215.4236 : Int =
                    Int (1)
                  In
                  startp.2597.(Ti1215.4236)
                In
                Td1214.4234 +. Td1216.4235
              In
              Let q2.4220 : Float =
                Let Td1219.4229 : Float =
                  Let Td1218.4232 : Float =
                    Let Ti1217.4233 : Int =
                      Int (2)
                    In
                    dirvec.2899.(Ti1217.4233)
                  In
                  Td1218.4232 *. t.4217
                In
                Let Td1221.4230 : Float =
                  Let Ti1220.4231 : Int =
                    Int (2)
                  In
                  startp.2597.(Ti1220.4231)
                In
                Td1219.4229 +. Td1221.4230
              In
              Let Tb1226.4221 : Bool =
                Let Ti1222.4228 : Int =
                  Int (0)
                In
                AppClosure check_all_inside.2881 (Ti1222.4228 and_group.2898 q0.4218 q1.4219 q2.4220 )
              In
              If 0 = Tb1226.4221 Then
                Unit
              Then
                Let Tu129.4222 : Unit =
                  Let Ti1223.4227 : Int =
                    Int (0)
                  In
                  tmin.2587.(Ti1223.4227) <- t.4217
                In
                Let Tu128.4223 : Unit =
                  AppClosure vecset.2618 (intersection_point.2588 q0.4218 q1.4219 q2.4220 )
                In
                Let Tu127.4224 : Unit =
                  Let Ti1224.4226 : Int =
                    Int (0)
                  In
                  intersected_object_id.2589.(Ti1224.4226) <- iobj.4208
                In
                Let Ti1225.4225 : Int =
                  Int (0)
                In
                intsec_rectside.2586.(Ti1225.4225) <- t0.4210
        In
        Let Ti1230.4213 : Int =
          Let Ti1229.4214 : Int =
            Int (1)
          In
          iand_ofs.2897 + Ti1229.4214
        In
        AppClosure solve_each_element.2896 (Ti1230.4213 and_group.2898 dirvec.2899 )
  Int -> Array(Int) -> Array(Float) -> Unit solve_one_or_network.2900 ((ofs.2901 : Int) (or_group.2902 : Array(Int)) (dirvec.2903 : Array(Float)) )
    (and_net.2583 : Array(Array(Int))) (solve_each_element.2896 : Int -> Array(Int) -> Array(Float) -> Unit) 
    Let head.4200 : Int =
      or_group.2902.(ofs.2901)
    In
    Let Ti1196.4201 : Int =
      Let Ti1192.4207 : Int =
        Int (1)
      In
      Neg (Ti1192.4207)
    In
    If head.4200 = Ti1196.4201 Then
      Unit
    Then
      Let and_group.4202 : Array(Int) =
        and_net.2583.(head.4200)
      In
      Let Tu131.4203 : Unit =
        Let Ti1193.4206 : Int =
          Int (0)
        In
        AppClosure solve_each_element.2896 (Ti1193.4206 and_group.4202 dirvec.2903 )
      In
      Let Ti1195.4204 : Int =
        Let Ti1194.4205 : Int =
          Int (1)
        In
        ofs.2901 + Ti1194.4205
      In
      AppClosure solve_one_or_network.2900 (Ti1195.4204 or_group.2902 dirvec.2903 )
  Int -> Array(Array(Int)) -> Array(Float) -> Unit trace_or_matrix.2904 ((ofs.2905 : Int) (or_network.2906 : Array(Array(Int))) (dirvec.2907 : Array(Float)) )
    (solve_one_or_network.2900 : Int -> Array(Int) -> Array(Float) -> Unit) (solver.2798 : Int -> Array(Float) -> Array(Float) -> Int) (solver_dist.2585 : Array(Float)) (startp.2597 : Array(Float)) (tmin.2587 : Array(Float)) 
    Let head.4183 : Array(Int) =
      or_network.2906.(ofs.2905)
    In
    Let range_primitive.4184 : Int =
      Let Ti1180.4199 : Int =
        Int (0)
      In
      head.4183.(Ti1180.4199)
    In
    Let Ti1191.4185 : Int =
      Let Ti1181.4198 : Int =
        Int (1)
      In
      Neg (Ti1181.4198)
    In
    If range_primitive.4184 = Ti1191.4185 Then
      Unit
    Then
      Let Tu132.4186 : Unit =
        Let Ti1188.4189 : Int =
          Int (99)
        In
        If range_primitive.4184 = Ti1188.4189 Then
          Let Ti1182.4197 : Int =
            Int (1)
          In
          AppClosure solve_one_or_network.2900 (Ti1182.4197 head.4183 dirvec.2907 )
        Then
          Let t.4190 : Int =
            AppClosure solver.2798 (range_primitive.4184 dirvec.2907 startp.2597 )
          In
          If 0 = t.4190 Then
            Unit
          Then
            Let tp.4191 : Float =
              Let Ti1183.4196 : Int =
                Int (0)
              In
              solver_dist.2585.(Ti1183.4196)
            In
            Let Tb1187.4192 : Bool =
              Let Td1185.4194 : Float =
                Let Ti1184.4195 : Int =
                  Int (0)
                In
                tmin.2587.(Ti1184.4195)
              In
              AppClosure fless.2511 (tp.4191 Td1185.4194 )
            In
            If 0 = Tb1187.4192 Then
              Unit
            Then
              Let Ti1186.4193 : Int =
                Int (1)
              In
              AppClosure solve_one_or_network.2900 (Ti1186.4193 head.4183 dirvec.2907 )
      In
      Let Ti1190.4187 : Int =
        Let Ti1189.4188 : Int =
          Int (1)
        In
        ofs.2905 + Ti1189.4188
      In
      AppClosure trace_or_matrix.2904 (Ti1190.4187 or_network.2906 dirvec.2907 )
  Array(Float) -> Bool judge_intersection.2908 ((dirvec.2909 : Array(Float)) )
    (or_net.2584 : Array(Array(Array(Int)))) (tmin.2587 : Array(Float)) (trace_or_matrix.2904 : Int -> Array(Array(Int)) -> Array(Float) -> Unit) 
    Let Tu134.4171 : Unit =
      Let Ti1171.4181 : Int =
        Int (0)
      In
      Let Td1172.4182 : Float =
        Float (1000000000.000000)
      In
      tmin.2587.(Ti1171.4181) <- Td1172.4182
    In
    Let Tu133.4172 : Unit =
      Let Ti1173.4178 : Int =
        Int (0)
      In
      Let Ta1175.4179 : Array(Array(Int)) =
        Let Ti1174.4180 : Int =
          Int (0)
        In
        or_net.2584.(Ti1174.4180)
      In
      AppClosure trace_or_matrix.2904 (Ti1173.4178 Ta1175.4179 dirvec.2909 )
    In
    Let t.4173 : Float =
      Let Ti1176.4177 : Int =
        Int (0)
      In
      tmin.2587.(Ti1176.4177)
    In
    Let Tb1179.4174 : Bool =
      Let Td1177.4176 : Float =
        Float (-0.100000)
      In
      AppClosure fless.2511 (Td1177.4176 t.4173 )
    In
    If 0 = Tb1179.4174 Then
      Int (0)
    Then
      Let Td1178.4175 : Float =
        Float (100000000.000000)
      In
      AppClosure fless.2511 (t.4173 Td1178.4175 )
  Int -> Array(Int) -> Array(Float) * Array(Array(Float)) -> Unit solve_each_element_fast.2910 ((iand_ofs.2911 : Int) (and_group.2912 : Array(Int)) (dirvec.2913 : Array(Float) * Array(Array(Float))) )
    (check_all_inside.2881 : Int -> Array(Int) -> Float -> Float -> Float -> Bool) (intersected_object_id.2589 : Array(Int)) (intersection_point.2588 : Array(Float)) (intsec_rectside.2586 : Array(Int)) (objects.2578 : Array(Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float))) (solver_dist.2585 : Array(Float)) (solver_fast2.2839 : Int -> Array(Float) * Array(Array(Float)) -> Int) (startp_fast.2598 : Array(Float)) (tmin.2587 : Array(Float)) 
    Let vec.4124 : Array(Float) =
      AppClosure d_vec.2725 (dirvec.2913 )
    In
    Let iobj.4125 : Int =
      and_group.2912.(iand_ofs.2911)
    In
    Let Ti1170.4126 : Int =
      Let Ti1136.4170 : Int =
        Int (1)
      In
      Neg (Ti1136.4170)
    In
    If iobj.4125 = Ti1170.4126 Then
      Unit
    Then
      Let t0.4127 : Int =
        AppClosure solver_fast2.2839 (iobj.4125 dirvec.2913 )
      In
      If 0 = t0.4127 Then
        Let Tb1140.4166 : Bool =
          Let Tt1137.4169 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
            objects.2578.(iobj.4125)
          In
          AppClosure o_isinvert.2670 (Tt1137.4169 )
        In
        If 0 = Tb1140.4166 Then
          Unit
        Then
          Let Ti1139.4167 : Int =
            Let Ti1138.4168 : Int =
              Int (1)
            In
            iand_ofs.2911 + Ti1138.4168
          In
          AppClosure solve_each_element_fast.2910 (Ti1139.4167 and_group.2912 dirvec.2913 )
      Then
        Let t0p.4128 : Float =
          Let Ti1141.4165 : Int =
            Int (0)
          In
          solver_dist.2585.(Ti1141.4165)
        In
        Let Tu138.4129 : Unit =
          Let Tb1167.4132 : Bool =
            Let Td1142.4164 : Float =
              Float (0.000000)
            In
            AppClosure fless.2511 (Td1142.4164 t0p.4128 )
          In
          If 0 = Tb1167.4132 Then
            Unit
          Then
            Let Tb1166.4133 : Bool =
              Let Td1144.4162 : Float =
                Let Ti1143.4163 : Int =
                  Int (0)
                In
                tmin.2587.(Ti1143.4163)
              In
              AppClosure fless.2511 (t0p.4128 Td1144.4162 )
            In
            If 0 = Tb1166.4133 Then
              Unit
            Then
              Let t.4134 : Float =
                Let Td1145.4161 : Float =
                  Float (0.010000)
                In
                t0p.4128 +. Td1145.4161
              In
              Let q0.4135 : Float =
                Let Td1148.4156 : Float =
                  Let Td1147.4159 : Float =
                    Let Ti1146.4160 : Int =
                      Int (0)
                    In
                    vec.4124.(Ti1146.4160)
                  In
                  Td1147.4159 *. t.4134
                In
                Let Td1150.4157 : Float =
                  Let Ti1149.4158 : Int =
                    Int (0)
                  In
                  startp_fast.2598.(Ti1149.4158)
                In
                Td1148.4156 +. Td1150.4157
              In
              Let q1.4136 : Float =
                Let Td1153.4151 : Float =
                  Let Td1152.4154 : Float =
                    Let Ti1151.4155 : Int =
                      Int (1)
                    In
                    vec.4124.(Ti1151.4155)
                  In
                  Td1152.4154 *. t.4134
                In
                Let Td1155.4152 : Float =
                  Let Ti1154.4153 : Int =
                    Int (1)
                  In
                  startp_fast.2598.(Ti1154.4153)
                In
                Td1153.4151 +. Td1155.4152
              In
              Let q2.4137 : Float =
                Let Td1158.4146 : Float =
                  Let Td1157.4149 : Float =
                    Let Ti1156.4150 : Int =
                      Int (2)
                    In
                    vec.4124.(Ti1156.4150)
                  In
                  Td1157.4149 *. t.4134
                In
                Let Td1160.4147 : Float =
                  Let Ti1159.4148 : Int =
                    Int (2)
                  In
                  startp_fast.2598.(Ti1159.4148)
                In
                Td1158.4146 +. Td1160.4147
              In
              Let Tb1165.4138 : Bool =
                Let Ti1161.4145 : Int =
                  Int (0)
                In
                AppClosure check_all_inside.2881 (Ti1161.4145 and_group.2912 q0.4135 q1.4136 q2.4137 )
              In
              If 0 = Tb1165.4138 Then
                Unit
              Then
                Let Tu137.4139 : Unit =
                  Let Ti1162.4144 : Int =
                    Int (0)
                  In
                  tmin.2587.(Ti1162.4144) <- t.4134
                In
                Let Tu136.4140 : Unit =
                  AppClosure vecset.2618 (intersection_point.2588 q0.4135 q1.4136 q2.4137 )
                In
                Let Tu135.4141 : Unit =
                  Let Ti1163.4143 : Int =
                    Int (0)
                  In
                  intersected_object_id.2589.(Ti1163.4143) <- iobj.4125
                In
                Let Ti1164.4142 : Int =
                  Int (0)
                In
                intsec_rectside.2586.(Ti1164.4142) <- t0.4127
        In
        Let Ti1169.4130 : Int =
          Let Ti1168.4131 : Int =
            Int (1)
          In
          iand_ofs.2911 + Ti1168.4131
        In
        AppClosure solve_each_element_fast.2910 (Ti1169.4130 and_group.2912 dirvec.2913 )
  Int -> Array(Int) -> Array(Float) * Array(Array(Float)) -> Unit solve_one_or_network_fast.2914 ((ofs.2915 : Int) (or_group.2916 : Array(Int)) (dirvec.2917 : Array(Float) * Array(Array(Float))) )
    (and_net.2583 : Array(Array(Int))) (solve_each_element_fast.2910 : Int -> Array(Int) -> Array(Float) * Array(Array(Float)) -> Unit) 
    Let head.4116 : Int =
      or_group.2916.(ofs.2915)
    In
    Let Ti1135.4117 : Int =
      Let Ti1131.4123 : Int =
        Int (1)
      In
      Neg (Ti1131.4123)
    In
    If head.4116 = Ti1135.4117 Then
      Unit
    Then
      Let and_group.4118 : Array(Int) =
        and_net.2583.(head.4116)
      In
      Let Tu139.4119 : Unit =
        Let Ti1132.4122 : Int =
          Int (0)
        In
        AppClosure solve_each_element_fast.2910 (Ti1132.4122 and_group.4118 dirvec.2917 )
      In
      Let Ti1134.4120 : Int =
        Let Ti1133.4121 : Int =
          Int (1)
        In
        ofs.2915 + Ti1133.4121
      In
      AppClosure solve_one_or_network_fast.2914 (Ti1134.4120 or_group.2916 dirvec.2917 )
  Int -> Array(Array(Int)) -> Array(Float) * Array(Array(Float)) -> Unit trace_or_matrix_fast.2918 ((ofs.2919 : Int) (or_network.2920 : Array(Array(Int))) (dirvec.2921 : Array(Float) * Array(Array(Float))) )
    (solve_one_or_network_fast.2914 : Int -> Array(Int) -> Array(Float) * Array(Array(Float)) -> Unit) (solver_dist.2585 : Array(Float)) (solver_fast2.2839 : Int -> Array(Float) * Array(Array(Float)) -> Int) (tmin.2587 : Array(Float)) 
    Let head.4099 : Array(Int) =
      or_network.2920.(ofs.2919)
    In
    Let range_primitive.4100 : Int =
      Let Ti1119.4115 : Int =
        Int (0)
      In
      head.4099.(Ti1119.4115)
    In
    Let Ti1130.4101 : Int =
      Let Ti1120.4114 : Int =
        Int (1)
      In
      Neg (Ti1120.4114)
    In
    If range_primitive.4100 = Ti1130.4101 Then
      Unit
    Then
      Let Tu140.4102 : Unit =
        Let Ti1127.4105 : Int =
          Int (99)
        In
        If range_primitive.4100 = Ti1127.4105 Then
          Let Ti1121.4113 : Int =
            Int (1)
          In
          AppClosure solve_one_or_network_fast.2914 (Ti1121.4113 head.4099 dirvec.2921 )
        Then
          Let t.4106 : Int =
            AppClosure solver_fast2.2839 (range_primitive.4100 dirvec.2921 )
          In
          If 0 = t.4106 Then
            Unit
          Then
            Let tp.4107 : Float =
              Let Ti1122.4112 : Int =
                Int (0)
              In
              solver_dist.2585.(Ti1122.4112)
            In
            Let Tb1126.4108 : Bool =
              Let Td1124.4110 : Float =
                Let Ti1123.4111 : Int =
                  Int (0)
                In
                tmin.2587.(Ti1123.4111)
              In
              AppClosure fless.2511 (tp.4107 Td1124.4110 )
            In
            If 0 = Tb1126.4108 Then
              Unit
            Then
              Let Ti1125.4109 : Int =
                Int (1)
              In
              AppClosure solve_one_or_network_fast.2914 (Ti1125.4109 head.4099 dirvec.2921 )
      In
      Let Ti1129.4103 : Int =
        Let Ti1128.4104 : Int =
          Int (1)
        In
        ofs.2919 + Ti1128.4104
      In
      AppClosure trace_or_matrix_fast.2918 (Ti1129.4103 or_network.2920 dirvec.2921 )
  Array(Float) * Array(Array(Float)) -> Bool judge_intersection_fast.2922 ((dirvec.2923 : Array(Float) * Array(Array(Float))) )
    (or_net.2584 : Array(Array(Array(Int)))) (tmin.2587 : Array(Float)) (trace_or_matrix_fast.2918 : Int -> Array(Array(Int)) -> Array(Float) * Array(Array(Float)) -> Unit) 
    Let Tu142.4087 : Unit =
      Let Ti1110.4097 : Int =
        Int (0)
      In
      Let Td1111.4098 : Float =
        Float (1000000000.000000)
      In
      tmin.2587.(Ti1110.4097) <- Td1111.4098
    In
    Let Tu141.4088 : Unit =
      Let Ti1112.4094 : Int =
        Int (0)
      In
      Let Ta1114.4095 : Array(Array(Int)) =
        Let Ti1113.4096 : Int =
          Int (0)
        In
        or_net.2584.(Ti1113.4096)
      In
      AppClosure trace_or_matrix_fast.2918 (Ti1112.4094 Ta1114.4095 dirvec.2923 )
    In
    Let t.4089 : Float =
      Let Ti1115.4093 : Int =
        Int (0)
      In
      tmin.2587.(Ti1115.4093)
    In
    Let Tb1118.4090 : Bool =
      Let Td1116.4092 : Float =
        Float (-0.100000)
      In
      AppClosure fless.2511 (Td1116.4092 t.4089 )
    In
    If 0 = Tb1118.4090 Then
      Int (0)
    Then
      Let Td1117.4091 : Float =
        Float (100000000.000000)
      In
      AppClosure fless.2511 (t.4089 Td1117.4091 )
  Array(Float) -> Unit get_nvector_rect.2924 ((dirvec.2925 : Array(Float)) )
    (intsec_rectside.2586 : Array(Int)) (nvector.2590 : Array(Float)) 
    Let rectside.4077 : Int =
      Let Ti1102.4086 : Int =
        Int (0)
      In
      intsec_rectside.2586.(Ti1102.4086)
    In
    Let Tu143.4078 : Unit =
      AppClosure vecbzero.2626 (nvector.2590 )
    In
    Let Ti1104.4079 : Int =
      Let Ti1103.4085 : Int =
        Int (1)
      In
      rectside.4077 - Ti1103.4085
    In
    Let Td1109.4080 : Float =
      Let Td1108.4081 : Float =
        Let Td1107.4082 : Float =
          Let Ti1106.4083 : Int =
            Let Ti1105.4084 : Int =
              Int (1)
            In
            rectside.4077 - Ti1105.4084
          In
          dirvec.2925.(Ti1106.4083)
        In
        AppClosure sgn.2610 (Td1107.4082 )
      In
      AppClosure fneg.2527 (Td1108.4081 )
    In
    nvector.2590.(Ti1104.4079) <- Td1109.4080
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit get_nvector_plane.2926 ((m.2927 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    (nvector.2590 : Array(Float)) 
    Let Tu145.4066 : Unit =
      Let Ti1093.4074 : Int =
        Int (0)
      In
      Let Td1095.4075 : Float =
        Let Td1094.4076 : Float =
          AppClosure o_param_a.2674 (m.2927 )
        In
        AppClosure fneg.2527 (Td1094.4076 )
      In
      nvector.2590.(Ti1093.4074) <- Td1095.4075
    In
    Let Tu144.4067 : Unit =
      Let Ti1096.4071 : Int =
        Int (1)
      In
      Let Td1098.4072 : Float =
        Let Td1097.4073 : Float =
          AppClosure o_param_b.2676 (m.2927 )
        In
        AppClosure fneg.2527 (Td1097.4073 )
      In
      nvector.2590.(Ti1096.4071) <- Td1098.4072
    In
    Let Ti1099.4068 : Int =
      Int (2)
    In
    Let Td1101.4069 : Float =
      Let Td1100.4070 : Float =
        AppClosure o_param_c.2678 (m.2927 )
      In
      AppClosure fneg.2527 (Td1100.4070 )
    In
    nvector.2590.(Ti1099.4068) <- Td1101.4069
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit get_nvector_second.2928 ((m.2929 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    (intersection_point.2588 : Array(Float)) (nvector.2590 : Array(Float)) 
    Let p0.4014 : Float =
      Let Td1053.4063 : Float =
        Let Ti1052.4065 : Int =
          Int (0)
        In
        intersection_point.2588.(Ti1052.4065)
      In
      Let Td1054.4064 : Float =
        AppClosure o_param_x.2682 (m.2929 )
      In
      Td1053.4063 -. Td1054.4064
    In
    Let p1.4015 : Float =
      Let Td1056.4060 : Float =
        Let Ti1055.4062 : Int =
          Int (1)
        In
        intersection_point.2588.(Ti1055.4062)
      In
      Let Td1057.4061 : Float =
        AppClosure o_param_y.2684 (m.2929 )
      In
      Td1056.4060 -. Td1057.4061
    In
    Let p2.4016 : Float =
      Let Td1059.4057 : Float =
        Let Ti1058.4059 : Int =
          Int (2)
        In
        intersection_point.2588.(Ti1058.4059)
      In
      Let Td1060.4058 : Float =
        AppClosure o_param_z.2686 (m.2929 )
      In
      Td1059.4057 -. Td1060.4058
    In
    Let d0.4017 : Float =
      Let Td1061.4056 : Float =
        AppClosure o_param_a.2674 (m.2929 )
      In
      p0.4014 *. Td1061.4056
    In
    Let d1.4018 : Float =
      Let Td1062.4055 : Float =
        AppClosure o_param_b.2676 (m.2929 )
      In
      p1.4015 *. Td1062.4055
    In
    Let d2.4019 : Float =
      Let Td1063.4054 : Float =
        AppClosure o_param_c.2678 (m.2929 )
      In
      p2.4016 *. Td1063.4054
    In
    Let Tu150.4020 : Unit =
      Let Ti1091.4022 : Int =
        AppClosure o_isrot.2672 (m.2929 )
      In
      If 0 = Ti1091.4022 Then
        Let Tu147.4049 : Unit =
          Let Ti1064.4053 : Int =
            Int (0)
          In
          nvector.2590.(Ti1064.4053) <- d0.4017
        In
        Let Tu146.4050 : Unit =
          Let Ti1065.4052 : Int =
            Int (1)
          In
          nvector.2590.(Ti1065.4052) <- d1.4018
        In
        Let Ti1066.4051 : Int =
          Int (2)
        In
        nvector.2590.(Ti1066.4051) <- d2.4019
      Then
        Let Tu149.4023 : Unit =
          Let Ti1067.4041 : Int =
            Int (0)
          In
          Let Td1074.4042 : Float =
            Let Td1073.4043 : Float =
              Let Td1072.4044 : Float =
                Let Td1069.4045 : Float =
                  Let Td1068.4048 : Float =
                    AppClosure o_param_r3.2702 (m.2929 )
                  In
                  p1.4015 *. Td1068.4048
                In
                Let Td1071.4046 : Float =
                  Let Td1070.4047 : Float =
                    AppClosure o_param_r2.2700 (m.2929 )
                  In
                  p2.4016 *. Td1070.4047
                In
                Td1069.4045 +. Td1071.4046
              In
              AppClosure fhalf.2529 (Td1072.4044 )
            In
            d0.4017 +. Td1073.4043
          In
          nvector.2590.(Ti1067.4041) <- Td1074.4042
        In
        Let Tu148.4024 : Unit =
          Let Ti1075.4033 : Int =
            Int (1)
          In
          Let Td1082.4034 : Float =
            Let Td1081.4035 : Float =
              Let Td1080.4036 : Float =
                Let Td1077.4037 : Float =
                  Let Td1076.4040 : Float =
                    AppClosure o_param_r3.2702 (m.2929 )
                  In
                  p0.4014 *. Td1076.4040
                In
                Let Td1079.4038 : Float =
                  Let Td1078.4039 : Float =
                    AppClosure o_param_r1.2698 (m.2929 )
                  In
                  p2.4016 *. Td1078.4039
                In
                Td1077.4037 +. Td1079.4038
              In
              AppClosure fhalf.2529 (Td1080.4036 )
            In
            d1.4018 +. Td1081.4035
          In
          nvector.2590.(Ti1075.4033) <- Td1082.4034
        In
        Let Ti1083.4025 : Int =
          Int (2)
        In
        Let Td1090.4026 : Float =
          Let Td1089.4027 : Float =
            Let Td1088.4028 : Float =
              Let Td1085.4029 : Float =
                Let Td1084.4032 : Float =
                  AppClosure o_param_r2.2700 (m.2929 )
                In
                p0.4014 *. Td1084.4032
              In
              Let Td1087.4030 : Float =
                Let Td1086.4031 : Float =
                  AppClosure o_param_r1.2698 (m.2929 )
                In
                p1.4015 *. Td1086.4031
              In
              Td1085.4029 +. Td1087.4030
            In
            AppClosure fhalf.2529 (Td1088.4028 )
          In
          d2.4019 +. Td1089.4027
        In
        nvector.2590.(Ti1083.4025) <- Td1090.4026
    In
    Let Tb1092.4021 : Bool =
      AppClosure o_isinvert.2670 (m.2929 )
    In
    AppClosure vecunit_sgn.2636 (nvector.2590 Tb1092.4021 )
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Unit get_nvector.2930 ((m.2931 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) (dirvec.2932 : Array(Float)) )
    (get_nvector_plane.2926 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit) (get_nvector_rect.2924 : Array(Float) -> Unit) (get_nvector_second.2928 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit) 
    Let m_shape.4012 : Int =
      AppClosure o_form.2666 (m.2931 )
    In
    If 1 = m_shape.4012 Then
      AppClosure get_nvector_rect.2924 (dirvec.2932 )
    Then
      Let Ti1051.4013 : Int =
        Int (2)
      In
      If m_shape.4012 = Ti1051.4013 Then
        AppClosure get_nvector_plane.2926 (m.2931 )
      Then
        AppClosure get_nvector_second.2928 (m.2931 )
  Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Unit utexture.2933 ((m.2934 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) (p.2935 : Array(Float)) )
    (atan.2540 : Float -> Float) (cos.2548 : Float -> Float) (sin.2546 : Float -> Float) (texture_color.2591 : Array(Float)) 
    Let m_tex.3865 : Int =
      AppClosure o_texturetype.2664 (m.2934 )
    In
    Let Tu155.3866 : Unit =
      Let Ti934.4010 : Int =
        Int (0)
      In
      Let Td935.4011 : Float =
        AppClosure o_color_red.2692 (m.2934 )
      In
      texture_color.2591.(Ti934.4010) <- Td935.4011
    In
    Let Tu154.3867 : Unit =
      Let Ti936.4008 : Int =
        Int (1)
      In
      Let Td937.4009 : Float =
        AppClosure o_color_green.2694 (m.2934 )
      In
      texture_color.2591.(Ti936.4008) <- Td937.4009
    In
    Let Tu153.3868 : Unit =
      Let Ti938.4006 : Int =
        Int (2)
      In
      Let Td939.4007 : Float =
        AppClosure o_color_blue.2696 (m.2934 )
      In
      texture_color.2591.(Ti938.4006) <- Td939.4007
    In
    If 1 = m_tex.3865 Then
      Let w1.3980 : Float =
        Let Td941.4003 : Float =
          Let Ti940.4005 : Int =
            Int (0)
          In
          p.2935.(Ti940.4005)
        In
        Let Td942.4004 : Float =
          AppClosure o_param_x.2682 (m.2934 )
        In
        Td941.4003 -. Td942.4004
      In
      Let flag1.3981 : Bool =
        Let d1.3996 : Float =
          Let Td945.3999 : Float =
            Let Td944.4001 : Float =
              Let Td943.4002 : Float =
                Float (0.050000)
              In
              w1.3980 *. Td943.4002
            In
            AppClosure min_caml_floor (Td944.4001 )
          In
          Let Td946.4000 : Float =
            Float (20.000000)
          In
          Td945.3999 *. Td946.4000
        In
        Let Td947.3997 : Float =
          w1.3980 -. d1.3996
        In
        Let Td948.3998 : Float =
          Float (10.000000)
        In
        AppClosure fless.2511 (Td947.3997 Td948.3998 )
      In
      Let w3.3982 : Float =
        Let Td950.3993 : Float =
          Let Ti949.3995 : Int =
            Int (2)
          In
          p.2935.(Ti949.3995)
        In
        Let Td951.3994 : Float =
          AppClosure o_param_z.2686 (m.2934 )
        In
        Td950.3993 -. Td951.3994
      In
      Let flag2.3983 : Bool =
        Let d2.3986 : Float =
          Let Td954.3989 : Float =
            Let Td953.3991 : Float =
              Let Td952.3992 : Float =
                Float (0.050000)
              In
              w3.3982 *. Td952.3992
            In
            AppClosure min_caml_floor (Td953.3991 )
          In
          Let Td955.3990 : Float =
            Float (20.000000)
          In
          Td954.3989 *. Td955.3990
        In
        Let Td956.3987 : Float =
          w3.3982 -. d2.3986
        In
        Let Td957.3988 : Float =
          Float (10.000000)
        In
        AppClosure fless.2511 (Td956.3987 Td957.3988 )
      In
      Let Ti958.3984 : Int =
        Int (1)
      In
      Let Td959.3985 : Float =
        If 0 = flag1.3981 Then
          If 0 = flag2.3983 Then
            Float (255.000000)
          Then
            Float (0.000000)
        Then
          If 0 = flag2.3983 Then
            Float (0.000000)
          Then
            Float (255.000000)
      In
      texture_color.2591.(Ti958.3984) <- Td959.3985
    Then
      Let Ti1050.3869 : Int =
        Int (2)
      In
      If m_tex.3865 = Ti1050.3869 Then
        Let w2.3965 : Float =
          Let Td964.3975 : Float =
            Let Td963.3976 : Float =
              Let Td961.3977 : Float =
                Let Ti960.3979 : Int =
                  Int (1)
                In
                p.2935.(Ti960.3979)
              In
              Let Td962.3978 : Float =
                Float (0.250000)
              In
              Td961.3977 *. Td962.3978
            In
            AppClosure sin.2546 (Td963.3976 )
          In
          AppClosure fsqr.2531 (Td964.3975 )
        In
        Let Tu151.3966 : Unit =
          Let Ti965.3972 : Int =
            Int (0)
          In
          Let Td967.3973 : Float =
            Let Td966.3974 : Float =
              Float (255.000000)
            In
            Td966.3974 *. w2.3965
          In
          texture_color.2591.(Ti965.3972) <- Td967.3973
        In
        Let Ti968.3967 : Int =
          Int (1)
        In
        Let Td972.3968 : Float =
          Let Td969.3969 : Float =
            Float (255.000000)
          In
          Let Td971.3970 : Float =
            Let Td970.3971 : Float =
              Float (1.000000)
            In
            Td970.3971 -. w2.3965
          In
          Td969.3969 *. Td971.3970
        In
        texture_color.2591.(Ti968.3967) <- Td972.3968
      Then
        Let Ti1049.3870 : Int =
          Int (3)
        In
        If m_tex.3865 = Ti1049.3870 Then
          Let w1.3936 : Float =
            Let Td974.3962 : Float =
              Let Ti973.3964 : Int =
                Int (0)
              In
              p.2935.(Ti973.3964)
            In
            Let Td975.3963 : Float =
              AppClosure o_param_x.2682 (m.2934 )
            In
            Td974.3962 -. Td975.3963
          In
          Let w3.3937 : Float =
            Let Td977.3959 : Float =
              Let Ti976.3961 : Int =
                Int (2)
              In
              p.2935.(Ti976.3961)
            In
            Let Td978.3960 : Float =
              AppClosure o_param_z.2686 (m.2934 )
            In
            Td977.3959 -. Td978.3960
          In
          Let w2.3938 : Float =
            Let Td982.3954 : Float =
              Let Td981.3956 : Float =
                Let Td979.3957 : Float =
                  AppClosure fsqr.2531 (w1.3936 )
                In
                Let Td980.3958 : Float =
                  AppClosure fsqr.2531 (w3.3937 )
                In
                Td979.3957 +. Td980.3958
              In
              AppClosure min_caml_sqrt (Td981.3956 )
            In
            Let Td983.3955 : Float =
              Float (10.000000)
            In
            Td982.3954 /. Td983.3955
          In
          Let w4.3939 : Float =
            Let Td985.3951 : Float =
              Let Td984.3953 : Float =
                AppClosure min_caml_floor (w2.3938 )
              In
              w2.3938 -. Td984.3953
            In
            Let Td986.3952 : Float =
              Float (3.141593)
            In
            Td985.3951 *. Td986.3952
          In
          Let cws.3940 : Float =
            Let Td987.3950 : Float =
              AppClosure cos.2548 (w4.3939 )
            In
            AppClosure fsqr.2531 (Td987.3950 )
          In
          Let Tu152.3941 : Unit =
            Let Ti988.3947 : Int =
              Int (1)
            In
            Let Td990.3948 : Float =
              Let Td989.3949 : Float =
                Float (255.000000)
              In
              cws.3940 *. Td989.3949
            In
            texture_color.2591.(Ti988.3947) <- Td990.3948
          In
          Let Ti991.3942 : Int =
            Int (2)
          In
          Let Td995.3943 : Float =
            Let Td993.3944 : Float =
              Let Td992.3946 : Float =
                Float (1.000000)
              In
              Td992.3946 -. cws.3940
            In
            Let Td994.3945 : Float =
              Float (255.000000)
            In
            Td993.3944 *. Td994.3945
          In
          texture_color.2591.(Ti991.3942) <- Td995.3943
        Then
          Let Ti1048.3871 : Int =
            Int (4)
          In
          If m_tex.3865 = Ti1048.3871 Then
            Let w1.3872 : Float =
              Let Td999.3930 : Float =
                Let Td997.3933 : Float =
                  Let Ti996.3935 : Int =
                    Int (0)
                  In
                  p.2935.(Ti996.3935)
                In
                Let Td998.3934 : Float =
                  AppClosure o_param_x.2682 (m.2934 )
                In
                Td997.3933 -. Td998.3934
              In
              Let Td1001.3931 : Float =
                Let Td1000.3932 : Float =
                  AppClosure o_param_a.2674 (m.2934 )
                In
                AppClosure min_caml_sqrt (Td1000.3932 )
              In
              Td999.3930 *. Td1001.3931
            In
            Let w3.3873 : Float =
              Let Td1005.3924 : Float =
                Let Td1003.3927 : Float =
                  Let Ti1002.3929 : Int =
                    Int (2)
                  In
                  p.2935.(Ti1002.3929)
                In
                Let Td1004.3928 : Float =
                  AppClosure o_param_z.2686 (m.2934 )
                In
                Td1003.3927 -. Td1004.3928
              In
              Let Td1007.3925 : Float =
                Let Td1006.3926 : Float =
                  AppClosure o_param_c.2678 (m.2934 )
                In
                AppClosure min_caml_sqrt (Td1006.3926 )
              In
              Td1005.3924 *. Td1007.3925
            In
            Let w4.3874 : Float =
              Let Td1008.3922 : Float =
                AppClosure fsqr.2531 (w1.3872 )
              In
              Let Td1009.3923 : Float =
                AppClosure fsqr.2531 (w3.3873 )
              In
              Td1008.3922 +. Td1009.3923
            In
            Let w7.3875 : Float =
              Let Tb1017.3913 : Bool =
                Let Td1010.3920 : Float =
                  AppClosure fabs.2523 (w1.3872 )
                In
                Let Td1011.3921 : Float =
                  Float (0.000100)
                In
                AppClosure fless.2511 (Td1010.3920 Td1011.3921 )
              In
              If 0 = Tb1017.3913 Then
                Let w5.3914 : Float =
                  Let Td1012.3919 : Float =
                    w3.3873 /. w1.3872
                  In
                  AppClosure fabs.2523 (Td1012.3919 )
                In
                Let Td1015.3915 : Float =
                  Let Td1013.3917 : Float =
                    AppClosure atan.2540 (w5.3914 )
                  In
                  Let Td1014.3918 : Float =
                    Float (30.000000)
                  In
                  Td1013.3917 *. Td1014.3918
                In
                Let Td1016.3916 : Float =
                  Float (3.141593)
                In
                Td1015.3915 /. Td1016.3916
              Then
                Float (15.000000)
            In
            Let w9.3876 : Float =
              Let Td1018.3912 : Float =
                AppClosure min_caml_floor (w7.3875 )
              In
              w7.3875 -. Td1018.3912
            In
            Let w2.3877 : Float =
              Let Td1022.3906 : Float =
                Let Td1020.3909 : Float =
                  Let Ti1019.3911 : Int =
                    Int (1)
                  In
                  p.2935.(Ti1019.3911)
                In
                Let Td1021.3910 : Float =
                  AppClosure o_param_y.2684 (m.2934 )
                In
                Td1020.3909 -. Td1021.3910
              In
              Let Td1024.3907 : Float =
                Let Td1023.3908 : Float =
                  AppClosure o_param_b.2676 (m.2934 )
                In
                AppClosure min_caml_sqrt (Td1023.3908 )
              In
              Td1022.3906 *. Td1024.3907
            In
            Let w8.3878 : Float =
              Let Tb1032.3897 : Bool =
                Let Td1025.3904 : Float =
                  AppClosure fabs.2523 (w4.3874 )
                In
                Let Td1026.3905 : Float =
                  Float (0.000100)
                In
                AppClosure fless.2511 (Td1025.3904 Td1026.3905 )
              In
              If 0 = Tb1032.3897 Then
                Let w6.3898 : Float =
                  Let Td1027.3903 : Float =
                    w2.3877 /. w4.3874
                  In
                  AppClosure fabs.2523 (Td1027.3903 )
                In
                Let Td1030.3899 : Float =
                  Let Td1028.3901 : Float =
                    AppClosure atan.2540 (w6.3898 )
                  In
                  Let Td1029.3902 : Float =
                    Float (30.000000)
                  In
                  Td1028.3901 *. Td1029.3902
                In
                Let Td1031.3900 : Float =
                  Float (3.141593)
                In
                Td1030.3899 /. Td1031.3900
              Then
                Float (15.000000)
            In
            Let w10.3879 : Float =
              Let Td1033.3896 : Float =
                AppClosure min_caml_floor (w8.3878 )
              In
              w8.3878 -. Td1033.3896
            In
            Let w11.3880 : Float =
              Let Td1038.3888 : Float =
                Let Td1034.3892 : Float =
                  Float (0.150000)
                In
                Let Td1037.3893 : Float =
                  Let Td1036.3894 : Float =
                    Let Td1035.3895 : Float =
                      Float (0.500000)
                    In
                    Td1035.3895 -. w9.3876
                  In
                  AppClosure fsqr.2531 (Td1036.3894 )
                In
                Td1034.3892 -. Td1037.3893
              In
              Let Td1041.3889 : Float =
                Let Td1040.3890 : Float =
                  Let Td1039.3891 : Float =
                    Float (0.500000)
                  In
                  Td1039.3891 -. w10.3879
                In
                AppClosure fsqr.2531 (Td1040.3890 )
              In
              Td1038.3888 -. Td1041.3889
            In
            Let w12.3881 : Float =
              Let Tb1042.3887 : Bool =
                AppClosure fisneg.2516 (w11.3880 )
              In
              If 0 = Tb1042.3887 Then
                Var (w11.3880)
              Then
                Float (0.000000)
            In
            Let Ti1043.3882 : Int =
              Int (2)
            In
            Let Td1047.3883 : Float =
              Let Td1045.3884 : Float =
                Let Td1044.3886 : Float =
                  Float (255.000000)
                In
                Td1044.3886 *. w12.3881
              In
              Let Td1046.3885 : Float =
                Float (0.300000)
              In
              Td1045.3884 /. Td1046.3885
            In
            texture_color.2591.(Ti1043.3882) <- Td1047.3883
          Then
            Unit
  Float -> Float -> Float -> Unit add_light.2936 ((bright.2937 : Float) (hilight.2938 : Float) (hilight_scale.2939 : Float) )
    (rgb.2593 : Array(Float)) (texture_color.2591 : Array(Float)) 
    Let Tu158.3845 : Unit =
      Let Tb918.3864 : Bool =
        AppClosure fispos.2514 (bright.2937 )
      In
      If 0 = Tb918.3864 Then
        Unit
      Then
        AppClosure vecaccum.2647 (rgb.2593 bright.2937 texture_color.2591 )
    In
    Let Tb933.3846 : Bool =
      AppClosure fispos.2514 (hilight.2938 )
    In
    If 0 = Tb933.3846 Then
      Unit
    Then
      Let ihl.3847 : Float =
        Let Td920.3862 : Float =
          Let Td919.3863 : Float =
            AppClosure fsqr.2531 (hilight.2938 )
          In
          AppClosure fsqr.2531 (Td919.3863 )
        In
        Td920.3862 *. hilight_scale.2939
      In
      Let Tu157.3848 : Unit =
        Let Ti921.3858 : Int =
          Int (0)
        In
        Let Td924.3859 : Float =
          Let Td923.3860 : Float =
            Let Ti922.3861 : Int =
              Int (0)
            In
            rgb.2593.(Ti922.3861)
          In
          Td923.3860 +. ihl.3847
        In
        rgb.2593.(Ti921.3858) <- Td924.3859
      In
      Let Tu156.3849 : Unit =
        Let Ti925.3854 : Int =
          Int (1)
        In
        Let Td928.3855 : Float =
          Let Td927.3856 : Float =
            Let Ti926.3857 : Int =
              Int (1)
            In
            rgb.2593.(Ti926.3857)
          In
          Td927.3856 +. ihl.3847
        In
        rgb.2593.(Ti925.3854) <- Td928.3855
      In
      Let Ti929.3850 : Int =
        Int (2)
      In
      Let Td932.3851 : Float =
        Let Td931.3852 : Float =
          Let Ti930.3853 : Int =
            Int (2)
          In
          rgb.2593.(Ti930.3853)
        In
        Td931.3852 +. ihl.3847
      In
      rgb.2593.(Ti929.3850) <- Td932.3851
  Int -> Float -> Float -> Array(Float) -> Unit trace_reflections.2940 ((index.2941 : Int) (diffuse.2942 : Float) (hilight_scale.2943 : Float) (dirvec.2944 : Array(Float)) )
    (add_light.2936 : Float -> Float -> Float -> Unit) (intersected_object_id.2589 : Array(Int)) (intsec_rectside.2586 : Array(Int)) (judge_intersection_fast.2922 : Array(Float) * Array(Array(Float)) -> Bool) (nvector.2590 : Array(Float)) (or_net.2584 : Array(Array(Array(Int)))) (reflections.2605 : Array(Int * Array(Float) * Array(Array(Float)) * Float)) (shadow_check_one_or_matrix.2893 : Int -> Array(Array(Int)) -> Bool) 
    If 0 <= index.2941 Then
      Let rinfo.3819 : Int * Array(Float) * Array(Array(Float)) * Float =
        reflections.2605.(index.2941)
      In
      Let dvec.3820 : Array(Float) * Array(Array(Float)) =
        AppClosure r_dvec.2731 (rinfo.3819 )
      In
      Let Tu159.3821 : Unit =
        Let Tb915.3824 : Bool =
          AppClosure judge_intersection_fast.2922 (dvec.3820 )
        In
        If 0 = Tb915.3824 Then
          Unit
        Then
          Let surface_id.3825 : Int =
            Let Ti903.3839 : Int =
              Let Ti901.3842 : Int =
                Let Ti900.3844 : Int =
                  Int (0)
                In
                intersected_object_id.2589.(Ti900.3844)
              In
              Let Ti902.3843 : Int =
                Int (2)
              In
              Ti901.3842 << Ti902.3843
            In
            Let Ti905.3840 : Int =
              Let Ti904.3841 : Int =
                Int (0)
              In
              intsec_rectside.2586.(Ti904.3841)
            In
            Ti903.3839 + Ti905.3840
          In
          Let Ti914.3826 : Int =
            AppClosure r_surface_id.2729 (rinfo.3819 )
          In
          If surface_id.3825 = Ti914.3826 Then
            Let Tb913.3827 : Bool =
              Let Ti906.3836 : Int =
                Int (0)
              In
              Let Ta908.3837 : Array(Array(Int)) =
                Let Ti907.3838 : Int =
                  Int (0)
                In
                or_net.2584.(Ti907.3838)
              In
              AppClosure shadow_check_one_or_matrix.2893 (Ti906.3836 Ta908.3837 )
            In
            If 0 = Tb913.3827 Then
              Let p.3828 : Float =
                Let Ta909.3835 : Array(Float) =
                  AppClosure d_vec.2725 (dvec.3820 )
                In
                AppClosure veciprod.2639 (nvector.2590 Ta909.3835 )
              In
              Let scale.3829 : Float =
                AppClosure r_bright.2733 (rinfo.3819 )
              In
              Let bright.3830 : Float =
                Let Td910.3834 : Float =
                  scale.3829 *. diffuse.2942
                In
                Td910.3834 *. p.3828
              In
              Let hilight.3831 : Float =
                Let Td912.3832 : Float =
                  Let Ta911.3833 : Array(Float) =
                    AppClosure d_vec.2725 (dvec.3820 )
                  In
                  AppClosure veciprod.2639 (dirvec.2944 Ta911.3833 )
                In
                scale.3829 *. Td912.3832
              In
              AppClosure add_light.2936 (bright.3830 hilight.3831 hilight_scale.2943 )
            Then
              Unit
          Then
            Unit
      In
      Let Ti917.3822 : Int =
        Let Ti916.3823 : Int =
          Int (1)
        In
        index.2941 - Ti916.3823
      In
      AppClosure trace_reflections.2940 (Ti917.3822 diffuse.2942 hilight_scale.2943 dirvec.2944 )
    Then
      Unit
  Int -> Float -> Array(Float) -> Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Float -> Unit trace_ray.2945 ((nref.2946 : Int) (energy.2947 : Float) (dirvec.2948 : Array(Float)) (pixel.2949 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) (dist.2950 : Float) )
    (add_light.2936 : Float -> Float -> Float -> Unit) (beam.2582 : Array(Float)) (get_nvector.2930 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Unit) (intersected_object_id.2589 : Array(Int)) (intersection_point.2588 : Array(Float)) (intsec_rectside.2586 : Array(Int)) (judge_intersection.2908 : Array(Float) -> Bool) (light.2581 : Array(Float)) (n_reflections.2606 : Array(Int)) (nvector.2590 : Array(Float)) (objects.2578 : Array(Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float))) (or_net.2584 : Array(Array(Array(Int)))) (rgb.2593 : Array(Float)) (setup_startp.2859 : Array(Float) -> Unit) (shadow_check_one_or_matrix.2893 : Int -> Array(Array(Int)) -> Bool) (startp.2597 : Array(Float)) (texture_color.2591 : Array(Float)) (tmin.2587 : Array(Float)) (trace_reflections.2940 : Int -> Float -> Float -> Array(Float) -> Unit) (utexture.2933 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Unit) 
    Let Ti899.3713 : Int =
      Int (4)
    In
    If nref.2946 <= Ti899.3713 Then
      Let surface_ids.3714 : Array(Int) =
        AppClosure p_surface_ids.2710 (pixel.2949 )
      In
      Let Tb898.3715 : Bool =
        AppClosure judge_intersection.2908 (dirvec.2948 )
      In
      If 0 = Tb898.3715 Then
        Let Tu176.3793 : Unit =
          Let Ti828.3817 : Int =
            Let Ti827.3818 : Int =
              Int (1)
            In
            Neg (Ti827.3818)
          In
          surface_ids.3714.(nref.2946) <- Ti828.3817
        In
        If 0 = nref.2946 Then
          Unit
        Then
          Let hl.3794 : Float =
            Let Td829.3816 : Float =
              AppClosure veciprod.2639 (dirvec.2948 light.2581 )
            In
            AppClosure fneg.2527 (Td829.3816 )
          In
          Let Tb847.3795 : Bool =
            AppClosure fispos.2514 (hl.3794 )
          In
          If 0 = Tb847.3795 Then
            Unit
          Then
            Let ihl.3796 : Float =
              Let Td832.3811 : Float =
                Let Td831.3814 : Float =
                  Let Td830.3815 : Float =
                    AppClosure fsqr.2531 (hl.3794 )
                  In
                  Td830.3815 *. hl.3794
                In
                Td831.3814 *. energy.2947
              In
              Let Td834.3812 : Float =
                Let Ti833.3813 : Int =
                  Int (0)
                In
                beam.2582.(Ti833.3813)
              In
              Td832.3811 *. Td834.3812
            In
            Let Tu175.3797 : Unit =
              Let Ti835.3807 : Int =
                Int (0)
              In
              Let Td838.3808 : Float =
                Let Td837.3809 : Float =
                  Let Ti836.3810 : Int =
                    Int (0)
                  In
                  rgb.2593.(Ti836.3810)
                In
                Td837.3809 +. ihl.3796
              In
              rgb.2593.(Ti835.3807) <- Td838.3808
            In
            Let Tu174.3798 : Unit =
              Let Ti839.3803 : Int =
                Int (1)
              In
              Let Td842.3804 : Float =
                Let Td841.3805 : Float =
                  Let Ti840.3806 : Int =
                    Int (1)
                  In
                  rgb.2593.(Ti840.3806)
                In
                Td841.3805 +. ihl.3796
              In
              rgb.2593.(Ti839.3803) <- Td842.3804
            In
            Let Ti843.3799 : Int =
              Int (2)
            In
            Let Td846.3800 : Float =
              Let Td845.3801 : Float =
                Let Ti844.3802 : Int =
                  Int (2)
                In
                rgb.2593.(Ti844.3802)
              In
              Td845.3801 +. ihl.3796
            In
            rgb.2593.(Ti843.3799) <- Td846.3800
      Then
        Let obj_id.3716 : Int =
          Let Ti848.3792 : Int =
            Int (0)
          In
          intersected_object_id.2589.(Ti848.3792)
        In
        Let obj.3717 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
          objects.2578.(obj_id.3716)
        In
        Let m_surface.3718 : Int =
          AppClosure o_reflectiontype.2668 (obj.3717 )
        In
        Let diffuse.3719 : Float =
          Let Td849.3791 : Float =
            AppClosure o_diffuse.2688 (obj.3717 )
          In
          Td849.3791 *. energy.2947
        In
        Let Tu173.3720 : Unit =
          AppClosure get_nvector.2930 (obj.3717 dirvec.2948 )
        In
        Let Tu172.3721 : Unit =
          AppClosure veccpy.2628 (startp.2597 intersection_point.2588 )
        In
        Let Tu171.3722 : Unit =
          AppClosure utexture.2933 (obj.3717 intersection_point.2588 )
        In
        Let Tu170.3723 : Unit =
          Let Ti854.3786 : Int =
            Let Ti851.3787 : Int =
              Let Ti850.3790 : Int =
                Int (2)
              In
              obj_id.3716 << Ti850.3790
            In
            Let Ti853.3788 : Int =
              Let Ti852.3789 : Int =
                Int (0)
              In
              intsec_rectside.2586.(Ti852.3789)
            In
            Ti851.3787 + Ti853.3788
          In
          surface_ids.3714.(nref.2946) <- Ti854.3786
        In
        Let intersection_points.3724 : Array(Array(Float)) =
          AppClosure p_intersection_points.2708 (pixel.2949 )
        In
        Let Tu169.3725 : Unit =
          Let Ta855.3785 : Array(Float) =
            intersection_points.3724.(nref.2946)
          In
          AppClosure veccpy.2628 (Ta855.3785 intersection_point.2588 )
        In
        Let calc_diffuse.3726 : Array(Bool) =
          AppClosure p_calc_diffuse.2712 (pixel.2949 )
        In
        Let Tu168.3727 : Unit =
          Let Tb867.3768 : Bool =
            Let Td856.3783 : Float =
              AppClosure o_diffuse.2688 (obj.3717 )
            In
            Let Td857.3784 : Float =
              Float (0.500000)
            In
            AppClosure fless.2511 (Td856.3783 Td857.3784 )
          In
          If 0 = Tb867.3768 Then
            Let Tu162.3770 : Unit =
              Let Ti858.3782 : Int =
                Int (1)
              In
              calc_diffuse.3726.(nref.2946) <- Ti858.3782
            In
            Let energya.3771 : Array(Array(Float)) =
              AppClosure p_energy.2714 (pixel.2949 )
            In
            Let Tu161.3772 : Unit =
              Let Ta859.3781 : Array(Float) =
                energya.3771.(nref.2946)
              In
              AppClosure veccpy.2628 (Ta859.3781 texture_color.2591 )
            In
            Let Tu160.3773 : Unit =
              Let Ta860.3776 : Array(Float) =
                energya.3771.(nref.2946)
              In
              Let Td864.3777 : Float =
                Let Td863.3778 : Float =
                  Let Td861.3779 : Float =
                    Float (1.000000)
                  In
                  Let Td862.3780 : Float =
                    Float (256.000000)
                  In
                  Td861.3779 /. Td862.3780
                In
                Td863.3778 *. diffuse.3719
              In
              AppClosure vecscale.2657 (Ta860.3776 Td864.3777 )
            In
            Let nvectors.3774 : Array(Array(Float)) =
              AppClosure p_nvectors.2723 (pixel.2949 )
            In
            Let Ta865.3775 : Array(Float) =
              nvectors.3774.(nref.2946)
            In
            AppClosure veccpy.2628 (Ta865.3775 nvector.2590 )
          Then
            Let Ti866.3769 : Int =
              Int (0)
            In
            calc_diffuse.3726.(nref.2946) <- Ti866.3769
        In
        Let w.3728 : Float =
          Let Td868.3766 : Float =
            Float (-2.000000)
          In
          Let Td869.3767 : Float =
            AppClosure veciprod.2639 (dirvec.2948 nvector.2590 )
          In
          Td868.3766 *. Td869.3767
        In
        Let Tu167.3729 : Unit =
          AppClosure vecaccum.2647 (dirvec.2948 w.3728 nvector.2590 )
        In
        Let hilight_scale.3730 : Float =
          Let Td870.3765 : Float =
            AppClosure o_hilight.2690 (obj.3717 )
          In
          energy.2947 *. Td870.3765
        In
        Let Tu166.3731 : Unit =
          Let Tb877.3756 : Bool =
            Let Ti871.3762 : Int =
              Int (0)
            In
            Let Ta873.3763 : Array(Array(Int)) =
              Let Ti872.3764 : Int =
                Int (0)
              In
              or_net.2584.(Ti872.3764)
            In
            AppClosure shadow_check_one_or_matrix.2893 (Ti871.3762 Ta873.3763 )
          In
          If 0 = Tb877.3756 Then
            Let bright.3757 : Float =
              Let Td875.3760 : Float =
                Let Td874.3761 : Float =
                  AppClosure veciprod.2639 (nvector.2590 light.2581 )
                In
                AppClosure fneg.2527 (Td874.3761 )
              In
              Td875.3760 *. diffuse.3719
            In
            Let hilight.3758 : Float =
              Let Td876.3759 : Float =
                AppClosure veciprod.2639 (dirvec.2948 light.2581 )
              In
              AppClosure fneg.2527 (Td876.3759 )
            In
            AppClosure add_light.2936 (bright.3757 hilight.3758 hilight_scale.3730 )
          Then
            Unit
        In
        Let Tu165.3732 : Unit =
          AppClosure setup_startp.2859 (intersection_point.2588 )
        In
        Let Tu164.3733 : Unit =
          Let Ti881.3752 : Int =
            Let Ti879.3753 : Int =
              Let Ti878.3755 : Int =
                Int (0)
              In
              n_reflections.2606.(Ti878.3755)
            In
            Let Ti880.3754 : Int =
              Int (1)
            In
            Ti879.3753 - Ti880.3754
          In
          AppClosure trace_reflections.2940 (Ti881.3752 diffuse.3719 hilight_scale.3730 dirvec.2948 )
        In
        Let Tb897.3734 : Bool =
          Let Td882.3751 : Float =
            Float (0.100000)
          In
          AppClosure fless.2511 (Td882.3751 energy.2947 )
        In
        If 0 = Tb897.3734 Then
          Unit
        Then
          Let Tu163.3735 : Unit =
            Let Ti887.3746 : Int =
              Int (4)
            In
            If Ti887.3746 <= nref.2946 Then
              Unit
            Then
              Let Ti884.3747 : Int =
                Let Ti883.3750 : Int =
                  Int (1)
                In
                nref.2946 + Ti883.3750
              In
              Let Ti886.3748 : Int =
                Let Ti885.3749 : Int =
                  Int (1)
                In
                Neg (Ti885.3749)
              In
              surface_ids.3714.(Ti884.3747) <- Ti886.3748
          In
          Let Ti896.3736 : Int =
            Int (2)
          In
          If m_surface.3718 = Ti896.3736 Then
            Let energy2.3737 : Float =
              Let Td890.3743 : Float =
                Let Td888.3744 : Float =
                  Float (1.000000)
                In
                Let Td889.3745 : Float =
                  AppClosure o_diffuse.2688 (obj.3717 )
                In
                Td888.3744 -. Td889.3745
              In
              energy.2947 *. Td890.3743
            In
            Let Ti892.3738 : Int =
              Let Ti891.3742 : Int =
                Int (1)
              In
              nref.2946 + Ti891.3742
            In
            Let Td895.3739 : Float =
              Let Td894.3740 : Float =
                Let Ti893.3741 : Int =
                  Int (0)
                In
                tmin.2587.(Ti893.3741)
              In
              dist.2950 +. Td894.3740
            In
            AppClosure trace_ray.2945 (Ti892.3738 energy2.3737 dirvec.2948 pixel.2949 Td895.3739 )
          Then
            Unit
    Then
      Unit
  Array(Float) * Array(Array(Float)) -> Float -> Unit trace_diffuse_ray.2951 ((dirvec.2952 : Array(Float) * Array(Array(Float))) (energy.2953 : Float) )
    (diffuse_ray.2592 : Array(Float)) (get_nvector.2930 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Unit) (intersected_object_id.2589 : Array(Int)) (intersection_point.2588 : Array(Float)) (judge_intersection_fast.2922 : Array(Float) * Array(Array(Float)) -> Bool) (light.2581 : Array(Float)) (nvector.2590 : Array(Float)) (objects.2578 : Array(Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float))) (or_net.2584 : Array(Array(Array(Int)))) (shadow_check_one_or_matrix.2893 : Int -> Array(Array(Int)) -> Bool) (texture_color.2591 : Array(Float)) (utexture.2933 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Unit) 
    Let Tb826.3695 : Bool =
      AppClosure judge_intersection_fast.2922 (dirvec.2952 )
    In
    If 0 = Tb826.3695 Then
      Unit
    Then
      Let obj.3696 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
        Let Ti815.3711 : Int =
          Let Ti814.3712 : Int =
            Int (0)
          In
          intersected_object_id.2589.(Ti814.3712)
        In
        objects.2578.(Ti815.3711)
      In
      Let Tu178.3697 : Unit =
        Let Ta816.3710 : Array(Float) =
          AppClosure d_vec.2725 (dirvec.2952 )
        In
        AppClosure get_nvector.2930 (obj.3696 Ta816.3710 )
      In
      Let Tu177.3698 : Unit =
        AppClosure utexture.2933 (obj.3696 intersection_point.2588 )
      In
      Let Tb825.3699 : Bool =
        Let Ti817.3707 : Int =
          Int (0)
        In
        Let Ta819.3708 : Array(Array(Int)) =
          Let Ti818.3709 : Int =
            Int (0)
          In
          or_net.2584.(Ti818.3709)
        In
        AppClosure shadow_check_one_or_matrix.2893 (Ti817.3707 Ta819.3708 )
      In
      If 0 = Tb825.3699 Then
        Let br.3700 : Float =
          Let Td820.3706 : Float =
            AppClosure veciprod.2639 (nvector.2590 light.2581 )
          In
          AppClosure fneg.2527 (Td820.3706 )
        In
        Let bright.3701 : Float =
          Let Tb821.3705 : Bool =
            AppClosure fispos.2514 (br.3700 )
          In
          If 0 = Tb821.3705 Then
            Float (0.000000)
          Then
            Var (br.3700)
        In
        Let Td824.3702 : Float =
          Let Td822.3703 : Float =
            energy.2953 *. bright.3701
          In
          Let Td823.3704 : Float =
            AppClosure o_diffuse.2688 (obj.3696 )
          In
          Td822.3703 *. Td823.3704
        In
        AppClosure vecaccum.2647 (diffuse_ray.2592 Td824.3702 texture_color.2591 )
      Then
        Unit
  Array(Array(Float) * Array(Array(Float))) -> Array(Float) -> Array(Float) -> Int -> Unit iter_trace_diffuse_rays.2954 ((dirvec_group.2955 : Array(Array(Float) * Array(Array(Float)))) (nvector.2956 : Array(Float)) (org.2957 : Array(Float)) (index.2958 : Int) )
    (trace_diffuse_ray.2951 : Array(Float) * Array(Array(Float)) -> Float -> Unit) 
    If 0 <= index.2958 Then
      Let p.3680 : Float =
        Let Ta802.3693 : Array(Float) =
          Let Tt801.3694 : Array(Float) * Array(Array(Float)) =
            dirvec_group.2955.(index.2958)
          In
          AppClosure d_vec.2725 (Tt801.3694 )
        In
        AppClosure veciprod.2639 (Ta802.3693 nvector.2956 )
      In
      Let Tu179.3681 : Unit =
        Let Tb811.3684 : Bool =
          AppClosure fisneg.2516 (p.3680 )
        In
        If 0 = Tb811.3684 Then
          Let Tt803.3690 : Array(Float) * Array(Array(Float)) =
            dirvec_group.2955.(index.2958)
          In
          Let Td805.3691 : Float =
            Let Td804.3692 : Float =
              Float (150.000000)
            In
            p.3680 /. Td804.3692
          In
          AppClosure trace_diffuse_ray.2951 (Tt803.3690 Td805.3691 )
        Then
          Let Tt808.3685 : Array(Float) * Array(Array(Float)) =
            Let Ti807.3688 : Int =
              Let Ti806.3689 : Int =
                Int (1)
              In
              index.2958 + Ti806.3689
            In
            dirvec_group.2955.(Ti807.3688)
          In
          Let Td810.3686 : Float =
            Let Td809.3687 : Float =
              Float (-150.000000)
            In
            p.3680 /. Td809.3687
          In
          AppClosure trace_diffuse_ray.2951 (Tt808.3685 Td810.3686 )
      In
      Let Ti813.3682 : Int =
        Let Ti812.3683 : Int =
          Int (2)
        In
        index.2958 - Ti812.3683
      In
      AppClosure iter_trace_diffuse_rays.2954 (dirvec_group.2955 nvector.2956 org.2957 Ti813.3682 )
    Then
      Unit
  Array(Array(Float) * Array(Array(Float))) -> Array(Float) -> Array(Float) -> Unit trace_diffuse_rays.2959 ((dirvec_group.2960 : Array(Array(Float) * Array(Array(Float)))) (nvector.2961 : Array(Float)) (org.2962 : Array(Float)) )
    (iter_trace_diffuse_rays.2954 : Array(Array(Float) * Array(Array(Float))) -> Array(Float) -> Array(Float) -> Int -> Unit) (setup_startp.2859 : Array(Float) -> Unit) 
    Let Tu180.3678 : Unit =
      AppClosure setup_startp.2859 (org.2962 )
    In
    Let Ti800.3679 : Int =
      Int (118)
    In
    AppClosure iter_trace_diffuse_rays.2954 (dirvec_group.2960 nvector.2961 org.2962 Ti800.3679 )
  Int -> Array(Float) -> Array(Float) -> Unit trace_diffuse_ray_80percent.2963 ((group_id.2964 : Int) (nvector.2965 : Array(Float)) (org.2966 : Array(Float)) )
    (dirvecs.2603 : Array(Array(Array(Float) * Array(Array(Float))))) (trace_diffuse_rays.2959 : Array(Array(Float) * Array(Array(Float))) -> Array(Float) -> Array(Float) -> Unit) 
    Let Tu184.3661 : Unit =
      If 0 = group_id.2964 Then
        Unit
      Then
        Let Ta788.3676 : Array(Array(Float) * Array(Array(Float))) =
          Let Ti787.3677 : Int =
            Int (0)
          In
          dirvecs.2603.(Ti787.3677)
        In
        AppClosure trace_diffuse_rays.2959 (Ta788.3676 nvector.2965 org.2966 )
    In
    Let Tu183.3662 : Unit =
      If 1 = group_id.2964 Then
        Unit
      Then
        Let Ta790.3674 : Array(Array(Float) * Array(Array(Float))) =
          Let Ti789.3675 : Int =
            Int (1)
          In
          dirvecs.2603.(Ti789.3675)
        In
        AppClosure trace_diffuse_rays.2959 (Ta790.3674 nvector.2965 org.2966 )
    In
    Let Tu182.3663 : Unit =
      Let Ti793.3671 : Int =
        Int (2)
      In
      If group_id.2964 = Ti793.3671 Then
        Unit
      Then
        Let Ta792.3672 : Array(Array(Float) * Array(Array(Float))) =
          Let Ti791.3673 : Int =
            Int (2)
          In
          dirvecs.2603.(Ti791.3673)
        In
        AppClosure trace_diffuse_rays.2959 (Ta792.3672 nvector.2965 org.2966 )
    In
    Let Tu181.3664 : Unit =
      Let Ti796.3668 : Int =
        Int (3)
      In
      If group_id.2964 = Ti796.3668 Then
        Unit
      Then
        Let Ta795.3669 : Array(Array(Float) * Array(Array(Float))) =
          Let Ti794.3670 : Int =
            Int (3)
          In
          dirvecs.2603.(Ti794.3670)
        In
        AppClosure trace_diffuse_rays.2959 (Ta795.3669 nvector.2965 org.2966 )
    In
    Let Ti799.3665 : Int =
      Int (4)
    In
    If group_id.2964 = Ti799.3665 Then
      Unit
    Then
      Let Ta798.3666 : Array(Array(Float) * Array(Array(Float))) =
        Let Ti797.3667 : Int =
          Int (4)
        In
        dirvecs.2603.(Ti797.3667)
      In
      AppClosure trace_diffuse_rays.2959 (Ta798.3666 nvector.2965 org.2966 )
  Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit calc_diffuse_using_1point.2967 ((pixel.2968 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) (nref.2969 : Int) )
    (diffuse_ray.2592 : Array(Float)) (rgb.2593 : Array(Float)) (trace_diffuse_ray_80percent.2963 : Int -> Array(Float) -> Array(Float) -> Unit) 
    Let ray20p.3650 : Array(Array(Float)) =
      AppClosure p_received_ray_20percent.2716 (pixel.2968 )
    In
    Let nvectors.3651 : Array(Array(Float)) =
      AppClosure p_nvectors.2723 (pixel.2968 )
    In
    Let intersection_points.3652 : Array(Array(Float)) =
      AppClosure p_intersection_points.2708 (pixel.2968 )
    In
    Let energya.3653 : Array(Array(Float)) =
      AppClosure p_energy.2714 (pixel.2968 )
    In
    Let Tu186.3654 : Unit =
      Let Ta782.3660 : Array(Float) =
        ray20p.3650.(nref.2969)
      In
      AppClosure veccpy.2628 (diffuse_ray.2592 Ta782.3660 )
    In
    Let Tu185.3655 : Unit =
      Let Ti783.3657 : Int =
        AppClosure p_group_id.2718 (pixel.2968 )
      In
      Let Ta784.3658 : Array(Float) =
        nvectors.3651.(nref.2969)
      In
      Let Ta785.3659 : Array(Float) =
        intersection_points.3652.(nref.2969)
      In
      AppClosure trace_diffuse_ray_80percent.2963 (Ti783.3657 Ta784.3658 Ta785.3659 )
    In
    Let Ta786.3656 : Array(Float) =
      energya.3653.(nref.2969)
    In
    AppClosure vecaccumv.2660 (rgb.2593 Ta786.3656 diffuse_ray.2592 )
  Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Unit calc_diffuse_using_5points.2970 ((x.2971 : Int) (prev.2972 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (cur.2973 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (next.2974 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (nref.2975 : Int) )
    (diffuse_ray.2592 : Array(Float)) (rgb.2593 : Array(Float)) 
    Let r_up.3623 : Array(Array(Float)) =
      Let Tt766.3649 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        prev.2972.(x.2971)
      In
      AppClosure p_received_ray_20percent.2716 (Tt766.3649 )
    In
    Let r_left.3624 : Array(Array(Float)) =
      Let Tt769.3646 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        Let Ti768.3647 : Int =
          Let Ti767.3648 : Int =
            Int (1)
          In
          x.2971 - Ti767.3648
        In
        cur.2973.(Ti768.3647)
      In
      AppClosure p_received_ray_20percent.2716 (Tt769.3646 )
    In
    Let r_center.3625 : Array(Array(Float)) =
      Let Tt770.3645 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        cur.2973.(x.2971)
      In
      AppClosure p_received_ray_20percent.2716 (Tt770.3645 )
    In
    Let r_right.3626 : Array(Array(Float)) =
      Let Tt773.3642 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        Let Ti772.3643 : Int =
          Let Ti771.3644 : Int =
            Int (1)
          In
          x.2971 + Ti771.3644
        In
        cur.2973.(Ti772.3643)
      In
      AppClosure p_received_ray_20percent.2716 (Tt773.3642 )
    In
    Let r_down.3627 : Array(Array(Float)) =
      Let Tt774.3641 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        next.2974.(x.2971)
      In
      AppClosure p_received_ray_20percent.2716 (Tt774.3641 )
    In
    Let Tu191.3628 : Unit =
      Let Ta775.3640 : Array(Float) =
        r_up.3623.(nref.2975)
      In
      AppClosure veccpy.2628 (diffuse_ray.2592 Ta775.3640 )
    In
    Let Tu190.3629 : Unit =
      Let Ta776.3639 : Array(Float) =
        r_left.3624.(nref.2975)
      In
      AppClosure vecadd.2651 (diffuse_ray.2592 Ta776.3639 )
    In
    Let Tu189.3630 : Unit =
      Let Ta777.3638 : Array(Float) =
        r_center.3625.(nref.2975)
      In
      AppClosure vecadd.2651 (diffuse_ray.2592 Ta777.3638 )
    In
    Let Tu188.3631 : Unit =
      Let Ta778.3637 : Array(Float) =
        r_right.3626.(nref.2975)
      In
      AppClosure vecadd.2651 (diffuse_ray.2592 Ta778.3637 )
    In
    Let Tu187.3632 : Unit =
      Let Ta779.3636 : Array(Float) =
        r_down.3627.(nref.2975)
      In
      AppClosure vecadd.2651 (diffuse_ray.2592 Ta779.3636 )
    In
    Let energya.3633 : Array(Array(Float)) =
      Let Tt780.3635 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        cur.2973.(x.2971)
      In
      AppClosure p_energy.2714 (Tt780.3635 )
    In
    Let Ta781.3634 : Array(Float) =
      energya.3633.(nref.2975)
    In
    AppClosure vecaccumv.2660 (rgb.2593 Ta781.3634 diffuse_ray.2592 )
  Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit do_without_neighbors.2976 ((pixel.2977 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) (nref.2978 : Int) )
    (calc_diffuse_using_1point.2967 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit) 
    Let Ti765.3615 : Int =
      Int (4)
    In
    If nref.2978 <= Ti765.3615 Then
      Let surface_ids.3616 : Array(Int) =
        AppClosure p_surface_ids.2710 (pixel.2977 )
      In
      Let Ti764.3617 : Int =
        surface_ids.3616.(nref.2978)
      In
      If 0 <= Ti764.3617 Then
        Let calc_diffuse.3618 : Array(Bool) =
          AppClosure p_calc_diffuse.2712 (pixel.2977 )
        In
        Let Tu192.3619 : Unit =
          Let Tb761.3622 : Bool =
            calc_diffuse.3618.(nref.2978)
          In
          If 0 = Tb761.3622 Then
            Unit
          Then
            AppClosure calc_diffuse_using_1point.2967 (pixel.2977 nref.2978 )
        In
        Let Ti763.3620 : Int =
          Let Ti762.3621 : Int =
            Int (1)
          In
          nref.2978 + Ti762.3621
        In
        AppClosure do_without_neighbors.2976 (pixel.2977 Ti763.3620 )
      Then
        Unit
    Then
      Unit
  Int -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Bool neighbors_exist.2979 ((x.2980 : Int) (y.2981 : Int) (next.2982 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) )
    (image_size.2594 : Array(Int)) 
    Let Ti759.3607 : Int =
      Let Ti753.3614 : Int =
        Int (1)
      In
      image_size.2594.(Ti753.3614)
    In
    Let Ti760.3608 : Int =
      Let Ti754.3613 : Int =
        Int (1)
      In
      y.2981 + Ti754.3613
    In
    If Ti759.3607 <= Ti760.3608 Then
      Int (0)
    Then
      If y.2981 <= 0 Then
        Int (0)
      Then
        Let Ti757.3609 : Int =
          Let Ti755.3612 : Int =
            Int (0)
          In
          image_size.2594.(Ti755.3612)
        In
        Let Ti758.3610 : Int =
          Let Ti756.3611 : Int =
            Int (1)
          In
          x.2980 + Ti756.3611
        In
        If Ti757.3609 <= Ti758.3610 Then
          Int (0)
        Then
          If x.2980 <= 0 Then
            Int (0)
          Then
            Int (1)
  Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Int get_surface_id.2983 ((pixel.2984 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) (index.2985 : Int) )
    
    Let surface_ids.3606 : Array(Int) =
      AppClosure p_surface_ids.2710 (pixel.2984 )
    In
    surface_ids.3606.(index.2985)
  Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Bool neighbors_are_available.2986 ((x.2987 : Int) (prev.2988 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (cur.2989 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (next.2990 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (nref.2991 : Int) )
    
    Let sid_center.3592 : Int =
      Let Tt740.3605 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        cur.2989.(x.2987)
      In
      AppClosure get_surface_id.2983 (Tt740.3605 nref.2991 )
    In
    Let Ti752.3593 : Int =
      Let Tt741.3604 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        prev.2988.(x.2987)
      In
      AppClosure get_surface_id.2983 (Tt741.3604 nref.2991 )
    In
    If Ti752.3593 = sid_center.3592 Then
      Let Ti751.3594 : Int =
        Let Tt742.3603 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
          next.2990.(x.2987)
        In
        AppClosure get_surface_id.2983 (Tt742.3603 nref.2991 )
      In
      If Ti751.3594 = sid_center.3592 Then
        Let Ti750.3595 : Int =
          Let Tt745.3600 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
            Let Ti744.3601 : Int =
              Let Ti743.3602 : Int =
                Int (1)
              In
              x.2987 - Ti743.3602
            In
            cur.2989.(Ti744.3601)
          In
          AppClosure get_surface_id.2983 (Tt745.3600 nref.2991 )
        In
        If Ti750.3595 = sid_center.3592 Then
          Let Ti749.3596 : Int =
            Let Tt748.3597 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
              Let Ti747.3598 : Int =
                Let Ti746.3599 : Int =
                  Int (1)
                In
                x.2987 + Ti746.3599
              In
              cur.2989.(Ti747.3598)
            In
            AppClosure get_surface_id.2983 (Tt748.3597 nref.2991 )
          In
          If Ti749.3596 = sid_center.3592 Then
            Int (1)
          Then
            Int (0)
        Then
          Int (0)
      Then
        Int (0)
    Then
      Int (0)
  Int -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Unit try_exploit_neighbors.2992 ((x.2993 : Int) (y.2994 : Int) (prev.2995 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (cur.2996 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (next.2997 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (nref.2998 : Int) )
    (calc_diffuse_using_5points.2970 : Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Unit) (do_without_neighbors.2976 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit) 
    Let pixel.3582 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
      cur.2996.(x.2993)
    In
    Let Ti739.3583 : Int =
      Int (4)
    In
    If nref.2998 <= Ti739.3583 Then
      Let Ti738.3584 : Int =
        AppClosure get_surface_id.2983 (pixel.3582 nref.2998 )
      In
      If 0 <= Ti738.3584 Then
        Let Tb737.3585 : Bool =
          AppClosure neighbors_are_available.2986 (x.2993 prev.2995 cur.2996 next.2997 nref.2998 )
        In
        If 0 = Tb737.3585 Then
          Let Tt733.3591 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
            cur.2996.(x.2993)
          In
          AppClosure do_without_neighbors.2976 (Tt733.3591 nref.2998 )
        Then
          Let calc_diffuse.3586 : Array(Bool) =
            AppClosure p_calc_diffuse.2712 (pixel.3582 )
          In
          Let Tu193.3587 : Unit =
            Let Tb734.3590 : Bool =
              calc_diffuse.3586.(nref.2998)
            In
            If 0 = Tb734.3590 Then
              Unit
            Then
              AppClosure calc_diffuse_using_5points.2970 (x.2993 prev.2995 cur.2996 next.2997 nref.2998 )
          In
          Let Ti736.3588 : Int =
            Let Ti735.3589 : Int =
              Int (1)
            In
            nref.2998 + Ti735.3589
          In
          AppClosure try_exploit_neighbors.2992 (x.2993 y.2994 prev.2995 cur.2996 next.2997 Ti736.3588 )
      Then
        Unit
    Then
      Unit
  Unit -> Unit write_ppm_header.2999 ((Tu194.3000 : Unit) )
    (image_size.2594 : Array(Int)) 
    Let Tu202.3561 : Unit =
      Let Ti720.3581 : Int =
        Int (80)
      In
      AppClosure min_caml_print_char (Ti720.3581 )
    In
    Let Tu201.3562 : Unit =
      Let Ti723.3578 : Int =
        Let Ti721.3579 : Int =
          Int (48)
        In
        Let Ti722.3580 : Int =
          Int (3)
        In
        Ti721.3579 + Ti722.3580
      In
      AppClosure min_caml_print_char (Ti723.3578 )
    In
    Let Tu200.3563 : Unit =
      Let Ti724.3577 : Int =
        Int (10)
      In
      AppClosure min_caml_print_char (Ti724.3577 )
    In
    Let Tu199.3564 : Unit =
      Let Ti726.3575 : Int =
        Let Ti725.3576 : Int =
          Int (0)
        In
        image_size.2594.(Ti725.3576)
      In
      AppClosure print_int.2575 (Ti726.3575 )
    In
    Let Tu198.3565 : Unit =
      Let Ti727.3574 : Int =
        Int (32)
      In
      AppClosure min_caml_print_char (Ti727.3574 )
    In
    Let Tu197.3566 : Unit =
      Let Ti729.3572 : Int =
        Let Ti728.3573 : Int =
          Int (1)
        In
        image_size.2594.(Ti728.3573)
      In
      AppClosure print_int.2575 (Ti729.3572 )
    In
    Let Tu196.3567 : Unit =
      Let Ti730.3571 : Int =
        Int (32)
      In
      AppClosure min_caml_print_char (Ti730.3571 )
    In
    Let Tu195.3568 : Unit =
      Let Ti731.3570 : Int =
        Int (255)
      In
      AppClosure print_int.2575 (Ti731.3570 )
    In
    Let Ti732.3569 : Int =
      Int (10)
    In
    AppClosure min_caml_print_char (Ti732.3569 )
  Float -> Unit write_rgb_element.3001 ((x.3002 : Float) )
    
    Let ix.3558 : Int =
      AppClosure min_caml_int_of_float (x.3002 )
    In
    Let elem.3559 : Int =
      Let Ti719.3560 : Int =
        Int (255)
      In
      If ix.3558 <= Ti719.3560 Then
        If 0 <= ix.3558 Then
          Var (ix.3558)
        Then
          Int (0)
      Then
        Int (255)
    In
    AppClosure print_int.2575 (elem.3559 )
  Unit -> Unit write_rgb.3003 ((Tu203.3004 : Unit) )
    (rgb.2593 : Array(Float)) 
    Let Tu208.3544 : Unit =
      Let Td711.3556 : Float =
        Let Ti710.3557 : Int =
          Int (0)
        In
        rgb.2593.(Ti710.3557)
      In
      AppClosure write_rgb_element.3001 (Td711.3556 )
    In
    Let Tu207.3545 : Unit =
      Let Ti712.3555 : Int =
        Int (32)
      In
      AppClosure min_caml_print_char (Ti712.3555 )
    In
    Let Tu206.3546 : Unit =
      Let Td714.3553 : Float =
        Let Ti713.3554 : Int =
          Int (1)
        In
        rgb.2593.(Ti713.3554)
      In
      AppClosure write_rgb_element.3001 (Td714.3553 )
    In
    Let Tu205.3547 : Unit =
      Let Ti715.3552 : Int =
        Int (32)
      In
      AppClosure min_caml_print_char (Ti715.3552 )
    In
    Let Tu204.3548 : Unit =
      Let Td717.3550 : Float =
        Let Ti716.3551 : Int =
          Int (2)
        In
        rgb.2593.(Ti716.3551)
      In
      AppClosure write_rgb_element.3001 (Td717.3550 )
    In
    Let Ti718.3549 : Int =
      Int (10)
    In
    AppClosure min_caml_print_char (Ti718.3549 )
  Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit pretrace_diffuse_rays.3005 ((pixel.3006 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) (nref.3007 : Int) )
    (diffuse_ray.2592 : Array(Float)) (dirvecs.2603 : Array(Array(Array(Float) * Array(Array(Float))))) (trace_diffuse_rays.2959 : Array(Array(Float) * Array(Array(Float))) -> Array(Float) -> Array(Float) -> Unit) 
    Let Ti709.3527 : Int =
      Int (4)
    In
    If nref.3007 <= Ti709.3527 Then
      Let sid.3528 : Int =
        AppClosure get_surface_id.2983 (pixel.3006 nref.3007 )
      In
      If 0 <= sid.3528 Then
        Let calc_diffuse.3529 : Array(Bool) =
          AppClosure p_calc_diffuse.2712 (pixel.3006 )
        In
        Let Tu211.3530 : Unit =
          Let Tb706.3533 : Bool =
            calc_diffuse.3529.(nref.3007)
          In
          If 0 = Tb706.3533 Then
            Unit
          Then
            Let group_id.3534 : Int =
              AppClosure p_group_id.2718 (pixel.3006 )
            In
            Let Tu210.3535 : Unit =
              AppClosure vecbzero.2626 (diffuse_ray.2592 )
            In
            Let nvectors.3536 : Array(Array(Float)) =
              AppClosure p_nvectors.2723 (pixel.3006 )
            In
            Let intersection_points.3537 : Array(Array(Float)) =
              AppClosure p_intersection_points.2708 (pixel.3006 )
            In
            Let Tu209.3538 : Unit =
              Let Ta702.3541 : Array(Array(Float) * Array(Array(Float))) =
                dirvecs.2603.(group_id.3534)
              In
              Let Ta703.3542 : Array(Float) =
                nvectors.3536.(nref.3007)
              In
              Let Ta704.3543 : Array(Float) =
                intersection_points.3537.(nref.3007)
              In
              AppClosure trace_diffuse_rays.2959 (Ta702.3541 Ta703.3542 Ta704.3543 )
            In
            Let ray20p.3539 : Array(Array(Float)) =
              AppClosure p_received_ray_20percent.2716 (pixel.3006 )
            In
            Let Ta705.3540 : Array(Float) =
              ray20p.3539.(nref.3007)
            In
            AppClosure veccpy.2628 (Ta705.3540 diffuse_ray.2592 )
        In
        Let Ti708.3531 : Int =
          Let Ti707.3532 : Int =
            Int (1)
          In
          nref.3007 + Ti707.3532
        In
        AppClosure pretrace_diffuse_rays.3005 (pixel.3006 Ti708.3531 )
      Then
        Unit
    Then
      Unit
  Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Int -> Float -> Float -> Float -> Unit pretrace_pixels.3008 ((line.3009 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (x.3010 : Int) (group_id.3011 : Int) (lc0.3012 : Float) (lc1.3013 : Float) (lc2.3014 : Float) )
    (image_center.2595 : Array(Int)) (pretrace_diffuse_rays.3005 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit) (ptrace_dirvec.2602 : Array(Float)) (rgb.2593 : Array(Float)) (scan_pitch.2596 : Array(Float)) (screenx_dir.2599 : Array(Float)) (startp.2597 : Array(Float)) (trace_ray.2945 : Int -> Float -> Array(Float) -> Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Float -> Unit) (viewpoint.2580 : Array(Float)) 
    If 0 <= x.3010 Then
      Let xdisp.3481 : Float =
        Let Td668.3521 : Float =
          Let Ti667.3526 : Int =
            Int (0)
          In
          scan_pitch.2596.(Ti667.3526)
        In
        Let Td672.3522 : Float =
          Let Ti671.3523 : Int =
            Let Ti670.3524 : Int =
              Let Ti669.3525 : Int =
                Int (0)
              In
              image_center.2595.(Ti669.3525)
            In
            x.3010 - Ti670.3524
          In
          AppClosure min_caml_float_of_int (Ti671.3523 )
        In
        Td668.3521 *. Td672.3522
      In
      Let Tu221.3482 : Unit =
        Let Ti673.3516 : Int =
          Int (0)
        In
        Let Td677.3517 : Float =
          Let Td676.3518 : Float =
            Let Td675.3519 : Float =
              Let Ti674.3520 : Int =
                Int (0)
              In
              screenx_dir.2599.(Ti674.3520)
            In
            xdisp.3481 *. Td675.3519
          In
          Td676.3518 +. lc0.3012
        In
        ptrace_dirvec.2602.(Ti673.3516) <- Td677.3517
      In
      Let Tu220.3483 : Unit =
        Let Ti678.3511 : Int =
          Int (1)
        In
        Let Td682.3512 : Float =
          Let Td681.3513 : Float =
            Let Td680.3514 : Float =
              Let Ti679.3515 : Int =
                Int (1)
              In
              screenx_dir.2599.(Ti679.3515)
            In
            xdisp.3481 *. Td680.3514
          In
          Td681.3513 +. lc1.3013
        In
        ptrace_dirvec.2602.(Ti678.3511) <- Td682.3512
      In
      Let Tu219.3484 : Unit =
        Let Ti683.3506 : Int =
          Int (2)
        In
        Let Td687.3507 : Float =
          Let Td686.3508 : Float =
            Let Td685.3509 : Float =
              Let Ti684.3510 : Int =
                Int (2)
              In
              screenx_dir.2599.(Ti684.3510)
            In
            xdisp.3481 *. Td685.3509
          In
          Td686.3508 +. lc2.3014
        In
        ptrace_dirvec.2602.(Ti683.3506) <- Td687.3507
      In
      Let Tu218.3485 : Unit =
        Let Ti688.3505 : Int =
          Int (0)
        In
        AppClosure vecunit_sgn.2636 (ptrace_dirvec.2602 Ti688.3505 )
      In
      Let Tu217.3486 : Unit =
        AppClosure vecbzero.2626 (rgb.2593 )
      In
      Let Tu216.3487 : Unit =
        AppClosure veccpy.2628 (startp.2597 viewpoint.2580 )
      In
      Let Tu215.3488 : Unit =
        Let Ti689.3501 : Int =
          Int (0)
        In
        Let Td690.3502 : Float =
          Float (1.000000)
        In
        Let Tt691.3503 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
          line.3009.(x.3010)
        In
        Let Td692.3504 : Float =
          Float (0.000000)
        In
        AppClosure trace_ray.2945 (Ti689.3501 Td690.3502 ptrace_dirvec.2602 Tt691.3503 Td692.3504 )
      In
      Let Tu214.3489 : Unit =
        Let Ta694.3499 : Array(Float) =
          Let Tt693.3500 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
            line.3009.(x.3010)
          In
          AppClosure p_rgb.2706 (Tt693.3500 )
        In
        AppClosure veccpy.2628 (Ta694.3499 rgb.2593 )
      In
      Let Tu213.3490 : Unit =
        Let Tt695.3498 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
          line.3009.(x.3010)
        In
        AppClosure p_set_group_id.2720 (Tt695.3498 group_id.3011 )
      In
      Let Tu212.3491 : Unit =
        Let Tt696.3496 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
          line.3009.(x.3010)
        In
        Let Ti697.3497 : Int =
          Int (0)
        In
        AppClosure pretrace_diffuse_rays.3005 (Tt696.3496 Ti697.3497 )
      In
      Let Ti699.3492 : Int =
        Let Ti698.3495 : Int =
          Int (1)
        In
        x.3010 - Ti698.3495
      In
      Let Ti701.3493 : Int =
        Let Ti700.3494 : Int =
          Int (1)
        In
        AppClosure add_mod5.2615 (group_id.3011 Ti700.3494 )
      In
      AppClosure pretrace_pixels.3008 (line.3009 Ti699.3492 Ti701.3493 lc0.3012 lc1.3013 lc2.3014 )
    Then
      Unit
  Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Int -> Unit pretrace_line.3015 ((line.3016 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (y.3017 : Int) (group_id.3018 : Int) )
    (image_center.2595 : Array(Int)) (image_size.2594 : Array(Int)) (pretrace_pixels.3008 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Int -> Float -> Float -> Float -> Unit) (scan_pitch.2596 : Array(Float)) (screeny_dir.2600 : Array(Float)) (screenz_dir.2601 : Array(Float)) 
    Let ydisp.3452 : Float =
      Let Td643.3475 : Float =
        Let Ti642.3480 : Int =
          Int (0)
        In
        scan_pitch.2596.(Ti642.3480)
      In
      Let Td647.3476 : Float =
        Let Ti646.3477 : Int =
          Let Ti645.3478 : Int =
            Let Ti644.3479 : Int =
              Int (1)
            In
            image_center.2595.(Ti644.3479)
          In
          y.3017 - Ti645.3478
        In
        AppClosure min_caml_float_of_int (Ti646.3477 )
      In
      Td643.3475 *. Td647.3476
    In
    Let lc0.3453 : Float =
      Let Td650.3470 : Float =
        Let Td649.3473 : Float =
          Let Ti648.3474 : Int =
            Int (0)
          In
          screeny_dir.2600.(Ti648.3474)
        In
        ydisp.3452 *. Td649.3473
      In
      Let Td652.3471 : Float =
        Let Ti651.3472 : Int =
          Int (0)
        In
        screenz_dir.2601.(Ti651.3472)
      In
      Td650.3470 +. Td652.3471
    In
    Let lc1.3454 : Float =
      Let Td655.3465 : Float =
        Let Td654.3468 : Float =
          Let Ti653.3469 : Int =
            Int (1)
          In
          screeny_dir.2600.(Ti653.3469)
        In
        ydisp.3452 *. Td654.3468
      In
      Let Td657.3466 : Float =
        Let Ti656.3467 : Int =
          Int (1)
        In
        screenz_dir.2601.(Ti656.3467)
      In
      Td655.3465 +. Td657.3466
    In
    Let lc2.3455 : Float =
      Let Td660.3460 : Float =
        Let Td659.3463 : Float =
          Let Ti658.3464 : Int =
            Int (2)
          In
          screeny_dir.2600.(Ti658.3464)
        In
        ydisp.3452 *. Td659.3463
      In
      Let Td662.3461 : Float =
        Let Ti661.3462 : Int =
          Int (2)
        In
        screenz_dir.2601.(Ti661.3462)
      In
      Td660.3460 +. Td662.3461
    In
    Let Ti666.3456 : Int =
      Let Ti664.3457 : Int =
        Let Ti663.3459 : Int =
          Int (0)
        In
        image_size.2594.(Ti663.3459)
      In
      Let Ti665.3458 : Int =
        Int (1)
      In
      Ti664.3457 - Ti665.3458
    In
    AppClosure pretrace_pixels.3008 (line.3016 Ti666.3456 group_id.3018 lc0.3453 lc1.3454 lc2.3455 )
  Int -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Unit scan_pixel.3019 ((x.3020 : Int) (y.3021 : Int) (prev.3022 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (cur.3023 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (next.3024 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) )
    (do_without_neighbors.2976 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit) (image_size.2594 : Array(Int)) (neighbors_exist.2979 : Int -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Bool) (rgb.2593 : Array(Float)) (try_exploit_neighbors.2992 : Int -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Unit) (write_rgb.3003 : Unit -> Unit) 
    Let Ti641.3438 : Int =
      Let Ti631.3451 : Int =
        Int (0)
      In
      image_size.2594.(Ti631.3451)
    In
    If Ti641.3438 <= x.3020 Then
      Unit
    Then
      Let Tu224.3439 : Unit =
        Let Ta633.3449 : Array(Float) =
          Let Tt632.3450 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
            cur.3023.(x.3020)
          In
          AppClosure p_rgb.2706 (Tt632.3450 )
        In
        AppClosure veccpy.2628 (rgb.2593 Ta633.3449 )
      In
      Let Tu223.3440 : Unit =
        Let Tb637.3445 : Bool =
          AppClosure neighbors_exist.2979 (x.3020 y.3021 next.3024 )
        In
        If 0 = Tb637.3445 Then
          Let Tt634.3447 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
            cur.3023.(x.3020)
          In
          Let Ti635.3448 : Int =
            Int (0)
          In
          AppClosure do_without_neighbors.2976 (Tt634.3447 Ti635.3448 )
        Then
          Let Ti636.3446 : Int =
            Int (0)
          In
          AppClosure try_exploit_neighbors.2992 (x.3020 y.3021 prev.3022 cur.3023 next.3024 Ti636.3446 )
      In
      Let Tu222.3441 : Unit =
        Let Tu638.3444 : Unit =
          Unit
        In
        AppClosure write_rgb.3003 (Tu638.3444 )
      In
      Let Ti640.3442 : Int =
        Let Ti639.3443 : Int =
          Int (1)
        In
        x.3020 + Ti639.3443
      In
      AppClosure scan_pixel.3019 (Ti640.3442 y.3021 prev.3022 cur.3023 next.3024 )
  Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Unit scan_line.3025 ((y.3026 : Int) (prev.3027 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (cur.3028 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (next.3029 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (group_id.3030 : Int) )
    (image_size.2594 : Array(Int)) (pretrace_line.3015 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Int -> Unit) (scan_pixel.3019 : Int -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Unit) 
    Let Ti630.3423 : Int =
      Let Ti618.3437 : Int =
        Int (1)
      In
      image_size.2594.(Ti618.3437)
    In
    If Ti630.3423 <= y.3026 Then
      Unit
    Then
      Let Tu226.3424 : Unit =
        Let Ti624.3431 : Int =
          Let Ti620.3434 : Int =
            Let Ti619.3436 : Int =
              Int (1)
            In
            image_size.2594.(Ti619.3436)
          In
          Let Ti621.3435 : Int =
            Int (1)
          In
          Ti620.3434 - Ti621.3435
        In
        If Ti624.3431 <= y.3026 Then
          Unit
        Then
          Let Ti623.3432 : Int =
            Let Ti622.3433 : Int =
              Int (1)
            In
            y.3026 + Ti622.3433
          In
          AppClosure pretrace_line.3015 (next.3029 Ti623.3432 group_id.3030 )
      In
      Let Tu225.3425 : Unit =
        Let Ti625.3430 : Int =
          Int (0)
        In
        AppClosure scan_pixel.3019 (Ti625.3430 y.3026 prev.3027 cur.3028 next.3029 )
      In
      Let Ti627.3426 : Int =
        Let Ti626.3429 : Int =
          Int (1)
        In
        y.3026 + Ti626.3429
      In
      Let Ti629.3427 : Int =
        Let Ti628.3428 : Int =
          Int (2)
        In
        AppClosure add_mod5.2615 (group_id.3030 Ti628.3428 )
      In
      AppClosure scan_line.3025 (Ti627.3426 cur.3028 next.3029 prev.3027 Ti629.3427 )
  Unit -> Array(Array(Float)) create_float5x3array.3031 ((Tu227.3032 : Unit) )
    
    Let vec.3398 : Array(Float) =
      Let Ti599.3421 : Int =
        Int (3)
      In
      Let Td600.3422 : Float =
        Float (0.000000)
      In
      AppClosure min_caml_create_float_array (Ti599.3421 Td600.3422 )
    In
    Let array.3399 : Array(Array(Float)) =
      Let Ti601.3420 : Int =
        Int (5)
      In
      AppClosure min_caml_create_array (Ti601.3420 vec.3398 )
    In
    Let Tu231.3400 : Unit =
      Let Ti602.3416 : Int =
        Int (1)
      In
      Let Ta605.3417 : Array(Float) =
        Let Ti603.3418 : Int =
          Int (3)
        In
        Let Td604.3419 : Float =
          Float (0.000000)
        In
        AppClosure min_caml_create_float_array (Ti603.3418 Td604.3419 )
      In
      array.3399.(Ti602.3416) <- Ta605.3417
    In
    Let Tu230.3401 : Unit =
      Let Ti606.3412 : Int =
        Int (2)
      In
      Let Ta609.3413 : Array(Float) =
        Let Ti607.3414 : Int =
          Int (3)
        In
        Let Td608.3415 : Float =
          Float (0.000000)
        In
        AppClosure min_caml_create_float_array (Ti607.3414 Td608.3415 )
      In
      array.3399.(Ti606.3412) <- Ta609.3413
    In
    Let Tu229.3402 : Unit =
      Let Ti610.3408 : Int =
        Int (3)
      In
      Let Ta613.3409 : Array(Float) =
        Let Ti611.3410 : Int =
          Int (3)
        In
        Let Td612.3411 : Float =
          Float (0.000000)
        In
        AppClosure min_caml_create_float_array (Ti611.3410 Td612.3411 )
      In
      array.3399.(Ti610.3408) <- Ta613.3409
    In
    Let Tu228.3403 : Unit =
      Let Ti614.3404 : Int =
        Int (4)
      In
      Let Ta617.3405 : Array(Float) =
        Let Ti615.3406 : Int =
          Int (3)
        In
        Let Td616.3407 : Float =
          Float (0.000000)
        In
        AppClosure min_caml_create_float_array (Ti615.3406 Td616.3407 )
      In
      array.3399.(Ti614.3404) <- Ta617.3405
    In
    Var (array.3399)
  Unit -> Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) create_pixel.3033 ((Tu232.3034 : Unit) )
    
    Let m_rgb.3378 : Array(Float) =
      Let Ti587.3396 : Int =
        Int (3)
      In
      Let Td588.3397 : Float =
        Float (0.000000)
      In
      AppClosure min_caml_create_float_array (Ti587.3396 Td588.3397 )
    In
    Let m_isect_ps.3379 : Array(Array(Float)) =
      Let Tu589.3395 : Unit =
        Unit
      In
      AppClosure create_float5x3array.3031 (Tu589.3395 )
    In
    Let m_sids.3380 : Array(Int) =
      Let Ti590.3393 : Int =
        Int (5)
      In
      Let Ti591.3394 : Int =
        Int (0)
      In
      AppClosure min_caml_create_array (Ti590.3393 Ti591.3394 )
    In
    Let m_cdif.3381 : Array(Bool) =
      Let Ti592.3391 : Int =
        Int (5)
      In
      Let Ti593.3392 : Int =
        Int (0)
      In
      AppClosure min_caml_create_array (Ti592.3391 Ti593.3392 )
    In
    Let m_engy.3382 : Array(Array(Float)) =
      Let Tu594.3390 : Unit =
        Unit
      In
      AppClosure create_float5x3array.3031 (Tu594.3390 )
    In
    Let m_r20p.3383 : Array(Array(Float)) =
      Let Tu595.3389 : Unit =
        Unit
      In
      AppClosure create_float5x3array.3031 (Tu595.3389 )
    In
    Let m_gid.3384 : Array(Int) =
      Let Ti596.3387 : Int =
        Int (1)
      In
      Let Ti597.3388 : Int =
        Int (0)
      In
      AppClosure min_caml_create_array (Ti596.3387 Ti597.3388 )
    In
    Let m_nvectors.3385 : Array(Array(Float)) =
      Let Tu598.3386 : Unit =
        Unit
      In
      AppClosure create_float5x3array.3031 (Tu598.3386 )
    In
    Tuple (m_rgb.3378, m_isect_ps.3379, m_sids.3380, m_cdif.3381, m_engy.3382, m_r20p.3383, m_gid.3384, m_nvectors.3385, )
  Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) init_line_elements.3035 ((line.3036 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (n.3037 : Int) )
    
    If 0 <= n.3037 Then
      Let Tu233.3373 : Unit =
        Let Tt584.3376 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
          Let Tu583.3377 : Unit =
            Unit
          In
          AppClosure create_pixel.3033 (Tu583.3377 )
        In
        line.3036.(n.3037) <- Tt584.3376
      In
      Let Ti586.3374 : Int =
        Let Ti585.3375 : Int =
          Int (1)
        In
        n.3037 - Ti585.3375
      In
      AppClosure init_line_elements.3035 (line.3036 Ti586.3374 )
    Then
      Var (line.3036)
  Unit -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) create_pixelline.3038 ((Tu234.3039 : Unit) )
    (image_size.2594 : Array(Int)) 
    Let line.3364 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) =
      Let Ti576.3369 : Int =
        Let Ti575.3372 : Int =
          Int (0)
        In
        image_size.2594.(Ti575.3372)
      In
      Let Tt578.3370 : Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) =
        Let Tu577.3371 : Unit =
          Unit
        In
        AppClosure create_pixel.3033 (Tu577.3371 )
      In
      AppClosure min_caml_create_array (Ti576.3369 Tt578.3370 )
    In
    Let Ti582.3365 : Int =
      Let Ti580.3366 : Int =
        Let Ti579.3368 : Int =
          Int (0)
        In
        image_size.2594.(Ti579.3368)
      In
      Let Ti581.3367 : Int =
        Int (2)
      In
      Ti580.3366 - Ti581.3367
    In
    AppClosure init_line_elements.3035 (line.3364 Ti582.3365 )
  Float -> Float tan.3040 ((x.3041 : Float) )
    (cos.2548 : Float -> Float) (sin.2546 : Float -> Float) 
    Let Td573.3362 : Float =
      AppClosure sin.2546 (x.3041 )
    In
    Let Td574.3363 : Float =
      AppClosure cos.2548 (x.3041 )
    In
    Td573.3362 /. Td574.3363
  Float -> Float -> Float adjust_position.3042 ((h.3043 : Float) (ratio.3044 : Float) )
    (atan.2540 : Float -> Float) (tan.3040 : Float -> Float) 
    Let l.3353 : Float =
      Let Td570.3359 : Float =
        Let Td568.3360 : Float =
          h.3043 *. h.3043
        In
        Let Td569.3361 : Float =
          Float (0.100000)
        In
        Td568.3360 +. Td569.3361
      In
      AppClosure min_caml_sqrt (Td570.3359 )
    In
    Let tan_h.3354 : Float =
      Let Td571.3358 : Float =
        Float (1.000000)
      In
      Td571.3358 /. l.3353
    In
    Let theta_h.3355 : Float =
      AppClosure atan.2540 (tan_h.3354 )
    In
    Let tan_m.3356 : Float =
      Let Td572.3357 : Float =
        theta_h.3355 *. ratio.3044
      In
      AppClosure tan.3040 (Td572.3357 )
    In
    tan_m.3356 *. l.3353
  Int -> Float -> Float -> Float -> Float -> Int -> Int -> Unit calc_dirvec.3045 ((icount.3046 : Int) (x.3047 : Float) (y.3048 : Float) (rx.3049 : Float) (ry.3050 : Float) (group_id.3051 : Int) (index.3052 : Int) )
    (adjust_position.3042 : Float -> Float -> Float) (dirvecs.2603 : Array(Array(Array(Float) * Array(Array(Float))))) 
    Let Ti567.3301 : Int =
      Int (5)
    In
    If Ti567.3301 <= icount.3046 Then
      Let l.3306 : Float =
        Let Td531.3348 : Float =
          Let Td529.3349 : Float =
            Let Td527.3351 : Float =
              AppClosure fsqr.2531 (x.3047 )
            In
            Let Td528.3352 : Float =
              AppClosure fsqr.2531 (y.3048 )
            In
            Td527.3351 +. Td528.3352
          In
          Let Td530.3350 : Float =
            Float (1.000000)
          In
          Td529.3349 +. Td530.3350
        In
        AppClosure min_caml_sqrt (Td531.3348 )
      In
      Let vx.3307 : Float =
        x.3047 /. l.3306
      In
      Let vy.3308 : Float =
        y.3048 /. l.3306
      In
      Let vz.3309 : Float =
        Let Td532.3347 : Float =
          Float (1.000000)
        In
        Td532.3347 /. l.3306
      In
      Let dgroup.3310 : Array(Array(Float) * Array(Array(Float))) =
        dirvecs.2603.(group_id.3051)
      In
      Let Tu239.3311 : Unit =
        Let Ta534.3345 : Array(Float) =
          Let Tt533.3346 : Array(Float) * Array(Array(Float)) =
            dgroup.3310.(index.3052)
          In
          AppClosure d_vec.2725 (Tt533.3346 )
        In
        AppClosure vecset.2618 (Ta534.3345 vx.3307 vy.3308 vz.3309 )
      In
      Let Tu238.3312 : Unit =
        Let Ta538.3340 : Array(Float) =
          Let Tt537.3342 : Array(Float) * Array(Array(Float)) =
            Let Ti536.3343 : Int =
              Let Ti535.3344 : Int =
                Int (40)
              In
              index.3052 + Ti535.3344
            In
            dgroup.3310.(Ti536.3343)
          In
          AppClosure d_vec.2725 (Tt537.3342 )
        In
        Let Td539.3341 : Float =
          AppClosure fneg.2527 (vy.3308 )
        In
        AppClosure vecset.2618 (Ta538.3340 vx.3307 vz.3309 Td539.3341 )
      In
      Let Tu237.3313 : Unit =
        Let Ta543.3334 : Array(Float) =
          Let Tt542.3337 : Array(Float) * Array(Array(Float)) =
            Let Ti541.3338 : Int =
              Let Ti540.3339 : Int =
                Int (80)
              In
              index.3052 + Ti540.3339
            In
            dgroup.3310.(Ti541.3338)
          In
          AppClosure d_vec.2725 (Tt542.3337 )
        In
        Let Td544.3335 : Float =
          AppClosure fneg.2527 (vx.3307 )
        In
        Let Td545.3336 : Float =
          AppClosure fneg.2527 (vy.3308 )
        In
        AppClosure vecset.2618 (Ta543.3334 vz.3309 Td544.3335 Td545.3336 )
      In
      Let Tu236.3314 : Unit =
        Let Ta549.3327 : Array(Float) =
          Let Tt548.3331 : Array(Float) * Array(Array(Float)) =
            Let Ti547.3332 : Int =
              Let Ti546.3333 : Int =
                Int (1)
              In
              index.3052 + Ti546.3333
            In
            dgroup.3310.(Ti547.3332)
          In
          AppClosure d_vec.2725 (Tt548.3331 )
        In
        Let Td550.3328 : Float =
          AppClosure fneg.2527 (vx.3307 )
        In
        Let Td551.3329 : Float =
          AppClosure fneg.2527 (vy.3308 )
        In
        Let Td552.3330 : Float =
          AppClosure fneg.2527 (vz.3309 )
        In
        AppClosure vecset.2618 (Ta549.3327 Td550.3328 Td551.3329 Td552.3330 )
      In
      Let Tu235.3315 : Unit =
        Let Ta556.3321 : Array(Float) =
          Let Tt555.3324 : Array(Float) * Array(Array(Float)) =
            Let Ti554.3325 : Int =
              Let Ti553.3326 : Int =
                Int (41)
              In
              index.3052 + Ti553.3326
            In
            dgroup.3310.(Ti554.3325)
          In
          AppClosure d_vec.2725 (Tt555.3324 )
        In
        Let Td557.3322 : Float =
          AppClosure fneg.2527 (vx.3307 )
        In
        Let Td558.3323 : Float =
          AppClosure fneg.2527 (vz.3309 )
        In
        AppClosure vecset.2618 (Ta556.3321 Td557.3322 Td558.3323 vy.3308 )
      In
      Let Ta562.3316 : Array(Float) =
        Let Tt561.3318 : Array(Float) * Array(Array(Float)) =
          Let Ti560.3319 : Int =
            Let Ti559.3320 : Int =
              Int (81)
            In
            index.3052 + Ti559.3320
          In
          dgroup.3310.(Ti560.3319)
        In
        AppClosure d_vec.2725 (Tt561.3318 )
      In
      Let Td563.3317 : Float =
        AppClosure fneg.2527 (vz.3309 )
      In
      AppClosure vecset.2618 (Ta562.3316 Td563.3317 vx.3307 vy.3308 )
    Then
      Let x2.3302 : Float =
        AppClosure adjust_position.3042 (y.3048 rx.3049 )
      In
      Let Ti565.3303 : Int =
        Let Ti564.3305 : Int =
          Int (1)
        In
        icount.3046 + Ti564.3305
      In
      Let Td566.3304 : Float =
        AppClosure adjust_position.3042 (x2.3302 ry.3050 )
      In
      AppClosure calc_dirvec.3045 (Ti565.3303 x2.3302 Td566.3304 rx.3049 ry.3050 group_id.3051 index.3052 )
  Int -> Float -> Int -> Int -> Unit calc_dirvecs.3053 ((col.3054 : Int) (ry.3055 : Float) (group_id.3056 : Int) (index.3057 : Int) )
    (calc_dirvec.3045 : Int -> Float -> Float -> Float -> Float -> Int -> Int -> Unit) 
    If 0 <= col.3054 Then
      Let rx.3277 : Float =
        Let Td509.3297 : Float =
          Let Td507.3299 : Float =
            AppClosure min_caml_float_of_int (col.3054 )
          In
          Let Td508.3300 : Float =
            Float (0.200000)
          In
          Td507.3299 *. Td508.3300
        In
        Let Td510.3298 : Float =
          Float (0.900000)
        In
        Td509.3297 -. Td510.3298
      In
      Let Tu241.3278 : Unit =
        Let Ti511.3294 : Int =
          Int (0)
        In
        Let Td512.3295 : Float =
          Float (0.000000)
        In
        Let Td513.3296 : Float =
          Float (0.000000)
        In
        AppClosure calc_dirvec.3045 (Ti511.3294 Td512.3295 Td513.3296 rx.3277 ry.3055 group_id.3056 index.3057 )
      In
      Let rx2.3279 : Float =
        Let Td516.3290 : Float =
          Let Td514.3292 : Float =
            AppClosure min_caml_float_of_int (col.3054 )
          In
          Let Td515.3293 : Float =
            Float (0.200000)
          In
          Td514.3292 *. Td515.3293
        In
        Let Td517.3291 : Float =
          Float (0.100000)
        In
        Td516.3290 +. Td517.3291
      In
      Let Tu240.3280 : Unit =
        Let Ti518.3285 : Int =
          Int (0)
        In
        Let Td519.3286 : Float =
          Float (0.000000)
        In
        Let Td520.3287 : Float =
          Float (0.000000)
        In
        Let Ti522.3288 : Int =
          Let Ti521.3289 : Int =
            Int (2)
          In
          index.3057 + Ti521.3289
        In
        AppClosure calc_dirvec.3045 (Ti518.3285 Td519.3286 Td520.3287 rx2.3279 ry.3055 group_id.3056 Ti522.3288 )
      In
      Let Ti524.3281 : Int =
        Let Ti523.3284 : Int =
          Int (1)
        In
        col.3054 - Ti523.3284
      In
      Let Ti526.3282 : Int =
        Let Ti525.3283 : Int =
          Int (1)
        In
        AppClosure add_mod5.2615 (group_id.3056 Ti525.3283 )
      In
      AppClosure calc_dirvecs.3053 (Ti524.3281 ry.3055 Ti526.3282 index.3057 )
    Then
      Unit
  Int -> Int -> Int -> Unit calc_dirvec_rows.3058 ((row.3059 : Int) (group_id.3060 : Int) (index.3061 : Int) )
    (calc_dirvecs.3053 : Int -> Float -> Int -> Int -> Unit) 
    If 0 <= row.3059 Then
      Let ry.3264 : Float =
        Let Td498.3273 : Float =
          Let Td496.3275 : Float =
            AppClosure min_caml_float_of_int (row.3059 )
          In
          Let Td497.3276 : Float =
            Float (0.200000)
          In
          Td496.3275 *. Td497.3276
        In
        Let Td499.3274 : Float =
          Float (0.900000)
        In
        Td498.3273 -. Td499.3274
      In
      Let Tu242.3265 : Unit =
        Let Ti500.3272 : Int =
          Int (4)
        In
        AppClosure calc_dirvecs.3053 (Ti500.3272 ry.3264 group_id.3060 index.3061 )
      In
      Let Ti502.3266 : Int =
        Let Ti501.3271 : Int =
          Int (1)
        In
        row.3059 - Ti501.3271
      In
      Let Ti504.3267 : Int =
        Let Ti503.3270 : Int =
          Int (2)
        In
        AppClosure add_mod5.2615 (group_id.3060 Ti503.3270 )
      In
      Let Ti506.3268 : Int =
        Let Ti505.3269 : Int =
          Int (4)
        In
        index.3061 + Ti505.3269
      In
      AppClosure calc_dirvec_rows.3058 (Ti502.3266 Ti504.3267 Ti506.3268 )
    Then
      Unit
  Unit -> Array(Float) * Array(Array(Float)) create_dirvec.3062 ((Tu243.3063 : Unit) )
    (n_objects.2577 : Array(Int)) 
    Let v3.3258 : Array(Float) =
      Let Ti492.3262 : Int =
        Int (3)
      In
      Let Td493.3263 : Float =
        Float (0.000000)
      In
      AppClosure min_caml_create_float_array (Ti492.3262 Td493.3263 )
    In
    Let consts.3259 : Array(Array(Float)) =
      Let Ti495.3260 : Int =
        Let Ti494.3261 : Int =
          Int (0)
        In
        n_objects.2577.(Ti494.3261)
      In
      AppClosure min_caml_create_array (Ti495.3260 v3.3258 )
    In
    Tuple (v3.3258, consts.3259, )
  Array(Array(Float) * Array(Array(Float))) -> Int -> Unit create_dirvec_elements.3064 ((d.3065 : Array(Array(Float) * Array(Array(Float)))) (index.3066 : Int) )
    (create_dirvec.3062 : Unit -> Array(Float) * Array(Array(Float))) 
    If 0 <= index.3066 Then
      Let Tu244.3253 : Unit =
        Let Tt489.3256 : Array(Float) * Array(Array(Float)) =
          Let Tu488.3257 : Unit =
            Unit
          In
          AppClosure create_dirvec.3062 (Tu488.3257 )
        In
        d.3065.(index.3066) <- Tt489.3256
      In
      Let Ti491.3254 : Int =
        Let Ti490.3255 : Int =
          Int (1)
        In
        index.3066 - Ti490.3255
      In
      AppClosure create_dirvec_elements.3064 (d.3065 Ti491.3254 )
    Then
      Unit
  Int -> Unit create_dirvecs.3067 ((index.3068 : Int) )
    (create_dirvec.3062 : Unit -> Array(Float) * Array(Array(Float))) (create_dirvec_elements.3064 : Array(Array(Float) * Array(Array(Float))) -> Int -> Unit) (dirvecs.2603 : Array(Array(Array(Float) * Array(Array(Float))))) 
    If 0 <= index.3068 Then
      Let Tu246.3243 : Unit =
        Let Ta483.3249 : Array(Array(Float) * Array(Array(Float))) =
          Let Ti480.3250 : Int =
            Int (120)
          In
          Let Tt482.3251 : Array(Float) * Array(Array(Float)) =
            Let Tu481.3252 : Unit =
              Unit
            In
            AppClosure create_dirvec.3062 (Tu481.3252 )
          In
          AppClosure min_caml_create_array (Ti480.3250 Tt482.3251 )
        In
        dirvecs.2603.(index.3068) <- Ta483.3249
      In
      Let Tu245.3244 : Unit =
        Let Ta484.3247 : Array(Array(Float) * Array(Array(Float))) =
          dirvecs.2603.(index.3068)
        In
        Let Ti485.3248 : Int =
          Int (118)
        In
        AppClosure create_dirvec_elements.3064 (Ta484.3247 Ti485.3248 )
      In
      Let Ti487.3245 : Int =
        Let Ti486.3246 : Int =
          Int (1)
        In
        index.3068 - Ti486.3246
      In
      AppClosure create_dirvecs.3067 (Ti487.3245 )
    Then
      Unit
  Array(Array(Float) * Array(Array(Float))) -> Int -> Unit init_dirvec_constants.3069 ((vecset.3070 : Array(Array(Float) * Array(Array(Float)))) (index.3071 : Int) )
    (setup_dirvec_constants.2854 : Array(Float) * Array(Array(Float)) -> Unit) 
    If 0 <= index.3071 Then
      Let Tu247.3239 : Unit =
        Let Tt477.3242 : Array(Float) * Array(Array(Float)) =
          vecset.3070.(index.3071)
        In
        AppClosure setup_dirvec_constants.2854 (Tt477.3242 )
      In
      Let Ti479.3240 : Int =
        Let Ti478.3241 : Int =
          Int (1)
        In
        index.3071 - Ti478.3241
      In
      AppClosure init_dirvec_constants.3069 (vecset.3070 Ti479.3240 )
    Then
      Unit
  Int -> Unit init_vecset_constants.3072 ((index.3073 : Int) )
    (dirvecs.2603 : Array(Array(Array(Float) * Array(Array(Float))))) (init_dirvec_constants.3069 : Array(Array(Float) * Array(Array(Float))) -> Int -> Unit) 
    If 0 <= index.3073 Then
      Let Tu248.3234 : Unit =
        Let Ta473.3237 : Array(Array(Float) * Array(Array(Float))) =
          dirvecs.2603.(index.3073)
        In
        Let Ti474.3238 : Int =
          Int (119)
        In
        AppClosure init_dirvec_constants.3069 (Ta473.3237 Ti474.3238 )
      In
      Let Ti476.3235 : Int =
        Let Ti475.3236 : Int =
          Int (1)
        In
        index.3073 - Ti475.3236
      In
      AppClosure init_vecset_constants.3072 (Ti476.3235 )
    Then
      Unit
  Unit -> Unit init_dirvecs.3074 ((Tu249.3075 : Unit) )
    (calc_dirvec_rows.3058 : Int -> Int -> Int -> Unit) (create_dirvecs.3067 : Int -> Unit) (init_vecset_constants.3072 : Int -> Unit) 
    Let Tu251.3227 : Unit =
      Let Ti468.3233 : Int =
        Int (4)
      In
      AppClosure create_dirvecs.3067 (Ti468.3233 )
    In
    Let Tu250.3228 : Unit =
      Let Ti469.3230 : Int =
        Int (9)
      In
      Let Ti470.3231 : Int =
        Int (0)
      In
      Let Ti471.3232 : Int =
        Int (0)
      In
      AppClosure calc_dirvec_rows.3058 (Ti469.3230 Ti470.3231 Ti471.3232 )
    In
    Let Ti472.3229 : Int =
      Int (4)
    In
    AppClosure init_vecset_constants.3072 (Ti472.3229 )
  Int -> Int -> Float -> Float -> Float -> Float -> Unit add_reflection.3076 ((index.3077 : Int) (surface_id.3078 : Int) (bright.3079 : Float) (v0.3080 : Float) (v1.3081 : Float) (v2.3082 : Float) )
    (create_dirvec.3062 : Unit -> Array(Float) * Array(Array(Float))) (reflections.2605 : Array(Int * Array(Float) * Array(Array(Float)) * Float)) (setup_dirvec_constants.2854 : Array(Float) * Array(Array(Float)) -> Unit) 
    Let dvec.3221 : Array(Float) * Array(Array(Float)) =
      Let Tu465.3226 : Unit =
        Unit
      In
      AppClosure create_dirvec.3062 (Tu465.3226 )
    In
    Let Tu253.3222 : Unit =
      Let Ta466.3225 : Array(Float) =
        AppClosure d_vec.2725 (dvec.3221 )
      In
      AppClosure vecset.2618 (Ta466.3225 v0.3080 v1.3081 v2.3082 )
    In
    Let Tu252.3223 : Unit =
      AppClosure setup_dirvec_constants.2854 (dvec.3221 )
    In
    Let Tt467.3224 : Int * Array(Float) * Array(Array(Float)) * Float =
      Tuple (surface_id.3078, dvec.3221, bright.3079, )
    In
    reflections.2605.(index.3077) <- Tt467.3224
  Int -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit setup_rect_reflection.3083 ((obj_id.3084 : Int) (obj.3085 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    (add_reflection.3076 : Int -> Int -> Float -> Float -> Float -> Float -> Unit) (light.2581 : Array(Float)) (n_reflections.2606 : Array(Int)) 
    Let sid.3183 : Int =
      Let Ti436.3220 : Int =
        Int (2)
      In
      obj_id.3084 << Ti436.3220
    In
    Let nr.3184 : Int =
      Let Ti437.3219 : Int =
        Int (0)
      In
      n_reflections.2606.(Ti437.3219)
    In
    Let br.3185 : Float =
      Let Td438.3217 : Float =
        Float (1.000000)
      In
      Let Td439.3218 : Float =
        AppClosure o_diffuse.2688 (obj.3085 )
      In
      Td438.3217 -. Td439.3218
    In
    Let n0.3186 : Float =
      Let Td441.3215 : Float =
        Let Ti440.3216 : Int =
          Int (0)
        In
        light.2581.(Ti440.3216)
      In
      AppClosure fneg.2527 (Td441.3215 )
    In
    Let n1.3187 : Float =
      Let Td443.3213 : Float =
        Let Ti442.3214 : Int =
          Int (1)
        In
        light.2581.(Ti442.3214)
      In
      AppClosure fneg.2527 (Td443.3213 )
    In
    Let n2.3188 : Float =
      Let Td445.3211 : Float =
        Let Ti444.3212 : Int =
          Int (2)
        In
        light.2581.(Ti444.3212)
      In
      AppClosure fneg.2527 (Td445.3211 )
    In
    Let Tu256.3189 : Unit =
      Let Ti447.3207 : Int =
        Let Ti446.3210 : Int =
          Int (1)
        In
        sid.3183 + Ti446.3210
      In
      Let Td449.3208 : Float =
        Let Ti448.3209 : Int =
          Int (0)
        In
        light.2581.(Ti448.3209)
      In
      AppClosure add_reflection.3076 (nr.3184 Ti447.3207 br.3185 Td449.3208 n1.3187 n2.3188 )
    In
    Let Tu255.3190 : Unit =
      Let Ti451.3201 : Int =
        Let Ti450.3206 : Int =
          Int (1)
        In
        nr.3184 + Ti450.3206
      In
      Let Ti453.3202 : Int =
        Let Ti452.3205 : Int =
          Int (2)
        In
        sid.3183 + Ti452.3205
      In
      Let Td455.3203 : Float =
        Let Ti454.3204 : Int =
          Int (1)
        In
        light.2581.(Ti454.3204)
      In
      AppClosure add_reflection.3076 (Ti451.3201 Ti453.3202 br.3185 n0.3186 Td455.3203 n2.3188 )
    In
    Let Tu254.3191 : Unit =
      Let Ti457.3195 : Int =
        Let Ti456.3200 : Int =
          Int (2)
        In
        nr.3184 + Ti456.3200
      In
      Let Ti459.3196 : Int =
        Let Ti458.3199 : Int =
          Int (3)
        In
        sid.3183 + Ti458.3199
      In
      Let Td461.3197 : Float =
        Let Ti460.3198 : Int =
          Int (2)
        In
        light.2581.(Ti460.3198)
      In
      AppClosure add_reflection.3076 (Ti457.3195 Ti459.3196 br.3185 n0.3186 n1.3187 Td461.3197 )
    In
    Let Ti462.3192 : Int =
      Int (0)
    In
    Let Ti464.3193 : Int =
      Let Ti463.3194 : Int =
        Int (3)
      In
      nr.3184 + Ti463.3194
    In
    n_reflections.2606.(Ti462.3192) <- Ti464.3193
  Int -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit setup_surface_reflection.3086 ((obj_id.3087 : Int) (obj.3088 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) )
    (add_reflection.3076 : Int -> Int -> Float -> Float -> Float -> Float -> Unit) (light.2581 : Array(Float)) (n_reflections.2606 : Array(Int)) 
    Let sid.3147 : Int =
      Let Ti406.3180 : Int =
        Let Ti405.3182 : Int =
          Int (2)
        In
        obj_id.3087 << Ti405.3182
      In
      Let Ti407.3181 : Int =
        Int (1)
      In
      Ti406.3180 + Ti407.3181
    In
    Let nr.3148 : Int =
      Let Ti408.3179 : Int =
        Int (0)
      In
      n_reflections.2606.(Ti408.3179)
    In
    Let br.3149 : Float =
      Let Td409.3177 : Float =
        Float (1.000000)
      In
      Let Td410.3178 : Float =
        AppClosure o_diffuse.2688 (obj.3088 )
      In
      Td409.3177 -. Td410.3178
    In
    Let p.3150 : Float =
      Let Ta411.3176 : Array(Float) =
        AppClosure o_param_abc.2680 (obj.3088 )
      In
      AppClosure veciprod.2639 (light.2581 Ta411.3176 )
    In
    Let Tu257.3151 : Unit =
      Let Td418.3155 : Float =
        Let Td415.3170 : Float =
          Let Td414.3173 : Float =
            Let Td412.3174 : Float =
              Float (2.000000)
            In
            Let Td413.3175 : Float =
              AppClosure o_param_a.2674 (obj.3088 )
            In
            Td412.3174 *. Td413.3175
          In
          Td414.3173 *. p.3150
        In
        Let Td417.3171 : Float =
          Let Ti416.3172 : Int =
            Int (0)
          In
          light.2581.(Ti416.3172)
        In
        Td415.3170 -. Td417.3171
      In
      Let Td425.3156 : Float =
        Let Td422.3164 : Float =
          Let Td421.3167 : Float =
            Let Td419.3168 : Float =
              Float (2.000000)
            In
            Let Td420.3169 : Float =
              AppClosure o_param_b.2676 (obj.3088 )
            In
            Td419.3168 *. Td420.3169
          In
          Td421.3167 *. p.3150
        In
        Let Td424.3165 : Float =
          Let Ti423.3166 : Int =
            Int (1)
          In
          light.2581.(Ti423.3166)
        In
        Td422.3164 -. Td424.3165
      In
      Let Td432.3157 : Float =
        Let Td429.3158 : Float =
          Let Td428.3161 : Float =
            Let Td426.3162 : Float =
              Float (2.000000)
            In
            Let Td427.3163 : Float =
              AppClosure o_param_c.2678 (obj.3088 )
            In
            Td426.3162 *. Td427.3163
          In
          Td428.3161 *. p.3150
        In
        Let Td431.3159 : Float =
          Let Ti430.3160 : Int =
            Int (2)
          In
          light.2581.(Ti430.3160)
        In
        Td429.3158 -. Td431.3159
      In
      AppClosure add_reflection.3076 (nr.3148 sid.3147 br.3149 Td418.3155 Td425.3156 Td432.3157 )
    In
    Let Ti433.3152 : Int =
      Int (0)
    In
    Let Ti435.3153 : Int =
      Let Ti434.3154 : Int =
        Int (1)
      In
      nr.3148 + Ti434.3154
    In
    n_reflections.2606.(Ti433.3152) <- Ti435.3153
  Int -> Unit setup_reflections.3089 ((obj_id.3090 : Int) )
    (objects.2578 : Array(Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float))) (setup_rect_reflection.3083 : Int -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit) (setup_surface_reflection.3086 : Int -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit) 
    If 0 <= obj_id.3090 Then
      Let obj.3139 : Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
        objects.2578.(obj_id.3090)
      In
      Let Ti403.3140 : Int =
        AppClosure o_reflectiontype.2668 (obj.3139 )
      In
      Let Ti404.3141 : Int =
        Int (2)
      In
      If Ti403.3140 = Ti404.3141 Then
        Let Tb402.3142 : Bool =
          Let Td399.3145 : Float =
            AppClosure o_diffuse.2688 (obj.3139 )
          In
          Let Td400.3146 : Float =
            Float (1.000000)
          In
          AppClosure fless.2511 (Td399.3145 Td400.3146 )
        In
        If 0 = Tb402.3142 Then
          Unit
        Then
          Let m_shape.3143 : Int =
            AppClosure o_form.2666 (obj.3139 )
          In
          If 1 = m_shape.3143 Then
            AppClosure setup_rect_reflection.3083 (obj_id.3090 obj.3139 )
          Then
            Let Ti401.3144 : Int =
              Int (2)
            In
            If m_shape.3143 = Ti401.3144 Then
              AppClosure setup_surface_reflection.3086 (obj_id.3090 obj.3139 )
            Then
              Unit
      Then
        Unit
    Then
      Unit
  Int -> Int -> Unit rt.3091 ((size_x.3092 : Int) (size_y.3093 : Int) )
    (create_pixelline.3038 : Unit -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))) (image_center.2595 : Array(Int)) (image_size.2594 : Array(Int)) (init_dirvecs.3074 : Unit -> Unit) (light.2581 : Array(Float)) (light_dirvec.2604 : Array(Float) * Array(Array(Float))) (n_objects.2577 : Array(Int)) (pretrace_line.3015 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Int -> Unit) (read_parameter.2756 : Unit -> Unit) (scan_line.3025 : Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Unit) (scan_pitch.2596 : Array(Float)) (setup_dirvec_constants.2854 : Array(Float) * Array(Array(Float)) -> Unit) (setup_reflections.3089 : Int -> Unit) (write_ppm_header.2999 : Unit -> Unit) 
    Let Tu269.3097 : Unit =
      Let Ti372.3138 : Int =
        Int (0)
      In
      image_size.2594.(Ti372.3138) <- size_x.3092
    In
    Let Tu268.3098 : Unit =
      Let Ti373.3137 : Int =
        Int (1)
      In
      image_size.2594.(Ti373.3137) <- size_y.3093
    In
    Let Tu267.3099 : Unit =
      Let Ti374.3134 : Int =
        Int (0)
      In
      Let Ti376.3135 : Int =
        Let Ti375.3136 : Int =
          Int (-1)
        In
        size_x.3092 << Ti375.3136
      In
      image_center.2595.(Ti374.3134) <- Ti376.3135
    In
    Let Tu266.3100 : Unit =
      Let Ti377.3131 : Int =
        Int (1)
      In
      Let Ti379.3132 : Int =
        Let Ti378.3133 : Int =
          Int (-1)
        In
        size_y.3093 << Ti378.3133
      In
      image_center.2595.(Ti377.3131) <- Ti379.3132
    In
    Let Tu265.3101 : Unit =
      Let Ti380.3127 : Int =
        Int (0)
      In
      Let Td383.3128 : Float =
        Let Td381.3129 : Float =
          Float (128.000000)
        In
        Let Td382.3130 : Float =
          AppClosure min_caml_float_of_int (size_x.3092 )
        In
        Td381.3129 /. Td382.3130
      In
      scan_pitch.2596.(Ti380.3127) <- Td383.3128
    In
    Let prev.3102 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) =
      Let Tu384.3126 : Unit =
        Unit
      In
      AppClosure create_pixelline.3038 (Tu384.3126 )
    In
    Let cur.3103 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) =
      Let Tu385.3125 : Unit =
        Unit
      In
      AppClosure create_pixelline.3038 (Tu385.3125 )
    In
    Let next.3104 : Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) =
      Let Tu386.3124 : Unit =
        Unit
      In
      AppClosure create_pixelline.3038 (Tu386.3124 )
    In
    Let Tu264.3105 : Unit =
      Let Tu387.3123 : Unit =
        Unit
      In
      AppClosure read_parameter.2756 (Tu387.3123 )
    In
    Let Tu263.3106 : Unit =
      Let Tu388.3122 : Unit =
        Unit
      In
      AppClosure write_ppm_header.2999 (Tu388.3122 )
    In
    Let Tu262.3107 : Unit =
      Let Tu389.3121 : Unit =
        Unit
      In
      AppClosure init_dirvecs.3074 (Tu389.3121 )
    In
    Let Tu261.3108 : Unit =
      Let Ta390.3120 : Array(Float) =
        AppClosure d_vec.2725 (light_dirvec.2604 )
      In
      AppClosure veccpy.2628 (Ta390.3120 light.2581 )
    In
    Let Tu260.3109 : Unit =
      AppClosure setup_dirvec_constants.2854 (light_dirvec.2604 )
    In
    Let Tu259.3110 : Unit =
      Let Ti394.3116 : Int =
        Let Ti392.3117 : Int =
          Let Ti391.3119 : Int =
            Int (0)
          In
          n_objects.2577.(Ti391.3119)
        In
        Let Ti393.3118 : Int =
          Int (1)
        In
        Ti392.3117 - Ti393.3118
      In
      AppClosure setup_reflections.3089 (Ti394.3116 )
    In
    Let Tu258.3111 : Unit =
      Let Ti395.3114 : Int =
        Int (0)
      In
      Let Ti396.3115 : Int =
        Int (0)
      In
      AppClosure pretrace_line.3015 (cur.3103 Ti395.3114 Ti396.3115 )
    In
    Let Ti397.3112 : Int =
      Int (0)
    In
    Let Ti398.3113 : Int =
      Int (2)
    In
    AppClosure scan_line.3025 (Ti397.3112 prev.3102 cur.3103 next.3104 Ti398.3113 )
  Let pi.2533 : Float =
    Float (3.141593)
  In
  Let pi2.2534 : Float =
    Let Td271.6246 : Float =
      Float (2.000000)
    In
    pi.2533 *. Td271.6246
  In
  Let pih.2535 : Float =
    Let Td272.6245 : Float =
      Float (0.500000)
    In
    pi.2533 *. Td272.6245
  In
  Fun atan.2540 Float -> Float| atan.2540 (pi.2533 ) =
    Fun sin_sub.2544 Float -> Float| sin_sub.2544 (pi2.2534 ) =
      Fun sin.2546 Float -> Float| sin.2546 (pi.2533 pi2.2534 pih.2535 sin_sub.2544 ) =
        Fun cos.2548 Float -> Float| cos.2548 (sin.2546 ) =
          Let read_int_ans.2552 : Array(Int) =
            Let Ti273.6172 : Int =
              Int (1)
            In
            Let Ti274.6173 : Int =
              Int (0)
            In
            AppClosure min_caml_create_array (Ti273.6172 Ti274.6173 )
          In
          Let read_int_s.2553 : Array(Int) =
            Let Ti275.6170 : Int =
              Int (1)
            In
            Let Ti276.6171 : Int =
              Int (0)
            In
            AppClosure min_caml_create_array (Ti275.6170 Ti276.6171 )
          In
          Fun read_int_token.2554 Bool -> Int -> Int| read_int_token.2554 (read_int_ans.2552 read_int_s.2553 ) =
            Fun read_int.2557 Unit -> Int| read_int.2557 (read_int_ans.2552 read_int_s.2553 read_int_token.2554 ) =
              Let read_float_i.2559 : Array(Int) =
                Let Ti277.6131 : Int =
                  Int (1)
                In
                Let Ti278.6132 : Int =
                  Int (0)
                In
                AppClosure min_caml_create_array (Ti277.6131 Ti278.6132 )
              In
              Let read_float_f.2560 : Array(Int) =
                Let Ti279.6129 : Int =
                  Int (1)
                In
                Let Ti280.6130 : Int =
                  Int (0)
                In
                AppClosure min_caml_create_array (Ti279.6129 Ti280.6130 )
              In
              Let read_float_exp.2561 : Array(Int) =
                Let Ti281.6127 : Int =
                  Int (1)
                In
                Let Ti282.6128 : Int =
                  Int (1)
                In
                AppClosure min_caml_create_array (Ti281.6127 Ti282.6128 )
              In
              Let read_float_s.2562 : Array(Int) =
                Let Ti283.6125 : Int =
                  Int (1)
                In
                Let Ti284.6126 : Int =
                  Int (0)
                In
                AppClosure min_caml_create_array (Ti283.6125 Ti284.6126 )
              In
              Fun read_float_token1.2563 Bool -> Int -> Int| read_float_token1.2563 (read_float_i.2559 read_float_s.2562 ) =
                Fun read_float_token2.2566 Bool -> Unit| read_float_token2.2566 (read_float_exp.2561 read_float_f.2560 ) =
                  Fun read_float.2568 Unit -> Float| read_float.2568 (read_float_exp.2561 read_float_f.2560 read_float_i.2559 read_float_s.2562 read_float_token1.2563 read_float_token2.2566 ) =
                    Let n_objects.2577 : Array(Int) =
                      Let Ti285.5996 : Int =
                        Int (1)
                      In
                      Let Ti286.5997 : Int =
                        Int (0)
                      In
                      AppClosure min_caml_create_array (Ti285.5996 Ti286.5997 )
                    In
                    Let objects.2578 : Array(Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float)) =
                      Let dummy.5986 : Array(Float) =
                        Let Ti287.5994 : Int =
                          Int (0)
                        In
                        Let Td288.5995 : Float =
                          Float (0.000000)
                        In
                        AppClosure min_caml_create_float_array (Ti287.5994 Td288.5995 )
                      In
                      Let Ti289.5987 : Int =
                        Int (60)
                      In
                      Let Tt295.5988 : Int * Int * Int * Int * Array(Float) * Array(Float) * Int * Array(Float) * Array(Float) * Array(Float) * Array(Float) =
                        Let Ti290.5989 : Int =
                          Int (0)
                        In
                        Let Ti291.5990 : Int =
                          Int (0)
                        In
                        Let Ti292.5991 : Int =
                          Int (0)
                        In
                        Let Ti293.5992 : Int =
                          Int (0)
                        In
                        Let Ti294.5993 : Int =
                          Int (0)
                        In
                        Tuple (Ti290.5989, Ti291.5990, Ti292.5991, Ti293.5992, dummy.5986, dummy.5986, Ti294.5993, dummy.5986, dummy.5986, dummy.5986, dummy.5986, )
                      In
                      AppClosure min_caml_create_array (Ti289.5987 Tt295.5988 )
                    In
                    Let screen.2579 : Array(Float) =
                      Let Ti296.5984 : Int =
                        Int (3)
                      In
                      Let Td297.5985 : Float =
                        Float (0.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti296.5984 Td297.5985 )
                    In
                    Let viewpoint.2580 : Array(Float) =
                      Let Ti298.5982 : Int =
                        Int (3)
                      In
                      Let Td299.5983 : Float =
                        Float (0.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti298.5982 Td299.5983 )
                    In
                    Let light.2581 : Array(Float) =
                      Let Ti300.5980 : Int =
                        Int (3)
                      In
                      Let Td301.5981 : Float =
                        Float (0.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti300.5980 Td301.5981 )
                    In
                    Let beam.2582 : Array(Float) =
                      Let Ti302.5978 : Int =
                        Int (1)
                      In
                      Let Td303.5979 : Float =
                        Float (255.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti302.5978 Td303.5979 )
                    In
                    Let and_net.2583 : Array(Array(Int)) =
                      Let Ti304.5973 : Int =
                        Int (50)
                      In
                      Let Ta308.5974 : Array(Int) =
                        Let Ti305.5975 : Int =
                          Int (1)
                        In
                        Let Ti307.5976 : Int =
                          Let Ti306.5977 : Int =
                            Int (1)
                          In
                          Neg (Ti306.5977)
                        In
                        AppClosure min_caml_create_array (Ti305.5975 Ti307.5976 )
                      In
                      AppClosure min_caml_create_array (Ti304.5973 Ta308.5974 )
                    In
                    Let or_net.2584 : Array(Array(Array(Int))) =
                      Let Ti309.5968 : Int =
                        Int (1)
                      In
                      Let Ta313.5969 : Array(Array(Int)) =
                        Let Ti310.5970 : Int =
                          Int (1)
                        In
                        Let Ta312.5971 : Array(Int) =
                          Let Ti311.5972 : Int =
                            Int (0)
                          In
                          and_net.2583.(Ti311.5972)
                        In
                        AppClosure min_caml_create_array (Ti310.5970 Ta312.5971 )
                      In
                      AppClosure min_caml_create_array (Ti309.5968 Ta313.5969 )
                    In
                    Let solver_dist.2585 : Array(Float) =
                      Let Ti314.5966 : Int =
                        Int (1)
                      In
                      Let Td315.5967 : Float =
                        Float (0.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti314.5966 Td315.5967 )
                    In
                    Let intsec_rectside.2586 : Array(Int) =
                      Let Ti316.5964 : Int =
                        Int (1)
                      In
                      Let Ti317.5965 : Int =
                        Int (0)
                      In
                      AppClosure min_caml_create_array (Ti316.5964 Ti317.5965 )
                    In
                    Let tmin.2587 : Array(Float) =
                      Let Ti318.5962 : Int =
                        Int (1)
                      In
                      Let Td319.5963 : Float =
                        Float (1000000000.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti318.5962 Td319.5963 )
                    In
                    Let intersection_point.2588 : Array(Float) =
                      Let Ti320.5960 : Int =
                        Int (3)
                      In
                      Let Td321.5961 : Float =
                        Float (0.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti320.5960 Td321.5961 )
                    In
                    Let intersected_object_id.2589 : Array(Int) =
                      Let Ti322.5958 : Int =
                        Int (1)
                      In
                      Let Ti323.5959 : Int =
                        Int (0)
                      In
                      AppClosure min_caml_create_array (Ti322.5958 Ti323.5959 )
                    In
                    Let nvector.2590 : Array(Float) =
                      Let Ti324.5956 : Int =
                        Int (3)
                      In
                      Let Td325.5957 : Float =
                        Float (0.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti324.5956 Td325.5957 )
                    In
                    Let texture_color.2591 : Array(Float) =
                      Let Ti326.5954 : Int =
                        Int (3)
                      In
                      Let Td327.5955 : Float =
                        Float (0.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti326.5954 Td327.5955 )
                    In
                    Let diffuse_ray.2592 : Array(Float) =
                      Let Ti328.5952 : Int =
                        Int (3)
                      In
                      Let Td329.5953 : Float =
                        Float (0.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti328.5952 Td329.5953 )
                    In
                    Let rgb.2593 : Array(Float) =
                      Let Ti330.5950 : Int =
                        Int (3)
                      In
                      Let Td331.5951 : Float =
                        Float (0.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti330.5950 Td331.5951 )
                    In
                    Let image_size.2594 : Array(Int) =
                      Let Ti332.5948 : Int =
                        Int (2)
                      In
                      Let Ti333.5949 : Int =
                        Int (0)
                      In
                      AppClosure min_caml_create_array (Ti332.5948 Ti333.5949 )
                    In
                    Let image_center.2595 : Array(Int) =
                      Let Ti334.5946 : Int =
                        Int (2)
                      In
                      Let Ti335.5947 : Int =
                        Int (0)
                      In
                      AppClosure min_caml_create_array (Ti334.5946 Ti335.5947 )
                    In
                    Let scan_pitch.2596 : Array(Float) =
                      Let Ti336.5944 : Int =
                        Int (1)
                      In
                      Let Td337.5945 : Float =
                        Float (0.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti336.5944 Td337.5945 )
                    In
                    Let startp.2597 : Array(Float) =
                      Let Ti338.5942 : Int =
                        Int (3)
                      In
                      Let Td339.5943 : Float =
                        Float (0.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti338.5942 Td339.5943 )
                    In
                    Let startp_fast.2598 : Array(Float) =
                      Let Ti340.5940 : Int =
                        Int (3)
                      In
                      Let Td341.5941 : Float =
                        Float (0.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti340.5940 Td341.5941 )
                    In
                    Let screenx_dir.2599 : Array(Float) =
                      Let Ti342.5938 : Int =
                        Int (3)
                      In
                      Let Td343.5939 : Float =
                        Float (0.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti342.5938 Td343.5939 )
                    In
                    Let screeny_dir.2600 : Array(Float) =
                      Let Ti344.5936 : Int =
                        Int (3)
                      In
                      Let Td345.5937 : Float =
                        Float (0.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti344.5936 Td345.5937 )
                    In
                    Let screenz_dir.2601 : Array(Float) =
                      Let Ti346.5934 : Int =
                        Int (3)
                      In
                      Let Td347.5935 : Float =
                        Float (0.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti346.5934 Td347.5935 )
                    In
                    Let ptrace_dirvec.2602 : Array(Float) =
                      Let Ti348.5932 : Int =
                        Int (3)
                      In
                      Let Td349.5933 : Float =
                        Float (0.000000)
                      In
                      AppClosure min_caml_create_float_array (Ti348.5932 Td349.5933 )
                    In
                    Let dirvecs.2603 : Array(Array(Array(Float) * Array(Array(Float)))) =
                      Let dummyf.5923 : Array(Float) =
                        Let Ti350.5930 : Int =
                          Int (0)
                        In
                        Let Td351.5931 : Float =
                          Float (0.000000)
                        In
                        AppClosure min_caml_create_float_array (Ti350.5930 Td351.5931 )
                      In
                      Let dummyff.5924 : Array(Array(Float)) =
                        Let Ti352.5929 : Int =
                          Int (0)
                        In
                        AppClosure min_caml_create_array (Ti352.5929 dummyf.5923 )
                      In
                      Let dummy_vs.5925 : Array(Array(Float) * Array(Array(Float))) =
                        Let Ti353.5927 : Int =
                          Int (0)
                        In
                        Let Tt354.5928 : Array(Float) * Array(Array(Float)) =
                          Tuple (dummyf.5923, dummyff.5924, )
                        In
                        AppClosure min_caml_create_array (Ti353.5927 Tt354.5928 )
                      In
                      Let Ti355.5926 : Int =
                        Int (5)
                      In
                      AppClosure min_caml_create_array (Ti355.5926 dummy_vs.5925 )
                    In
                    Let light_dirvec.2604 : Array(Float) * Array(Array(Float)) =
                      Let dummyf2.5915 : Array(Float) =
                        Let Ti356.5921 : Int =
                          Int (0)
                        In
                        Let Td357.5922 : Float =
                          Float (0.000000)
                        In
                        AppClosure min_caml_create_float_array (Ti356.5921 Td357.5922 )
                      In
                      Let v3.5916 : Array(Float) =
                        Let Ti358.5919 : Int =
                          Int (3)
                        In
                        Let Td359.5920 : Float =
                          Float (0.000000)
                        In
                        AppClosure min_caml_create_float_array (Ti358.5919 Td359.5920 )
                      In
                      Let consts.5917 : Array(Array(Float)) =
                        Let Ti360.5918 : Int =
                          Int (60)
                        In
                        AppClosure min_caml_create_array (Ti360.5918 dummyf2.5915 )
                      In
                      Tuple (v3.5916, consts.5917, )
                    In
                    Let reflections.2605 : Array(Int * Array(Float) * Array(Array(Float)) * Float) =
                      Let dummyf3.5905 : Array(Float) =
                        Let Ti361.5913 : Int =
                          Int (0)
                        In
                        Let Td362.5914 : Float =
                          Float (0.000000)
                        In
                        AppClosure min_caml_create_float_array (Ti361.5913 Td362.5914 )
                      In
                      Let dummyff3.5906 : Array(Array(Float)) =
                        Let Ti363.5912 : Int =
                          Int (0)
                        In
                        AppClosure min_caml_create_array (Ti363.5912 dummyf3.5905 )
                      In
                      Let dummydv.5907 : Array(Float) * Array(Array(Float)) =
                        Tuple (dummyf3.5905, dummyff3.5906, )
                      In
                      Let Ti364.5908 : Int =
                        Int (180)
                      In
                      Let Tt367.5909 : Int * Array(Float) * Array(Array(Float)) * Float =
                        Let Ti365.5910 : Int =
                          Int (0)
                        In
                        Let Td366.5911 : Float =
                          Float (0.000000)
                        In
                        Tuple (Ti365.5910, dummydv.5907, Td366.5911, )
                      In
                      AppClosure min_caml_create_array (Ti364.5908 Tt367.5909 )
                    In
                    Let n_reflections.2606 : Array(Int) =
                      Let Ti368.5903 : Int =
                        Int (1)
                      In
                      Let Ti369.5904 : Int =
                        Int (0)
                      In
                      AppClosure min_caml_create_array (Ti368.5903 Ti369.5904 )
                    In
                    Fun read_screen_settings.2737 Unit -> Unit| read_screen_settings.2737 (cos.2548 read_float.2568 screen.2579 screenx_dir.2599 screeny_dir.2600 screenz_dir.2601 sin.2546 viewpoint.2580 ) =
                      Fun read_light.2739 Unit -> Unit| read_light.2739 (beam.2582 cos.2548 light.2581 read_float.2568 read_int.2557 sin.2546 ) =
                        Fun rotate_quadratic_matrix.2741 Array(Float) -> Array(Float) -> Unit| rotate_quadratic_matrix.2741 (cos.2548 sin.2546 ) =
                          Fun read_nth_object.2744 Int -> Bool| read_nth_object.2744 (objects.2578 read_float.2568 read_int.2557 rotate_quadratic_matrix.2741 ) =
                            Fun read_object.2746 Int -> Unit| read_object.2746 (n_objects.2577 read_nth_object.2744 ) =
                              Fun read_all_object.2748 Unit -> Unit| read_all_object.2748 (read_object.2746 ) =
                                Fun read_net_item.2750 Int -> Array(Int)| read_net_item.2750 (read_int.2557 ) =
                                  Fun read_or_network.2752 Int -> Array(Array(Int))| read_or_network.2752 (read_net_item.2750 ) =
                                    Fun read_and_network.2754 Int -> Unit| read_and_network.2754 (and_net.2583 read_net_item.2750 ) =
                                      Fun read_parameter.2756 Unit -> Unit| read_parameter.2756 (or_net.2584 read_all_object.2748 read_and_network.2754 read_light.2739 read_or_network.2752 read_screen_settings.2737 ) =
                                        Fun solver_rect_surface.2758 Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int -> Int -> Int -> Bool| solver_rect_surface.2758 (solver_dist.2585 ) =
                                          Fun solver_rect.2767 Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int| solver_rect.2767 (solver_rect_surface.2758 ) =
                                            Fun solver_surface.2773 Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int| solver_surface.2773 (solver_dist.2585 ) =
                                              Fun solver_second.2792 Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int| solver_second.2792 (solver_dist.2585 ) =
                                                Fun solver.2798 Int -> Array(Float) -> Array(Float) -> Int| solver.2798 (objects.2578 solver_rect.2767 solver_second.2792 solver_surface.2773 ) =
                                                  Fun solver_rect_fast.2802 Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int| solver_rect_fast.2802 (solver_dist.2585 ) =
                                                    Fun solver_surface_fast.2809 Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int| solver_surface_fast.2809 (solver_dist.2585 ) =
                                                      Fun solver_second_fast.2815 Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int| solver_second_fast.2815 (solver_dist.2585 ) =
                                                        Fun solver_fast.2821 Int -> Array(Float) * Array(Array(Float)) -> Array(Float) -> Int| solver_fast.2821 (objects.2578 solver_rect_fast.2802 solver_second_fast.2815 solver_surface_fast.2809 ) =
                                                          Fun solver_surface_fast2.2825 Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int| solver_surface_fast2.2825 (solver_dist.2585 ) =
                                                            Fun solver_second_fast2.2832 Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Array(Float) -> Float -> Float -> Float -> Int| solver_second_fast2.2832 (solver_dist.2585 ) =
                                                              Fun solver_fast2.2839 Int -> Array(Float) * Array(Array(Float)) -> Int| solver_fast2.2839 (objects.2578 solver_rect_fast.2802 solver_second_fast2.2832 solver_surface_fast2.2825 ) =
                                                                Fun iter_setup_dirvec_constants.2851 Array(Float) * Array(Array(Float)) -> Int -> Unit| iter_setup_dirvec_constants.2851 (objects.2578 ) =
                                                                  Fun setup_dirvec_constants.2854 Array(Float) * Array(Array(Float)) -> Unit| setup_dirvec_constants.2854 (iter_setup_dirvec_constants.2851 n_objects.2577 ) =
                                                                    Fun setup_startp_constants.2856 Array(Float) -> Int -> Unit| setup_startp_constants.2856 (objects.2578 ) =
                                                                      Fun setup_startp.2859 Array(Float) -> Unit| setup_startp.2859 (n_objects.2577 setup_startp_constants.2856 startp_fast.2598 ) =
                                                                        Fun check_all_inside.2881 Int -> Array(Int) -> Float -> Float -> Float -> Bool| check_all_inside.2881 (objects.2578 ) =
                                                                          Fun shadow_check_and_group.2887 Int -> Array(Int) -> Bool| shadow_check_and_group.2887 (check_all_inside.2881 intersection_point.2588 light.2581 light_dirvec.2604 objects.2578 solver_dist.2585 solver_fast.2821 ) =
                                                                            Fun shadow_check_one_or_group.2890 Int -> Array(Int) -> Bool| shadow_check_one_or_group.2890 (and_net.2583 shadow_check_and_group.2887 ) =
                                                                              Fun shadow_check_one_or_matrix.2893 Int -> Array(Array(Int)) -> Bool| shadow_check_one_or_matrix.2893 (intersection_point.2588 light_dirvec.2604 shadow_check_one_or_group.2890 solver_dist.2585 solver_fast.2821 ) =
                                                                                Fun solve_each_element.2896 Int -> Array(Int) -> Array(Float) -> Unit| solve_each_element.2896 (check_all_inside.2881 intersected_object_id.2589 intersection_point.2588 intsec_rectside.2586 objects.2578 solver.2798 solver_dist.2585 startp.2597 tmin.2587 ) =
                                                                                  Fun solve_one_or_network.2900 Int -> Array(Int) -> Array(Float) -> Unit| solve_one_or_network.2900 (and_net.2583 solve_each_element.2896 ) =
                                                                                    Fun trace_or_matrix.2904 Int -> Array(Array(Int)) -> Array(Float) -> Unit| trace_or_matrix.2904 (solve_one_or_network.2900 solver.2798 solver_dist.2585 startp.2597 tmin.2587 ) =
                                                                                      Fun judge_intersection.2908 Array(Float) -> Bool| judge_intersection.2908 (or_net.2584 tmin.2587 trace_or_matrix.2904 ) =
                                                                                        Fun solve_each_element_fast.2910 Int -> Array(Int) -> Array(Float) * Array(Array(Float)) -> Unit| solve_each_element_fast.2910 (check_all_inside.2881 intersected_object_id.2589 intersection_point.2588 intsec_rectside.2586 objects.2578 solver_dist.2585 solver_fast2.2839 startp_fast.2598 tmin.2587 ) =
                                                                                          Fun solve_one_or_network_fast.2914 Int -> Array(Int) -> Array(Float) * Array(Array(Float)) -> Unit| solve_one_or_network_fast.2914 (and_net.2583 solve_each_element_fast.2910 ) =
                                                                                            Fun trace_or_matrix_fast.2918 Int -> Array(Array(Int)) -> Array(Float) * Array(Array(Float)) -> Unit| trace_or_matrix_fast.2918 (solve_one_or_network_fast.2914 solver_dist.2585 solver_fast2.2839 tmin.2587 ) =
                                                                                              Fun judge_intersection_fast.2922 Array(Float) * Array(Array(Float)) -> Bool| judge_intersection_fast.2922 (or_net.2584 tmin.2587 trace_or_matrix_fast.2918 ) =
                                                                                                Fun get_nvector_rect.2924 Array(Float) -> Unit| get_nvector_rect.2924 (intsec_rectside.2586 nvector.2590 ) =
                                                                                                  Fun get_nvector_plane.2926 Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit| get_nvector_plane.2926 (nvector.2590 ) =
                                                                                                    Fun get_nvector_second.2928 Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit| get_nvector_second.2928 (intersection_point.2588 nvector.2590 ) =
                                                                                                      Fun get_nvector.2930 Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Unit| get_nvector.2930 (get_nvector_plane.2926 get_nvector_rect.2924 get_nvector_second.2928 ) =
                                                                                                        Fun utexture.2933 Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Array(Float) -> Unit| utexture.2933 (atan.2540 cos.2548 sin.2546 texture_color.2591 ) =
                                                                                                          Fun add_light.2936 Float -> Float -> Float -> Unit| add_light.2936 (rgb.2593 texture_color.2591 ) =
                                                                                                            Fun trace_reflections.2940 Int -> Float -> Float -> Array(Float) -> Unit| trace_reflections.2940 (add_light.2936 intersected_object_id.2589 intsec_rectside.2586 judge_intersection_fast.2922 nvector.2590 or_net.2584 reflections.2605 shadow_check_one_or_matrix.2893 ) =
                                                                                                              Fun trace_ray.2945 Int -> Float -> Array(Float) -> Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Float -> Unit| trace_ray.2945 (add_light.2936 beam.2582 get_nvector.2930 intersected_object_id.2589 intersection_point.2588 intsec_rectside.2586 judge_intersection.2908 light.2581 n_reflections.2606 nvector.2590 objects.2578 or_net.2584 rgb.2593 setup_startp.2859 shadow_check_one_or_matrix.2893 startp.2597 texture_color.2591 tmin.2587 trace_reflections.2940 utexture.2933 ) =
                                                                                                                Fun trace_diffuse_ray.2951 Array(Float) * Array(Array(Float)) -> Float -> Unit| trace_diffuse_ray.2951 (diffuse_ray.2592 get_nvector.2930 intersected_object_id.2589 intersection_point.2588 judge_intersection_fast.2922 light.2581 nvector.2590 objects.2578 or_net.2584 shadow_check_one_or_matrix.2893 texture_color.2591 utexture.2933 ) =
                                                                                                                  Fun iter_trace_diffuse_rays.2954 Array(Array(Float) * Array(Array(Float))) -> Array(Float) -> Array(Float) -> Int -> Unit| iter_trace_diffuse_rays.2954 (trace_diffuse_ray.2951 ) =
                                                                                                                    Fun trace_diffuse_rays.2959 Array(Array(Float) * Array(Array(Float))) -> Array(Float) -> Array(Float) -> Unit| trace_diffuse_rays.2959 (iter_trace_diffuse_rays.2954 setup_startp.2859 ) =
                                                                                                                      Fun trace_diffuse_ray_80percent.2963 Int -> Array(Float) -> Array(Float) -> Unit| trace_diffuse_ray_80percent.2963 (dirvecs.2603 trace_diffuse_rays.2959 ) =
                                                                                                                        Fun calc_diffuse_using_1point.2967 Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit| calc_diffuse_using_1point.2967 (diffuse_ray.2592 rgb.2593 trace_diffuse_ray_80percent.2963 ) =
                                                                                                                          Fun calc_diffuse_using_5points.2970 Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Unit| calc_diffuse_using_5points.2970 (diffuse_ray.2592 rgb.2593 ) =
                                                                                                                            Fun do_without_neighbors.2976 Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit| do_without_neighbors.2976 (calc_diffuse_using_1point.2967 ) =
                                                                                                                              Fun neighbors_exist.2979 Int -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Bool| neighbors_exist.2979 (image_size.2594 ) =
                                                                                                                                Fun try_exploit_neighbors.2992 Int -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Unit| try_exploit_neighbors.2992 (calc_diffuse_using_5points.2970 do_without_neighbors.2976 ) =
                                                                                                                                  Fun write_ppm_header.2999 Unit -> Unit| write_ppm_header.2999 (image_size.2594 ) =
                                                                                                                                    Fun write_rgb.3003 Unit -> Unit| write_rgb.3003 (rgb.2593 ) =
                                                                                                                                      Fun pretrace_diffuse_rays.3005 Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) -> Int -> Unit| pretrace_diffuse_rays.3005 (diffuse_ray.2592 dirvecs.2603 trace_diffuse_rays.2959 ) =
                                                                                                                                        Fun pretrace_pixels.3008 Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Int -> Float -> Float -> Float -> Unit| pretrace_pixels.3008 (image_center.2595 pretrace_diffuse_rays.3005 ptrace_dirvec.2602 rgb.2593 scan_pitch.2596 screenx_dir.2599 startp.2597 trace_ray.2945 viewpoint.2580 ) =
                                                                                                                                          Fun pretrace_line.3015 Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Int -> Unit| pretrace_line.3015 (image_center.2595 image_size.2594 pretrace_pixels.3008 scan_pitch.2596 screeny_dir.2600 screenz_dir.2601 ) =
                                                                                                                                            Fun scan_pixel.3019 Int -> Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Unit| scan_pixel.3019 (do_without_neighbors.2976 image_size.2594 neighbors_exist.2979 rgb.2593 try_exploit_neighbors.2992 write_rgb.3003 ) =
                                                                                                                                              Fun scan_line.3025 Int -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) -> Int -> Unit| scan_line.3025 (image_size.2594 pretrace_line.3015 scan_pixel.3019 ) =
                                                                                                                                                Fun create_pixelline.3038 Unit -> Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)))| create_pixelline.3038 (image_size.2594 ) =
                                                                                                                                                  Fun tan.3040 Float -> Float| tan.3040 (cos.2548 sin.2546 ) =
                                                                                                                                                    Fun adjust_position.3042 Float -> Float -> Float| adjust_position.3042 (atan.2540 tan.3040 ) =
                                                                                                                                                      Fun calc_dirvec.3045 Int -> Float -> Float -> Float -> Float -> Int -> Int -> Unit| calc_dirvec.3045 (adjust_position.3042 dirvecs.2603 ) =
                                                                                                                                                        Fun calc_dirvecs.3053 Int -> Float -> Int -> Int -> Unit| calc_dirvecs.3053 (calc_dirvec.3045 ) =
                                                                                                                                                          Fun calc_dirvec_rows.3058 Int -> Int -> Int -> Unit| calc_dirvec_rows.3058 (calc_dirvecs.3053 ) =
                                                                                                                                                            Fun create_dirvec.3062 Unit -> Array(Float) * Array(Array(Float))| create_dirvec.3062 (n_objects.2577 ) =
                                                                                                                                                              Fun create_dirvec_elements.3064 Array(Array(Float) * Array(Array(Float))) -> Int -> Unit| create_dirvec_elements.3064 (create_dirvec.3062 ) =
                                                                                                                                                                Fun create_dirvecs.3067 Int -> Unit| create_dirvecs.3067 (create_dirvec.3062 create_dirvec_elements.3064 dirvecs.2603 ) =
                                                                                                                                                                  Fun init_dirvec_constants.3069 Array(Array(Float) * Array(Array(Float))) -> Int -> Unit| init_dirvec_constants.3069 (setup_dirvec_constants.2854 ) =
                                                                                                                                                                    Fun init_vecset_constants.3072 Int -> Unit| init_vecset_constants.3072 (dirvecs.2603 init_dirvec_constants.3069 ) =
                                                                                                                                                                      Fun init_dirvecs.3074 Unit -> Unit| init_dirvecs.3074 (calc_dirvec_rows.3058 create_dirvecs.3067 init_vecset_constants.3072 ) =
                                                                                                                                                                        Fun add_reflection.3076 Int -> Int -> Float -> Float -> Float -> Float -> Unit| add_reflection.3076 (create_dirvec.3062 reflections.2605 setup_dirvec_constants.2854 ) =
                                                                                                                                                                          Fun setup_rect_reflection.3083 Int -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit| setup_rect_reflection.3083 (add_reflection.3076 light.2581 n_reflections.2606 ) =
                                                                                                                                                                            Fun setup_surface_reflection.3086 Int -> Int * Int * Int * Int * Array(Float) * Array(Float) * Bool * Array(Float) * Array(Float) * Array(Float) * Array(Float) -> Unit| setup_surface_reflection.3086 (add_reflection.3076 light.2581 n_reflections.2606 ) =
                                                                                                                                                                              Fun setup_reflections.3089 Int -> Unit| setup_reflections.3089 (objects.2578 setup_rect_reflection.3083 setup_surface_reflection.3086 ) =
                                                                                                                                                                                Fun rt.3091 Int -> Int -> Unit| rt.3091 (create_pixelline.3038 image_center.2595 image_size.2594 init_dirvecs.3074 light.2581 light_dirvec.2604 n_objects.2577 pretrace_line.3015 read_parameter.2756 scan_line.3025 scan_pitch.2596 setup_dirvec_constants.2854 setup_reflections.3089 write_ppm_header.2999 ) =
                                                                                                                                                                                  Let Tu270.3094 : Unit =
                                                                                                                                                                                    Let Ti370.3095 : Int =
                                                                                                                                                                                      Int (128)
                                                                                                                                                                                    In
                                                                                                                                                                                    Let Ti371.3096 : Int =
                                                                                                                                                                                      Int (128)
                                                                                                                                                                                    In
                                                                                                                                                                                    AppClosure rt.3091 (Ti370.3095 Ti371.3096 )
                                                                                                                                                                                  In
                                                                                                                                                                                  Int (0)

Print Asm_t(Virtual.ml):
  l.7452 : 3.141593
  l.7447 : 128.000000
  l.7382 : 0.900000
  l.7380 : 0.200000
  l.7197 : 150.000000
  l.7193 : -150.000000
  l.7164 : 0.100000
  l.7158 : -2.000000
  l.7154 : 256.000000
  l.7107 : 20.000000
  l.7105 : 0.050000
  l.7096 : 0.250000
  l.7086 : 10.000000
  l.7079 : 0.300000
  l.7077 : 255.000000
  l.7072 : 0.150000
  l.7064 : 3.141593
  l.7062 : 30.000000
  l.7060 : 15.000000
  l.7058 : 0.000100
  l.6984 : 100000000.000000
  l.6976 : 1000000000.000000
  l.6937 : -0.100000
  l.6911 : 0.010000
  l.6909 : -0.200000
  l.6529 : -200.000000
  l.6526 : 200.000000
  l.6521 : 0.017453
  l.6288 : 1.570796
  l.6280 : 9.000000
  l.6276 : 2.500000
  l.6270 : 11.000000
  l.6266 : -1.000000
  l.6261 : 1.000000
  l.6259 : 0.500000
  l.6257 : 2.000000
  l.6252 : 0.000000
  Bool fequal.2508 (a.2509 b.2510 ) =
    Ans (
      If a.2509 = b.2510 Then
        Ans (
          Set (1)
        )
      Then
        Ans (
          Set (0)
        )
    )
  Bool fless.2511 (a.2512 b.2513 ) =
    Ans (
      If b.2513 <=. a.2512 Then
        Ans (
          Set (0)
        )
      Then
        Ans (
          Set (1)
        )
    )
  Bool fispos.2514 (a.2515 ) =
    Let l.6253 =
      Set (l.6252)
    In
    Let Td2507.6251 =
      FLord l.6253[0]
    In
    Ans (
      If a.2515 <=. Td2507.6251 Then
        Ans (
          Set (0)
        )
      Then
        Ans (
          Set (1)
        )
    )
  Bool fisneg.2516 (a.2517 ) =
    Let l.6254 =
      Set (l.6252)
    In
    Let Td2506.6250 =
      FLord l.6254[0]
    In
    Ans (
      If Td2506.6250 <=. a.2517 Then
        Ans (
          Set (0)
        )
      Then
        Ans (
          Set (1)
        )
    )
  Bool fiszero.2518 (a.2519 ) =
    Let l.6255 =
      Set (l.6252)
    In
    Let Td2505.6249 =
      FLord l.6255[0]
    In
    Ans (
      If a.2519 =. Td2505.6249 Then
        Ans (
          Set (1)
        )
      Then
        Ans (
          Set (0)
        )
    )
  Bool xor.2520 (a.2521 b.2522 ) =
    Ans (
      If a.2521 = b.2522 Then
        Ans (
          Set (0)
        )
      Then
        Ans (
          Set (1)
        )
    )
  Float fabs.2523 (a.2524 ) =
    Let l.6256 =
      Set (l.6252)
    In
    Let Td2504.6248 =
      FLord l.6256[0]
    In
    Ans (
      If Td2504.6248 <=. a.2524 Then
        Ans (
          FMovD (a.2524)
        )
      Then
        Ans (
          FNegD (a.2524)
        )
    )
  Float abs_float.2525 (x.2526 ) =
    Ans (
      CallDir fabs.2523 x.2526 
    )
  Float fneg.2527 (a.2528 ) =
    Ans (
      FNegD (a.2528)
    )
  Float fhalf.2529 (a.2530 ) =
    Let l.6258 =
      Set (l.6257)
    In
    Let Td2503.6247 =
      FLord l.6258[0]
    In
    Ans (
      a.2530 /. Td2503.6247
    )
  Float fsqr.2531 (a.2532 ) =
    Ans (
      a.2532 *. a.2532
    )
  Float atan_sub.2536 (i.2537 xx.2538 y.2539 ) =
    Let l.6260 =
      Set (l.6259)
    In
    Let Td2502.6234 =
      FLord l.6260[0]
    In
    Ans (
      If Td2502.6234 <=. i.2537 Then
        Let l.6262 =
          Set (l.6261)
        In
        Let Td2492.6244 =
          FLord l.6262[0]
        In
        Let Td2493.6235 =
          i.2537 -. Td2492.6244
        In
        Let Td2494.6243 =
          i.2537 *. i.2537
        In
        Let Td2495.6237 =
          Td2494.6243 *. xx.2538
        In
        Let l.6263 =
          Set (l.6257)
        In
        Let Td2496.6242 =
          FLord l.6263[0]
        In
        Let Td2497.6240 =
          Td2496.6242 *. i.2537
        In
        Let l.6264 =
          Set (l.6261)
        In
        Let Td2498.6241 =
          FLord l.6264[0]
        In
        Let Td2499.6239 =
          Td2497.6240 +. Td2498.6241
        In
        Let Td2500.6238 =
          Td2499.6239 +. y.2539
        In
        Let Td2501.6236 =
          Td2495.6237 /. Td2500.6238
        In
        Ans (
          CallDir atan_sub.2536 Td2493.6235 xx.2538 Td2501.6236 
        )
      Then
        Ans (
          FMovD (y.2539)
        )
    )
  Float atan.2540 (x.2541 ) =
    Let pi.2533 =
      FLord %g27[-8]
    In
    Let l.6265 =
      Set (l.6261)
    In
    Let Td2478.6231 =
      FLord l.6265[0]
    In
    Let sgn.6214 =
      If x.2541 <=. Td2478.6231 Then
        Let l.6267 =
          Set (l.6266)
        In
        Let Td2477.6232 =
          FLord l.6267[0]
        In
        Ans (
          If Td2477.6232 <=. x.2541 Then
            Ans (
              Set (0)
            )
          Then
            Let Ti2476.6233 =
              Set (1)
            In
            Ans (
              Neg (Ti2476.6233)
            )
        )
      Then
        Ans (
          Set (1)
        )
    In
    Let Td2480.6228 =
      CallDir fabs.2523 x.2541 
    In
    Let l.6268 =
      Set (l.6261)
    In
    Let Td2481.6229 =
      FLord l.6268[0]
    In
    Let x.6215 =
      If Td2480.6228 <=. Td2481.6229 Then
        Ans (
          FMovD (x.2541)
        )
      Then
        Let l.6269 =
          Set (l.6261)
        In
        Let Td2479.6230 =
          FLord l.6269[0]
        In
        Ans (
          Td2479.6230 /. x.2541
        )
    In
    Let l.6271 =
      Set (l.6270)
    In
    Let Td2482.6225 =
      FLord l.6271[0]
    In
    Let Td2483.6226 =
      x.6215 *. x.6215
    In
    Let l.6272 =
      Set (l.6252)
    In
    Let Td2484.6227 =
      FLord l.6272[0]
    In
    Let a.6216 =
      CallDir atan_sub.2536 Td2482.6225 Td2483.6226 Td2484.6227 
    In
    Let l.6273 =
      Set (l.6261)
    In
    Let Td2485.6224 =
      FLord l.6273[0]
    In
    Let Td2486.6223 =
      Td2485.6224 +. a.6216
    In
    Let b.6217 =
      x.6215 /. Td2486.6223
    In
    Ans (
      If sgn.6214 <= 0 Then
        Ans (
          If sgn.6214 >= 0 Then
            Ans (
              FMovD (b.6217)
            )
          Then
            Let Td2487.6221 =
              FNegD (pi.2533)
            In
            Let l.6275 =
              Set (l.6257)
            In
            Let Td2488.6222 =
              FLord l.6275[0]
            In
            Let Td2489.6220 =
              Td2487.6221 /. Td2488.6222
            In
            Ans (
              Td2489.6220 -. b.6217
            )
        )
      Then
        Let l.6274 =
          Set (l.6257)
        In
        Let Td2490.6219 =
          FLord l.6274[0]
        In
        Let Td2491.6218 =
          pi.2533 /. Td2490.6219
        In
        Ans (
          Td2491.6218 -. b.6217
        )
    )
  Float tan_sub.6199 (i.6200 xx.6201 y.6202 ) =
    Let l.6277 =
      Set (l.6276)
    In
    Let Td2475.6209 =
      FLord l.6277[0]
    In
    Ans (
      If Td2475.6209 <=. i.6200 Then
        Let l.6278 =
          Set (l.6257)
        In
        Let Td2471.6213 =
          FLord l.6278[0]
        In
        Let Td2472.6210 =
          i.6200 -. Td2471.6213
        In
        Let Td2473.6212 =
          i.6200 -. y.6202
        In
        Let Td2474.6211 =
          xx.6201 /. Td2473.6212
        In
        Ans (
          CallDir tan_sub.6199 Td2472.6210 xx.6201 Td2474.6211 
        )
      Then
        Ans (
          FMovD (y.6202)
        )
    )
  Float tan.2542 (x.2543 ) =
    Let l.6279 =
      Set (l.6261)
    In
    Let Td2465.6204 =
      FLord l.6279[0]
    In
    Let l.6281 =
      Set (l.6280)
    In
    Let Td2466.6206 =
      FLord l.6281[0]
    In
    Let Td2467.6207 =
      x.2543 *. x.2543
    In
    Let l.6282 =
      Set (l.6252)
    In
    Let Td2468.6208 =
      FLord l.6282[0]
    In
    Let Td2469.6205 =
      CallDir tan_sub.6199 Td2466.6206 Td2467.6207 Td2468.6208 
    In
    Let Td2470.6203 =
      Td2465.6204 -. Td2469.6205
    In
    Ans (
      x.2543 /. Td2470.6203
    )
  Float sin_sub.2544 (x.2545 ) =
    Let pi2.2534 =
      FLord %g27[-8]
    In
    Ans (
      If x.2545 <=. pi2.2534 Then
        Let l.6283 =
          Set (l.6252)
        In
        Let Td2463.6197 =
          FLord l.6283[0]
        In
        Ans (
          If Td2463.6197 <=. x.2545 Then
            Ans (
              FMovD (x.2545)
            )
          Then
            Let Td2462.6198 =
              x.2545 +. pi2.2534
            In
            Ans (
              CallCls sin_sub.2544 Td2462.6198 
            )
        )
      Then
        Let Td2464.6196 =
          x.2545 -. pi2.2534
        In
        Ans (
          CallCls sin_sub.2544 Td2464.6196 
        )
    )
  Float sin.2546 (x.2547 ) =
    Let sin_sub.2544 =
      Lord %g27[-32]
    In
    Let pih.2535 =
      FLord %g27[-24]
    In
    Let pi2.2534 =
      FLord %g27[-16]
    In
    Let pi.2533 =
      FLord %g27[-8]
    In
    Let l.6284 =
      Set (l.6252)
    In
    Let Td2454.6195 =
      FLord l.6284[0]
    In
    Let s1.6180 =
      If x.2547 <=. Td2454.6195 Then
        Ans (
          Set (0)
        )
      Then
        Ans (
          Set (1)
        )
    In
    Let x0.6181 =
      CallDir fabs.2523 x.2547 
    In
    Let x1.6182 =
      CallCls sin_sub.2544 x0.6181 
    In
    Let s2.6183 =
      If x1.6182 <=. pi.2533 Then
        Ans (
          Mov (s1.6180)
        )
      Then
        Ans (
          If s1.6180 = 0 Then
            Ans (
              Set (1)
            )
          Then
            Ans (
              Set (0)
            )
        )
    In
    Let x2.6184 =
      If x1.6182 <=. pi.2533 Then
        Ans (
          FMovD (x1.6182)
        )
      Then
        Ans (
          pi2.2534 -. x1.6182
        )
    In
    Let x3.6185 =
      If x2.6184 <=. pih.2535 Then
        Ans (
          FMovD (x2.6184)
        )
      Then
        Ans (
          pi.2533 -. x2.6184
        )
    In
    Let l.6285 =
      Set (l.6259)
    In
    Let Td2455.6194 =
      FLord l.6285[0]
    In
    Let Td2456.6193 =
      x3.6185 *. Td2455.6194
    In
    Let t.6186 =
      CallDir tan.2542 Td2456.6193 
    In
    Let l.6286 =
      Set (l.6257)
    In
    Let Td2457.6192 =
      FLord l.6286[0]
    In
    Let Td2458.6188 =
      Td2457.6192 *. t.6186
    In
    Let l.6287 =
      Set (l.6261)
    In
    Let Td2459.6190 =
      FLord l.6287[0]
    In
    Let Td2460.6191 =
      t.6186 *. t.6186
    In
    Let Td2461.6189 =
      Td2459.6190 +. Td2460.6191
    In
    Let ans.6187 =
      Td2458.6188 /. Td2461.6189
    In
    Ans (
      If s2.6183 = 0 Then
        Ans (
          CallDir fneg.2527 ans.6187 
        )
      Then
        Ans (
          FMovD (ans.6187)
        )
    )
  Float cos.2548 (x.2549 ) =
    Let sin.2546 =
      Lord %g27[-4]
    In
    Let l.6289 =
      Set (l.6288)
    In
    Let Td2452.6179 =
      FLord l.6289[0]
    In
    Let Td2453.6178 =
      Td2452.6179 -. x.2549
    In
    Ans (
      CallCls sin.2546 Td2453.6178 
    )
  Int mul10.2550 (x.2551 ) =
    Let Ti2448.6177 =
      Set (3)
    In
    Let Ti2449.6174 =
      x.2551 << Ti2448.6177
    In
    Let Ti2450.6176 =
      Set (1)
    In
    Let Ti2451.6175 =
      x.2551 << Ti2450.6176
    In
    Ans (
      Ti2449.6174 + Ti2451.6175
    )
  Int read_int_token.2554 (in_token.2555 prev.2556 ) =
    Let read_int_s.2553 =
      Lord %g27[-8]
    In
    Let read_int_ans.2552 =
      Lord %g27[-4]
    In
    Let Tu2423.6169 =
      Nop
    In
    Let c.6141 =
      CallDir min_caml_input_char 
    In
    Let Ti2425.6167 =
      Set (48)
    In
    Let flg.6142 =
      If Ti2425.6167 <= c.6141 Then
        Let Ti2424.6168 =
          Set (57)
        In
        Ans (
          If c.6141 <= Ti2424.6168 Then
            Ans (
              Set (0)
            )
          Then
            Ans (
              Set (1)
            )
        )
      Then
        Ans (
          Set (1)
        )
    In
    Ans (
      If flg.6142 = 0 Then
        Let Ti2426.6166 =
          Set (0)
        In
        Let o.6296 =
          Ti2426.6166 << 2
        In
        Let Ti2433.6159 =
          Lord read_int_s.2553[o.6296]
        In
        Let Tu2.6149 =
          If Ti2433.6159 = 0 Then
            Let Ti2432.6160 =
              Set (45)
            In
            Ans (
              If prev.2556 = Ti2432.6160 Then
                Let Ti2427.6163 =
                  Set (0)
                In
                Let Ti2428.6165 =
                  Set (1)
                In
                Let Ti2429.6164 =
                  Neg (Ti2428.6165)
                In
                Let o.6299 =
                  Ti2427.6163 << 2
                In
                Ans (
                  Store Ti2429.6164 to read_int_s.2553[o.6299]
                )
              Then
                Let Ti2430.6161 =
                  Set (0)
                In
                Let Ti2431.6162 =
                  Set (1)
                In
                Let o.6298 =
                  Ti2430.6161 << 2
                In
                Ans (
                  Store Ti2431.6162 to read_int_s.2553[o.6298]
                )
            )
          Then
            Ans (
              Nop
            )
        In
        Let Ti2434.6152 =
          Set (0)
        In
        Let Ti2435.6158 =
          Set (0)
        In
        Let o.6300 =
          Ti2435.6158 << 2
        In
        Let Ti2436.6157 =
          Lord read_int_ans.2552[o.6300]
        In
        Let Ti2437.6154 =
          CallDir mul10.2550 Ti2436.6157 
        In
        Let Ti2438.6156 =
          Set (48)
        In
        Let Ti2439.6155 =
          c.6141 - Ti2438.6156
        In
        Let Ti2440.6153 =
          Ti2437.6154 + Ti2439.6155
        In
        Let o.6302 =
          Ti2434.6152 << 2
        In
        Let Tu1.6150 =
          Store Ti2440.6153 to read_int_ans.2552[o.6302]
        In
        Let Ti2441.6151 =
          Set (1)
        In
        Ans (
          CallCls read_int_token.2554 Ti2441.6151 c.6141 
        )
      Then
        Ans (
          If in_token.2555 = 0 Then
            Let Ti2442.6148 =
              Set (0)
            In
            Ans (
              CallCls read_int_token.2554 Ti2442.6148 c.6141 
            )
          Then
            Let Ti2443.6147 =
              Set (0)
            In
            Let o.6290 =
              Ti2443.6147 << 2
            In
            Let Ti2447.6143 =
              Lord read_int_s.2553[o.6290]
            In
            Ans (
              If Ti2447.6143 = 1 Then
                Let Ti2444.6146 =
                  Set (0)
                In
                Let o.6294 =
                  Ti2444.6146 << 2
                In
                Ans (
                  Lord read_int_ans.2552[o.6294]
                )
              Then
                Let Ti2445.6145 =
                  Set (0)
                In
                Let o.6292 =
                  Ti2445.6145 << 2
                In
                Let Ti2446.6144 =
                  Lord read_int_ans.2552[o.6292]
                In
                Ans (
                  Neg (Ti2446.6144)
                )
            )
        )
    )
  Int read_int.2557 () =
    Let read_int_token.2554 =
      Lord %g27[-12]
    In
    Let read_int_s.2553 =
      Lord %g27[-8]
    In
    Let read_int_ans.2552 =
      Lord %g27[-4]
    In
    Let Ti2417.6139 =
      Set (0)
    In
    Let Ti2418.6140 =
      Set (0)
    In
    Let o.6303 =
      Ti2417.6139 << 2
    In
    Let Tu5.6133 =
      Store Ti2418.6140 to read_int_ans.2552[o.6303]
    In
    Let Ti2419.6137 =
      Set (0)
    In
    Let Ti2420.6138 =
      Set (0)
    In
    Let o.6304 =
      Ti2419.6137 << 2
    In
    Let Tu4.6134 =
      Store Ti2420.6138 to read_int_s.2553[o.6304]
    In
    Let Ti2421.6135 =
      Set (0)
    In
    Let Ti2422.6136 =
      Set (32)
    In
    Ans (
      CallCls read_int_token.2554 Ti2421.6135 Ti2422.6136 
    )
  Int read_float_token1.2563 (in_token.2564 prev.2565 ) =
    Let read_float_s.2562 =
      Lord %g27[-8]
    In
    Let read_float_i.2559 =
      Lord %g27[-4]
    In
    Let Tu2397.6124 =
      Nop
    In
    Let c.6101 =
      CallDir min_caml_input_char 
    In
    Let Ti2399.6122 =
      Set (48)
    In
    Let flg.6102 =
      If Ti2399.6122 <= c.6101 Then
        Let Ti2398.6123 =
          Set (57)
        In
        Ans (
          If c.6101 <= Ti2398.6123 Then
            Ans (
              Set (0)
            )
          Then
            Ans (
              Set (1)
            )
        )
      Then
        Ans (
          Set (1)
        )
    In
    Ans (
      If flg.6102 = 0 Then
        Let Ti2400.6121 =
          Set (0)
        In
        Let o.6305 =
          Ti2400.6121 << 2
        In
        Let Ti2407.6114 =
          Lord read_float_s.2562[o.6305]
        In
        Let Tu7.6104 =
          If Ti2407.6114 = 0 Then
            Let Ti2406.6115 =
              Set (45)
            In
            Ans (
              If prev.2565 = Ti2406.6115 Then
                Let Ti2401.6118 =
                  Set (0)
                In
                Let Ti2402.6120 =
                  Set (1)
                In
                Let Ti2403.6119 =
                  Neg (Ti2402.6120)
                In
                Let o.6308 =
                  Ti2401.6118 << 2
                In
                Ans (
                  Store Ti2403.6119 to read_float_s.2562[o.6308]
                )
              Then
                Let Ti2404.6116 =
                  Set (0)
                In
                Let Ti2405.6117 =
                  Set (1)
                In
                Let o.6307 =
                  Ti2404.6116 << 2
                In
                Ans (
                  Store Ti2405.6117 to read_float_s.2562[o.6307]
                )
            )
          Then
            Ans (
              Nop
            )
        In
        Let Ti2408.6107 =
          Set (0)
        In
        Let Ti2409.6113 =
          Set (0)
        In
        Let o.6309 =
          Ti2409.6113 << 2
        In
        Let Ti2410.6112 =
          Lord read_float_i.2559[o.6309]
        In
        Let Ti2411.6109 =
          CallDir mul10.2550 Ti2410.6112 
        In
        Let Ti2412.6111 =
          Set (48)
        In
        Let Ti2413.6110 =
          c.6101 - Ti2412.6111
        In
        Let Ti2414.6108 =
          Ti2411.6109 + Ti2413.6110
        In
        Let o.6311 =
          Ti2408.6107 << 2
        In
        Let Tu6.6105 =
          Store Ti2414.6108 to read_float_i.2559[o.6311]
        In
        Let Ti2415.6106 =
          Set (1)
        In
        Ans (
          CallCls read_float_token1.2563 Ti2415.6106 c.6101 
        )
      Then
        Ans (
          If in_token.2564 = 0 Then
            Let Ti2416.6103 =
              Set (0)
            In
            Ans (
              CallCls read_float_token1.2563 Ti2416.6103 c.6101 
            )
          Then
            Ans (
              Mov (c.6101)
            )
        )
    )
  Unit read_float_token2.2566 (in_token.2567 ) =
    Let read_float_f.2560 =
      Lord %g27[-8]
    In
    Let read_float_exp.2561 =
      Lord %g27[-4]
    In
    Let Tu2381.6100 =
      Nop
    In
    Let c.6081 =
      CallDir min_caml_input_char 
    In
    Let Ti2383.6098 =
      Set (48)
    In
    Let flg.6082 =
      If Ti2383.6098 <= c.6081 Then
        Let Ti2382.6099 =
          Set (57)
        In
        Ans (
          If c.6081 <= Ti2382.6099 Then
            Ans (
              Set (0)
            )
          Then
            Ans (
              Set (1)
            )
        )
      Then
        Ans (
          Set (1)
        )
    In
    Ans (
      If flg.6082 = 0 Then
        Let Ti2384.6091 =
          Set (0)
        In
        Let Ti2385.6097 =
          Set (0)
        In
        Let o.6312 =
          Ti2385.6097 << 2
        In
        Let Ti2386.6096 =
          Lord read_float_f.2560[o.6312]
        In
        Let Ti2387.6093 =
          CallDir mul10.2550 Ti2386.6096 
        In
        Let Ti2388.6095 =
          Set (48)
        In
        Let Ti2389.6094 =
          c.6081 - Ti2388.6095
        In
        Let Ti2390.6092 =
          Ti2387.6093 + Ti2389.6094
        In
        Let o.6314 =
          Ti2384.6091 << 2
        In
        Let Tu9.6084 =
          Store Ti2390.6092 to read_float_f.2560[o.6314]
        In
        Let Ti2391.6087 =
          Set (0)
        In
        Let Ti2392.6090 =
          Set (0)
        In
        Let o.6315 =
          Ti2392.6090 << 2
        In
        Let Ti2393.6089 =
          Lord read_float_exp.2561[o.6315]
        In
        Let Ti2394.6088 =
          CallDir mul10.2550 Ti2393.6089 
        In
        Let o.6317 =
          Ti2391.6087 << 2
        In
        Let Tu8.6085 =
          Store Ti2394.6088 to read_float_exp.2561[o.6317]
        In
        Let Ti2395.6086 =
          Set (1)
        In
        Ans (
          CallCls read_float_token2.2566 Ti2395.6086 
        )
      Then
        Ans (
          If in_token.2567 = 0 Then
            Let Ti2396.6083 =
              Set (0)
            In
            Ans (
              CallCls read_float_token2.2566 Ti2396.6083 
            )
          Then
            Ans (
              Nop
            )
        )
    )
  Float read_float.2568 () =
    Let read_float_token2.2566 =
      Lord %g27[-24]
    In
    Let read_float_token1.2563 =
      Lord %g27[-20]
    In
    Let read_float_s.2562 =
      Lord %g27[-16]
    In
    Let read_float_i.2559 =
      Lord %g27[-12]
    In
    Let read_float_f.2560 =
      Lord %g27[-8]
    In
    Let read_float_exp.2561 =
      Lord %g27[-4]
    In
    Let Ti2355.6079 =
      Set (0)
    In
    Let Ti2356.6080 =
      Set (0)
    In
    Let o.6318 =
      Ti2355.6079 << 2
    In
    Let Tu15.6048 =
      Store Ti2356.6080 to read_float_i.2559[o.6318]
    In
    Let Ti2357.6077 =
      Set (0)
    In
    Let Ti2358.6078 =
      Set (0)
    In
    Let o.6319 =
      Ti2357.6077 << 2
    In
    Let Tu14.6049 =
      Store Ti2358.6078 to read_float_f.2560[o.6319]
    In
    Let Ti2359.6075 =
      Set (0)
    In
    Let Ti2360.6076 =
      Set (1)
    In
    Let o.6320 =
      Ti2359.6075 << 2
    In
    Let Tu13.6050 =
      Store Ti2360.6076 to read_float_exp.2561[o.6320]
    In
    Let Ti2361.6073 =
      Set (0)
    In
    Let Ti2362.6074 =
      Set (0)
    In
    Let o.6321 =
      Ti2361.6073 << 2
    In
    Let Tu12.6051 =
      Store Ti2362.6074 to read_float_s.2562[o.6321]
    In
    Let Ti2363.6071 =
      Set (0)
    In
    Let Ti2364.6072 =
      Set (32)
    In
    Let nextch.6052 =
      CallCls read_float_token1.2563 Ti2363.6071 Ti2364.6072 
    In
    Let Ti2378.6056 =
      Set (46)
    In
    Let ans.6053 =
      If nextch.6052 = Ti2378.6056 Then
        Let Ti2365.6070 =
          Set (0)
        In
        Let Tu11.6059 =
          CallCls read_float_token2.2566 Ti2365.6070 
        In
        Let Ti2366.6069 =
          Set (0)
        In
        Let o.6324 =
          Ti2366.6069 << 2
        In
        Let Ti2367.6068 =
          Lord read_float_i.2559[o.6324]
        In
        Let Td2368.6060 =
          CallDir min_caml_float_of_int Ti2367.6068 
        In
        Let Ti2369.6067 =
          Set (0)
        In
        Let o.6326 =
          Ti2369.6067 << 2
        In
        Let Ti2370.6066 =
          Lord read_float_f.2560[o.6326]
        In
        Let Td2371.6062 =
          CallDir min_caml_float_of_int Ti2370.6066 
        In
        Let Ti2372.6065 =
          Set (0)
        In
        Let o.6328 =
          Ti2372.6065 << 2
        In
        Let Ti2373.6064 =
          Lord read_float_exp.2561[o.6328]
        In
        Let Td2374.6063 =
          CallDir min_caml_float_of_int Ti2373.6064 
        In
        Let Td2375.6061 =
          Td2371.6062 /. Td2374.6063
        In
        Ans (
          Td2368.6060 +. Td2375.6061
        )
      Then
        Let Ti2376.6058 =
          Set (0)
        In
        Let o.6322 =
          Ti2376.6058 << 2
        In
        Let Ti2377.6057 =
          Lord read_float_i.2559[o.6322]
        In
        Ans (
          CallDir min_caml_float_of_int Ti2377.6057 
        )
    In
    Let Ti2379.6055 =
      Set (0)
    In
    Let o.6330 =
      Ti2379.6055 << 2
    In
    Let Ti2380.6054 =
      Lord read_float_s.2562[o.6330]
    In
    Ans (
      If Ti2380.6054 = 1 Then
        Ans (
          FMovD (ans.6053)
        )
      Then
        Ans (
          FNegD (ans.6053)
        )
    )
  Int div_binary_search.2570 (a.2571 b.2572 left.2573 right.2574 ) =
    Let Ti2352.6046 =
      left.2573 + right.2574
    In
    Let Ti2353.6047 =
      Set (-1)
    In
    Let mid.6043 =
      Ti2352.6046 << Ti2353.6047
    In
    Let x.6044 =
      mid.6043 * b.2572
    In
    Let Ti2354.6045 =
      right.2574 - left.2573
    In
    Ans (
      If Ti2354.6045 <= 1 Then
        Ans (
          Mov (left.2573)
        )
      Then
        Ans (
          If a.2571 <= x.6044 Then
            Ans (
              If x.6044 = a.2571 Then
                Ans (
                  Mov (mid.6043)
                )
              Then
                Ans (
                  CallDir div_binary_search.2570 a.2571 b.2572 left.2573 mid.6043 
                )
            )
          Then
            Ans (
              CallDir div_binary_search.2570 a.2571 b.2572 mid.6043 right.2574 
            )
        )
    )
  Unit print_int.2575 (x.2576 ) =
    Let Ti2351.5998 =
      Set (10000)
    In
    Ans (
      If x.2576 <= Ti2351.5998 Then
        Ans (
          If x.2576 >= 0 Then
            Let Ti2325.6040 =
              Set (1000)
            In
            Let Ti2326.6041 =
              Set (0)
            In
            Let Ti2327.6042 =
              Set (10)
            In
            Let tx.6002 =
              CallDir div_binary_search.2570 x.2576 Ti2325.6040 Ti2326.6041 Ti2327.6042 
            In
            Let Ti2328.6039 =
              Set (1000)
            In
            Let dx.6003 =
              tx.6002 * Ti2328.6039
            In
            Let x.6004 =
              x.2576 - dx.6003
            In
            Let flg.6005 =
              If tx.6002 <= 0 Then
                Ans (
                  Set (0)
                )
              Then
                Let Ti2329.6038 =
                  Set (48)
                In
                Let Ti2330.6037 =
                  Ti2329.6038 + tx.6002
                In
                Let Tu17.6036 =
                  CallDir min_caml_print_char Ti2330.6037 
                In
                Ans (
                  Set (1)
                )
            In
            Let Ti2331.6033 =
              Set (100)
            In
            Let Ti2332.6034 =
              Set (0)
            In
            Let Ti2333.6035 =
              Set (10)
            In
            Let tx.6006 =
              CallDir div_binary_search.2570 x.6004 Ti2331.6033 Ti2332.6034 Ti2333.6035 
            In
            Let Ti2334.6032 =
              Set (100)
            In
            Let dx.6007 =
              tx.6006 * Ti2334.6032
            In
            Let x.6008 =
              x.6004 - dx.6007
            In
            Let flg.6009 =
              If tx.6006 <= 0 Then
                Ans (
                  If flg.6005 = 0 Then
                    Ans (
                      Set (0)
                    )
                  Then
                    Let Ti2335.6031 =
                      Set (48)
                    In
                    Let Ti2336.6030 =
                      Ti2335.6031 + tx.6006
                    In
                    Let Tu18.6029 =
                      CallDir min_caml_print_char Ti2336.6030 
                    In
                    Ans (
                      Set (1)
                    )
                )
              Then
                Let Ti2337.6028 =
                  Set (48)
                In
                Let Ti2338.6027 =
                  Ti2337.6028 + tx.6006
                In
                Let Tu19.6026 =
                  CallDir min_caml_print_char Ti2338.6027 
                In
                Ans (
                  Set (1)
                )
            In
            Let Ti2339.6023 =
              Set (10)
            In
            Let Ti2340.6024 =
              Set (0)
            In
            Let Ti2341.6025 =
              Set (10)
            In
            Let tx.6010 =
              CallDir div_binary_search.2570 x.6008 Ti2339.6023 Ti2340.6024 Ti2341.6025 
            In
            Let Ti2342.6022 =
              Set (10)
            In
            Let dx.6011 =
              tx.6010 * Ti2342.6022
            In
            Let x.6012 =
              x.6008 - dx.6011
            In
            Let flg.6013 =
              If tx.6010 <= 0 Then
                Ans (
                  If flg.6009 = 0 Then
                    Ans (
                      Set (0)
                    )
                  Then
                    Let Ti2343.6021 =
                      Set (48)
                    In
                    Let Ti2344.6020 =
                      Ti2343.6021 + tx.6010
                    In
                    Let Tu20.6019 =
                      CallDir min_caml_print_char Ti2344.6020 
                    In
                    Ans (
                      Set (1)
                    )
                )
              Then
                Let Ti2345.6018 =
                  Set (48)
                In
                Let Ti2346.6017 =
                  Ti2345.6018 + tx.6010
                In
                Let Tu21.6016 =
                  CallDir min_caml_print_char Ti2346.6017 
                In
                Ans (
                  Set (1)
                )
            In
            Let Ti2347.6015 =
              Set (48)
            In
            Let Ti2348.6014 =
              Ti2347.6015 + x.6012
            In
            Ans (
              CallDir min_caml_print_char Ti2348.6014 
            )
          Then
            Let Ti2349.6001 =
              Set (45)
            In
            Let Tu16.5999 =
              CallDir min_caml_print_char Ti2349.6001 
            In
            Let Ti2350.6000 =
              Neg (x.2576)
            In
            Ans (
              CallDir print_int.2575 Ti2350.6000 
            )
        )
      Then
        Ans (
          Nop
        )
    )
  Bool xor.2607 (x.2608 y.2609 ) =
    Ans (
      If x.2608 = 0 Then
        Ans (
          Mov (y.2609)
        )
      Then
        Ans (
          If y.2609 = 0 Then
            Ans (
              Set (1)
            )
          Then
            Ans (
              Set (0)
            )
        )
    )
  Float sgn.2610 (x.2611 ) =
    Let Tb2324.5901 =
      CallDir fiszero.2518 x.2611 
    In
    Ans (
      If Tb2324.5901 = 0 Then
        Let Tb2323.5902 =
          CallDir fispos.2514 x.2611 
        In
        Ans (
          If Tb2323.5902 = 0 Then
            Let l.6334 =
              Set (l.6266)
            In
            Ans (
              FLord l.6334[0]
            )
          Then
            Let l.6333 =
              Set (l.6261)
            In
            Ans (
              FLord l.6333[0]
            )
        )
      Then
        Let l.6332 =
          Set (l.6252)
        In
        Ans (
          FLord l.6332[0]
        )
    )
  Float fneg_cond.2612 (cond.2613 x.2614 ) =
    Ans (
      If cond.2613 = 0 Then
        Ans (
          CallDir fneg.2527 x.2614 
        )
      Then
        Ans (
          FMovD (x.2614)
        )
    )
  Int add_mod5.2615 (x.2616 y.2617 ) =
    Let sum.5898 =
      x.2616 + y.2617
    In
    Let Ti2322.5899 =
      Set (5)
    In
    Ans (
      If Ti2322.5899 <= sum.5898 Then
        Let Ti2321.5900 =
          Set (5)
        In
        Ans (
          sum.5898 - Ti2321.5900
        )
      Then
        Ans (
          Mov (sum.5898)
        )
    )
  Unit vecset.2618 (v.2619 x.2620 y.2621 z.2622 ) =
    Let Ti2318.5897 =
      Set (0)
    In
    Let o.6335 =
      Ti2318.5897 << 2
    In
    Let Tu23.5893 =
      FStore x.2620 to v.2619[o.6335]
    In
    Let Ti2319.5896 =
      Set (1)
    In
    Let o.6336 =
      Ti2319.5896 << 2
    In
    Let Tu22.5894 =
      FStore y.2621 to v.2619[o.6336]
    In
    Let Ti2320.5895 =
      Set (2)
    In
    Let o.6337 =
      Ti2320.5895 << 2
    In
    Ans (
      FStore z.2622 to v.2619[o.6337]
    )
  Unit vecfill.2623 (v.2624 elem.2625 ) =
    Let Ti2315.5892 =
      Set (0)
    In
    Let o.6338 =
      Ti2315.5892 << 2
    In
    Let Tu25.5888 =
      FStore elem.2625 to v.2624[o.6338]
    In
    Let Ti2316.5891 =
      Set (1)
    In
    Let o.6339 =
      Ti2316.5891 << 2
    In
    Let Tu24.5889 =
      FStore elem.2625 to v.2624[o.6339]
    In
    Let Ti2317.5890 =
      Set (2)
    In
    Let o.6340 =
      Ti2317.5890 << 2
    In
    Ans (
      FStore elem.2625 to v.2624[o.6340]
    )
  Unit vecbzero.2626 (v.2627 ) =
    Let l.6341 =
      Set (l.6252)
    In
    Let Td2314.5887 =
      FLord l.6341[0]
    In
    Ans (
      CallDir vecfill.2623 v.2627 Td2314.5887 
    )
  Unit veccpy.2628 (dest.2629 src.2630 ) =
    Let Ti2305.5884 =
      Set (0)
    In
    Let Ti2306.5886 =
      Set (0)
    In
    Let o.6342 =
      Ti2306.5886 << 2
    In
    Let Td2307.5885 =
      FLord src.2630[o.6342]
    In
    Let o.6344 =
      Ti2305.5884 << 2
    In
    Let Tu27.5876 =
      FStore Td2307.5885 to dest.2629[o.6344]
    In
    Let Ti2308.5881 =
      Set (1)
    In
    Let Ti2309.5883 =
      Set (1)
    In
    Let o.6345 =
      Ti2309.5883 << 2
    In
    Let Td2310.5882 =
      FLord src.2630[o.6345]
    In
    Let o.6347 =
      Ti2308.5881 << 2
    In
    Let Tu26.5877 =
      FStore Td2310.5882 to dest.2629[o.6347]
    In
    Let Ti2311.5878 =
      Set (2)
    In
    Let Ti2312.5880 =
      Set (2)
    In
    Let o.6348 =
      Ti2312.5880 << 2
    In
    Let Td2313.5879 =
      FLord src.2630[o.6348]
    In
    Let o.6350 =
      Ti2311.5878 << 2
    In
    Ans (
      FStore Td2313.5879 to dest.2629[o.6350]
    )
  Float vecdist2.2631 (p.2632 q.2633 ) =
    Let Ti2286.5875 =
      Set (0)
    In
    Let o.6351 =
      Ti2286.5875 << 2
    In
    Let Td2287.5872 =
      FLord p.2632[o.6351]
    In
    Let Ti2288.5874 =
      Set (0)
    In
    Let o.6353 =
      Ti2288.5874 << 2
    In
    Let Td2289.5873 =
      FLord q.2633[o.6353]
    In
    Let Td2290.5871 =
      Td2287.5872 -. Td2289.5873
    In
    Let Td2291.5864 =
      CallDir fsqr.2531 Td2290.5871 
    In
    Let Ti2292.5870 =
      Set (1)
    In
    Let o.6355 =
      Ti2292.5870 << 2
    In
    Let Td2293.5867 =
      FLord p.2632[o.6355]
    In
    Let Ti2294.5869 =
      Set (1)
    In
    Let o.6357 =
      Ti2294.5869 << 2
    In
    Let Td2295.5868 =
      FLord q.2633[o.6357]
    In
    Let Td2296.5866 =
      Td2293.5867 -. Td2295.5868
    In
    Let Td2297.5865 =
      CallDir fsqr.2531 Td2296.5866 
    In
    Let Td2298.5857 =
      Td2291.5864 +. Td2297.5865
    In
    Let Ti2299.5863 =
      Set (2)
    In
    Let o.6359 =
      Ti2299.5863 << 2
    In
    Let Td2300.5860 =
      FLord p.2632[o.6359]
    In
    Let Ti2301.5862 =
      Set (2)
    In
    Let o.6361 =
      Ti2301.5862 << 2
    In
    Let Td2302.5861 =
      FLord q.2633[o.6361]
    In
    Let Td2303.5859 =
      Td2300.5860 -. Td2302.5861
    In
    Let Td2304.5858 =
      CallDir fsqr.2531 Td2303.5859 
    In
    Ans (
      Td2298.5857 +. Td2304.5858
    )
  Unit vecunit.2634 (v.2635 ) =
    Let l.6363 =
      Set (l.6261)
    In
    Let Td2261.5844 =
      FLord l.6363[0]
    In
    Let Ti2262.5856 =
      Set (0)
    In
    Let o.6364 =
      Ti2262.5856 << 2
    In
    Let Td2263.5855 =
      FLord v.2635[o.6364]
    In
    Let Td2264.5851 =
      CallDir fsqr.2531 Td2263.5855 
    In
    Let Ti2265.5854 =
      Set (1)
    In
    Let o.6366 =
      Ti2265.5854 << 2
    In
    Let Td2266.5853 =
      FLord v.2635[o.6366]
    In
    Let Td2267.5852 =
      CallDir fsqr.2531 Td2266.5853 
    In
    Let Td2268.5847 =
      Td2264.5851 +. Td2267.5852
    In
    Let Ti2269.5850 =
      Set (2)
    In
    Let o.6368 =
      Ti2269.5850 << 2
    In
    Let Td2270.5849 =
      FLord v.2635[o.6368]
    In
    Let Td2271.5848 =
      CallDir fsqr.2531 Td2270.5849 
    In
    Let Td2272.5846 =
      Td2268.5847 +. Td2271.5848
    In
    Let Td2273.5845 =
      CallDir min_caml_sqrt Td2272.5846 
    In
    Let il.5829 =
      Td2261.5844 /. Td2273.5845
    In
    Let Ti2274.5840 =
      Set (0)
    In
    Let Ti2275.5843 =
      Set (0)
    In
    Let o.6370 =
      Ti2275.5843 << 2
    In
    Let Td2276.5842 =
      FLord v.2635[o.6370]
    In
    Let Td2277.5841 =
      Td2276.5842 *. il.5829
    In
    Let o.6372 =
      Ti2274.5840 << 2
    In
    Let Tu29.5830 =
      FStore Td2277.5841 to v.2635[o.6372]
    In
    Let Ti2278.5836 =
      Set (1)
    In
    Let Ti2279.5839 =
      Set (1)
    In
    Let o.6373 =
      Ti2279.5839 << 2
    In
    Let Td2280.5838 =
      FLord v.2635[o.6373]
    In
    Let Td2281.5837 =
      Td2280.5838 *. il.5829
    In
    Let o.6375 =
      Ti2278.5836 << 2
    In
    Let Tu28.5831 =
      FStore Td2281.5837 to v.2635[o.6375]
    In
    Let Ti2282.5832 =
      Set (2)
    In
    Let Ti2283.5835 =
      Set (2)
    In
    Let o.6376 =
      Ti2283.5835 << 2
    In
    Let Td2284.5834 =
      FLord v.2635[o.6376]
    In
    Let Td2285.5833 =
      Td2284.5834 *. il.5829
    In
    Let o.6378 =
      Ti2282.5832 << 2
    In
    Ans (
      FStore Td2285.5833 to v.2635[o.6378]
    )
  Unit vecunit_sgn.2636 (v.2637 inv.2638 ) =
    Let Ti2235.5828 =
      Set (0)
    In
    Let o.6379 =
      Ti2235.5828 << 2
    In
    Let Td2236.5827 =
      FLord v.2637[o.6379]
    In
    Let Td2237.5823 =
      CallDir fsqr.2531 Td2236.5827 
    In
    Let Ti2238.5826 =
      Set (1)
    In
    Let o.6381 =
      Ti2238.5826 << 2
    In
    Let Td2239.5825 =
      FLord v.2637[o.6381]
    In
    Let Td2240.5824 =
      CallDir fsqr.2531 Td2239.5825 
    In
    Let Td2241.5819 =
      Td2237.5823 +. Td2240.5824
    In
    Let Ti2242.5822 =
      Set (2)
    In
    Let o.6383 =
      Ti2242.5822 << 2
    In
    Let Td2243.5821 =
      FLord v.2637[o.6383]
    In
    Let Td2244.5820 =
      CallDir fsqr.2531 Td2243.5821 
    In
    Let Td2245.5818 =
      Td2241.5819 +. Td2244.5820
    In
    Let l.5799 =
      CallDir min_caml_sqrt Td2245.5818 
    In
    Let Tb2248.5815 =
      CallDir fiszero.2518 l.5799 
    In
    Let il.5800 =
      If Tb2248.5815 = 0 Then
        Ans (
          If inv.2638 = 0 Then
            Let l.6387 =
              Set (l.6261)
            In
            Let Td2246.5817 =
              FLord l.6387[0]
            In
            Ans (
              Td2246.5817 /. l.5799
            )
          Then
            Let l.6386 =
              Set (l.6266)
            In
            Let Td2247.5816 =
              FLord l.6386[0]
            In
            Ans (
              Td2247.5816 /. l.5799
            )
        )
      Then
        Let l.6385 =
          Set (l.6261)
        In
        Ans (
          FLord l.6385[0]
        )
    In
    Let Ti2249.5811 =
      Set (0)
    In
    Let Ti2250.5814 =
      Set (0)
    In
    Let o.6388 =
      Ti2250.5814 << 2
    In
    Let Td2251.5813 =
      FLord v.2637[o.6388]
    In
    Let Td2252.5812 =
      Td2251.5813 *. il.5800
    In
    Let o.6390 =
      Ti2249.5811 << 2
    In
    Let Tu31.5801 =
      FStore Td2252.5812 to v.2637[o.6390]
    In
    Let Ti2253.5807 =
      Set (1)
    In
    Let Ti2254.5810 =
      Set (1)
    In
    Let o.6391 =
      Ti2254.5810 << 2
    In
    Let Td2255.5809 =
      FLord v.2637[o.6391]
    In
    Let Td2256.5808 =
      Td2255.5809 *. il.5800
    In
    Let o.6393 =
      Ti2253.5807 << 2
    In
    Let Tu30.5802 =
      FStore Td2256.5808 to v.2637[o.6393]
    In
    Let Ti2257.5803 =
      Set (2)
    In
    Let Ti2258.5806 =
      Set (2)
    In
    Let o.6394 =
      Ti2258.5806 << 2
    In
    Let Td2259.5805 =
      FLord v.2637[o.6394]
    In
    Let Td2260.5804 =
      Td2259.5805 *. il.5800
    In
    Let o.6396 =
      Ti2257.5803 << 2
    In
    Ans (
      FStore Td2260.5804 to v.2637[o.6396]
    )
  Float veciprod.2639 (v.2640 w.2641 ) =
    Let Ti2219.5798 =
      Set (0)
    In
    Let o.6397 =
      Ti2219.5798 << 2
    In
    Let Td2220.5795 =
      FLord v.2640[o.6397]
    In
    Let Ti2221.5797 =
      Set (0)
    In
    Let o.6399 =
      Ti2221.5797 << 2
    In
    Let Td2222.5796 =
      FLord w.2641[o.6399]
    In
    Let Td2223.5789 =
      Td2220.5795 *. Td2222.5796
    In
    Let Ti2224.5794 =
      Set (1)
    In
    Let o.6401 =
      Ti2224.5794 << 2
    In
    Let Td2225.5791 =
      FLord v.2640[o.6401]
    In
    Let Ti2226.5793 =
      Set (1)
    In
    Let o.6403 =
      Ti2226.5793 << 2
    In
    Let Td2227.5792 =
      FLord w.2641[o.6403]
    In
    Let Td2228.5790 =
      Td2225.5791 *. Td2227.5792
    In
    Let Td2229.5783 =
      Td2223.5789 +. Td2228.5790
    In
    Let Ti2230.5788 =
      Set (2)
    In
    Let o.6405 =
      Ti2230.5788 << 2
    In
    Let Td2231.5785 =
      FLord v.2640[o.6405]
    In
    Let Ti2232.5787 =
      Set (2)
    In
    Let o.6407 =
      Ti2232.5787 << 2
    In
    Let Td2233.5786 =
      FLord w.2641[o.6407]
    In
    Let Td2234.5784 =
      Td2231.5785 *. Td2233.5786
    In
    Ans (
      Td2229.5783 +. Td2234.5784
    )
  Float veciprod2.2642 (v.2643 w0.2644 w1.2645 w2.2646 ) =
    Let Ti2209.5782 =
      Set (0)
    In
    Let o.6409 =
      Ti2209.5782 << 2
    In
    Let Td2210.5781 =
      FLord v.2643[o.6409]
    In
    Let Td2211.5777 =
      Td2210.5781 *. w0.2644
    In
    Let Ti2212.5780 =
      Set (1)
    In
    Let o.6411 =
      Ti2212.5780 << 2
    In
    Let Td2213.5779 =
      FLord v.2643[o.6411]
    In
    Let Td2214.5778 =
      Td2213.5779 *. w1.2645
    In
    Let Td2215.5773 =
      Td2211.5777 +. Td2214.5778
    In
    Let Ti2216.5776 =
      Set (2)
    In
    Let o.6413 =
      Ti2216.5776 << 2
    In
    Let Td2217.5775 =
      FLord v.2643[o.6413]
    In
    Let Td2218.5774 =
      Td2217.5775 *. w2.2646
    In
    Ans (
      Td2215.5773 +. Td2218.5774
    )
  Unit vecaccum.2647 (dest.2648 v.2650 scale.2649 ) =
    Let Ti2188.5766 =
      Set (0)
    In
    Let Ti2189.5772 =
      Set (0)
    In
    Let o.6415 =
      Ti2189.5772 << 2
    In
    Let Td2190.5768 =
      FLord dest.2648[o.6415]
    In
    Let Ti2191.5771 =
      Set (0)
    In
    Let o.6417 =
      Ti2191.5771 << 2
    In
    Let Td2192.5770 =
      FLord v.2650[o.6417]
    In
    Let Td2193.5769 =
      scale.2649 *. Td2192.5770
    In
    Let Td2194.5767 =
      Td2190.5768 +. Td2193.5769
    In
    Let o.6419 =
      Ti2188.5766 << 2
    In
    Let Tu33.5750 =
      FStore Td2194.5767 to dest.2648[o.6419]
    In
    Let Ti2195.5759 =
      Set (1)
    In
    Let Ti2196.5765 =
      Set (1)
    In
    Let o.6420 =
      Ti2196.5765 << 2
    In
    Let Td2197.5761 =
      FLord dest.2648[o.6420]
    In
    Let Ti2198.5764 =
      Set (1)
    In
    Let o.6422 =
      Ti2198.5764 << 2
    In
    Let Td2199.5763 =
      FLord v.2650[o.6422]
    In
    Let Td2200.5762 =
      scale.2649 *. Td2199.5763
    In
    Let Td2201.5760 =
      Td2197.5761 +. Td2200.5762
    In
    Let o.6424 =
      Ti2195.5759 << 2
    In
    Let Tu32.5751 =
      FStore Td2201.5760 to dest.2648[o.6424]
    In
    Let Ti2202.5752 =
      Set (2)
    In
    Let Ti2203.5758 =
      Set (2)
    In
    Let o.6425 =
      Ti2203.5758 << 2
    In
    Let Td2204.5754 =
      FLord dest.2648[o.6425]
    In
    Let Ti2205.5757 =
      Set (2)
    In
    Let o.6427 =
      Ti2205.5757 << 2
    In
    Let Td2206.5756 =
      FLord v.2650[o.6427]
    In
    Let Td2207.5755 =
      scale.2649 *. Td2206.5756
    In
    Let Td2208.5753 =
      Td2204.5754 +. Td2207.5755
    In
    Let o.6429 =
      Ti2202.5752 << 2
    In
    Ans (
      FStore Td2208.5753 to dest.2648[o.6429]
    )
  Unit vecadd.2651 (dest.2652 v.2653 ) =
    Let Ti2170.5744 =
      Set (0)
    In
    Let Ti2171.5749 =
      Set (0)
    In
    Let o.6430 =
      Ti2171.5749 << 2
    In
    Let Td2172.5746 =
      FLord dest.2652[o.6430]
    In
    Let Ti2173.5748 =
      Set (0)
    In
    Let o.6432 =
      Ti2173.5748 << 2
    In
    Let Td2174.5747 =
      FLord v.2653[o.6432]
    In
    Let Td2175.5745 =
      Td2172.5746 +. Td2174.5747
    In
    Let o.6434 =
      Ti2170.5744 << 2
    In
    Let Tu35.5730 =
      FStore Td2175.5745 to dest.2652[o.6434]
    In
    Let Ti2176.5738 =
      Set (1)
    In
    Let Ti2177.5743 =
      Set (1)
    In
    Let o.6435 =
      Ti2177.5743 << 2
    In
    Let Td2178.5740 =
      FLord dest.2652[o.6435]
    In
    Let Ti2179.5742 =
      Set (1)
    In
    Let o.6437 =
      Ti2179.5742 << 2
    In
    Let Td2180.5741 =
      FLord v.2653[o.6437]
    In
    Let Td2181.5739 =
      Td2178.5740 +. Td2180.5741
    In
    Let o.6439 =
      Ti2176.5738 << 2
    In
    Let Tu34.5731 =
      FStore Td2181.5739 to dest.2652[o.6439]
    In
    Let Ti2182.5732 =
      Set (2)
    In
    Let Ti2183.5737 =
      Set (2)
    In
    Let o.6440 =
      Ti2183.5737 << 2
    In
    Let Td2184.5734 =
      FLord dest.2652[o.6440]
    In
    Let Ti2185.5736 =
      Set (2)
    In
    Let o.6442 =
      Ti2185.5736 << 2
    In
    Let Td2186.5735 =
      FLord v.2653[o.6442]
    In
    Let Td2187.5733 =
      Td2184.5734 +. Td2186.5735
    In
    Let o.6444 =
      Ti2182.5732 << 2
    In
    Ans (
      FStore Td2187.5733 to dest.2652[o.6444]
    )
  Unit vecmul.2654 (dest.2655 v.2656 ) =
    Let Ti2152.5724 =
      Set (0)
    In
    Let Ti2153.5729 =
      Set (0)
    In
    Let o.6445 =
      Ti2153.5729 << 2
    In
    Let Td2154.5726 =
      FLord dest.2655[o.6445]
    In
    Let Ti2155.5728 =
      Set (0)
    In
    Let o.6447 =
      Ti2155.5728 << 2
    In
    Let Td2156.5727 =
      FLord v.2656[o.6447]
    In
    Let Td2157.5725 =
      Td2154.5726 *. Td2156.5727
    In
    Let o.6449 =
      Ti2152.5724 << 2
    In
    Let Tu37.5710 =
      FStore Td2157.5725 to dest.2655[o.6449]
    In
    Let Ti2158.5718 =
      Set (1)
    In
    Let Ti2159.5723 =
      Set (1)
    In
    Let o.6450 =
      Ti2159.5723 << 2
    In
    Let Td2160.5720 =
      FLord dest.2655[o.6450]
    In
    Let Ti2161.5722 =
      Set (1)
    In
    Let o.6452 =
      Ti2161.5722 << 2
    In
    Let Td2162.5721 =
      FLord v.2656[o.6452]
    In
    Let Td2163.5719 =
      Td2160.5720 *. Td2162.5721
    In
    Let o.6454 =
      Ti2158.5718 << 2
    In
    Let Tu36.5711 =
      FStore Td2163.5719 to dest.2655[o.6454]
    In
    Let Ti2164.5712 =
      Set (2)
    In
    Let Ti2165.5717 =
      Set (2)
    In
    Let o.6455 =
      Ti2165.5717 << 2
    In
    Let Td2166.5714 =
      FLord dest.2655[o.6455]
    In
    Let Ti2167.5716 =
      Set (2)
    In
    Let o.6457 =
      Ti2167.5716 << 2
    In
    Let Td2168.5715 =
      FLord v.2656[o.6457]
    In
    Let Td2169.5713 =
      Td2166.5714 *. Td2168.5715
    In
    Let o.6459 =
      Ti2164.5712 << 2
    In
    Ans (
      FStore Td2169.5713 to dest.2655[o.6459]
    )
  Unit vecscale.2657 (dest.2658 scale.2659 ) =
    Let Ti2140.5706 =
      Set (0)
    In
    Let Ti2141.5709 =
      Set (0)
    In
    Let o.6460 =
      Ti2141.5709 << 2
    In
    Let Td2142.5708 =
      FLord dest.2658[o.6460]
    In
    Let Td2143.5707 =
      Td2142.5708 *. scale.2659
    In
    Let o.6462 =
      Ti2140.5706 << 2
    In
    Let Tu39.5696 =
      FStore Td2143.5707 to dest.2658[o.6462]
    In
    Let Ti2144.5702 =
      Set (1)
    In
    Let Ti2145.5705 =
      Set (1)
    In
    Let o.6463 =
      Ti2145.5705 << 2
    In
    Let Td2146.5704 =
      FLord dest.2658[o.6463]
    In
    Let Td2147.5703 =
      Td2146.5704 *. scale.2659
    In
    Let o.6465 =
      Ti2144.5702 << 2
    In
    Let Tu38.5697 =
      FStore Td2147.5703 to dest.2658[o.6465]
    In
    Let Ti2148.5698 =
      Set (2)
    In
    Let Ti2149.5701 =
      Set (2)
    In
    Let o.6466 =
      Ti2149.5701 << 2
    In
    Let Td2150.5700 =
      FLord dest.2658[o.6466]
    In
    Let Td2151.5699 =
      Td2150.5700 *. scale.2659
    In
    Let o.6468 =
      Ti2148.5698 << 2
    In
    Ans (
      FStore Td2151.5699 to dest.2658[o.6468]
    )
  Unit vecaccumv.2660 (dest.2661 v.2662 w.2663 ) =
    Let Ti2113.5687 =
      Set (0)
    In
    Let Ti2114.5695 =
      Set (0)
    In
    Let o.6469 =
      Ti2114.5695 << 2
    In
    Let Td2115.5689 =
      FLord dest.2661[o.6469]
    In
    Let Ti2116.5694 =
      Set (0)
    In
    Let o.6471 =
      Ti2116.5694 << 2
    In
    Let Td2117.5691 =
      FLord v.2662[o.6471]
    In
    Let Ti2118.5693 =
      Set (0)
    In
    Let o.6473 =
      Ti2118.5693 << 2
    In
    Let Td2119.5692 =
      FLord w.2663[o.6473]
    In
    Let Td2120.5690 =
      Td2117.5691 *. Td2119.5692
    In
    Let Td2121.5688 =
      Td2115.5689 +. Td2120.5690
    In
    Let o.6475 =
      Ti2113.5687 << 2
    In
    Let Tu41.5667 =
      FStore Td2121.5688 to dest.2661[o.6475]
    In
    Let Ti2122.5678 =
      Set (1)
    In
    Let Ti2123.5686 =
      Set (1)
    In
    Let o.6476 =
      Ti2123.5686 << 2
    In
    Let Td2124.5680 =
      FLord dest.2661[o.6476]
    In
    Let Ti2125.5685 =
      Set (1)
    In
    Let o.6478 =
      Ti2125.5685 << 2
    In
    Let Td2126.5682 =
      FLord v.2662[o.6478]
    In
    Let Ti2127.5684 =
      Set (1)
    In
    Let o.6480 =
      Ti2127.5684 << 2
    In
    Let Td2128.5683 =
      FLord w.2663[o.6480]
    In
    Let Td2129.5681 =
      Td2126.5682 *. Td2128.5683
    In
    Let Td2130.5679 =
      Td2124.5680 +. Td2129.5681
    In
    Let o.6482 =
      Ti2122.5678 << 2
    In
    Let Tu40.5668 =
      FStore Td2130.5679 to dest.2661[o.6482]
    In
    Let Ti2131.5669 =
      Set (2)
    In
    Let Ti2132.5677 =
      Set (2)
    In
    Let o.6483 =
      Ti2132.5677 << 2
    In
    Let Td2133.5671 =
      FLord dest.2661[o.6483]
    In
    Let Ti2134.5676 =
      Set (2)
    In
    Let o.6485 =
      Ti2134.5676 << 2
    In
    Let Td2135.5673 =
      FLord v.2662[o.6485]
    In
    Let Ti2136.5675 =
      Set (2)
    In
    Let o.6487 =
      Ti2136.5675 << 2
    In
    Let Td2137.5674 =
      FLord w.2663[o.6487]
    In
    Let Td2138.5672 =
      Td2135.5673 *. Td2137.5674
    In
    Let Td2139.5670 =
      Td2133.5671 +. Td2138.5672
    In
    Let o.6489 =
      Ti2131.5669 << 2
    In
    Ans (
      FStore Td2139.5670 to dest.2661[o.6489]
    )
  Int o_texturetype.2664 (m.2665 ) =
    Let m_tex.5656 =
      Lord m.2665[0]
    In
    Ans (
      Mov (m_tex.5656)
    )
  Int o_form.2666 (m.2667 ) =
    Let m_shape.5646 =
      Lord m.2667[-4]
    In
    Ans (
      Mov (m_shape.5646)
    )
  Int o_reflectiontype.2668 (m.2669 ) =
    Let m_surface.5636 =
      Lord m.2669[-8]
    In
    Ans (
      Mov (m_surface.5636)
    )
  Bool o_isinvert.2670 (m.2671 ) =
    Let m_invert.5629 =
      Lord m.2671[-24]
    In
    Ans (
      Mov (m_invert.5629)
    )
  Int o_isrot.2672 (m.2673 ) =
    Let m_isrot.5615 =
      Lord m.2673[-12]
    In
    Ans (
      Mov (m_isrot.5615)
    )
  Float o_param_a.2674 (m.2675 ) =
    Let m_abc.5604 =
      Lord m.2675[-16]
    In
    Let Ti2112.5611 =
      Set (0)
    In
    Let o.6490 =
      Ti2112.5611 << 2
    In
    Ans (
      FLord m_abc.5604[o.6490]
    )
  Float o_param_b.2676 (m.2677 ) =
    Let m_abc.5592 =
      Lord m.2677[-16]
    In
    Let Ti2111.5599 =
      Set (1)
    In
    Let o.6492 =
      Ti2111.5599 << 2
    In
    Ans (
      FLord m_abc.5592[o.6492]
    )
  Float o_param_c.2678 (m.2679 ) =
    Let m_abc.5580 =
      Lord m.2679[-16]
    In
    Let Ti2110.5587 =
      Set (2)
    In
    Let o.6494 =
      Ti2110.5587 << 2
    In
    Ans (
      FLord m_abc.5580[o.6494]
    )
  Array(Float) o_param_abc.2680 (m.2681 ) =
    Let m_abc.5569 =
      Lord m.2681[-16]
    In
    Ans (
      Mov (m_abc.5569)
    )
  Float o_param_x.2682 (m.2683 ) =
    Let m_xyz.5558 =
      Lord m.2683[-20]
    In
    Let Ti2109.5564 =
      Set (0)
    In
    Let o.6496 =
      Ti2109.5564 << 2
    In
    Ans (
      FLord m_xyz.5558[o.6496]
    )
  Float o_param_y.2684 (m.2685 ) =
    Let m_xyz.5546 =
      Lord m.2685[-20]
    In
    Let Ti2108.5552 =
      Set (1)
    In
    Let o.6498 =
      Ti2108.5552 << 2
    In
    Ans (
      FLord m_xyz.5546[o.6498]
    )
  Float o_param_z.2686 (m.2687 ) =
    Let m_xyz.5534 =
      Lord m.2687[-20]
    In
    Let Ti2107.5540 =
      Set (2)
    In
    Let o.6500 =
      Ti2107.5540 << 2
    In
    Ans (
      FLord m_xyz.5534[o.6500]
    )
  Float o_diffuse.2688 (m.2689 ) =
    Let m_surfparams.5524 =
      Lord m.2689[-28]
    In
    Let Ti2106.5528 =
      Set (0)
    In
    Let o.6502 =
      Ti2106.5528 << 2
    In
    Ans (
      FLord m_surfparams.5524[o.6502]
    )
  Float o_hilight.2690 (m.2691 ) =
    Let m_surfparams.5512 =
      Lord m.2691[-28]
    In
    Let Ti2105.5516 =
      Set (1)
    In
    Let o.6504 =
      Ti2105.5516 << 2
    In
    Ans (
      FLord m_surfparams.5512[o.6504]
    )
  Float o_color_red.2692 (m.2693 ) =
    Let m_color.5501 =
      Lord m.2693[-32]
    In
    Let Ti2104.5504 =
      Set (0)
    In
    Let o.6506 =
      Ti2104.5504 << 2
    In
    Ans (
      FLord m_color.5501[o.6506]
    )
  Float o_color_green.2694 (m.2695 ) =
    Let m_color.5489 =
      Lord m.2695[-32]
    In
    Let Ti2103.5492 =
      Set (1)
    In
    Let o.6508 =
      Ti2103.5492 << 2
    In
    Ans (
      FLord m_color.5489[o.6508]
    )
  Float o_color_blue.2696 (m.2697 ) =
    Let m_color.5477 =
      Lord m.2697[-32]
    In
    Let Ti2102.5480 =
      Set (2)
    In
    Let o.6510 =
      Ti2102.5480 << 2
    In
    Ans (
      FLord m_color.5477[o.6510]
    )
  Float o_param_r1.2698 (m.2699 ) =
    Let m_rot123.5466 =
      Lord m.2699[-36]
    In
    Let Ti2101.5468 =
      Set (0)
    In
    Let o.6512 =
      Ti2101.5468 << 2
    In
    Ans (
      FLord m_rot123.5466[o.6512]
    )
  Float o_param_r2.2700 (m.2701 ) =
    Let m_rot123.5454 =
      Lord m.2701[-36]
    In
    Let Ti2100.5456 =
      Set (1)
    In
    Let o.6514 =
      Ti2100.5456 << 2
    In
    Ans (
      FLord m_rot123.5454[o.6514]
    )
  Float o_param_r3.2702 (m.2703 ) =
    Let m_rot123.5442 =
      Lord m.2703[-36]
    In
    Let Ti2099.5444 =
      Set (2)
    In
    Let o.6516 =
      Ti2099.5444 << 2
    In
    Ans (
      FLord m_rot123.5442[o.6516]
    )
  Array(Float) o_param_ctbl.2704 (m.2705 ) =
    Let m_ctbl.5432 =
      Lord m.2705[-40]
    In
    Ans (
      Mov (m_ctbl.5432)
    )
  Array(Float) p_rgb.2706 (pixel.2707 ) =
    Let m_rgb.5414 =
      Lord pixel.2707[0]
    In
    Ans (
      Mov (m_rgb.5414)
    )
  Array(Array(Float)) p_intersection_points.2708 (pixel.2709 ) =
    Let m_isect_ps.5407 =
      Lord pixel.2709[-4]
    In
    Ans (
      Mov (m_isect_ps.5407)
    )
  Array(Int) p_surface_ids.2710 (pixel.2711 ) =
    Let m_sids.5400 =
      Lord pixel.2711[-8]
    In
    Ans (
      Mov (m_sids.5400)
    )
  Array(Bool) p_calc_diffuse.2712 (pixel.2713 ) =
    Let m_cdif.5393 =
      Lord pixel.2713[-12]
    In
    Ans (
      Mov (m_cdif.5393)
    )
  Array(Array(Float)) p_energy.2714 (pixel.2715 ) =
    Let m_engy.5386 =
      Lord pixel.2715[-16]
    In
    Ans (
      Mov (m_engy.5386)
    )
  Array(Array(Float)) p_received_ray_20percent.2716 (pixel.2717 ) =
    Let m_r20p.5379 =
      Lord pixel.2717[-20]
    In
    Ans (
      Mov (m_r20p.5379)
    )
  Int p_group_id.2718 (pixel.2719 ) =
    Let m_gid.5371 =
      Lord pixel.2719[-24]
    In
    Let Ti2098.5373 =
      Set (0)
    In
    Let o.6518 =
      Ti2098.5373 << 2
    In
    Ans (
      Lord m_gid.5371[o.6518]
    )
  Unit p_set_group_id.2720 (pixel.2721 id.2722 ) =
    Let m_gid.5362 =
      Lord pixel.2721[-24]
    In
    Let Ti2097.5364 =
      Set (0)
    In
    Let o.6520 =
      Ti2097.5364 << 2
    In
    Ans (
      Store id.2722 to m_gid.5362[o.6520]
    )
  Array(Array(Float)) p_nvectors.2723 (pixel.2724 ) =
    Let m_nvectors.5355 =
      Lord pixel.2724[-28]
    In
    Ans (
      Mov (m_nvectors.5355)
    )
  Array(Float) d_vec.2725 (d.2726 ) =
    Let m_vec.5346 =
      Lord d.2726[0]
    In
    Ans (
      Mov (m_vec.5346)
    )
  Array(Array(Float)) d_const.2727 (d.2728 ) =
    Let m_const.5345 =
      Lord d.2728[-4]
    In
    Ans (
      Mov (m_const.5345)
    )
  Int r_surface_id.2729 (r.2730 ) =
    Let m_sid.5341 =
      Lord r.2730[0]
    In
    Ans (
      Mov (m_sid.5341)
    )
  Array(Float) * Array(Array(Float)) r_dvec.2731 (r.2732 ) =
    Let m_dvec.5339 =
      Lord r.2732[-4]
    In
    Ans (
      Mov (m_dvec.5339)
    )
  Float r_bright.2733 (r.2734 ) =
    Let m_br.5337 =
      FLord r.2734[-8]
    In
    Ans (
      FMovD (m_br.5337)
    )
  Float rad.2735 (x.2736 ) =
    Let l.6522 =
      Set (l.6521)
    In
    Let Td2096.5334 =
      FLord l.6522[0]
    In
    Ans (
      x.2736 *. Td2096.5334
    )
  Unit read_screen_settings.2737 () =
    Let viewpoint.2580 =
      Lord %g27[-32]
    In
    Let sin.2546 =
      Lord %g27[-28]
    In
    Let screenz_dir.2601 =
      Lord %g27[-24]
    In
    Let screeny_dir.2600 =
      Lord %g27[-20]
    In
    Let screenx_dir.2599 =
      Lord %g27[-16]
    In
    Let screen.2579 =
      Lord %g27[-12]
    In
    Let read_float.2568 =
      Lord %g27[-8]
    In
    Let cos.2548 =
      Lord %g27[-4]
    In
    Let Ti2041.5331 =
      Set (0)
    In
    Let Tu2042.5333 =
      Nop
    In
    Let Td2043.5332 =
      CallCls read_float.2568 
    In
    Let o.6523 =
      Ti2041.5331 << 2
    In
    Let Tu56.5259 =
      FStore Td2043.5332 to screen.2579[o.6523]
    In
    Let Ti2044.5328 =
      Set (1)
    In
    Let Tu2045.5330 =
      Nop
    In
    Let Td2046.5329 =
      CallCls read_float.2568 
    In
    Let o.6524 =
      Ti2044.5328 << 2
    In
    Let Tu55.5260 =
      FStore Td2046.5329 to screen.2579[o.6524]
    In
    Let Ti2047.5325 =
      Set (2)
    In
    Let Tu2048.5327 =
      Nop
    In
    Let Td2049.5326 =
      CallCls read_float.2568 
    In
    Let o.6525 =
      Ti2047.5325 << 2
    In
    Let Tu54.5261 =
      FStore Td2049.5326 to screen.2579[o.6525]
    In
    Let Tu2050.5324 =
      Nop
    In
    Let Td2051.5323 =
      CallCls read_float.2568 
    In
    Let v1.5262 =
      CallDir rad.2735 Td2051.5323 
    In
    Let cos_v1.5263 =
      CallCls cos.2548 v1.5262 
    In
    Let sin_v1.5264 =
      CallCls sin.2546 v1.5262 
    In
    Let Tu2052.5322 =
      Nop
    In
    Let Td2053.5321 =
      CallCls read_float.2568 
    In
    Let v2.5265 =
      CallDir rad.2735 Td2053.5321 
    In
    Let cos_v2.5266 =
      CallCls cos.2548 v2.5265 
    In
    Let sin_v2.5267 =
      CallCls sin.2546 v2.5265 
    In
    Let Ti2054.5317 =
      Set (0)
    In
    Let Td2055.5319 =
      cos_v1.5263 *. sin_v2.5267
    In
    Let l.6527 =
      Set (l.6526)
    In
    Let Td2056.5320 =
      FLord l.6527[0]
    In
    Let Td2057.5318 =
      Td2055.5319 *. Td2056.5320
    In
    Let o.6528 =
      Ti2054.5317 << 2
    In
    Let Tu53.5268 =
      FStore Td2057.5318 to screenz_dir.2601[o.6528]
    In
    Let Ti2058.5314 =
      Set (1)
    In
    Let l.6530 =
      Set (l.6529)
    In
    Let Td2059.5316 =
      FLord l.6530[0]
    In
    Let Td2060.5315 =
      sin_v1.5264 *. Td2059.5316
    In
    Let o.6531 =
      Ti2058.5314 << 2
    In
    Let Tu52.5269 =
      FStore Td2060.5315 to screenz_dir.2601[o.6531]
    In
    Let Ti2061.5310 =
      Set (2)
    In
    Let Td2062.5312 =
      cos_v1.5263 *. cos_v2.5266
    In
    Let l.6532 =
      Set (l.6526)
    In
    Let Td2063.5313 =
      FLord l.6532[0]
    In
    Let Td2064.5311 =
      Td2062.5312 *. Td2063.5313
    In
    Let o.6533 =
      Ti2061.5310 << 2
    In
    Let Tu51.5270 =
      FStore Td2064.5311 to screenz_dir.2601[o.6533]
    In
    Let Ti2065.5309 =
      Set (0)
    In
    Let o.6534 =
      Ti2065.5309 << 2
    In
    Let Tu50.5271 =
      FStore cos_v2.5266 to screenx_dir.2599[o.6534]
    In
    Let Ti2066.5307 =
      Set (1)
    In
    Let l.6535 =
      Set (l.6252)
    In
    Let Td2067.5308 =
      FLord l.6535[0]
    In
    Let o.6536 =
      Ti2066.5307 << 2
    In
    Let Tu49.5272 =
      FStore Td2067.5308 to screenx_dir.2599[o.6536]
    In
    Let Ti2068.5305 =
      Set (2)
    In
    Let Td2069.5306 =
      CallDir fneg.2527 sin_v2.5267 
    In
    Let o.6537 =
      Ti2068.5305 << 2
    In
    Let Tu48.5273 =
      FStore Td2069.5306 to screenx_dir.2599[o.6537]
    In
    Let Ti2070.5302 =
      Set (0)
    In
    Let Td2071.5304 =
      CallDir fneg.2527 sin_v1.5264 
    In
    Let Td2072.5303 =
      Td2071.5304 *. sin_v2.5267
    In
    Let o.6538 =
      Ti2070.5302 << 2
    In
    Let Tu47.5274 =
      FStore Td2072.5303 to screeny_dir.2600[o.6538]
    In
    Let Ti2073.5300 =
      Set (1)
    In
    Let Td2074.5301 =
      CallDir fneg.2527 cos_v1.5263 
    In
    Let o.6539 =
      Ti2073.5300 << 2
    In
    Let Tu46.5275 =
      FStore Td2074.5301 to screeny_dir.2600[o.6539]
    In
    Let Ti2075.5297 =
      Set (2)
    In
    Let Td2076.5299 =
      CallDir fneg.2527 sin_v1.5264 
    In
    Let Td2077.5298 =
      Td2076.5299 *. cos_v2.5266
    In
    Let o.6540 =
      Ti2075.5297 << 2
    In
    Let Tu45.5276 =
      FStore Td2077.5298 to screeny_dir.2600[o.6540]
    In
    Let Ti2078.5291 =
      Set (0)
    In
    Let Ti2079.5296 =
      Set (0)
    In
    Let o.6541 =
      Ti2079.5296 << 2
    In
    Let Td2080.5293 =
      FLord screen.2579[o.6541]
    In
    Let Ti2081.5295 =
      Set (0)
    In
    Let o.6543 =
      Ti2081.5295 << 2
    In
    Let Td2082.5294 =
      FLord screenz_dir.2601[o.6543]
    In
    Let Td2083.5292 =
      Td2080.5293 -. Td2082.5294
    In
    Let o.6545 =
      Ti2078.5291 << 2
    In
    Let Tu44.5277 =
      FStore Td2083.5292 to viewpoint.2580[o.6545]
    In
    Let Ti2084.5285 =
      Set (1)
    In
    Let Ti2085.5290 =
      Set (1)
    In
    Let o.6546 =
      Ti2085.5290 << 2
    In
    Let Td2086.5287 =
      FLord screen.2579[o.6546]
    In
    Let Ti2087.5289 =
      Set (1)
    In
    Let o.6548 =
      Ti2087.5289 << 2
    In
    Let Td2088.5288 =
      FLord screenz_dir.2601[o.6548]
    In
    Let Td2089.5286 =
      Td2086.5287 -. Td2088.5288
    In
    Let o.6550 =
      Ti2084.5285 << 2
    In
    Let Tu43.5278 =
      FStore Td2089.5286 to viewpoint.2580[o.6550]
    In
    Let Ti2090.5279 =
      Set (2)
    In
    Let Ti2091.5284 =
      Set (2)
    In
    Let o.6551 =
      Ti2091.5284 << 2
    In
    Let Td2092.5281 =
      FLord screen.2579[o.6551]
    In
    Let Ti2093.5283 =
      Set (2)
    In
    Let o.6553 =
      Ti2093.5283 << 2
    In
    Let Td2094.5282 =
      FLord screenz_dir.2601[o.6553]
    In
    Let Td2095.5280 =
      Td2092.5281 -. Td2094.5282
    In
    Let o.6555 =
      Ti2090.5279 << 2
    In
    Ans (
      FStore Td2095.5280 to viewpoint.2580[o.6555]
    )
  Unit read_light.2739 () =
    Let sin.2546 =
      Lord %g27[-24]
    In
    Let read_int.2557 =
      Lord %g27[-20]
    In
    Let read_float.2568 =
      Lord %g27[-16]
    In
    Let light.2581 =
      Lord %g27[-12]
    In
    Let cos.2548 =
      Lord %g27[-8]
    In
    Let beam.2582 =
      Lord %g27[-4]
    In
    Let Tu2027.5258 =
      Nop
    In
    Let nl.5235 =
      CallCls read_int.2557 
    In
    Let Tu2028.5257 =
      Nop
    In
    Let Td2029.5256 =
      CallCls read_float.2568 
    In
    Let l1.5236 =
      CallDir rad.2735 Td2029.5256 
    In
    Let sl1.5237 =
      CallCls sin.2546 l1.5236 
    In
    Let Ti2030.5254 =
      Set (1)
    In
    Let Td2031.5255 =
      CallDir fneg.2527 sl1.5237 
    In
    Let o.6556 =
      Ti2030.5254 << 2
    In
    Let Tu60.5238 =
      FStore Td2031.5255 to light.2581[o.6556]
    In
    Let Tu2032.5253 =
      Nop
    In
    Let Td2033.5252 =
      CallCls read_float.2568 
    In
    Let l2.5239 =
      CallDir rad.2735 Td2033.5252 
    In
    Let cl1.5240 =
      CallCls cos.2548 l1.5236 
    In
    Let sl2.5241 =
      CallCls sin.2546 l2.5239 
    In
    Let Ti2034.5250 =
      Set (0)
    In
    Let Td2035.5251 =
      cl1.5240 *. sl2.5241
    In
    Let o.6557 =
      Ti2034.5250 << 2
    In
    Let Tu59.5242 =
      FStore Td2035.5251 to light.2581[o.6557]
    In
    Let cl2.5243 =
      CallCls cos.2548 l2.5239 
    In
    Let Ti2036.5248 =
      Set (2)
    In
    Let Td2037.5249 =
      cl1.5240 *. cl2.5243
    In
    Let o.6558 =
      Ti2036.5248 << 2
    In
    Let Tu58.5244 =
      FStore Td2037.5249 to light.2581[o.6558]
    In
    Let Ti2038.5245 =
      Set (0)
    In
    Let Tu2039.5247 =
      Nop
    In
    Let Td2040.5246 =
      CallCls read_float.2568 
    In
    Let o.6559 =
      Ti2038.5245 << 2
    In
    Ans (
      FStore Td2040.5246 to beam.2582[o.6559]
    )
  Unit rotate_quadratic_matrix.2741 (abc.2742 rot.2743 ) =
    Let sin.2546 =
      Lord %g27[-8]
    In
    Let cos.2548 =
      Lord %g27[-4]
    In
    Let Ti1940.5234 =
      Set (0)
    In
    Let o.6560 =
      Ti1940.5234 << 2
    In
    Let Td1941.5233 =
      FLord rot.2743[o.6560]
    In
    Let cos_x.5125 =
      CallCls cos.2548 Td1941.5233 
    In
    Let Ti1942.5232 =
      Set (0)
    In
    Let o.6562 =
      Ti1942.5232 << 2
    In
    Let Td1943.5231 =
      FLord rot.2743[o.6562]
    In
    Let sin_x.5126 =
      CallCls sin.2546 Td1943.5231 
    In
    Let Ti1944.5230 =
      Set (1)
    In
    Let o.6564 =
      Ti1944.5230 << 2
    In
    Let Td1945.5229 =
      FLord rot.2743[o.6564]
    In
    Let cos_y.5127 =
      CallCls cos.2548 Td1945.5229 
    In
    Let Ti1946.5228 =
      Set (1)
    In
    Let o.6566 =
      Ti1946.5228 << 2
    In
    Let Td1947.5227 =
      FLord rot.2743[o.6566]
    In
    Let sin_y.5128 =
      CallCls sin.2546 Td1947.5227 
    In
    Let Ti1948.5226 =
      Set (2)
    In
    Let o.6568 =
      Ti1948.5226 << 2
    In
    Let Td1949.5225 =
      FLord rot.2743[o.6568]
    In
    Let cos_z.5129 =
      CallCls cos.2548 Td1949.5225 
    In
    Let Ti1950.5224 =
      Set (2)
    In
    Let o.6570 =
      Ti1950.5224 << 2
    In
    Let Td1951.5223 =
      FLord rot.2743[o.6570]
    In
    Let sin_z.5130 =
      CallCls sin.2546 Td1951.5223 
    In
    Let m00.5131 =
      cos_y.5127 *. cos_z.5129
    In
    Let Td1952.5222 =
      sin_x.5126 *. sin_y.5128
    In
    Let Td1953.5220 =
      Td1952.5222 *. cos_z.5129
    In
    Let Td1954.5221 =
      cos_x.5125 *. sin_z.5130
    In
    Let m01.5132 =
      Td1953.5220 -. Td1954.5221
    In
    Let Td1955.5219 =
      cos_x.5125 *. sin_y.5128
    In
    Let Td1956.5217 =
      Td1955.5219 *. cos_z.5129
    In
    Let Td1957.5218 =
      sin_x.5126 *. sin_z.5130
    In
    Let m02.5133 =
      Td1956.5217 +. Td1957.5218
    In
    Let m10.5134 =
      cos_y.5127 *. sin_z.5130
    In
    Let Td1958.5216 =
      sin_x.5126 *. sin_y.5128
    In
    Let Td1959.5214 =
      Td1958.5216 *. sin_z.5130
    In
    Let Td1960.5215 =
      cos_x.5125 *. cos_z.5129
    In
    Let m11.5135 =
      Td1959.5214 +. Td1960.5215
    In
    Let Td1961.5213 =
      cos_x.5125 *. sin_y.5128
    In
    Let Td1962.5211 =
      Td1961.5213 *. sin_z.5130
    In
    Let Td1963.5212 =
      sin_x.5126 *. cos_z.5129
    In
    Let m12.5136 =
      Td1962.5211 -. Td1963.5212
    In
    Let m20.5137 =
      CallDir fneg.2527 sin_y.5128 
    In
    Let m21.5138 =
      sin_x.5126 *. cos_y.5127
    In
    Let m22.5139 =
      cos_x.5125 *. cos_y.5127
    In
    Let Ti1964.5210 =
      Set (0)
    In
    Let o.6572 =
      Ti1964.5210 << 2
    In
    Let ao.5140 =
      FLord abc.2742[o.6572]
    In
    Let Ti1965.5209 =
      Set (1)
    In
    Let o.6574 =
      Ti1965.5209 << 2
    In
    Let bo.5141 =
      FLord abc.2742[o.6574]
    In
    Let Ti1966.5208 =
      Set (2)
    In
    Let o.6576 =
      Ti1966.5208 << 2
    In
    Let co.5142 =
      FLord abc.2742[o.6576]
    In
    Let Ti1967.5199 =
      Set (0)
    In
    Let Td1968.5207 =
      CallDir fsqr.2531 m00.5131 
    In
    Let Td1969.5204 =
      ao.5140 *. Td1968.5207
    In
    Let Td1970.5206 =
      CallDir fsqr.2531 m10.5134 
    In
    Let Td1971.5205 =
      bo.5141 *. Td1970.5206
    In
    Let Td1972.5201 =
      Td1969.5204 +. Td1971.5205
    In
    Let Td1973.5203 =
      CallDir fsqr.2531 m20.5137 
    In
    Let Td1974.5202 =
      co.5142 *. Td1973.5203
    In
    Let Td1975.5200 =
      Td1972.5201 +. Td1974.5202
    In
    Let o.6578 =
      Ti1967.5199 << 2
    In
    Let Tu65.5143 =
      FStore Td1975.5200 to abc.2742[o.6578]
    In
    Let Ti1976.5190 =
      Set (1)
    In
    Let Td1977.5198 =
      CallDir fsqr.2531 m01.5132 
    In
    Let Td1978.5195 =
      ao.5140 *. Td1977.5198
    In
    Let Td1979.5197 =
      CallDir fsqr.2531 m11.5135 
    In
    Let Td1980.5196 =
      bo.5141 *. Td1979.5197
    In
    Let Td1981.5192 =
      Td1978.5195 +. Td1980.5196
    In
    Let Td1982.5194 =
      CallDir fsqr.2531 m21.5138 
    In
    Let Td1983.5193 =
      co.5142 *. Td1982.5194
    In
    Let Td1984.5191 =
      Td1981.5192 +. Td1983.5193
    In
    Let o.6579 =
      Ti1976.5190 << 2
    In
    Let Tu64.5144 =
      FStore Td1984.5191 to abc.2742[o.6579]
    In
    Let Ti1985.5181 =
      Set (2)
    In
    Let Td1986.5189 =
      CallDir fsqr.2531 m02.5133 
    In
    Let Td1987.5186 =
      ao.5140 *. Td1986.5189
    In
    Let Td1988.5188 =
      CallDir fsqr.2531 m12.5136 
    In
    Let Td1989.5187 =
      bo.5141 *. Td1988.5188
    In
    Let Td1990.5183 =
      Td1987.5186 +. Td1989.5187
    In
    Let Td1991.5185 =
      CallDir fsqr.2531 m22.5139 
    In
    Let Td1992.5184 =
      co.5142 *. Td1991.5185
    In
    Let Td1993.5182 =
      Td1990.5183 +. Td1992.5184
    In
    Let o.6580 =
      Ti1985.5181 << 2
    In
    Let Tu63.5145 =
      FStore Td1993.5182 to abc.2742[o.6580]
    In
    Let Ti1994.5170 =
      Set (0)
    In
    Let l.6581 =
      Set (l.6257)
    In
    Let Td1995.5172 =
      FLord l.6581[0]
    In
    Let Td1996.5180 =
      ao.5140 *. m01.5132
    In
    Let Td1997.5177 =
      Td1996.5180 *. m02.5133
    In
    Let Td1998.5179 =
      bo.5141 *. m11.5135
    In
    Let Td1999.5178 =
      Td1998.5179 *. m12.5136
    In
    Let Td2000.5174 =
      Td1997.5177 +. Td1999.5178
    In
    Let Td2001.5176 =
      co.5142 *. m21.5138
    In
    Let Td2002.5175 =
      Td2001.5176 *. m22.5139
    In
    Let Td2003.5173 =
      Td2000.5174 +. Td2002.5175
    In
    Let Td2004.5171 =
      Td1995.5172 *. Td2003.5173
    In
    Let o.6582 =
      Ti1994.5170 << 2
    In
    Let Tu62.5146 =
      FStore Td2004.5171 to rot.2743[o.6582]
    In
    Let Ti2005.5159 =
      Set (1)
    In
    Let l.6583 =
      Set (l.6257)
    In
    Let Td2006.5161 =
      FLord l.6583[0]
    In
    Let Td2007.5169 =
      ao.5140 *. m00.5131
    In
    Let Td2008.5166 =
      Td2007.5169 *. m02.5133
    In
    Let Td2009.5168 =
      bo.5141 *. m10.5134
    In
    Let Td2010.5167 =
      Td2009.5168 *. m12.5136
    In
    Let Td2011.5163 =
      Td2008.5166 +. Td2010.5167
    In
    Let Td2012.5165 =
      co.5142 *. m20.5137
    In
    Let Td2013.5164 =
      Td2012.5165 *. m22.5139
    In
    Let Td2014.5162 =
      Td2011.5163 +. Td2013.5164
    In
    Let Td2015.5160 =
      Td2006.5161 *. Td2014.5162
    In
    Let o.6584 =
      Ti2005.5159 << 2
    In
    Let Tu61.5147 =
      FStore Td2015.5160 to rot.2743[o.6584]
    In
    Let Ti2016.5148 =
      Set (2)
    In
    Let l.6585 =
      Set (l.6257)
    In
    Let Td2017.5150 =
      FLord l.6585[0]
    In
    Let Td2018.5158 =
      ao.5140 *. m00.5131
    In
    Let Td2019.5155 =
      Td2018.5158 *. m01.5132
    In
    Let Td2020.5157 =
      bo.5141 *. m10.5134
    In
    Let Td2021.5156 =
      Td2020.5157 *. m11.5135
    In
    Let Td2022.5152 =
      Td2019.5155 +. Td2021.5156
    In
    Let Td2023.5154 =
      co.5142 *. m20.5137
    In
    Let Td2024.5153 =
      Td2023.5154 *. m21.5138
    In
    Let Td2025.5151 =
      Td2022.5152 +. Td2024.5153
    In
    Let Td2026.5149 =
      Td2017.5150 *. Td2025.5151
    In
    Let o.6586 =
      Ti2016.5148 << 2
    In
    Ans (
      FStore Td2026.5149 to rot.2743[o.6586]
    )
  Bool read_nth_object.2744 (n.2745 ) =
    Let rotate_quadratic_matrix.2741 =
      Lord %g27[-16]
    In
    Let read_int.2557 =
      Lord %g27[-12]
    In
    Let read_float.2568 =
      Lord %g27[-8]
    In
    Let objects.2578 =
      Lord %g27[-4]
    In
    Let Tu1853.5124 =
      Nop
    In
    Let texture.5003 =
      CallCls read_int.2557 
    In
    Let Ti1854.5123 =
      Set (1)
    In
    Let Ti1939.5004 =
      Neg (Ti1854.5123)
    In
    Ans (
      If texture.5003 = Ti1939.5004 Then
        Ans (
          Set (0)
        )
      Then
        Let Tu1855.5122 =
          Nop
        In
        Let form.5005 =
          CallCls read_int.2557 
        In
        Let Tu1856.5121 =
          Nop
        In
        Let refltype.5006 =
          CallCls read_int.2557 
        In
        Let Tu1857.5120 =
          Nop
        In
        Let isrot_p.5007 =
          CallCls read_int.2557 
        In
        Let Ti1858.5118 =
          Set (3)
        In
        Let l.6587 =
          Set (l.6252)
        In
        Let Td1859.5119 =
          FLord l.6587[0]
        In
        Let abc.5008 =
          CallDir min_caml_create_float_array Ti1858.5118 Td1859.5119 
        In
        Let Ti1860.5115 =
          Set (0)
        In
        Let Tu1861.5117 =
          Nop
        In
        Let Td1862.5116 =
          CallCls read_float.2568 
        In
        Let o.6588 =
          Ti1860.5115 << 2
        In
        Let Tu84.5009 =
          FStore Td1862.5116 to abc.5008[o.6588]
        In
        Let Ti1863.5112 =
          Set (1)
        In
        Let Tu1864.5114 =
          Nop
        In
        Let Td1865.5113 =
          CallCls read_float.2568 
        In
        Let o.6589 =
          Ti1863.5112 << 2
        In
        Let Tu83.5010 =
          FStore Td1865.5113 to abc.5008[o.6589]
        In
        Let Ti1866.5109 =
          Set (2)
        In
        Let Tu1867.5111 =
          Nop
        In
        Let Td1868.5110 =
          CallCls read_float.2568 
        In
        Let o.6590 =
          Ti1866.5109 << 2
        In
        Let Tu82.5011 =
          FStore Td1868.5110 to abc.5008[o.6590]
        In
        Let Ti1869.5107 =
          Set (3)
        In
        Let l.6591 =
          Set (l.6252)
        In
        Let Td1870.5108 =
          FLord l.6591[0]
        In
        Let xyz.5012 =
          CallDir min_caml_create_float_array Ti1869.5107 Td1870.5108 
        In
        Let Ti1871.5104 =
          Set (0)
        In
        Let Tu1872.5106 =
          Nop
        In
        Let Td1873.5105 =
          CallCls read_float.2568 
        In
        Let o.6592 =
          Ti1871.5104 << 2
        In
        Let Tu81.5013 =
          FStore Td1873.5105 to xyz.5012[o.6592]
        In
        Let Ti1874.5101 =
          Set (1)
        In
        Let Tu1875.5103 =
          Nop
        In
        Let Td1876.5102 =
          CallCls read_float.2568 
        In
        Let o.6593 =
          Ti1874.5101 << 2
        In
        Let Tu80.5014 =
          FStore Td1876.5102 to xyz.5012[o.6593]
        In
        Let Ti1877.5098 =
          Set (2)
        In
        Let Tu1878.5100 =
          Nop
        In
        Let Td1879.5099 =
          CallCls read_float.2568 
        In
        Let o.6594 =
          Ti1877.5098 << 2
        In
        Let Tu79.5015 =
          FStore Td1879.5099 to xyz.5012[o.6594]
        In
        Let Tu1880.5097 =
          Nop
        In
        Let Td1881.5096 =
          CallCls read_float.2568 
        In
        Let m_invert.5016 =
          CallDir fisneg.2516 Td1881.5096 
        In
        Let Ti1882.5094 =
          Set (2)
        In
        Let l.6595 =
          Set (l.6252)
        In
        Let Td1883.5095 =
          FLord l.6595[0]
        In
        Let reflparam.5017 =
          CallDir min_caml_create_float_array Ti1882.5094 Td1883.5095 
        In
        Let Ti1884.5091 =
          Set (0)
        In
        Let Tu1885.5093 =
          Nop
        In
        Let Td1886.5092 =
          CallCls read_float.2568 
        In
        Let o.6596 =
          Ti1884.5091 << 2
        In
        Let Tu78.5018 =
          FStore Td1886.5092 to reflparam.5017[o.6596]
        In
        Let Ti1887.5088 =
          Set (1)
        In
        Let Tu1888.5090 =
          Nop
        In
        Let Td1889.5089 =
          CallCls read_float.2568 
        In
        Let o.6597 =
          Ti1887.5088 << 2
        In
        Let Tu77.5019 =
          FStore Td1889.5089 to reflparam.5017[o.6597]
        In
        Let Ti1890.5086 =
          Set (3)
        In
        Let l.6598 =
          Set (l.6252)
        In
        Let Td1891.5087 =
          FLord l.6598[0]
        In
        Let color.5020 =
          CallDir min_caml_create_float_array Ti1890.5086 Td1891.5087 
        In
        Let Ti1892.5083 =
          Set (0)
        In
        Let Tu1893.5085 =
          Nop
        In
        Let Td1894.5084 =
          CallCls read_float.2568 
        In
        Let o.6599 =
          Ti1892.5083 << 2
        In
        Let Tu76.5021 =
          FStore Td1894.5084 to color.5020[o.6599]
        In
        Let Ti1895.5080 =
          Set (1)
        In
        Let Tu1896.5082 =
          Nop
        In
        Let Td1897.5081 =
          CallCls read_float.2568 
        In
        Let o.6600 =
          Ti1895.5080 << 2
        In
        Let Tu75.5022 =
          FStore Td1897.5081 to color.5020[o.6600]
        In
        Let Ti1898.5077 =
          Set (2)
        In
        Let Tu1899.5079 =
          Nop
        In
        Let Td1900.5078 =
          CallCls read_float.2568 
        In
        Let o.6601 =
          Ti1898.5077 << 2
        In
        Let Tu74.5023 =
          FStore Td1900.5078 to color.5020[o.6601]
        In
        Let Ti1901.5075 =
          Set (3)
        In
        Let l.6602 =
          Set (l.6252)
        In
        Let Td1902.5076 =
          FLord l.6602[0]
        In
        Let rotation.5024 =
          CallDir min_caml_create_float_array Ti1901.5075 Td1902.5076 
        In
        Let Tu73.5025 =
          If isrot_p.5007 = 0 Then
            Ans (
              Nop
            )
          Then
            Let Ti1903.5071 =
              Set (0)
            In
            Let Tu1904.5074 =
              Nop
            In
            Let Td1905.5073 =
              CallCls read_float.2568 
            In
            Let Td1906.5072 =
              CallDir rad.2735 Td1905.5073 
            In
            Let o.6603 =
              Ti1903.5071 << 2
            In
            Let Tu67.5061 =
              FStore Td1906.5072 to rotation.5024[o.6603]
            In
            Let Ti1907.5067 =
              Set (1)
            In
            Let Tu1908.5070 =
              Nop
            In
            Let Td1909.5069 =
              CallCls read_float.2568 
            In
            Let Td1910.5068 =
              CallDir rad.2735 Td1909.5069 
            In
            Let o.6604 =
              Ti1907.5067 << 2
            In
            Let Tu66.5062 =
              FStore Td1910.5068 to rotation.5024[o.6604]
            In
            Let Ti1911.5063 =
              Set (2)
            In
            Let Tu1912.5066 =
              Nop
            In
            Let Td1913.5065 =
              CallCls read_float.2568 
            In
            Let Td1914.5064 =
              CallDir rad.2735 Td1913.5065 
            In
            Let o.6605 =
              Ti1911.5063 << 2
            In
            Ans (
              FStore Td1914.5064 to rotation.5024[o.6605]
            )
        In
        Let Ti1915.5060 =
          Set (2)
        In
        Let m_invert2.5026 =
          If form.5005 = Ti1915.5060 Then
            Ans (
              Set (1)
            )
          Then
            Ans (
              Mov (m_invert.5016)
            )
        In
        Let Ti1916.5058 =
          Set (4)
        In
        Let l.6606 =
          Set (l.6252)
        In
        Let Td1917.5059 =
          FLord l.6606[0]
        In
        Let ctbl.5027 =
          CallDir min_caml_create_float_array Ti1916.5058 Td1917.5059 
        In
        Let t.6607 =
          Mov (%g2)
        In
        Let %g2 =
          %g2 + 48
        In
        Let Tu6618 =
          Store ctbl.5027 to t.6607[-40]
        In
        Let Tu6617 =
          Store rotation.5024 to t.6607[-36]
        In
        Let Tu6616 =
          Store color.5020 to t.6607[-32]
        In
        Let Tu6615 =
          Store reflparam.5017 to t.6607[-28]
        In
        Let Tu6614 =
          Store m_invert2.5026 to t.6607[-24]
        In
        Let Tu6613 =
          Store xyz.5012 to t.6607[-20]
        In
        Let Tu6612 =
          Store abc.5008 to t.6607[-16]
        In
        Let Tu6611 =
          Store isrot_p.5007 to t.6607[-12]
        In
        Let Tu6610 =
          Store refltype.5006 to t.6607[-8]
        In
        Let Tu6609 =
          Store form.5005 to t.6607[-4]
        In
        Let Tu6608 =
          Store texture.5003 to t.6607[0]
        In
        Let obj.5028 =
          Mov (t.6607)
        In
        Let o.6619 =
          n.2745 << 2
        In
        Let Tu72.5029 =
          Store obj.5028 to objects.2578[o.6619]
        In
        Let Ti1938.5032 =
          Set (3)
        In
        Let Tu71.5030 =
          If form.5005 = Ti1938.5032 Then
            Let Ti1918.5057 =
              Set (0)
            In
            Let o.6620 =
              Ti1918.5057 << 2
            In
            Let a.5035 =
              FLord abc.5008[o.6620]
            In
            Let Ti1919.5052 =
              Set (0)
            In
            Let Tb1922.5054 =
              CallDir fiszero.2518 a.5035 
            In
            Let Td1923.5053 =
              If Tb1922.5054 = 0 Then
                Let Td1920.5055 =
                  CallDir sgn.2610 a.5035 
                In
                Let Td1921.5056 =
                  CallDir fsqr.2531 a.5035 
                In
                Ans (
                  Td1920.5055 /. Td1921.5056
                )
              Then
                Let l.6622 =
                  Set (l.6252)
                In
                Ans (
                  FLord l.6622[0]
                )
            In
            Let o.6623 =
              Ti1919.5052 << 2
            In
            Let Tu69.5036 =
              FStore Td1923.5053 to abc.5008[o.6623]
            In
            Let Ti1924.5051 =
              Set (1)
            In
            Let o.6624 =
              Ti1924.5051 << 2
            In
            Let b.5037 =
              FLord abc.5008[o.6624]
            In
            Let Ti1925.5046 =
              Set (1)
            In
            Let Tb1928.5048 =
              CallDir fiszero.2518 b.5037 
            In
            Let Td1929.5047 =
              If Tb1928.5048 = 0 Then
                Let Td1926.5049 =
                  CallDir sgn.2610 b.5037 
                In
                Let Td1927.5050 =
                  CallDir fsqr.2531 b.5037 
                In
                Ans (
                  Td1926.5049 /. Td1927.5050
                )
              Then
                Let l.6626 =
                  Set (l.6252)
                In
                Ans (
                  FLord l.6626[0]
                )
            In
            Let o.6627 =
              Ti1925.5046 << 2
            In
            Let Tu68.5038 =
              FStore Td1929.5047 to abc.5008[o.6627]
            In
            Let Ti1930.5045 =
              Set (2)
            In
            Let o.6628 =
              Ti1930.5045 << 2
            In
            Let c.5039 =
              FLord abc.5008[o.6628]
            In
            Let Ti1931.5040 =
              Set (2)
            In
            Let Tb1934.5042 =
              CallDir fiszero.2518 c.5039 
            In
            Let Td1935.5041 =
              If Tb1934.5042 = 0 Then
                Let Td1932.5043 =
                  CallDir sgn.2610 c.5039 
                In
                Let Td1933.5044 =
                  CallDir fsqr.2531 c.5039 
                In
                Ans (
                  Td1932.5043 /. Td1933.5044
                )
              Then
                Let l.6630 =
                  Set (l.6252)
                In
                Ans (
                  FLord l.6630[0]
                )
            In
            Let o.6631 =
              Ti1931.5040 << 2
            In
            Ans (
              FStore Td1935.5041 to abc.5008[o.6631]
            )
          Then
            Let Ti1937.5033 =
              Set (2)
            In
            Ans (
              If form.5005 = Ti1937.5033 Then
                Let Ti1936.5034 =
                  If m_invert.5016 = 0 Then
                    Ans (
                      Set (1)
                    )
                  Then
                    Ans (
                      Set (0)
                    )
                In
                Ans (
                  CallDir vecunit_sgn.2636 abc.5008 Ti1936.5034 
                )
              Then
                Ans (
                  Nop
                )
            )
        In
        Let Tu70.5031 =
          If isrot_p.5007 = 0 Then
            Ans (
              Nop
            )
          Then
            Ans (
              CallCls rotate_quadratic_matrix.2741 abc.5008 rotation.5024 
            )
        In
        Ans (
          Set (1)
        )
    )
  Unit read_object.2746 (n.2747 ) =
    Let read_nth_object.2744 =
      Lord %g27[-8]
    In
    Let n_objects.2577 =
      Lord %g27[-4]
    In
    Let Ti1852.4998 =
      Set (60)
    In
    Ans (
      If Ti1852.4998 <= n.2747 Then
        Ans (
          Nop
        )
      Then
        Let Tb1851.4999 =
          CallCls read_nth_object.2744 n.2747 
        In
        Ans (
          If Tb1851.4999 = 0 Then
            Let Ti1848.5002 =
              Set (0)
            In
            Let o.6632 =
              Ti1848.5002 << 2
            In
            Ans (
              Store n.2747 to n_objects.2577[o.6632]
            )
          Then
            Let Ti1849.5001 =
              Set (1)
            In
            Let Ti1850.5000 =
              n.2747 + Ti1849.5001
            In
            Ans (
              CallCls read_object.2746 Ti1850.5000 
            )
        )
    )
  Unit read_all_object.2748 () =
    Let read_object.2746 =
      Lord %g27[-4]
    In
    Let Ti1847.4997 =
      Set (0)
    In
    Ans (
      CallCls read_object.2746 Ti1847.4997 
    )
  Array(Int) read_net_item.2750 (length.2751 ) =
    Let read_int.2557 =
      Lord %g27[-4]
    In
    Let Tu1838.4996 =
      Nop
    In
    Let item.4985 =
      CallCls read_int.2557 
    In
    Let Ti1839.4995 =
      Set (1)
    In
    Let Ti1846.4986 =
      Neg (Ti1839.4995)
    In
    Ans (
      If item.4985 = Ti1846.4986 Then
        Let Ti1840.4994 =
          Set (1)
        In
        Let Ti1841.4991 =
          length.2751 + Ti1840.4994
        In
        Let Ti1842.4993 =
          Set (1)
        In
        Let Ti1843.4992 =
          Neg (Ti1842.4993)
        In
        Ans (
          CallDir min_caml_create_array Ti1841.4991 Ti1843.4992 
        )
      Then
        Let Ti1844.4990 =
          Set (1)
        In
        Let Ti1845.4989 =
          length.2751 + Ti1844.4990
        In
        Let v.4987 =
          CallCls read_net_item.2750 Ti1845.4989 
        In
        Let o.6633 =
          length.2751 << 2
        In
        Let Tu86.4988 =
          Store item.4985 to v.4987[o.6633]
        In
        Ans (
          Mov (v.4987)
        )
    )
  Array(Array(Int)) read_or_network.2752 (length.2753 ) =
    Let read_net_item.2750 =
      Lord %g27[-4]
    In
    Let Ti1829.4984 =
      Set (0)
    In
    Let net.4973 =
      CallCls read_net_item.2750 Ti1829.4984 
    In
    Let Ti1830.4983 =
      Set (0)
    In
    Let o.6634 =
      Ti1830.4983 << 2
    In
    Let Ti1836.4974 =
      Lord net.4973[o.6634]
    In
    Let Ti1831.4982 =
      Set (1)
    In
    Let Ti1837.4975 =
      Neg (Ti1831.4982)
    In
    Ans (
      If Ti1836.4974 = Ti1837.4975 Then
        Let Ti1832.4981 =
          Set (1)
        In
        Let Ti1833.4980 =
          length.2753 + Ti1832.4981
        In
        Ans (
          CallDir min_caml_create_array Ti1833.4980 net.4973 
        )
      Then
        Let Ti1834.4979 =
          Set (1)
        In
        Let Ti1835.4978 =
          length.2753 + Ti1834.4979
        In
        Let v.4976 =
          CallCls read_or_network.2752 Ti1835.4978 
        In
        Let o.6636 =
          length.2753 << 2
        In
        Let Tu87.4977 =
          Store net.4973 to v.4976[o.6636]
        In
        Ans (
          Mov (v.4976)
        )
    )
  Unit read_and_network.2754 (n.2755 ) =
    Let read_net_item.2750 =
      Lord %g27[-8]
    In
    Let and_net.2583 =
      Lord %g27[-4]
    In
    Let Ti1822.4972 =
      Set (0)
    In
    Let net.4964 =
      CallCls read_net_item.2750 Ti1822.4972 
    In
    Let Ti1823.4971 =
      Set (0)
    In
    Let o.6637 =
      Ti1823.4971 << 2
    In
    Let Ti1827.4965 =
      Lord net.4964[o.6637]
    In
    Let Ti1824.4970 =
      Set (1)
    In
    Let Ti1828.4966 =
      Neg (Ti1824.4970)
    In
    Ans (
      If Ti1827.4965 = Ti1828.4966 Then
        Ans (
          Nop
        )
      Then
        Let o.6639 =
          n.2755 << 2
        In
        Let Tu88.4967 =
          Store net.4964 to and_net.2583[o.6639]
        In
        Let Ti1825.4969 =
          Set (1)
        In
        Let Ti1826.4968 =
          n.2755 + Ti1825.4969
        In
        Ans (
          CallCls read_and_network.2754 Ti1826.4968 
        )
    )
  Unit read_parameter.2756 () =
    Let read_screen_settings.2737 =
      Lord %g27[-24]
    In
    Let read_or_network.2752 =
      Lord %g27[-20]
    In
    Let read_light.2739 =
      Lord %g27[-16]
    In
    Let read_and_network.2754 =
      Lord %g27[-12]
    In
    Let read_all_object.2748 =
      Lord %g27[-8]
    In
    Let or_net.2584 =
      Lord %g27[-4]
    In
    Let Tu1815.4963 =
      Nop
    In
    Let Tu93.4953 =
      CallCls read_screen_settings.2737 
    In
    Let Tu1816.4962 =
      Nop
    In
    Let Tu92.4954 =
      CallCls read_light.2739 
    In
    Let Tu1817.4961 =
      Nop
    In
    Let Tu91.4955 =
      CallCls read_all_object.2748 
    In
    Let Ti1818.4960 =
      Set (0)
    In
    Let Tu90.4956 =
      CallCls read_and_network.2754 Ti1818.4960 
    In
    Let Ti1819.4957 =
      Set (0)
    In
    Let Ti1820.4959 =
      Set (0)
    In
    Let Ta1821.4958 =
      CallCls read_or_network.2752 Ti1820.4959 
    In
    Let o.6640 =
      Ti1819.4957 << 2
    In
    Ans (
      Store Ta1821.4958 to or_net.2584[o.6640]
    )
  Bool solver_rect_surface.2758 (m.2759 dirvec.2760 i0.2764 i1.2765 i2.2766 b0.2761 b1.2762 b2.2763 ) =
    Let solver_dist.2585 =
      Lord %g27[-4]
    In
    Let o.6641 =
      i0.2764 << 2
    In
    Let Td1793.4952 =
      FLord dirvec.2760[o.6641]
    In
    Let Tb1814.4927 =
      CallDir fiszero.2518 Td1793.4952 
    In
    Ans (
      If Tb1814.4927 = 0 Then
        Let abc.4928 =
          CallDir o_param_abc.2680 m.2759 
        In
        Let Tb1794.4949 =
          CallDir o_isinvert.2670 m.2759 
        In
        Let o.6643 =
          i0.2764 << 2
        In
        Let Td1795.4951 =
          FLord dirvec.2760[o.6643]
        In
        Let Tb1796.4950 =
          CallDir fisneg.2516 Td1795.4951 
        In
        Let Tb1797.4947 =
          CallDir xor.2607 Tb1794.4949 Tb1796.4950 
        In
        Let o.6645 =
          i0.2764 << 2
        In
        Let Td1798.4948 =
          FLord abc.4928[o.6645]
        In
        Let d.4929 =
          CallDir fneg_cond.2612 Tb1797.4947 Td1798.4948 
        In
        Let Td1799.4945 =
          d.4929 -. b0.2761
        In
        Let o.6647 =
          i0.2764 << 2
        In
        Let Td1800.4946 =
          FLord dirvec.2760[o.6647]
        In
        Let d2.4930 =
          Td1799.4945 /. Td1800.4946
        In
        Let o.6649 =
          i1.2765 << 2
        In
        Let Td1801.4944 =
          FLord dirvec.2760[o.6649]
        In
        Let Td1802.4943 =
          d2.4930 *. Td1801.4944
        In
        Let Td1803.4942 =
          Td1802.4943 +. b1.2762
        In
        Let Td1804.4940 =
          CallDir fabs.2523 Td1803.4942 
        In
        Let o.6651 =
          i1.2765 << 2
        In
        Let Td1805.4941 =
          FLord abc.4928[o.6651]
        In
        Let Tb1813.4931 =
          CallDir fless.2511 Td1804.4940 Td1805.4941 
        In
        Ans (
          If Tb1813.4931 = 0 Then
            Ans (
              Set (0)
            )
          Then
            Let o.6653 =
              i2.2766 << 2
            In
            Let Td1806.4939 =
              FLord dirvec.2760[o.6653]
            In
            Let Td1807.4938 =
              d2.4930 *. Td1806.4939
            In
            Let Td1808.4937 =
              Td1807.4938 +. b2.2763
            In
            Let Td1809.4935 =
              CallDir fabs.2523 Td1808.4937 
            In
            Let o.6655 =
              i2.2766 << 2
            In
            Let Td1810.4936 =
              FLord abc.4928[o.6655]
            In
            Let Tb1812.4932 =
              CallDir fless.2511 Td1809.4935 Td1810.4936 
            In
            Ans (
              If Tb1812.4932 = 0 Then
                Ans (
                  Set (0)
                )
              Then
                Let Ti1811.4934 =
                  Set (0)
                In
                Let o.6657 =
                  Ti1811.4934 << 2
                In
                Let Tu94.4933 =
                  FStore d2.4930 to solver_dist.2585[o.6657]
                In
                Ans (
                  Set (1)
                )
            )
        )
      Then
        Ans (
          Set (0)
        )
    )
  Int solver_rect.2767 (m.2768 dirvec.2769 b0.2770 b1.2771 b2.2772 ) =
    Let solver_rect_surface.2758 =
      Lord %g27[-4]
    In
    Let Ti1781.4924 =
      Set (0)
    In
    Let Ti1782.4925 =
      Set (1)
    In
    Let Ti1783.4926 =
      Set (2)
    In
    Let Tb1792.4915 =
      CallCls solver_rect_surface.2758 m.2768 dirvec.2769 Ti1781.4924 Ti1782.4925 Ti1783.4926 b0.2770 b1.2771 b2.2772 
    In
    Ans (
      If Tb1792.4915 = 0 Then
        Let Ti1784.4921 =
          Set (1)
        In
        Let Ti1785.4922 =
          Set (2)
        In
        Let Ti1786.4923 =
          Set (0)
        In
        Let Tb1791.4916 =
          CallCls solver_rect_surface.2758 m.2768 dirvec.2769 Ti1784.4921 Ti1785.4922 Ti1786.4923 b1.2771 b2.2772 b0.2770 
        In
        Ans (
          If Tb1791.4916 = 0 Then
            Let Ti1787.4918 =
              Set (2)
            In
            Let Ti1788.4919 =
              Set (0)
            In
            Let Ti1789.4920 =
              Set (1)
            In
            Let Tb1790.4917 =
              CallCls solver_rect_surface.2758 m.2768 dirvec.2769 Ti1787.4918 Ti1788.4919 Ti1789.4920 b2.2772 b0.2770 b1.2771 
            In
            Ans (
              If Tb1790.4917 = 0 Then
                Ans (
                  Set (0)
                )
              Then
                Ans (
                  Set (3)
                )
            )
          Then
            Ans (
              Set (2)
            )
        )
      Then
        Ans (
          Set (1)
        )
    )
  Int solver_surface.2773 (m.2774 dirvec.2775 b0.2776 b1.2777 b2.2778 ) =
    Let solver_dist.2585 =
      Lord %g27[-4]
    In
    Let abc.4907 =
      CallDir o_param_abc.2680 m.2774 
    In
    Let d.4908 =
      CallDir veciprod.2639 dirvec.2775 abc.4907 
    In
    Let Tb1780.4909 =
      CallDir fispos.2514 d.4908 
    In
    Ans (
      If Tb1780.4909 = 0 Then
        Ans (
          Set (0)
        )
      Then
        Let Ti1776.4911 =
          Set (0)
        In
        Let Td1777.4914 =
          CallDir veciprod2.2642 abc.4907 b0.2776 b1.2777 b2.2778 
        In
        Let Td1778.4913 =
          CallDir fneg.2527 Td1777.4914 
        In
        Let Td1779.4912 =
          Td1778.4913 /. d.4908
        In
        Let o.6658 =
          Ti1776.4911 << 2
        In
        Let Tu95.4910 =
          FStore Td1779.4912 to solver_dist.2585[o.6658]
        In
        Ans (
          Set (1)
        )
    )
  Float quadratic.2779 (m.2780 v0.2781 v1.2782 v2.2783 ) =
    Let Td1754.4905 =
      CallDir fsqr.2531 v0.2781 
    In
    Let Td1755.4906 =
      CallDir o_param_a.2674 m.2780 
    In
    Let Td1756.4901 =
      Td1754.4905 *. Td1755.4906
    In
    Let Td1757.4903 =
      CallDir fsqr.2531 v1.2782 
    In
    Let Td1758.4904 =
      CallDir o_param_b.2676 m.2780 
    In
    Let Td1759.4902 =
      Td1757.4903 *. Td1758.4904
    In
    Let Td1760.4897 =
      Td1756.4901 +. Td1759.4902
    In
    Let Td1761.4899 =
      CallDir fsqr.2531 v2.2783 
    In
    Let Td1762.4900 =
      CallDir o_param_c.2678 m.2780 
    In
    Let Td1763.4898 =
      Td1761.4899 *. Td1762.4900
    In
    Let diag_part.4884 =
      Td1760.4897 +. Td1763.4898
    In
    Let Ti1775.4885 =
      CallDir o_isrot.2672 m.2780 
    In
    Ans (
      If Ti1775.4885 = 0 Then
        Ans (
          FMovD (diag_part.4884)
        )
      Then
        Let Td1764.4895 =
          v1.2782 *. v2.2783
        In
        Let Td1765.4896 =
          CallDir o_param_r1.2698 m.2780 
        In
        Let Td1766.4894 =
          Td1764.4895 *. Td1765.4896
        In
        Let Td1767.4890 =
          diag_part.4884 +. Td1766.4894
        In
        Let Td1768.4892 =
          v2.2783 *. v0.2781
        In
        Let Td1769.4893 =
          CallDir o_param_r2.2700 m.2780 
        In
        Let Td1770.4891 =
          Td1768.4892 *. Td1769.4893
        In
        Let Td1771.4886 =
          Td1767.4890 +. Td1770.4891
        In
        Let Td1772.4888 =
          v0.2781 *. v1.2782
        In
        Let Td1773.4889 =
          CallDir o_param_r3.2702 m.2780 
        In
        Let Td1774.4887 =
          Td1772.4888 *. Td1773.4889
        In
        Ans (
          Td1771.4886 +. Td1774.4887
        )
    )
  Float bilinear.2784 (m.2785 v0.2786 v1.2787 v2.2788 w0.2789 w1.2790 w2.2791 ) =
    Let Td1725.4882 =
      v0.2786 *. w0.2789
    In
    Let Td1726.4883 =
      CallDir o_param_a.2674 m.2785 
    In
    Let Td1727.4878 =
      Td1725.4882 *. Td1726.4883
    In
    Let Td1728.4880 =
      v1.2787 *. w1.2790
    In
    Let Td1729.4881 =
      CallDir o_param_b.2676 m.2785 
    In
    Let Td1730.4879 =
      Td1728.4880 *. Td1729.4881
    In
    Let Td1731.4874 =
      Td1727.4878 +. Td1730.4879
    In
    Let Td1732.4876 =
      v2.2788 *. w2.2791
    In
    Let Td1733.4877 =
      CallDir o_param_c.2678 m.2785 
    In
    Let Td1734.4875 =
      Td1732.4876 *. Td1733.4877
    In
    Let diag_part.4854 =
      Td1731.4874 +. Td1734.4875
    In
    Let Ti1753.4855 =
      CallDir o_isrot.2672 m.2785 
    In
    Ans (
      If Ti1753.4855 = 0 Then
        Ans (
          FMovD (diag_part.4854)
        )
      Then
        Let Td1735.4872 =
          v2.2788 *. w1.2790
        In
        Let Td1736.4873 =
          v1.2787 *. w2.2791
        In
        Let Td1737.4870 =
          Td1735.4872 +. Td1736.4873
        In
        Let Td1738.4871 =
          CallDir o_param_r1.2698 m.2785 
        In
        Let Td1739.4864 =
          Td1737.4870 *. Td1738.4871
        In
        Let Td1740.4868 =
          v0.2786 *. w2.2791
        In
        Let Td1741.4869 =
          v2.2788 *. w0.2789
        In
        Let Td1742.4866 =
          Td1740.4868 +. Td1741.4869
        In
        Let Td1743.4867 =
          CallDir o_param_r2.2700 m.2785 
        In
        Let Td1744.4865 =
          Td1742.4866 *. Td1743.4867
        In
        Let Td1745.4858 =
          Td1739.4864 +. Td1744.4865
        In
        Let Td1746.4862 =
          v0.2786 *. w1.2790
        In
        Let Td1747.4863 =
          v1.2787 *. w0.2789
        In
        Let Td1748.4860 =
          Td1746.4862 +. Td1747.4863
        In
        Let Td1749.4861 =
          CallDir o_param_r3.2702 m.2785 
        In
        Let Td1750.4859 =
          Td1748.4860 *. Td1749.4861
        In
        Let Td1751.4857 =
          Td1745.4858 +. Td1750.4859
        In
        Let Td1752.4856 =
          CallDir fhalf.2529 Td1751.4857 
        In
        Ans (
          diag_part.4854 +. Td1752.4856
        )
    )
  Int solver_second.2792 (m.2793 dirvec.2794 b0.2795 b1.2796 b2.2797 ) =
    Let solver_dist.2585 =
      Lord %g27[-4]
    In
    Let Ti1702.4853 =
      Set (0)
    In
    Let o.6659 =
      Ti1702.4853 << 2
    In
    Let Td1703.4848 =
      FLord dirvec.2794[o.6659]
    In
    Let Ti1704.4852 =
      Set (1)
    In
    Let o.6661 =
      Ti1704.4852 << 2
    In
    Let Td1705.4849 =
      FLord dirvec.2794[o.6661]
    In
    Let Ti1706.4851 =
      Set (2)
    In
    Let o.6663 =
      Ti1706.4851 << 2
    In
    Let Td1707.4850 =
      FLord dirvec.2794[o.6663]
    In
    Let aa.4823 =
      CallDir quadratic.2779 m.2793 Td1703.4848 Td1705.4849 Td1707.4850 
    In
    Let Tb1724.4824 =
      CallDir fiszero.2518 aa.4823 
    In
    Ans (
      If Tb1724.4824 = 0 Then
        Let Ti1708.4847 =
          Set (0)
        In
        Let o.6665 =
          Ti1708.4847 << 2
        In
        Let Td1709.4842 =
          FLord dirvec.2794[o.6665]
        In
        Let Ti1710.4846 =
          Set (1)
        In
        Let o.6667 =
          Ti1710.4846 << 2
        In
        Let Td1711.4843 =
          FLord dirvec.2794[o.6667]
        In
        Let Ti1712.4845 =
          Set (2)
        In
        Let o.6669 =
          Ti1712.4845 << 2
        In
        Let Td1713.4844 =
          FLord dirvec.2794[o.6669]
        In
        Let bb.4825 =
          CallDir bilinear.2784 m.2793 Td1709.4842 Td1711.4843 Td1713.4844 b0.2795 b1.2796 b2.2797 
        In
        Let cc0.4826 =
          CallDir quadratic.2779 m.2793 b0.2795 b1.2796 b2.2797 
        In
        Let Ti1715.4839 =
          CallDir o_form.2666 m.2793 
        In
        Let Ti1716.4840 =
          Set (3)
        In
        Let cc.4827 =
          If Ti1715.4839 = Ti1716.4840 Then
            Let l.6671 =
              Set (l.6261)
            In
            Let Td1714.4841 =
              FLord l.6671[0]
            In
            Ans (
              cc0.4826 -. Td1714.4841
            )
          Then
            Ans (
              FMovD (cc0.4826)
            )
        In
        Let Td1717.4837 =
          CallDir fsqr.2531 bb.4825 
        In
        Let Td1718.4838 =
          aa.4823 *. cc.4827
        In
        Let d.4828 =
          Td1717.4837 -. Td1718.4838
        In
        Let Tb1723.4829 =
          CallDir fispos.2514 d.4828 
        In
        Ans (
          If Tb1723.4829 = 0 Then
            Ans (
              Set (0)
            )
          Then
            Let sd.4830 =
              CallDir min_caml_sqrt d.4828 
            In
            Let Tb1719.4836 =
              CallDir o_isinvert.2670 m.2793 
            In
            Let t1.4831 =
              If Tb1719.4836 = 0 Then
                Ans (
                  CallDir fneg.2527 sd.4830 
                )
              Then
                Ans (
                  FMovD (sd.4830)
                )
            In
            Let Ti1720.4833 =
              Set (0)
            In
            Let Td1721.4835 =
              t1.4831 -. bb.4825
            In
            Let Td1722.4834 =
              Td1721.4835 /. aa.4823
            In
            Let o.6672 =
              Ti1720.4833 << 2
            In
            Let Tu96.4832 =
              FStore Td1722.4834 to solver_dist.2585[o.6672]
            In
            Ans (
              Set (1)
            )
        )
      Then
        Ans (
          Set (0)
        )
    )
  Int solver.2798 (index.2799 dirvec.2800 org.2801 ) =
    Let solver_surface.2773 =
      Lord %g27[-16]
    In
    Let solver_second.2792 =
      Lord %g27[-12]
    In
    Let solver_rect.2767 =
      Lord %g27[-8]
    In
    Let objects.2578 =
      Lord %g27[-4]
    In
    Let o.6673 =
      index.2799 << 2
    In
    Let m.4808 =
      Lord objects.2578[o.6673]
    In
    Let Ti1692.4822 =
      Set (0)
    In
    Let o.6675 =
      Ti1692.4822 << 2
    In
    Let Td1693.4820 =
      FLord org.2801[o.6675]
    In
    Let Td1694.4821 =
      CallDir o_param_x.2682 m.4808 
    In
    Let b0.4809 =
      Td1693.4820 -. Td1694.4821
    In
    Let Ti1695.4819 =
      Set (1)
    In
    Let o.6677 =
      Ti1695.4819 << 2
    In
    Let Td1696.4817 =
      FLord org.2801[o.6677]
    In
    Let Td1697.4818 =
      CallDir o_param_y.2684 m.4808 
    In
    Let b1.4810 =
      Td1696.4817 -. Td1697.4818
    In
    Let Ti1698.4816 =
      Set (2)
    In
    Let o.6679 =
      Ti1698.4816 << 2
    In
    Let Td1699.4814 =
      FLord org.2801[o.6679]
    In
    Let Td1700.4815 =
      CallDir o_param_z.2686 m.4808 
    In
    Let b2.4811 =
      Td1699.4814 -. Td1700.4815
    In
    Let m_shape.4812 =
      CallDir o_form.2666 m.4808 
    In
    Ans (
      If m_shape.4812 = 1 Then
        Ans (
          CallCls solver_rect.2767 m.4808 dirvec.2800 b0.4809 b1.4810 b2.4811 
        )
      Then
        Let Ti1701.4813 =
          Set (2)
        In
        Ans (
          If m_shape.4812 = Ti1701.4813 Then
            Ans (
              CallCls solver_surface.2773 m.4808 dirvec.2800 b0.4809 b1.4810 b2.4811 
            )
          Then
            Ans (
              CallCls solver_second.2792 m.4808 dirvec.2800 b0.4809 b1.4810 b2.4811 
            )
        )
    )
  Int solver_rect_fast.2802 (m.2803 v.2804 dconst.2805 b0.2806 b1.2807 b2.2808 ) =
    Let solver_dist.2585 =
      Lord %g27[-4]
    In
    Let Ti1620.4807 =
      Set (0)
    In
    Let o.6681 =
      Ti1620.4807 << 2
    In
    Let Td1621.4806 =
      FLord dconst.2805[o.6681]
    In
    Let Td1622.4803 =
      Td1621.4806 -. b0.2806
    In
    Let Ti1623.4805 =
      Set (1)
    In
    Let o.6683 =
      Ti1623.4805 << 2
    In
    Let Td1624.4804 =
      FLord dconst.2805[o.6683]
    In
    Let d0.4730 =
      Td1622.4803 *. Td1624.4804
    In
    Let Ti1625.4802 =
      Set (1)
    In
    Let o.6685 =
      Ti1625.4802 << 2
    In
    Let Td1626.4801 =
      FLord v.2804[o.6685]
    In
    Let Td1627.4800 =
      d0.4730 *. Td1626.4801
    In
    Let Td1628.4799 =
      Td1627.4800 +. b1.2807
    In
    Let Td1629.4797 =
      CallDir fabs.2523 Td1628.4799 
    In
    Let Td1630.4798 =
      CallDir o_param_b.2676 m.2803 
    In
    Let Tb1641.4786 =
      CallDir fless.2511 Td1629.4797 Td1630.4798 
    In
    Let Ti1691.4731 =
      If Tb1641.4786 = 0 Then
        Ans (
          Set (0)
        )
      Then
        Let Ti1631.4796 =
          Set (2)
        In
        Let o.6687 =
          Ti1631.4796 << 2
        In
        Let Td1632.4795 =
          FLord v.2804[o.6687]
        In
        Let Td1633.4794 =
          d0.4730 *. Td1632.4795
        In
        Let Td1634.4793 =
          Td1633.4794 +. b2.2808
        In
        Let Td1635.4791 =
          CallDir fabs.2523 Td1634.4793 
        In
        Let Td1636.4792 =
          CallDir o_param_c.2678 m.2803 
        In
        Let Tb1640.4787 =
          CallDir fless.2511 Td1635.4791 Td1636.4792 
        In
        Ans (
          If Tb1640.4787 = 0 Then
            Ans (
              Set (0)
            )
          Then
            Let Ti1637.4790 =
              Set (1)
            In
            Let o.6689 =
              Ti1637.4790 << 2
            In
            Let Td1638.4789 =
              FLord dconst.2805[o.6689]
            In
            Let Tb1639.4788 =
              CallDir fiszero.2518 Td1638.4789 
            In
            Ans (
              If Tb1639.4788 = 0 Then
                Ans (
                  Set (1)
                )
              Then
                Ans (
                  Set (0)
                )
            )
        )
    In
    Ans (
      If Ti1691.4731 = 0 Then
        Let Ti1642.4785 =
          Set (2)
        In
        Let o.6692 =
          Ti1642.4785 << 2
        In
        Let Td1643.4784 =
          FLord dconst.2805[o.6692]
        In
        Let Td1644.4781 =
          Td1643.4784 -. b1.2807
        In
        Let Ti1645.4783 =
          Set (3)
        In
        Let o.6694 =
          Ti1645.4783 << 2
        In
        Let Td1646.4782 =
          FLord dconst.2805[o.6694]
        In
        Let d1.4734 =
          Td1644.4781 *. Td1646.4782
        In
        Let Ti1647.4780 =
          Set (0)
        In
        Let o.6696 =
          Ti1647.4780 << 2
        In
        Let Td1648.4779 =
          FLord v.2804[o.6696]
        In
        Let Td1649.4778 =
          d1.4734 *. Td1648.4779
        In
        Let Td1650.4777 =
          Td1649.4778 +. b0.2806
        In
        Let Td1651.4775 =
          CallDir fabs.2523 Td1650.4777 
        In
        Let Td1652.4776 =
          CallDir o_param_a.2674 m.2803 
        In
        Let Tb1663.4764 =
          CallDir fless.2511 Td1651.4775 Td1652.4776 
        In
        Let Ti1689.4735 =
          If Tb1663.4764 = 0 Then
            Ans (
              Set (0)
            )
          Then
            Let Ti1653.4774 =
              Set (2)
            In
            Let o.6698 =
              Ti1653.4774 << 2
            In
            Let Td1654.4773 =
              FLord v.2804[o.6698]
            In
            Let Td1655.4772 =
              d1.4734 *. Td1654.4773
            In
            Let Td1656.4771 =
              Td1655.4772 +. b2.2808
            In
            Let Td1657.4769 =
              CallDir fabs.2523 Td1656.4771 
            In
            Let Td1658.4770 =
              CallDir o_param_c.2678 m.2803 
            In
            Let Tb1662.4765 =
              CallDir fless.2511 Td1657.4769 Td1658.4770 
            In
            Ans (
              If Tb1662.4765 = 0 Then
                Ans (
                  Set (0)
                )
              Then
                Let Ti1659.4768 =
                  Set (3)
                In
                Let o.6700 =
                  Ti1659.4768 << 2
                In
                Let Td1660.4767 =
                  FLord dconst.2805[o.6700]
                In
                Let Tb1661.4766 =
                  CallDir fiszero.2518 Td1660.4767 
                In
                Ans (
                  If Tb1661.4766 = 0 Then
                    Ans (
                      Set (1)
                    )
                  Then
                    Ans (
                      Set (0)
                    )
                )
            )
        In
        Ans (
          If Ti1689.4735 = 0 Then
            Let Ti1664.4763 =
              Set (4)
            In
            Let o.6703 =
              Ti1664.4763 << 2
            In
            Let Td1665.4762 =
              FLord dconst.2805[o.6703]
            In
            Let Td1666.4759 =
              Td1665.4762 -. b2.2808
            In
            Let Ti1667.4761 =
              Set (5)
            In
            Let o.6705 =
              Ti1667.4761 << 2
            In
            Let Td1668.4760 =
              FLord dconst.2805[o.6705]
            In
            Let d2.4738 =
              Td1666.4759 *. Td1668.4760
            In
            Let Ti1669.4758 =
              Set (0)
            In
            Let o.6707 =
              Ti1669.4758 << 2
            In
            Let Td1670.4757 =
              FLord v.2804[o.6707]
            In
            Let Td1671.4756 =
              d2.4738 *. Td1670.4757
            In
            Let Td1672.4755 =
              Td1671.4756 +. b0.2806
            In
            Let Td1673.4753 =
              CallDir fabs.2523 Td1672.4755 
            In
            Let Td1674.4754 =
              CallDir o_param_a.2674 m.2803 
            In
            Let Tb1685.4742 =
              CallDir fless.2511 Td1673.4753 Td1674.4754 
            In
            Let Ti1687.4739 =
              If Tb1685.4742 = 0 Then
                Ans (
                  Set (0)
                )
              Then
                Let Ti1675.4752 =
                  Set (1)
                In
                Let o.6709 =
                  Ti1675.4752 << 2
                In
                Let Td1676.4751 =
                  FLord v.2804[o.6709]
                In
                Let Td1677.4750 =
                  d2.4738 *. Td1676.4751
                In
                Let Td1678.4749 =
                  Td1677.4750 +. b1.2807
                In
                Let Td1679.4747 =
                  CallDir fabs.2523 Td1678.4749 
                In
                Let Td1680.4748 =
                  CallDir o_param_b.2676 m.2803 
                In
                Let Tb1684.4743 =
                  CallDir fless.2511 Td1679.4747 Td1680.4748 
                In
                Ans (
                  If Tb1684.4743 = 0 Then
                    Ans (
                      Set (0)
                    )
                  Then
                    Let Ti1681.4746 =
                      Set (5)
                    In
                    Let o.6711 =
                      Ti1681.4746 << 2
                    In
                    Let Td1682.4745 =
                      FLord dconst.2805[o.6711]
                    In
                    Let Tb1683.4744 =
                      CallDir fiszero.2518 Td1682.4745 
                    In
                    Ans (
                      If Tb1683.4744 = 0 Then
                        Ans (
                          Set (1)
                        )
                      Then
                        Ans (
                          Set (0)
                        )
                    )
                )
            In
            Ans (
              If Ti1687.4739 = 0 Then
                Ans (
                  Set (0)
                )
              Then
                Let Ti1686.4741 =
                  Set (0)
                In
                Let o.6713 =
                  Ti1686.4741 << 2
                In
                Let Tu99.4740 =
                  FStore d2.4738 to solver_dist.2585[o.6713]
                In
                Ans (
                  Set (3)
                )
            )
          Then
            Let Ti1688.4737 =
              Set (0)
            In
            Let o.6702 =
              Ti1688.4737 << 2
            In
            Let Tu98.4736 =
              FStore d1.4734 to solver_dist.2585[o.6702]
            In
            Ans (
              Set (2)
            )
        )
      Then
        Let Ti1690.4733 =
          Set (0)
        In
        Let o.6691 =
          Ti1690.4733 << 2
        In
        Let Tu97.4732 =
          FStore d0.4730 to solver_dist.2585[o.6691]
        In
        Ans (
          Set (1)
        )
    )
  Int solver_surface_fast.2809 (m.2810 dconst.2811 b0.2812 b1.2813 b2.2814 ) =
    Let solver_dist.2585 =
      Lord %g27[-4]
    In
    Let Ti1605.4729 =
      Set (0)
    In
    Let o.6714 =
      Ti1605.4729 << 2
    In
    Let Td1606.4728 =
      FLord dconst.2811[o.6714]
    In
    Let Tb1619.4714 =
      CallDir fisneg.2516 Td1606.4728 
    In
    Ans (
      If Tb1619.4714 = 0 Then
        Ans (
          Set (0)
        )
      Then
        Let Ti1607.4716 =
          Set (0)
        In
        Let Ti1608.4727 =
          Set (1)
        In
        Let o.6716 =
          Ti1608.4727 << 2
        In
        Let Td1609.4726 =
          FLord dconst.2811[o.6716]
        In
        Let Td1610.4722 =
          Td1609.4726 *. b0.2812
        In
        Let Ti1611.4725 =
          Set (2)
        In
        Let o.6718 =
          Ti1611.4725 << 2
        In
        Let Td1612.4724 =
          FLord dconst.2811[o.6718]
        In
        Let Td1613.4723 =
          Td1612.4724 *. b1.2813
        In
        Let Td1614.4718 =
          Td1610.4722 +. Td1613.4723
        In
        Let Ti1615.4721 =
          Set (3)
        In
        Let o.6720 =
          Ti1615.4721 << 2
        In
        Let Td1616.4720 =
          FLord dconst.2811[o.6720]
        In
        Let Td1617.4719 =
          Td1616.4720 *. b2.2814
        In
        Let Td1618.4717 =
          Td1614.4718 +. Td1617.4719
        In
        Let o.6722 =
          Ti1607.4716 << 2
        In
        Let Tu100.4715 =
          FStore Td1618.4717 to solver_dist.2585[o.6722]
        In
        Ans (
          Set (1)
        )
    )
  Int solver_second_fast.2815 (m.2816 dconst.2817 b0.2818 b1.2819 b2.2820 ) =
    Let solver_dist.2585 =
      Lord %g27[-4]
    In
    Let Ti1574.4713 =
      Set (0)
    In
    Let o.6723 =
      Ti1574.4713 << 2
    In
    Let aa.4677 =
      FLord dconst.2817[o.6723]
    In
    Let Tb1604.4678 =
      CallDir fiszero.2518 aa.4677 
    In
    Ans (
      If Tb1604.4678 = 0 Then
        Let Ti1575.4712 =
          Set (1)
        In
        Let o.6725 =
          Ti1575.4712 << 2
        In
        Let Td1576.4711 =
          FLord dconst.2817[o.6725]
        In
        Let Td1577.4707 =
          Td1576.4711 *. b0.2818
        In
        Let Ti1578.4710 =
          Set (2)
        In
        Let o.6727 =
          Ti1578.4710 << 2
        In
        Let Td1579.4709 =
          FLord dconst.2817[o.6727]
        In
        Let Td1580.4708 =
          Td1579.4709 *. b1.2819
        In
        Let Td1581.4703 =
          Td1577.4707 +. Td1580.4708
        In
        Let Ti1582.4706 =
          Set (3)
        In
        Let o.6729 =
          Ti1582.4706 << 2
        In
        Let Td1583.4705 =
          FLord dconst.2817[o.6729]
        In
        Let Td1584.4704 =
          Td1583.4705 *. b2.2820
        In
        Let neg_bb.4679 =
          Td1581.4703 +. Td1584.4704
        In
        Let cc0.4680 =
          CallDir quadratic.2779 m.2816 b0.2818 b1.2819 b2.2820 
        In
        Let Ti1586.4700 =
          CallDir o_form.2666 m.2816 
        In
        Let Ti1587.4701 =
          Set (3)
        In
        Let cc.4681 =
          If Ti1586.4700 = Ti1587.4701 Then
            Let l.6731 =
              Set (l.6261)
            In
            Let Td1585.4702 =
              FLord l.6731[0]
            In
            Ans (
              cc0.4680 -. Td1585.4702
            )
          Then
            Ans (
              FMovD (cc0.4680)
            )
        In
        Let Td1588.4698 =
          CallDir fsqr.2531 neg_bb.4679 
        In
        Let Td1589.4699 =
          aa.4677 *. cc.4681
        In
        Let d.4682 =
          Td1588.4698 -. Td1589.4699
        In
        Let Tb1603.4683 =
          CallDir fispos.2514 d.4682 
        In
        Ans (
          If Tb1603.4683 = 0 Then
            Ans (
              Set (0)
            )
          Then
            Let Tb1602.4685 =
              CallDir o_isinvert.2670 m.2816 
            In
            Let Tu101.4684 =
              If Tb1602.4685 = 0 Then
                Let Ti1590.4692 =
                  Set (0)
                In
                Let Td1591.4697 =
                  CallDir min_caml_sqrt d.4682 
                In
                Let Td1592.4694 =
                  neg_bb.4679 -. Td1591.4697
                In
                Let Ti1593.4696 =
                  Set (4)
                In
                Let o.6735 =
                  Ti1593.4696 << 2
                In
                Let Td1594.4695 =
                  FLord dconst.2817[o.6735]
                In
                Let Td1595.4693 =
                  Td1592.4694 *. Td1594.4695
                In
                Let o.6737 =
                  Ti1590.4692 << 2
                In
                Ans (
                  FStore Td1595.4693 to solver_dist.2585[o.6737]
                )
              Then
                Let Ti1596.4686 =
                  Set (0)
                In
                Let Td1597.4691 =
                  CallDir min_caml_sqrt d.4682 
                In
                Let Td1598.4688 =
                  neg_bb.4679 +. Td1597.4691
                In
                Let Ti1599.4690 =
                  Set (4)
                In
                Let o.6732 =
                  Ti1599.4690 << 2
                In
                Let Td1600.4689 =
                  FLord dconst.2817[o.6732]
                In
                Let Td1601.4687 =
                  Td1598.4688 *. Td1600.4689
                In
                Let o.6734 =
                  Ti1596.4686 << 2
                In
                Ans (
                  FStore Td1601.4687 to solver_dist.2585[o.6734]
                )
            In
            Ans (
              Set (1)
            )
        )
      Then
        Ans (
          Set (0)
        )
    )
  Int solver_fast.2821 (index.2822 dirvec.2823 org.2824 ) =
    Let solver_surface_fast.2809 =
      Lord %g27[-16]
    In
    Let solver_second_fast.2815 =
      Lord %g27[-12]
    In
    Let solver_rect_fast.2802 =
      Lord %g27[-8]
    In
    Let objects.2578 =
      Lord %g27[-4]
    In
    Let o.6738 =
      index.2822 << 2
    In
    Let m.4659 =
      Lord objects.2578[o.6738]
    In
    Let Ti1563.4676 =
      Set (0)
    In
    Let o.6740 =
      Ti1563.4676 << 2
    In
    Let Td1564.4674 =
      FLord org.2824[o.6740]
    In
    Let Td1565.4675 =
      CallDir o_param_x.2682 m.4659 
    In
    Let b0.4660 =
      Td1564.4674 -. Td1565.4675
    In
    Let Ti1566.4673 =
      Set (1)
    In
    Let o.6742 =
      Ti1566.4673 << 2
    In
    Let Td1567.4671 =
      FLord org.2824[o.6742]
    In
    Let Td1568.4672 =
      CallDir o_param_y.2684 m.4659 
    In
    Let b1.4661 =
      Td1567.4671 -. Td1568.4672
    In
    Let Ti1569.4670 =
      Set (2)
    In
    Let o.6744 =
      Ti1569.4670 << 2
    In
    Let Td1570.4668 =
      FLord org.2824[o.6744]
    In
    Let Td1571.4669 =
      CallDir o_param_z.2686 m.4659 
    In
    Let b2.4662 =
      Td1570.4668 -. Td1571.4669
    In
    Let dconsts.4663 =
      CallDir d_const.2727 dirvec.2823 
    In
    Let o.6746 =
      index.2822 << 2
    In
    Let dconst.4664 =
      Lord dconsts.4663[o.6746]
    In
    Let m_shape.4665 =
      CallDir o_form.2666 m.4659 
    In
    Ans (
      If m_shape.4665 = 1 Then
        Let Ta1572.4667 =
          CallDir d_vec.2725 dirvec.2823 
        In
        Ans (
          CallCls solver_rect_fast.2802 m.4659 Ta1572.4667 dconst.4664 b0.4660 b1.4661 b2.4662 
        )
      Then
        Let Ti1573.4666 =
          Set (2)
        In
        Ans (
          If m_shape.4665 = Ti1573.4666 Then
            Ans (
              CallCls solver_surface_fast.2809 m.4659 dconst.4664 b0.4660 b1.4661 b2.4662 
            )
          Then
            Ans (
              CallCls solver_second_fast.2815 m.4659 dconst.4664 b0.4660 b1.4661 b2.4662 
            )
        )
    )
  Int solver_surface_fast2.2825 (m.2826 dconst.2827 sconst.2828 b0.2829 b1.2830 b2.2831 ) =
    Let solver_dist.2585 =
      Lord %g27[-4]
    In
    Let Ti1554.4658 =
      Set (0)
    In
    Let o.6748 =
      Ti1554.4658 << 2
    In
    Let Td1555.4657 =
      FLord dconst.2827[o.6748]
    In
    Let Tb1562.4649 =
      CallDir fisneg.2516 Td1555.4657 
    In
    Ans (
      If Tb1562.4649 = 0 Then
        Ans (
          Set (0)
        )
      Then
        Let Ti1556.4651 =
          Set (0)
        In
        Let Ti1557.4656 =
          Set (0)
        In
        Let o.6750 =
          Ti1557.4656 << 2
        In
        Let Td1558.4653 =
          FLord dconst.2827[o.6750]
        In
        Let Ti1559.4655 =
          Set (3)
        In
        Let o.6752 =
          Ti1559.4655 << 2
        In
        Let Td1560.4654 =
          FLord sconst.2828[o.6752]
        In
        Let Td1561.4652 =
          Td1558.4653 *. Td1560.4654
        In
        Let o.6754 =
          Ti1556.4651 << 2
        In
        Let Tu102.4650 =
          FStore Td1561.4652 to solver_dist.2585[o.6754]
        In
        Ans (
          Set (1)
        )
    )
  Int solver_second_fast2.2832 (m.2833 dconst.2834 sconst.2835 b0.2836 b1.2837 b2.2838 ) =
    Let solver_dist.2585 =
      Lord %g27[-4]
    In
    Let Ti1525.4648 =
      Set (0)
    In
    Let o.6755 =
      Ti1525.4648 << 2
    In
    Let aa.4615 =
      FLord dconst.2834[o.6755]
    In
    Let Tb1553.4616 =
      CallDir fiszero.2518 aa.4615 
    In
    Ans (
      If Tb1553.4616 = 0 Then
        Let Ti1526.4647 =
          Set (1)
        In
        Let o.6757 =
          Ti1526.4647 << 2
        In
        Let Td1527.4646 =
          FLord dconst.2834[o.6757]
        In
        Let Td1528.4642 =
          Td1527.4646 *. b0.2836
        In
        Let Ti1529.4645 =
          Set (2)
        In
        Let o.6759 =
          Ti1529.4645 << 2
        In
        Let Td1530.4644 =
          FLord dconst.2834[o.6759]
        In
        Let Td1531.4643 =
          Td1530.4644 *. b1.2837
        In
        Let Td1532.4638 =
          Td1528.4642 +. Td1531.4643
        In
        Let Ti1533.4641 =
          Set (3)
        In
        Let o.6761 =
          Ti1533.4641 << 2
        In
        Let Td1534.4640 =
          FLord dconst.2834[o.6761]
        In
        Let Td1535.4639 =
          Td1534.4640 *. b2.2838
        In
        Let neg_bb.4617 =
          Td1532.4638 +. Td1535.4639
        In
        Let Ti1536.4637 =
          Set (3)
        In
        Let o.6763 =
          Ti1536.4637 << 2
        In
        Let cc.4618 =
          FLord sconst.2835[o.6763]
        In
        Let Td1537.4635 =
          CallDir fsqr.2531 neg_bb.4617 
        In
        Let Td1538.4636 =
          aa.4615 *. cc.4618
        In
        Let d.4619 =
          Td1537.4635 -. Td1538.4636
        In
        Let Tb1552.4620 =
          CallDir fispos.2514 d.4619 
        In
        Ans (
          If Tb1552.4620 = 0 Then
            Ans (
              Set (0)
            )
          Then
            Let Tb1551.4622 =
              CallDir o_isinvert.2670 m.2833 
            In
            Let Tu103.4621 =
              If Tb1551.4622 = 0 Then
                Let Ti1539.4629 =
                  Set (0)
                In
                Let Td1540.4634 =
                  CallDir min_caml_sqrt d.4619 
                In
                Let Td1541.4631 =
                  neg_bb.4617 -. Td1540.4634
                In
                Let Ti1542.4633 =
                  Set (4)
                In
                Let o.6768 =
                  Ti1542.4633 << 2
                In
                Let Td1543.4632 =
                  FLord dconst.2834[o.6768]
                In
                Let Td1544.4630 =
                  Td1541.4631 *. Td1543.4632
                In
                Let o.6770 =
                  Ti1539.4629 << 2
                In
                Ans (
                  FStore Td1544.4630 to solver_dist.2585[o.6770]
                )
              Then
                Let Ti1545.4623 =
                  Set (0)
                In
                Let Td1546.4628 =
                  CallDir min_caml_sqrt d.4619 
                In
                Let Td1547.4625 =
                  neg_bb.4617 +. Td1546.4628
                In
                Let Ti1548.4627 =
                  Set (4)
                In
                Let o.6765 =
                  Ti1548.4627 << 2
                In
                Let Td1549.4626 =
                  FLord dconst.2834[o.6765]
                In
                Let Td1550.4624 =
                  Td1547.4625 *. Td1549.4626
                In
                Let o.6767 =
                  Ti1545.4623 << 2
                In
                Ans (
                  FStore Td1550.4624 to solver_dist.2585[o.6767]
                )
            In
            Ans (
              Set (1)
            )
        )
      Then
        Ans (
          Set (0)
        )
    )
  Int solver_fast2.2839 (index.2840 dirvec.2841 ) =
    Let solver_surface_fast2.2825 =
      Lord %g27[-16]
    In
    Let solver_second_fast2.2832 =
      Lord %g27[-12]
    In
    Let solver_rect_fast.2802 =
      Lord %g27[-8]
    In
    Let objects.2578 =
      Lord %g27[-4]
    In
    Let o.6771 =
      index.2840 << 2
    In
    Let m.4602 =
      Lord objects.2578[o.6771]
    In
    Let sconst.4603 =
      CallDir o_param_ctbl.2704 m.4602 
    In
    Let Ti1520.4614 =
      Set (0)
    In
    Let o.6773 =
      Ti1520.4614 << 2
    In
    Let b0.4604 =
      FLord sconst.4603[o.6773]
    In
    Let Ti1521.4613 =
      Set (1)
    In
    Let o.6775 =
      Ti1521.4613 << 2
    In
    Let b1.4605 =
      FLord sconst.4603[o.6775]
    In
    Let Ti1522.4612 =
      Set (2)
    In
    Let o.6777 =
      Ti1522.4612 << 2
    In
    Let b2.4606 =
      FLord sconst.4603[o.6777]
    In
    Let dconsts.4607 =
      CallDir d_const.2727 dirvec.2841 
    In
    Let o.6779 =
      index.2840 << 2
    In
    Let dconst.4608 =
      Lord dconsts.4607[o.6779]
    In
    Let m_shape.4609 =
      CallDir o_form.2666 m.4602 
    In
    Ans (
      If m_shape.4609 = 1 Then
        Let Ta1523.4611 =
          CallDir d_vec.2725 dirvec.2841 
        In
        Ans (
          CallCls solver_rect_fast.2802 m.4602 Ta1523.4611 dconst.4608 b0.4604 b1.4605 b2.4606 
        )
      Then
        Let Ti1524.4610 =
          Set (2)
        In
        Ans (
          If m_shape.4609 = Ti1524.4610 Then
            Ans (
              CallCls solver_surface_fast2.2825 m.4602 dconst.4608 sconst.4603 b0.4604 b1.4605 b2.4606 
            )
          Then
            Ans (
              CallCls solver_second_fast2.2832 m.4602 dconst.4608 sconst.4603 b0.4604 b1.4605 b2.4606 
            )
        )
    )
  Array(Float) setup_rect_table.2842 (vec.2843 m.2844 ) =
    Let Ti1464.4600 =
      Set (6)
    In
    Let l.6781 =
      Set (l.6252)
    In
    Let Td1465.4601 =
      FLord l.6781[0]
    In
    Let const.4539 =
      CallDir min_caml_create_float_array Ti1464.4600 Td1465.4601 
    In
    Let Ti1466.4599 =
      Set (0)
    In
    Let o.6782 =
      Ti1466.4599 << 2
    In
    Let Td1467.4598 =
      FLord vec.2843[o.6782]
    In
    Let Tb1483.4581 =
      CallDir fiszero.2518 Td1467.4598 
    In
    Let Tu109.4540 =
      If Tb1483.4581 = 0 Then
        Let Ti1468.4590 =
          Set (0)
        In
        Let Tb1469.4594 =
          CallDir o_isinvert.2670 m.2844 
        In
        Let Ti1470.4597 =
          Set (0)
        In
        Let o.6786 =
          Ti1470.4597 << 2
        In
        Let Td1471.4596 =
          FLord vec.2843[o.6786]
        In
        Let Tb1472.4595 =
          CallDir fisneg.2516 Td1471.4596 
        In
        Let Tb1473.4592 =
          CallDir xor.2607 Tb1469.4594 Tb1472.4595 
        In
        Let Td1474.4593 =
          CallDir o_param_a.2674 m.2844 
        In
        Let Td1475.4591 =
          CallDir fneg_cond.2612 Tb1473.4592 Td1474.4593 
        In
        Let o.6788 =
          Ti1468.4590 << 2
        In
        Let Tu104.4584 =
          FStore Td1475.4591 to const.4539[o.6788]
        In
        Let Ti1476.4585 =
          Set (1)
        In
        Let l.6789 =
          Set (l.6261)
        In
        Let Td1477.4587 =
          FLord l.6789[0]
        In
        Let Ti1478.4589 =
          Set (0)
        In
        Let o.6790 =
          Ti1478.4589 << 2
        In
        Let Td1479.4588 =
          FLord vec.2843[o.6790]
        In
        Let Td1480.4586 =
          Td1477.4587 /. Td1479.4588
        In
        Let o.6792 =
          Ti1476.4585 << 2
        In
        Ans (
          FStore Td1480.4586 to const.4539[o.6792]
        )
      Then
        Let Ti1481.4582 =
          Set (1)
        In
        Let l.6784 =
          Set (l.6252)
        In
        Let Td1482.4583 =
          FLord l.6784[0]
        In
        Let o.6785 =
          Ti1481.4582 << 2
        In
        Ans (
          FStore Td1482.4583 to const.4539[o.6785]
        )
    In
    Let Ti1484.4580 =
      Set (1)
    In
    Let o.6793 =
      Ti1484.4580 << 2
    In
    Let Td1485.4579 =
      FLord vec.2843[o.6793]
    In
    Let Tb1501.4562 =
      CallDir fiszero.2518 Td1485.4579 
    In
    Let Tu108.4541 =
      If Tb1501.4562 = 0 Then
        Let Ti1486.4571 =
          Set (2)
        In
        Let Tb1487.4575 =
          CallDir o_isinvert.2670 m.2844 
        In
        Let Ti1488.4578 =
          Set (1)
        In
        Let o.6797 =
          Ti1488.4578 << 2
        In
        Let Td1489.4577 =
          FLord vec.2843[o.6797]
        In
        Let Tb1490.4576 =
          CallDir fisneg.2516 Td1489.4577 
        In
        Let Tb1491.4573 =
          CallDir xor.2607 Tb1487.4575 Tb1490.4576 
        In
        Let Td1492.4574 =
          CallDir o_param_b.2676 m.2844 
        In
        Let Td1493.4572 =
          CallDir fneg_cond.2612 Tb1491.4573 Td1492.4574 
        In
        Let o.6799 =
          Ti1486.4571 << 2
        In
        Let Tu105.4565 =
          FStore Td1493.4572 to const.4539[o.6799]
        In
        Let Ti1494.4566 =
          Set (3)
        In
        Let l.6800 =
          Set (l.6261)
        In
        Let Td1495.4568 =
          FLord l.6800[0]
        In
        Let Ti1496.4570 =
          Set (1)
        In
        Let o.6801 =
          Ti1496.4570 << 2
        In
        Let Td1497.4569 =
          FLord vec.2843[o.6801]
        In
        Let Td1498.4567 =
          Td1495.4568 /. Td1497.4569
        In
        Let o.6803 =
          Ti1494.4566 << 2
        In
        Ans (
          FStore Td1498.4567 to const.4539[o.6803]
        )
      Then
        Let Ti1499.4563 =
          Set (3)
        In
        Let l.6795 =
          Set (l.6252)
        In
        Let Td1500.4564 =
          FLord l.6795[0]
        In
        Let o.6796 =
          Ti1499.4563 << 2
        In
        Ans (
          FStore Td1500.4564 to const.4539[o.6796]
        )
    In
    Let Ti1502.4561 =
      Set (2)
    In
    Let o.6804 =
      Ti1502.4561 << 2
    In
    Let Td1503.4560 =
      FLord vec.2843[o.6804]
    In
    Let Tb1519.4543 =
      CallDir fiszero.2518 Td1503.4560 
    In
    Let Tu107.4542 =
      If Tb1519.4543 = 0 Then
        Let Ti1504.4552 =
          Set (4)
        In
        Let Tb1505.4556 =
          CallDir o_isinvert.2670 m.2844 
        In
        Let Ti1506.4559 =
          Set (2)
        In
        Let o.6808 =
          Ti1506.4559 << 2
        In
        Let Td1507.4558 =
          FLord vec.2843[o.6808]
        In
        Let Tb1508.4557 =
          CallDir fisneg.2516 Td1507.4558 
        In
        Let Tb1509.4554 =
          CallDir xor.2607 Tb1505.4556 Tb1508.4557 
        In
        Let Td1510.4555 =
          CallDir o_param_c.2678 m.2844 
        In
        Let Td1511.4553 =
          CallDir fneg_cond.2612 Tb1509.4554 Td1510.4555 
        In
        Let o.6810 =
          Ti1504.4552 << 2
        In
        Let Tu106.4546 =
          FStore Td1511.4553 to const.4539[o.6810]
        In
        Let Ti1512.4547 =
          Set (5)
        In
        Let l.6811 =
          Set (l.6261)
        In
        Let Td1513.4549 =
          FLord l.6811[0]
        In
        Let Ti1514.4551 =
          Set (2)
        In
        Let o.6812 =
          Ti1514.4551 << 2
        In
        Let Td1515.4550 =
          FLord vec.2843[o.6812]
        In
        Let Td1516.4548 =
          Td1513.4549 /. Td1515.4550
        In
        Let o.6814 =
          Ti1512.4547 << 2
        In
        Ans (
          FStore Td1516.4548 to const.4539[o.6814]
        )
      Then
        Let Ti1517.4544 =
          Set (5)
        In
        Let l.6806 =
          Set (l.6252)
        In
        Let Td1518.4545 =
          FLord l.6806[0]
        In
        Let o.6807 =
          Ti1517.4544 << 2
        In
        Ans (
          FStore Td1518.4545 to const.4539[o.6807]
        )
    In
    Ans (
      Mov (const.4539)
    )
  Array(Float) setup_surface_table.2845 (vec.2846 m.2847 ) =
    Let Ti1431.4537 =
      Set (4)
    In
    Let l.6815 =
      Set (l.6252)
    In
    Let Td1432.4538 =
      FLord l.6815[0]
    In
    Let const.4500 =
      CallDir min_caml_create_float_array Ti1431.4537 Td1432.4538 
    In
    Let Ti1433.4536 =
      Set (0)
    In
    Let o.6816 =
      Ti1433.4536 << 2
    In
    Let Td1434.4534 =
      FLord vec.2846[o.6816]
    In
    Let Td1435.4535 =
      CallDir o_param_a.2674 m.2847 
    In
    Let Td1436.4529 =
      Td1434.4534 *. Td1435.4535
    In
    Let Ti1437.4533 =
      Set (1)
    In
    Let o.6818 =
      Ti1437.4533 << 2
    In
    Let Td1438.4531 =
      FLord vec.2846[o.6818]
    In
    Let Td1439.4532 =
      CallDir o_param_b.2676 m.2847 
    In
    Let Td1440.4530 =
      Td1438.4531 *. Td1439.4532
    In
    Let Td1441.4524 =
      Td1436.4529 +. Td1440.4530
    In
    Let Ti1442.4528 =
      Set (2)
    In
    Let o.6820 =
      Ti1442.4528 << 2
    In
    Let Td1443.4526 =
      FLord vec.2846[o.6820]
    In
    Let Td1444.4527 =
      CallDir o_param_c.2678 m.2847 
    In
    Let Td1445.4525 =
      Td1443.4526 *. Td1444.4527
    In
    Let d.4501 =
      Td1441.4524 +. Td1445.4525
    In
    Let Tb1463.4503 =
      CallDir fispos.2514 d.4501 
    In
    Let Tu113.4502 =
      If Tb1463.4503 = 0 Then
        Let Ti1446.4522 =
          Set (0)
        In
        Let l.6827 =
          Set (l.6252)
        In
        Let Td1447.4523 =
          FLord l.6827[0]
        In
        Let o.6828 =
          Ti1446.4522 << 2
        In
        Ans (
          FStore Td1447.4523 to const.4500[o.6828]
        )
      Then
        Let Ti1448.4519 =
          Set (0)
        In
        Let l.6822 =
          Set (l.6266)
        In
        Let Td1449.4521 =
          FLord l.6822[0]
        In
        Let Td1450.4520 =
          Td1449.4521 /. d.4501
        In
        Let o.6823 =
          Ti1448.4519 << 2
        In
        Let Tu112.4504 =
          FStore Td1450.4520 to const.4500[o.6823]
        In
        Let Ti1451.4515 =
          Set (1)
        In
        Let Td1452.4518 =
          CallDir o_param_a.2674 m.2847 
        In
        Let Td1453.4517 =
          Td1452.4518 /. d.4501
        In
        Let Td1454.4516 =
          CallDir fneg.2527 Td1453.4517 
        In
        Let o.6824 =
          Ti1451.4515 << 2
        In
        Let Tu111.4505 =
          FStore Td1454.4516 to const.4500[o.6824]
        In
        Let Ti1455.4511 =
          Set (2)
        In
        Let Td1456.4514 =
          CallDir o_param_b.2676 m.2847 
        In
        Let Td1457.4513 =
          Td1456.4514 /. d.4501
        In
        Let Td1458.4512 =
          CallDir fneg.2527 Td1457.4513 
        In
        Let o.6825 =
          Ti1455.4511 << 2
        In
        Let Tu110.4506 =
          FStore Td1458.4512 to const.4500[o.6825]
        In
        Let Ti1459.4507 =
          Set (3)
        In
        Let Td1460.4510 =
          CallDir o_param_c.2678 m.2847 
        In
        Let Td1461.4509 =
          Td1460.4510 /. d.4501
        In
        Let Td1462.4508 =
          CallDir fneg.2527 Td1461.4509 
        In
        Let o.6826 =
          Ti1459.4507 << 2
        In
        Ans (
          FStore Td1462.4508 to const.4500[o.6826]
        )
    In
    Ans (
      Mov (const.4500)
    )
  Array(Float) setup_second_table.2848 (v.2849 m.2850 ) =
    Let Ti1366.4498 =
      Set (5)
    In
    Let l.6829 =
      Set (l.6252)
    In
    Let Td1367.4499 =
      FLord l.6829[0]
    In
    Let const.4423 =
      CallDir min_caml_create_float_array Ti1366.4498 Td1367.4499 
    In
    Let Ti1368.4497 =
      Set (0)
    In
    Let o.6830 =
      Ti1368.4497 << 2
    In
    Let Td1369.4492 =
      FLord v.2849[o.6830]
    In
    Let Ti1370.4496 =
      Set (1)
    In
    Let o.6832 =
      Ti1370.4496 << 2
    In
    Let Td1371.4493 =
      FLord v.2849[o.6832]
    In
    Let Ti1372.4495 =
      Set (2)
    In
    Let o.6834 =
      Ti1372.4495 << 2
    In
    Let Td1373.4494 =
      FLord v.2849[o.6834]
    In
    Let aa.4424 =
      CallDir quadratic.2779 m.2850 Td1369.4492 Td1371.4493 Td1373.4494 
    In
    Let Ti1374.4491 =
      Set (0)
    In
    Let o.6836 =
      Ti1374.4491 << 2
    In
    Let Td1375.4489 =
      FLord v.2849[o.6836]
    In
    Let Td1376.4490 =
      CallDir o_param_a.2674 m.2850 
    In
    Let Td1377.4488 =
      Td1375.4489 *. Td1376.4490
    In
    Let c1.4425 =
      CallDir fneg.2527 Td1377.4488 
    In
    Let Ti1378.4487 =
      Set (1)
    In
    Let o.6838 =
      Ti1378.4487 << 2
    In
    Let Td1379.4485 =
      FLord v.2849[o.6838]
    In
    Let Td1380.4486 =
      CallDir o_param_b.2676 m.2850 
    In
    Let Td1381.4484 =
      Td1379.4485 *. Td1380.4486
    In
    Let c2.4426 =
      CallDir fneg.2527 Td1381.4484 
    In
    Let Ti1382.4483 =
      Set (2)
    In
    Let o.6840 =
      Ti1382.4483 << 2
    In
    Let Td1383.4481 =
      FLord v.2849[o.6840]
    In
    Let Td1384.4482 =
      CallDir o_param_c.2678 m.2850 
    In
    Let Td1385.4480 =
      Td1383.4481 *. Td1384.4482
    In
    Let c3.4427 =
      CallDir fneg.2527 Td1385.4480 
    In
    Let Ti1386.4479 =
      Set (0)
    In
    Let o.6842 =
      Ti1386.4479 << 2
    In
    Let Tu120.4428 =
      FStore aa.4424 to const.4423[o.6842]
    In
    Let Ti1426.4435 =
      CallDir o_isrot.2672 m.2850 
    In
    Let Tu119.4429 =
      If Ti1426.4435 = 0 Then
        Let Ti1387.4478 =
          Set (1)
        In
        Let o.6858 =
          Ti1387.4478 << 2
        In
        Let Tu117.4474 =
          FStore c1.4425 to const.4423[o.6858]
        In
        Let Ti1388.4477 =
          Set (2)
        In
        Let o.6859 =
          Ti1388.4477 << 2
        In
        Let Tu116.4475 =
          FStore c2.4426 to const.4423[o.6859]
        In
        Let Ti1389.4476 =
          Set (3)
        In
        Let o.6860 =
          Ti1389.4476 << 2
        In
        Ans (
          FStore c3.4427 to const.4423[o.6860]
        )
      Then
        Let Ti1390.4462 =
          Set (1)
        In
        Let Ti1391.4473 =
          Set (2)
        In
        Let o.6843 =
          Ti1391.4473 << 2
        In
        Let Td1392.4471 =
          FLord v.2849[o.6843]
        In
        Let Td1393.4472 =
          CallDir o_param_r2.2700 m.2850 
        In
        Let Td1394.4466 =
          Td1392.4471 *. Td1393.4472
        In
        Let Ti1395.4470 =
          Set (1)
        In
        Let o.6845 =
          Ti1395.4470 << 2
        In
        Let Td1396.4468 =
          FLord v.2849[o.6845]
        In
        Let Td1397.4469 =
          CallDir o_param_r3.2702 m.2850 
        In
        Let Td1398.4467 =
          Td1396.4468 *. Td1397.4469
        In
        Let Td1399.4465 =
          Td1394.4466 +. Td1398.4467
        In
        Let Td1400.4464 =
          CallDir fhalf.2529 Td1399.4465 
        In
        Let Td1401.4463 =
          c1.4425 -. Td1400.4464
        In
        Let o.6847 =
          Ti1390.4462 << 2
        In
        Let Tu115.4436 =
          FStore Td1401.4463 to const.4423[o.6847]
        In
        Let Ti1402.4450 =
          Set (2)
        In
        Let Ti1403.4461 =
          Set (2)
        In
        Let o.6848 =
          Ti1403.4461 << 2
        In
        Let Td1404.4459 =
          FLord v.2849[o.6848]
        In
        Let Td1405.4460 =
          CallDir o_param_r1.2698 m.2850 
        In
        Let Td1406.4454 =
          Td1404.4459 *. Td1405.4460
        In
        Let Ti1407.4458 =
          Set (0)
        In
        Let o.6850 =
          Ti1407.4458 << 2
        In
        Let Td1408.4456 =
          FLord v.2849[o.6850]
        In
        Let Td1409.4457 =
          CallDir o_param_r3.2702 m.2850 
        In
        Let Td1410.4455 =
          Td1408.4456 *. Td1409.4457
        In
        Let Td1411.4453 =
          Td1406.4454 +. Td1410.4455
        In
        Let Td1412.4452 =
          CallDir fhalf.2529 Td1411.4453 
        In
        Let Td1413.4451 =
          c2.4426 -. Td1412.4452
        In
        Let o.6852 =
          Ti1402.4450 << 2
        In
        Let Tu114.4437 =
          FStore Td1413.4451 to const.4423[o.6852]
        In
        Let Ti1414.4438 =
          Set (3)
        In
        Let Ti1415.4449 =
          Set (1)
        In
        Let o.6853 =
          Ti1415.4449 << 2
        In
        Let Td1416.4447 =
          FLord v.2849[o.6853]
        In
        Let Td1417.4448 =
          CallDir o_param_r1.2698 m.2850 
        In
        Let Td1418.4442 =
          Td1416.4447 *. Td1417.4448
        In
        Let Ti1419.4446 =
          Set (0)
        In
        Let o.6855 =
          Ti1419.4446 << 2
        In
        Let Td1420.4444 =
          FLord v.2849[o.6855]
        In
        Let Td1421.4445 =
          CallDir o_param_r2.2700 m.2850 
        In
        Let Td1422.4443 =
          Td1420.4444 *. Td1421.4445
        In
        Let Td1423.4441 =
          Td1418.4442 +. Td1422.4443
        In
        Let Td1424.4440 =
          CallDir fhalf.2529 Td1423.4441 
        In
        Let Td1425.4439 =
          c3.4427 -. Td1424.4440
        In
        Let o.6857 =
          Ti1414.4438 << 2
        In
        Ans (
          FStore Td1425.4439 to const.4423[o.6857]
        )
    In
    Let Tb1430.4431 =
      CallDir fiszero.2518 aa.4424 
    In
    Let Tu118.4430 =
      If Tb1430.4431 = 0 Then
        Let Ti1427.4432 =
          Set (4)
        In
        Let l.6861 =
          Set (l.6261)
        In
        Let Td1428.4434 =
          FLord l.6861[0]
        In
        Let Td1429.4433 =
          Td1428.4434 /. aa.4424
        In
        Let o.6862 =
          Ti1427.4432 << 2
        In
        Ans (
          FStore Td1429.4433 to const.4423[o.6862]
        )
      Then
        Ans (
          Nop
        )
    In
    Ans (
      Mov (const.4423)
    )
  Unit iter_setup_dirvec_constants.2851 (dirvec.2852 index.2853 ) =
    Let objects.2578 =
      Lord %g27[-4]
    In
    Ans (
      If index.2853 >= 0 Then
        Let o.6863 =
          index.2853 << 2
        In
        Let m.4412 =
          Lord objects.2578[o.6863]
        In
        Let dconst.4413 =
          CallDir d_const.2727 dirvec.2852 
        In
        Let v.4414 =
          CallDir d_vec.2725 dirvec.2852 
        In
        Let m_shape.4415 =
          CallDir o_form.2666 m.4412 
        In
        Let Tu121.4416 =
          If m_shape.4415 = 1 Then
            Let Ta1360.4422 =
              CallDir setup_rect_table.2842 v.4414 m.4412 
            In
            Let o.6867 =
              index.2853 << 2
            In
            Ans (
              Store Ta1360.4422 to dconst.4413[o.6867]
            )
          Then
            Let Ti1363.4419 =
              Set (2)
            In
            Ans (
              If m_shape.4415 = Ti1363.4419 Then
                Let Ta1361.4421 =
                  CallDir setup_surface_table.2845 v.4414 m.4412 
                In
                Let o.6866 =
                  index.2853 << 2
                In
                Ans (
                  Store Ta1361.4421 to dconst.4413[o.6866]
                )
              Then
                Let Ta1362.4420 =
                  CallDir setup_second_table.2848 v.4414 m.4412 
                In
                Let o.6865 =
                  index.2853 << 2
                In
                Ans (
                  Store Ta1362.4420 to dconst.4413[o.6865]
                )
            )
        In
        Let Ti1364.4418 =
          Set (1)
        In
        Let Ti1365.4417 =
          index.2853 - Ti1364.4418
        In
        Ans (
          CallCls iter_setup_dirvec_constants.2851 dirvec.2852 Ti1365.4417 
        )
      Then
        Ans (
          Nop
        )
    )
  Unit setup_dirvec_constants.2854 (dirvec.2855 ) =
    Let n_objects.2577 =
      Lord %g27[-8]
    In
    Let iter_setup_dirvec_constants.2851 =
      Lord %g27[-4]
    In
    Let Ti1356.4411 =
      Set (0)
    In
    Let o.6868 =
      Ti1356.4411 << 2
    In
    Let Ti1357.4409 =
      Lord n_objects.2577[o.6868]
    In
    Let Ti1358.4410 =
      Set (1)
    In
    Let Ti1359.4408 =
      Ti1357.4409 - Ti1358.4410
    In
    Ans (
      CallCls iter_setup_dirvec_constants.2851 dirvec.2855 Ti1359.4408 
    )
  Unit setup_startp_constants.2856 (p.2857 index.2858 ) =
    Let objects.2578 =
      Lord %g27[-4]
    In
    Ans (
      If index.2858 >= 0 Then
        Let o.6870 =
          index.2858 << 2
        In
        Let obj.4362 =
          Lord objects.2578[o.6870]
        In
        Let sconst.4363 =
          CallDir o_param_ctbl.2704 obj.4362 
        In
        Let m_shape.4364 =
          CallDir o_form.2666 obj.4362 
        In
        Let Ti1318.4403 =
          Set (0)
        In
        Let Ti1319.4407 =
          Set (0)
        In
        Let o.6872 =
          Ti1319.4407 << 2
        In
        Let Td1320.4405 =
          FLord p.2857[o.6872]
        In
        Let Td1321.4406 =
          CallDir o_param_x.2682 obj.4362 
        In
        Let Td1322.4404 =
          Td1320.4405 -. Td1321.4406
        In
        Let o.6874 =
          Ti1318.4403 << 2
        In
        Let Tu125.4365 =
          FStore Td1322.4404 to sconst.4363[o.6874]
        In
        Let Ti1323.4398 =
          Set (1)
        In
        Let Ti1324.4402 =
          Set (1)
        In
        Let o.6875 =
          Ti1324.4402 << 2
        In
        Let Td1325.4400 =
          FLord p.2857[o.6875]
        In
        Let Td1326.4401 =
          CallDir o_param_y.2684 obj.4362 
        In
        Let Td1327.4399 =
          Td1325.4400 -. Td1326.4401
        In
        Let o.6877 =
          Ti1323.4398 << 2
        In
        Let Tu124.4366 =
          FStore Td1327.4399 to sconst.4363[o.6877]
        In
        Let Ti1328.4393 =
          Set (2)
        In
        Let Ti1329.4397 =
          Set (2)
        In
        Let o.6878 =
          Ti1329.4397 << 2
        In
        Let Td1330.4395 =
          FLord p.2857[o.6878]
        In
        Let Td1331.4396 =
          CallDir o_param_z.2686 obj.4362 
        In
        Let Td1332.4394 =
          Td1330.4395 -. Td1331.4396
        In
        Let o.6880 =
          Ti1328.4393 << 2
        In
        Let Tu123.4367 =
          FStore Td1332.4394 to sconst.4363[o.6880]
        In
        Let Ti1353.4371 =
          Set (2)
        In
        Let Tu122.4368 =
          If m_shape.4364 = Ti1353.4371 Then
            Let Ti1333.4384 =
              Set (3)
            In
            Let Ta1334.4386 =
              CallDir o_param_abc.2680 obj.4362 
            In
            Let Ti1335.4392 =
              Set (0)
            In
            Let o.6889 =
              Ti1335.4392 << 2
            In
            Let Td1336.4387 =
              FLord sconst.4363[o.6889]
            In
            Let Ti1337.4391 =
              Set (1)
            In
            Let o.6891 =
              Ti1337.4391 << 2
            In
            Let Td1338.4388 =
              FLord sconst.4363[o.6891]
            In
            Let Ti1339.4390 =
              Set (2)
            In
            Let o.6893 =
              Ti1339.4390 << 2
            In
            Let Td1340.4389 =
              FLord sconst.4363[o.6893]
            In
            Let Td1341.4385 =
              CallDir veciprod2.2642 Ta1334.4386 Td1336.4387 Td1338.4388 Td1340.4389 
            In
            Let o.6895 =
              Ti1333.4384 << 2
            In
            Ans (
              FStore Td1341.4385 to sconst.4363[o.6895]
            )
          Then
            Let Ti1352.4372 =
              Set (2)
            In
            Ans (
              If m_shape.4364 <= Ti1352.4372 Then
                Ans (
                  Nop
                )
              Then
                Let Ti1342.4383 =
                  Set (0)
                In
                Let o.6881 =
                  Ti1342.4383 << 2
                In
                Let Td1343.4378 =
                  FLord sconst.4363[o.6881]
                In
                Let Ti1344.4382 =
                  Set (1)
                In
                Let o.6883 =
                  Ti1344.4382 << 2
                In
                Let Td1345.4379 =
                  FLord sconst.4363[o.6883]
                In
                Let Ti1346.4381 =
                  Set (2)
                In
                Let o.6885 =
                  Ti1346.4381 << 2
                In
                Let Td1347.4380 =
                  FLord sconst.4363[o.6885]
                In
                Let cc0.4373 =
                  CallDir quadratic.2779 obj.4362 Td1343.4378 Td1345.4379 Td1347.4380 
                In
                Let Ti1348.4374 =
                  Set (3)
                In
                Let Ti1350.4376 =
                  Set (3)
                In
                Let Td1351.4375 =
                  If m_shape.4364 = Ti1350.4376 Then
                    Let l.6887 =
                      Set (l.6261)
                    In
                    Let Td1349.4377 =
                      FLord l.6887[0]
                    In
                    Ans (
                      cc0.4373 -. Td1349.4377
                    )
                  Then
                    Ans (
                      FMovD (cc0.4373)
                    )
                In
                Let o.6888 =
                  Ti1348.4374 << 2
                In
                Ans (
                  FStore Td1351.4375 to sconst.4363[o.6888]
                )
            )
        In
        Let Ti1354.4370 =
          Set (1)
        In
        Let Ti1355.4369 =
          index.2858 - Ti1354.4370
        In
        Ans (
          CallCls setup_startp_constants.2856 p.2857 Ti1355.4369 
        )
      Then
        Ans (
          Nop
        )
    )
  Unit setup_startp.2859 (p.2860 ) =
    Let startp_fast.2598 =
      Lord %g27[-12]
    In
    Let setup_startp_constants.2856 =
      Lord %g27[-8]
    In
    Let n_objects.2577 =
      Lord %g27[-4]
    In
    Let Tu126.4357 =
      CallDir veccpy.2628 startp_fast.2598 p.2860 
    In
    Let Ti1314.4361 =
      Set (0)
    In
    Let o.6896 =
      Ti1314.4361 << 2
    In
    Let Ti1315.4359 =
      Lord n_objects.2577[o.6896]
    In
    Let Ti1316.4360 =
      Set (1)
    In
    Let Ti1317.4358 =
      Ti1315.4359 - Ti1316.4360
    In
    Ans (
      CallCls setup_startp_constants.2856 p.2860 Ti1317.4358 
    )
  Bool is_rect_outside.2861 (m.2862 p0.2863 p1.2864 p2.2865 ) =
    Let Td1304.4355 =
      CallDir fabs.2523 p0.2863 
    In
    Let Td1305.4356 =
      CallDir o_param_a.2674 m.2862 
    In
    Let Tb1311.4349 =
      CallDir fless.2511 Td1304.4355 Td1305.4356 
    In
    Let Ti1313.4347 =
      If Tb1311.4349 = 0 Then
        Ans (
          Set (0)
        )
      Then
        Let Td1306.4353 =
          CallDir fabs.2523 p1.2864 
        In
        Let Td1307.4354 =
          CallDir o_param_b.2676 m.2862 
        In
        Let Tb1310.4350 =
          CallDir fless.2511 Td1306.4353 Td1307.4354 
        In
        Ans (
          If Tb1310.4350 = 0 Then
            Ans (
              Set (0)
            )
          Then
            Let Td1308.4351 =
              CallDir fabs.2523 p2.2865 
            In
            Let Td1309.4352 =
              CallDir o_param_c.2678 m.2862 
            In
            Ans (
              CallDir fless.2511 Td1308.4351 Td1309.4352 
            )
        )
    In
    Ans (
      If Ti1313.4347 = 0 Then
        Let Tb1312.4348 =
          CallDir o_isinvert.2670 m.2862 
        In
        Ans (
          If Tb1312.4348 = 0 Then
            Ans (
              Set (1)
            )
          Then
            Ans (
              Set (0)
            )
        )
      Then
        Ans (
          CallDir o_isinvert.2670 m.2862 
        )
    )
  Bool is_plane_outside.2866 (m.2867 p0.2868 p1.2869 p2.2870 ) =
    Let Ta1300.4346 =
      CallDir o_param_abc.2680 m.2867 
    In
    Let w.4342 =
      CallDir veciprod2.2642 Ta1300.4346 p0.2868 p1.2869 p2.2870 
    In
    Let Tb1301.4344 =
      CallDir o_isinvert.2670 m.2867 
    In
    Let Tb1302.4345 =
      CallDir fisneg.2516 w.4342 
    In
    Let Tb1303.4343 =
      CallDir xor.2607 Tb1301.4344 Tb1302.4345 
    In
    Ans (
      If Tb1303.4343 = 0 Then
        Ans (
          Set (1)
        )
      Then
        Ans (
          Set (0)
        )
    )
  Bool is_second_outside.2871 (m.2872 p0.2873 p1.2874 p2.2875 ) =
    Let w.4334 =
      CallDir quadratic.2779 m.2872 p0.2873 p1.2874 p2.2875 
    In
    Let Ti1295.4339 =
      CallDir o_form.2666 m.2872 
    In
    Let Ti1296.4340 =
      Set (3)
    In
    Let w2.4335 =
      If Ti1295.4339 = Ti1296.4340 Then
        Let l.6898 =
          Set (l.6261)
        In
        Let Td1294.4341 =
          FLord l.6898[0]
        In
        Ans (
          w.4334 -. Td1294.4341
        )
      Then
        Ans (
          FMovD (w.4334)
        )
    In
    Let Tb1297.4337 =
      CallDir o_isinvert.2670 m.2872 
    In
    Let Tb1298.4338 =
      CallDir fisneg.2516 w2.4335 
    In
    Let Tb1299.4336 =
      CallDir xor.2607 Tb1297.4337 Tb1298.4338 
    In
    Ans (
      If Tb1299.4336 = 0 Then
        Ans (
          Set (1)
        )
      Then
        Ans (
          Set (0)
        )
    )
  Bool is_outside.2876 (m.2877 q0.2878 q1.2879 q2.2880 ) =
    Let Td1290.4333 =
      CallDir o_param_x.2682 m.2877 
    In
    Let p0.4326 =
      q0.2878 -. Td1290.4333
    In
    Let Td1291.4332 =
      CallDir o_param_y.2684 m.2877 
    In
    Let p1.4327 =
      q1.2879 -. Td1291.4332
    In
    Let Td1292.4331 =
      CallDir o_param_z.2686 m.2877 
    In
    Let p2.4328 =
      q2.2880 -. Td1292.4331
    In
    Let m_shape.4329 =
      CallDir o_form.2666 m.2877 
    In
    Ans (
      If m_shape.4329 = 1 Then
        Ans (
          CallDir is_rect_outside.2861 m.2877 p0.4326 p1.4327 p2.4328 
        )
      Then
        Let Ti1293.4330 =
          Set (2)
        In
        Ans (
          If m_shape.4329 = Ti1293.4330 Then
            Ans (
              CallDir is_plane_outside.2866 m.2877 p0.4326 p1.4327 p2.4328 
            )
          Then
            Ans (
              CallDir is_second_outside.2871 m.2877 p0.4326 p1.4327 p2.4328 
            )
        )
    )
  Bool check_all_inside.2881 (ofs.2882 iand.2883 q0.2884 q1.2885 q2.2886 ) =
    Let objects.2578 =
      Lord %g27[-4]
    In
    Let o.6899 =
      ofs.2882 << 2
    In
    Let head.4319 =
      Lord iand.2883[o.6899]
    In
    Let Ti1284.4325 =
      Set (1)
    In
    Let Ti1289.4320 =
      Neg (Ti1284.4325)
    In
    Ans (
      If head.4319 = Ti1289.4320 Then
        Ans (
          Set (1)
        )
      Then
        Let o.6901 =
          head.4319 << 2
        In
        Let Tt1285.4324 =
          Lord objects.2578[o.6901]
        In
        Let Tb1288.4321 =
          CallDir is_outside.2876 Tt1285.4324 q0.2884 q1.2885 q2.2886 
        In
        Ans (
          If Tb1288.4321 = 0 Then
            Let Ti1286.4323 =
              Set (1)
            In
            Let Ti1287.4322 =
              ofs.2882 + Ti1286.4323
            In
            Ans (
              CallCls check_all_inside.2881 Ti1287.4322 iand.2883 q0.2884 q1.2885 q2.2886 
            )
          Then
            Ans (
              Set (0)
            )
        )
    )
  Bool shadow_check_and_group.2887 (iand_ofs.2888 and_group.2889 ) =
    Let solver_fast.2821 =
      Lord %g27[-28]
    In
    Let solver_dist.2585 =
      Lord %g27[-24]
    In
    Let objects.2578 =
      Lord %g27[-20]
    In
    Let light_dirvec.2604 =
      Lord %g27[-16]
    In
    Let light.2581 =
      Lord %g27[-12]
    In
    Let intersection_point.2588 =
      Lord %g27[-8]
    In
    Let check_all_inside.2881 =
      Lord %g27[-4]
    In
    Let o.6903 =
      iand_ofs.2888 << 2
    In
    Let Ti1282.4282 =
      Lord and_group.2889[o.6903]
    In
    Let Ti1254.4318 =
      Set (1)
    In
    Let Ti1283.4283 =
      Neg (Ti1254.4318)
    In
    Ans (
      If Ti1282.4282 = Ti1283.4283 Then
        Ans (
          Set (0)
        )
      Then
        Let o.6905 =
          iand_ofs.2888 << 2
        In
        Let obj.4284 =
          Lord and_group.2889[o.6905]
        In
        Let t0.4285 =
          CallCls solver_fast.2821 obj.4284 light_dirvec.2604 intersection_point.2588 
        In
        Let Ti1255.4317 =
          Set (0)
        In
        Let o.6907 =
          Ti1255.4317 << 2
        In
        Let t0p.4286 =
          FLord solver_dist.2585[o.6907]
        In
        Let Ti1281.4287 =
          If t0.4285 = 0 Then
            Ans (
              Set (0)
            )
          Then
            Let l.6910 =
              Set (l.6909)
            In
            Let Td1256.4316 =
              FLord l.6910[0]
            In
            Ans (
              CallDir fless.2511 t0p.4286 Td1256.4316 
            )
        In
        Ans (
          If Ti1281.4287 = 0 Then
            Let o.6925 =
              obj.4284 << 2
            In
            Let Tt1257.4315 =
              Lord objects.2578[o.6925]
            In
            Let Tb1260.4312 =
              CallDir o_isinvert.2670 Tt1257.4315 
            In
            Ans (
              If Tb1260.4312 = 0 Then
                Ans (
                  Set (0)
                )
              Then
                Let Ti1258.4314 =
                  Set (1)
                In
                Let Ti1259.4313 =
                  iand_ofs.2888 + Ti1258.4314
                In
                Ans (
                  CallCls shadow_check_and_group.2887 Ti1259.4313 and_group.2889 
                )
            )
          Then
            Let l.6912 =
              Set (l.6911)
            In
            Let Td1261.4311 =
              FLord l.6912[0]
            In
            Let t.4288 =
              t0p.4286 +. Td1261.4311
            In
            Let Ti1262.4310 =
              Set (0)
            In
            Let o.6913 =
              Ti1262.4310 << 2
            In
            Let Td1263.4309 =
              FLord light.2581[o.6913]
            In
            Let Td1264.4306 =
              Td1263.4309 *. t.4288
            In
            Let Ti1265.4308 =
              Set (0)
            In
            Let o.6915 =
              Ti1265.4308 << 2
            In
            Let Td1266.4307 =
              FLord intersection_point.2588[o.6915]
            In
            Let q0.4289 =
              Td1264.4306 +. Td1266.4307
            In
            Let Ti1267.4305 =
              Set (1)
            In
            Let o.6917 =
              Ti1267.4305 << 2
            In
            Let Td1268.4304 =
              FLord light.2581[o.6917]
            In
            Let Td1269.4301 =
              Td1268.4304 *. t.4288
            In
            Let Ti1270.4303 =
              Set (1)
            In
            Let o.6919 =
              Ti1270.4303 << 2
            In
            Let Td1271.4302 =
              FLord intersection_point.2588[o.6919]
            In
            Let q1.4290 =
              Td1269.4301 +. Td1271.4302
            In
            Let Ti1272.4300 =
              Set (2)
            In
            Let o.6921 =
              Ti1272.4300 << 2
            In
            Let Td1273.4299 =
              FLord light.2581[o.6921]
            In
            Let Td1274.4296 =
              Td1273.4299 *. t.4288
            In
            Let Ti1275.4298 =
              Set (2)
            In
            Let o.6923 =
              Ti1275.4298 << 2
            In
            Let Td1276.4297 =
              FLord intersection_point.2588[o.6923]
            In
            Let q2.4291 =
              Td1274.4296 +. Td1276.4297
            In
            Let Ti1277.4295 =
              Set (0)
            In
            Let Tb1280.4292 =
              CallCls check_all_inside.2881 Ti1277.4295 and_group.2889 q0.4289 q1.4290 q2.4291 
            In
            Ans (
              If Tb1280.4292 = 0 Then
                Let Ti1278.4294 =
                  Set (1)
                In
                Let Ti1279.4293 =
                  iand_ofs.2888 + Ti1278.4294
                In
                Ans (
                  CallCls shadow_check_and_group.2887 Ti1279.4293 and_group.2889 
                )
              Then
                Ans (
                  Set (1)
                )
            )
        )
    )
  Bool shadow_check_one_or_group.2890 (ofs.2891 or_group.2892 ) =
    Let shadow_check_and_group.2887 =
      Lord %g27[-8]
    In
    Let and_net.2583 =
      Lord %g27[-4]
    In
    Let o.6927 =
      ofs.2891 << 2
    In
    Let head.4274 =
      Lord or_group.2892[o.6927]
    In
    Let Ti1249.4281 =
      Set (1)
    In
    Let Ti1253.4275 =
      Neg (Ti1249.4281)
    In
    Ans (
      If head.4274 = Ti1253.4275 Then
        Ans (
          Set (0)
        )
      Then
        Let o.6929 =
          head.4274 << 2
        In
        Let and_group.4276 =
          Lord and_net.2583[o.6929]
        In
        Let Ti1250.4280 =
          Set (0)
        In
        Let shadow_p.4277 =
          CallCls shadow_check_and_group.2887 Ti1250.4280 and_group.4276 
        In
        Ans (
          If shadow_p.4277 = 0 Then
            Let Ti1251.4279 =
              Set (1)
            In
            Let Ti1252.4278 =
              ofs.2891 + Ti1251.4279
            In
            Ans (
              CallCls shadow_check_one_or_group.2890 Ti1252.4278 or_group.2892 
            )
          Then
            Ans (
              Set (1)
            )
        )
    )
  Bool shadow_check_one_or_matrix.2893 (ofs.2894 or_matrix.2895 ) =
    Let solver_fast.2821 =
      Lord %g27[-20]
    In
    Let solver_dist.2585 =
      Lord %g27[-16]
    In
    Let shadow_check_one_or_group.2890 =
      Lord %g27[-12]
    In
    Let light_dirvec.2604 =
      Lord %g27[-8]
    In
    Let intersection_point.2588 =
      Lord %g27[-4]
    In
    Let o.6931 =
      ofs.2894 << 2
    In
    Let head.4254 =
      Lord or_matrix.2895[o.6931]
    In
    Let Ti1232.4273 =
      Set (0)
    In
    Let o.6933 =
      Ti1232.4273 << 2
    In
    Let range_primitive.4255 =
      Lord head.4254[o.6933]
    In
    Let Ti1233.4272 =
      Set (1)
    In
    Let Ti1248.4256 =
      Neg (Ti1233.4272)
    In
    Ans (
      If range_primitive.4255 = Ti1248.4256 Then
        Ans (
          Set (0)
        )
      Then
        Let Ti1240.4264 =
          Set (99)
        In
        Let Ti1247.4257 =
          If range_primitive.4255 = Ti1240.4264 Then
            Ans (
              Set (1)
            )
          Then
            Let t.4265 =
              CallCls solver_fast.2821 range_primitive.4255 light_dirvec.2604 intersection_point.2588 
            In
            Ans (
              If t.4265 = 0 Then
                Ans (
                  Set (0)
                )
              Then
                Let Ti1234.4271 =
                  Set (0)
                In
                Let o.6935 =
                  Ti1234.4271 << 2
                In
                Let Td1235.4269 =
                  FLord solver_dist.2585[o.6935]
                In
                Let l.6938 =
                  Set (l.6937)
                In
                Let Td1236.4270 =
                  FLord l.6938[0]
                In
                Let Tb1239.4266 =
                  CallDir fless.2511 Td1235.4269 Td1236.4270 
                In
                Ans (
                  If Tb1239.4266 = 0 Then
                    Ans (
                      Set (0)
                    )
                  Then
                    Let Ti1237.4268 =
                      Set (1)
                    In
                    Let Tb1238.4267 =
                      CallCls shadow_check_one_or_group.2890 Ti1237.4268 head.4254 
                    In
                    Ans (
                      If Tb1238.4267 = 0 Then
                        Ans (
                          Set (0)
                        )
                      Then
                        Ans (
                          Set (1)
                        )
                    )
                )
            )
        In
        Ans (
          If Ti1247.4257 = 0 Then
            Let Ti1241.4263 =
              Set (1)
            In
            Let Ti1242.4262 =
              ofs.2894 + Ti1241.4263
            In
            Ans (
              CallCls shadow_check_one_or_matrix.2893 Ti1242.4262 or_matrix.2895 
            )
          Then
            Let Ti1243.4261 =
              Set (1)
            In
            Let Tb1246.4258 =
              CallCls shadow_check_one_or_group.2890 Ti1243.4261 head.4254 
            In
            Ans (
              If Tb1246.4258 = 0 Then
                Let Ti1244.4260 =
                  Set (1)
                In
                Let Ti1245.4259 =
                  ofs.2894 + Ti1244.4260
                In
                Ans (
                  CallCls shadow_check_one_or_matrix.2893 Ti1245.4259 or_matrix.2895 
                )
              Then
                Ans (
                  Set (1)
                )
            )
        )
    )
  Unit solve_each_element.2896 (iand_ofs.2897 and_group.2898 dirvec.2899 ) =
    Let tmin.2587 =
      Lord %g27[-36]
    In
    Let startp.2597 =
      Lord %g27[-32]
    In
    Let solver_dist.2585 =
      Lord %g27[-28]
    In
    Let solver.2798 =
      Lord %g27[-24]
    In
    Let objects.2578 =
      Lord %g27[-20]
    In
    Let intsec_rectside.2586 =
      Lord %g27[-16]
    In
    Let intersection_point.2588 =
      Lord %g27[-12]
    In
    Let intersected_object_id.2589 =
      Lord %g27[-8]
    In
    Let check_all_inside.2881 =
      Lord %g27[-4]
    In
    Let o.6939 =
      iand_ofs.2897 << 2
    In
    Let iobj.4208 =
      Lord and_group.2898[o.6939]
    In
    Let Ti1197.4253 =
      Set (1)
    In
    Let Ti1231.4209 =
      Neg (Ti1197.4253)
    In
    Ans (
      If iobj.4208 = Ti1231.4209 Then
        Ans (
          Nop
        )
      Then
        Let t0.4210 =
          CallCls solver.2798 iobj.4208 dirvec.2899 startp.2597 
        In
        Ans (
          If t0.4210 = 0 Then
            Let o.6962 =
              iobj.4208 << 2
            In
            Let Tt1198.4252 =
              Lord objects.2578[o.6962]
            In
            Let Tb1201.4249 =
              CallDir o_isinvert.2670 Tt1198.4252 
            In
            Ans (
              If Tb1201.4249 = 0 Then
                Ans (
                  Nop
                )
              Then
                Let Ti1199.4251 =
                  Set (1)
                In
                Let Ti1200.4250 =
                  iand_ofs.2897 + Ti1199.4251
                In
                Ans (
                  CallCls solve_each_element.2896 Ti1200.4250 and_group.2898 dirvec.2899 
                )
            )
          Then
            Let Ti1202.4248 =
              Set (0)
            In
            Let o.6941 =
              Ti1202.4248 << 2
            In
            Let t0p.4211 =
              FLord solver_dist.2585[o.6941]
            In
            Let l.6943 =
              Set (l.6252)
            In
            Let Td1203.4247 =
              FLord l.6943[0]
            In
            Let Tb1228.4215 =
              CallDir fless.2511 Td1203.4247 t0p.4211 
            In
            Let Tu130.4212 =
              If Tb1228.4215 = 0 Then
                Ans (
                  Nop
                )
              Then
                Let Ti1204.4246 =
                  Set (0)
                In
                Let o.6944 =
                  Ti1204.4246 << 2
                In
                Let Td1205.4245 =
                  FLord tmin.2587[o.6944]
                In
                Let Tb1227.4216 =
                  CallDir fless.2511 t0p.4211 Td1205.4245 
                In
                Ans (
                  If Tb1227.4216 = 0 Then
                    Ans (
                      Nop
                    )
                  Then
                    Let l.6946 =
                      Set (l.6911)
                    In
                    Let Td1206.4244 =
                      FLord l.6946[0]
                    In
                    Let t.4217 =
                      t0p.4211 +. Td1206.4244
                    In
                    Let Ti1207.4243 =
                      Set (0)
                    In
                    Let o.6947 =
                      Ti1207.4243 << 2
                    In
                    Let Td1208.4242 =
                      FLord dirvec.2899[o.6947]
                    In
                    Let Td1209.4239 =
                      Td1208.4242 *. t.4217
                    In
                    Let Ti1210.4241 =
                      Set (0)
                    In
                    Let o.6949 =
                      Ti1210.4241 << 2
                    In
                    Let Td1211.4240 =
                      FLord startp.2597[o.6949]
                    In
                    Let q0.4218 =
                      Td1209.4239 +. Td1211.4240
                    In
                    Let Ti1212.4238 =
                      Set (1)
                    In
                    Let o.6951 =
                      Ti1212.4238 << 2
                    In
                    Let Td1213.4237 =
                      FLord dirvec.2899[o.6951]
                    In
                    Let Td1214.4234 =
                      Td1213.4237 *. t.4217
                    In
                    Let Ti1215.4236 =
                      Set (1)
                    In
                    Let o.6953 =
                      Ti1215.4236 << 2
                    In
                    Let Td1216.4235 =
                      FLord startp.2597[o.6953]
                    In
                    Let q1.4219 =
                      Td1214.4234 +. Td1216.4235
                    In
                    Let Ti1217.4233 =
                      Set (2)
                    In
                    Let o.6955 =
                      Ti1217.4233 << 2
                    In
                    Let Td1218.4232 =
                      FLord dirvec.2899[o.6955]
                    In
                    Let Td1219.4229 =
                      Td1218.4232 *. t.4217
                    In
                    Let Ti1220.4231 =
                      Set (2)
                    In
                    Let o.6957 =
                      Ti1220.4231 << 2
                    In
                    Let Td1221.4230 =
                      FLord startp.2597[o.6957]
                    In
                    Let q2.4220 =
                      Td1219.4229 +. Td1221.4230
                    In
                    Let Ti1222.4228 =
                      Set (0)
                    In
                    Let Tb1226.4221 =
                      CallCls check_all_inside.2881 Ti1222.4228 and_group.2898 q0.4218 q1.4219 q2.4220 
                    In
                    Ans (
                      If Tb1226.4221 = 0 Then
                        Ans (
                          Nop
                        )
                      Then
                        Let Ti1223.4227 =
                          Set (0)
                        In
                        Let o.6959 =
                          Ti1223.4227 << 2
                        In
                        Let Tu129.4222 =
                          FStore t.4217 to tmin.2587[o.6959]
                        In
                        Let Tu128.4223 =
                          CallDir vecset.2618 intersection_point.2588 q0.4218 q1.4219 q2.4220 
                        In
                        Let Ti1224.4226 =
                          Set (0)
                        In
                        Let o.6960 =
                          Ti1224.4226 << 2
                        In
                        Let Tu127.4224 =
                          Store iobj.4208 to intersected_object_id.2589[o.6960]
                        In
                        Let Ti1225.4225 =
                          Set (0)
                        In
                        Let o.6961 =
                          Ti1225.4225 << 2
                        In
                        Ans (
                          Store t0.4210 to intsec_rectside.2586[o.6961]
                        )
                    )
                )
            In
            Let Ti1229.4214 =
              Set (1)
            In
            Let Ti1230.4213 =
              iand_ofs.2897 + Ti1229.4214
            In
            Ans (
              CallCls solve_each_element.2896 Ti1230.4213 and_group.2898 dirvec.2899 
            )
        )
    )
  Unit solve_one_or_network.2900 (ofs.2901 or_group.2902 dirvec.2903 ) =
    Let solve_each_element.2896 =
      Lord %g27[-8]
    In
    Let and_net.2583 =
      Lord %g27[-4]
    In
    Let o.6964 =
      ofs.2901 << 2
    In
    Let head.4200 =
      Lord or_group.2902[o.6964]
    In
    Let Ti1192.4207 =
      Set (1)
    In
    Let Ti1196.4201 =
      Neg (Ti1192.4207)
    In
    Ans (
      If head.4200 = Ti1196.4201 Then
        Ans (
          Nop
        )
      Then
        Let o.6966 =
          head.4200 << 2
        In
        Let and_group.4202 =
          Lord and_net.2583[o.6966]
        In
        Let Ti1193.4206 =
          Set (0)
        In
        Let Tu131.4203 =
          CallCls solve_each_element.2896 Ti1193.4206 and_group.4202 dirvec.2903 
        In
        Let Ti1194.4205 =
          Set (1)
        In
        Let Ti1195.4204 =
          ofs.2901 + Ti1194.4205
        In
        Ans (
          CallCls solve_one_or_network.2900 Ti1195.4204 or_group.2902 dirvec.2903 
        )
    )
  Unit trace_or_matrix.2904 (ofs.2905 or_network.2906 dirvec.2907 ) =
    Let tmin.2587 =
      Lord %g27[-20]
    In
    Let startp.2597 =
      Lord %g27[-16]
    In
    Let solver_dist.2585 =
      Lord %g27[-12]
    In
    Let solver.2798 =
      Lord %g27[-8]
    In
    Let solve_one_or_network.2900 =
      Lord %g27[-4]
    In
    Let o.6968 =
      ofs.2905 << 2
    In
    Let head.4183 =
      Lord or_network.2906[o.6968]
    In
    Let Ti1180.4199 =
      Set (0)
    In
    Let o.6970 =
      Ti1180.4199 << 2
    In
    Let range_primitive.4184 =
      Lord head.4183[o.6970]
    In
    Let Ti1181.4198 =
      Set (1)
    In
    Let Ti1191.4185 =
      Neg (Ti1181.4198)
    In
    Ans (
      If range_primitive.4184 = Ti1191.4185 Then
        Ans (
          Nop
        )
      Then
        Let Ti1188.4189 =
          Set (99)
        In
        Let Tu132.4186 =
          If range_primitive.4184 = Ti1188.4189 Then
            Let Ti1182.4197 =
              Set (1)
            In
            Ans (
              CallCls solve_one_or_network.2900 Ti1182.4197 head.4183 dirvec.2907 
            )
          Then
            Let t.4190 =
              CallCls solver.2798 range_primitive.4184 dirvec.2907 startp.2597 
            In
            Ans (
              If t.4190 = 0 Then
                Ans (
                  Nop
                )
              Then
                Let Ti1183.4196 =
                  Set (0)
                In
                Let o.6972 =
                  Ti1183.4196 << 2
                In
                Let tp.4191 =
                  FLord solver_dist.2585[o.6972]
                In
                Let Ti1184.4195 =
                  Set (0)
                In
                Let o.6974 =
                  Ti1184.4195 << 2
                In
                Let Td1185.4194 =
                  FLord tmin.2587[o.6974]
                In
                Let Tb1187.4192 =
                  CallDir fless.2511 tp.4191 Td1185.4194 
                In
                Ans (
                  If Tb1187.4192 = 0 Then
                    Ans (
                      Nop
                    )
                  Then
                    Let Ti1186.4193 =
                      Set (1)
                    In
                    Ans (
                      CallCls solve_one_or_network.2900 Ti1186.4193 head.4183 dirvec.2907 
                    )
                )
            )
        In
        Let Ti1189.4188 =
          Set (1)
        In
        Let Ti1190.4187 =
          ofs.2905 + Ti1189.4188
        In
        Ans (
          CallCls trace_or_matrix.2904 Ti1190.4187 or_network.2906 dirvec.2907 
        )
    )
  Bool judge_intersection.2908 (dirvec.2909 ) =
    Let trace_or_matrix.2904 =
      Lord %g27[-12]
    In
    Let tmin.2587 =
      Lord %g27[-8]
    In
    Let or_net.2584 =
      Lord %g27[-4]
    In
    Let Ti1171.4181 =
      Set (0)
    In
    Let l.6977 =
      Set (l.6976)
    In
    Let Td1172.4182 =
      FLord l.6977[0]
    In
    Let o.6978 =
      Ti1171.4181 << 2
    In
    Let Tu134.4171 =
      FStore Td1172.4182 to tmin.2587[o.6978]
    In
    Let Ti1173.4178 =
      Set (0)
    In
    Let Ti1174.4180 =
      Set (0)
    In
    Let o.6979 =
      Ti1174.4180 << 2
    In
    Let Ta1175.4179 =
      Lord or_net.2584[o.6979]
    In
    Let Tu133.4172 =
      CallCls trace_or_matrix.2904 Ti1173.4178 Ta1175.4179 dirvec.2909 
    In
    Let Ti1176.4177 =
      Set (0)
    In
    Let o.6981 =
      Ti1176.4177 << 2
    In
    Let t.4173 =
      FLord tmin.2587[o.6981]
    In
    Let l.6983 =
      Set (l.6937)
    In
    Let Td1177.4176 =
      FLord l.6983[0]
    In
    Let Tb1179.4174 =
      CallDir fless.2511 Td1177.4176 t.4173 
    In
    Ans (
      If Tb1179.4174 = 0 Then
        Ans (
          Set (0)
        )
      Then
        Let l.6985 =
          Set (l.6984)
        In
        Let Td1178.4175 =
          FLord l.6985[0]
        In
        Ans (
          CallDir fless.2511 t.4173 Td1178.4175 
        )
    )
  Unit solve_each_element_fast.2910 (iand_ofs.2911 and_group.2912 dirvec.2913 ) =
    Let tmin.2587 =
      Lord %g27[-36]
    In
    Let startp_fast.2598 =
      Lord %g27[-32]
    In
    Let solver_fast2.2839 =
      Lord %g27[-28]
    In
    Let solver_dist.2585 =
      Lord %g27[-24]
    In
    Let objects.2578 =
      Lord %g27[-20]
    In
    Let intsec_rectside.2586 =
      Lord %g27[-16]
    In
    Let intersection_point.2588 =
      Lord %g27[-12]
    In
    Let intersected_object_id.2589 =
      Lord %g27[-8]
    In
    Let check_all_inside.2881 =
      Lord %g27[-4]
    In
    Let vec.4124 =
      CallDir d_vec.2725 dirvec.2913 
    In
    Let o.6986 =
      iand_ofs.2911 << 2
    In
    Let iobj.4125 =
      Lord and_group.2912[o.6986]
    In
    Let Ti1136.4170 =
      Set (1)
    In
    Let Ti1170.4126 =
      Neg (Ti1136.4170)
    In
    Ans (
      If iobj.4125 = Ti1170.4126 Then
        Ans (
          Nop
        )
      Then
        Let t0.4127 =
          CallCls solver_fast2.2839 iobj.4125 dirvec.2913 
        In
        Ans (
          If t0.4127 = 0 Then
            Let o.7009 =
              iobj.4125 << 2
            In
            Let Tt1137.4169 =
              Lord objects.2578[o.7009]
            In
            Let Tb1140.4166 =
              CallDir o_isinvert.2670 Tt1137.4169 
            In
            Ans (
              If Tb1140.4166 = 0 Then
                Ans (
                  Nop
                )
              Then
                Let Ti1138.4168 =
                  Set (1)
                In
                Let Ti1139.4167 =
                  iand_ofs.2911 + Ti1138.4168
                In
                Ans (
                  CallCls solve_each_element_fast.2910 Ti1139.4167 and_group.2912 dirvec.2913 
                )
            )
          Then
            Let Ti1141.4165 =
              Set (0)
            In
            Let o.6988 =
              Ti1141.4165 << 2
            In
            Let t0p.4128 =
              FLord solver_dist.2585[o.6988]
            In
            Let l.6990 =
              Set (l.6252)
            In
            Let Td1142.4164 =
              FLord l.6990[0]
            In
            Let Tb1167.4132 =
              CallDir fless.2511 Td1142.4164 t0p.4128 
            In
            Let Tu138.4129 =
              If Tb1167.4132 = 0 Then
                Ans (
                  Nop
                )
              Then
                Let Ti1143.4163 =
                  Set (0)
                In
                Let o.6991 =
                  Ti1143.4163 << 2
                In
                Let Td1144.4162 =
                  FLord tmin.2587[o.6991]
                In
                Let Tb1166.4133 =
                  CallDir fless.2511 t0p.4128 Td1144.4162 
                In
                Ans (
                  If Tb1166.4133 = 0 Then
                    Ans (
                      Nop
                    )
                  Then
                    Let l.6993 =
                      Set (l.6911)
                    In
                    Let Td1145.4161 =
                      FLord l.6993[0]
                    In
                    Let t.4134 =
                      t0p.4128 +. Td1145.4161
                    In
                    Let Ti1146.4160 =
                      Set (0)
                    In
                    Let o.6994 =
                      Ti1146.4160 << 2
                    In
                    Let Td1147.4159 =
                      FLord vec.4124[o.6994]
                    In
                    Let Td1148.4156 =
                      Td1147.4159 *. t.4134
                    In
                    Let Ti1149.4158 =
                      Set (0)
                    In
                    Let o.6996 =
                      Ti1149.4158 << 2
                    In
                    Let Td1150.4157 =
                      FLord startp_fast.2598[o.6996]
                    In
                    Let q0.4135 =
                      Td1148.4156 +. Td1150.4157
                    In
                    Let Ti1151.4155 =
                      Set (1)
                    In
                    Let o.6998 =
                      Ti1151.4155 << 2
                    In
                    Let Td1152.4154 =
                      FLord vec.4124[o.6998]
                    In
                    Let Td1153.4151 =
                      Td1152.4154 *. t.4134
                    In
                    Let Ti1154.4153 =
                      Set (1)
                    In
                    Let o.7000 =
                      Ti1154.4153 << 2
                    In
                    Let Td1155.4152 =
                      FLord startp_fast.2598[o.7000]
                    In
                    Let q1.4136 =
                      Td1153.4151 +. Td1155.4152
                    In
                    Let Ti1156.4150 =
                      Set (2)
                    In
                    Let o.7002 =
                      Ti1156.4150 << 2
                    In
                    Let Td1157.4149 =
                      FLord vec.4124[o.7002]
                    In
                    Let Td1158.4146 =
                      Td1157.4149 *. t.4134
                    In
                    Let Ti1159.4148 =
                      Set (2)
                    In
                    Let o.7004 =
                      Ti1159.4148 << 2
                    In
                    Let Td1160.4147 =
                      FLord startp_fast.2598[o.7004]
                    In
                    Let q2.4137 =
                      Td1158.4146 +. Td1160.4147
                    In
                    Let Ti1161.4145 =
                      Set (0)
                    In
                    Let Tb1165.4138 =
                      CallCls check_all_inside.2881 Ti1161.4145 and_group.2912 q0.4135 q1.4136 q2.4137 
                    In
                    Ans (
                      If Tb1165.4138 = 0 Then
                        Ans (
                          Nop
                        )
                      Then
                        Let Ti1162.4144 =
                          Set (0)
                        In
                        Let o.7006 =
                          Ti1162.4144 << 2
                        In
                        Let Tu137.4139 =
                          FStore t.4134 to tmin.2587[o.7006]
                        In
                        Let Tu136.4140 =
                          CallDir vecset.2618 intersection_point.2588 q0.4135 q1.4136 q2.4137 
                        In
                        Let Ti1163.4143 =
                          Set (0)
                        In
                        Let o.7007 =
                          Ti1163.4143 << 2
                        In
                        Let Tu135.4141 =
                          Store iobj.4125 to intersected_object_id.2589[o.7007]
                        In
                        Let Ti1164.4142 =
                          Set (0)
                        In
                        Let o.7008 =
                          Ti1164.4142 << 2
                        In
                        Ans (
                          Store t0.4127 to intsec_rectside.2586[o.7008]
                        )
                    )
                )
            In
            Let Ti1168.4131 =
              Set (1)
            In
            Let Ti1169.4130 =
              iand_ofs.2911 + Ti1168.4131
            In
            Ans (
              CallCls solve_each_element_fast.2910 Ti1169.4130 and_group.2912 dirvec.2913 
            )
        )
    )
  Unit solve_one_or_network_fast.2914 (ofs.2915 or_group.2916 dirvec.2917 ) =
    Let solve_each_element_fast.2910 =
      Lord %g27[-8]
    In
    Let and_net.2583 =
      Lord %g27[-4]
    In
    Let o.7011 =
      ofs.2915 << 2
    In
    Let head.4116 =
      Lord or_group.2916[o.7011]
    In
    Let Ti1131.4123 =
      Set (1)
    In
    Let Ti1135.4117 =
      Neg (Ti1131.4123)
    In
    Ans (
      If head.4116 = Ti1135.4117 Then
        Ans (
          Nop
        )
      Then
        Let o.7013 =
          head.4116 << 2
        In
        Let and_group.4118 =
          Lord and_net.2583[o.7013]
        In
        Let Ti1132.4122 =
          Set (0)
        In
        Let Tu139.4119 =
          CallCls solve_each_element_fast.2910 Ti1132.4122 and_group.4118 dirvec.2917 
        In
        Let Ti1133.4121 =
          Set (1)
        In
        Let Ti1134.4120 =
          ofs.2915 + Ti1133.4121
        In
        Ans (
          CallCls solve_one_or_network_fast.2914 Ti1134.4120 or_group.2916 dirvec.2917 
        )
    )
  Unit trace_or_matrix_fast.2918 (ofs.2919 or_network.2920 dirvec.2921 ) =
    Let tmin.2587 =
      Lord %g27[-16]
    In
    Let solver_fast2.2839 =
      Lord %g27[-12]
    In
    Let solver_dist.2585 =
      Lord %g27[-8]
    In
    Let solve_one_or_network_fast.2914 =
      Lord %g27[-4]
    In
    Let o.7015 =
      ofs.2919 << 2
    In
    Let head.4099 =
      Lord or_network.2920[o.7015]
    In
    Let Ti1119.4115 =
      Set (0)
    In
    Let o.7017 =
      Ti1119.4115 << 2
    In
    Let range_primitive.4100 =
      Lord head.4099[o.7017]
    In
    Let Ti1120.4114 =
      Set (1)
    In
    Let Ti1130.4101 =
      Neg (Ti1120.4114)
    In
    Ans (
      If range_primitive.4100 = Ti1130.4101 Then
        Ans (
          Nop
        )
      Then
        Let Ti1127.4105 =
          Set (99)
        In
        Let Tu140.4102 =
          If range_primitive.4100 = Ti1127.4105 Then
            Let Ti1121.4113 =
              Set (1)
            In
            Ans (
              CallCls solve_one_or_network_fast.2914 Ti1121.4113 head.4099 dirvec.2921 
            )
          Then
            Let t.4106 =
              CallCls solver_fast2.2839 range_primitive.4100 dirvec.2921 
            In
            Ans (
              If t.4106 = 0 Then
                Ans (
                  Nop
                )
              Then
                Let Ti1122.4112 =
                  Set (0)
                In
                Let o.7019 =
                  Ti1122.4112 << 2
                In
                Let tp.4107 =
                  FLord solver_dist.2585[o.7019]
                In
                Let Ti1123.4111 =
                  Set (0)
                In
                Let o.7021 =
                  Ti1123.4111 << 2
                In
                Let Td1124.4110 =
                  FLord tmin.2587[o.7021]
                In
                Let Tb1126.4108 =
                  CallDir fless.2511 tp.4107 Td1124.4110 
                In
                Ans (
                  If Tb1126.4108 = 0 Then
                    Ans (
                      Nop
                    )
                  Then
                    Let Ti1125.4109 =
                      Set (1)
                    In
                    Ans (
                      CallCls solve_one_or_network_fast.2914 Ti1125.4109 head.4099 dirvec.2921 
                    )
                )
            )
        In
        Let Ti1128.4104 =
          Set (1)
        In
        Let Ti1129.4103 =
          ofs.2919 + Ti1128.4104
        In
        Ans (
          CallCls trace_or_matrix_fast.2918 Ti1129.4103 or_network.2920 dirvec.2921 
        )
    )
  Bool judge_intersection_fast.2922 (dirvec.2923 ) =
    Let trace_or_matrix_fast.2918 =
      Lord %g27[-12]
    In
    Let tmin.2587 =
      Lord %g27[-8]
    In
    Let or_net.2584 =
      Lord %g27[-4]
    In
    Let Ti1110.4097 =
      Set (0)
    In
    Let l.7023 =
      Set (l.6976)
    In
    Let Td1111.4098 =
      FLord l.7023[0]
    In
    Let o.7024 =
      Ti1110.4097 << 2
    In
    Let Tu142.4087 =
      FStore Td1111.4098 to tmin.2587[o.7024]
    In
    Let Ti1112.4094 =
      Set (0)
    In
    Let Ti1113.4096 =
      Set (0)
    In
    Let o.7025 =
      Ti1113.4096 << 2
    In
    Let Ta1114.4095 =
      Lord or_net.2584[o.7025]
    In
    Let Tu141.4088 =
      CallCls trace_or_matrix_fast.2918 Ti1112.4094 Ta1114.4095 dirvec.2923 
    In
    Let Ti1115.4093 =
      Set (0)
    In
    Let o.7027 =
      Ti1115.4093 << 2
    In
    Let t.4089 =
      FLord tmin.2587[o.7027]
    In
    Let l.7029 =
      Set (l.6937)
    In
    Let Td1116.4092 =
      FLord l.7029[0]
    In
    Let Tb1118.4090 =
      CallDir fless.2511 Td1116.4092 t.4089 
    In
    Ans (
      If Tb1118.4090 = 0 Then
        Ans (
          Set (0)
        )
      Then
        Let l.7030 =
          Set (l.6984)
        In
        Let Td1117.4091 =
          FLord l.7030[0]
        In
        Ans (
          CallDir fless.2511 t.4089 Td1117.4091 
        )
    )
  Unit get_nvector_rect.2924 (dirvec.2925 ) =
    Let nvector.2590 =
      Lord %g27[-8]
    In
    Let intsec_rectside.2586 =
      Lord %g27[-4]
    In
    Let Ti1102.4086 =
      Set (0)
    In
    Let o.7031 =
      Ti1102.4086 << 2
    In
    Let rectside.4077 =
      Lord intsec_rectside.2586[o.7031]
    In
    Let Tu143.4078 =
      CallDir vecbzero.2626 nvector.2590 
    In
    Let Ti1103.4085 =
      Set (1)
    In
    Let Ti1104.4079 =
      rectside.4077 - Ti1103.4085
    In
    Let Ti1105.4084 =
      Set (1)
    In
    Let Ti1106.4083 =
      rectside.4077 - Ti1105.4084
    In
    Let o.7033 =
      Ti1106.4083 << 2
    In
    Let Td1107.4082 =
      FLord dirvec.2925[o.7033]
    In
    Let Td1108.4081 =
      CallDir sgn.2610 Td1107.4082 
    In
    Let Td1109.4080 =
      CallDir fneg.2527 Td1108.4081 
    In
    Let o.7035 =
      Ti1104.4079 << 2
    In
    Ans (
      FStore Td1109.4080 to nvector.2590[o.7035]
    )
  Unit get_nvector_plane.2926 (m.2927 ) =
    Let nvector.2590 =
      Lord %g27[-4]
    In
    Let Ti1093.4074 =
      Set (0)
    In
    Let Td1094.4076 =
      CallDir o_param_a.2674 m.2927 
    In
    Let Td1095.4075 =
      CallDir fneg.2527 Td1094.4076 
    In
    Let o.7036 =
      Ti1093.4074 << 2
    In
    Let Tu145.4066 =
      FStore Td1095.4075 to nvector.2590[o.7036]
    In
    Let Ti1096.4071 =
      Set (1)
    In
    Let Td1097.4073 =
      CallDir o_param_b.2676 m.2927 
    In
    Let Td1098.4072 =
      CallDir fneg.2527 Td1097.4073 
    In
    Let o.7037 =
      Ti1096.4071 << 2
    In
    Let Tu144.4067 =
      FStore Td1098.4072 to nvector.2590[o.7037]
    In
    Let Ti1099.4068 =
      Set (2)
    In
    Let Td1100.4070 =
      CallDir o_param_c.2678 m.2927 
    In
    Let Td1101.4069 =
      CallDir fneg.2527 Td1100.4070 
    In
    Let o.7038 =
      Ti1099.4068 << 2
    In
    Ans (
      FStore Td1101.4069 to nvector.2590[o.7038]
    )
  Unit get_nvector_second.2928 (m.2929 ) =
    Let nvector.2590 =
      Lord %g27[-8]
    In
    Let intersection_point.2588 =
      Lord %g27[-4]
    In
    Let Ti1052.4065 =
      Set (0)
    In
    Let o.7039 =
      Ti1052.4065 << 2
    In
    Let Td1053.4063 =
      FLord intersection_point.2588[o.7039]
    In
    Let Td1054.4064 =
      CallDir o_param_x.2682 m.2929 
    In
    Let p0.4014 =
      Td1053.4063 -. Td1054.4064
    In
    Let Ti1055.4062 =
      Set (1)
    In
    Let o.7041 =
      Ti1055.4062 << 2
    In
    Let Td1056.4060 =
      FLord intersection_point.2588[o.7041]
    In
    Let Td1057.4061 =
      CallDir o_param_y.2684 m.2929 
    In
    Let p1.4015 =
      Td1056.4060 -. Td1057.4061
    In
    Let Ti1058.4059 =
      Set (2)
    In
    Let o.7043 =
      Ti1058.4059 << 2
    In
    Let Td1059.4057 =
      FLord intersection_point.2588[o.7043]
    In
    Let Td1060.4058 =
      CallDir o_param_z.2686 m.2929 
    In
    Let p2.4016 =
      Td1059.4057 -. Td1060.4058
    In
    Let Td1061.4056 =
      CallDir o_param_a.2674 m.2929 
    In
    Let d0.4017 =
      p0.4014 *. Td1061.4056
    In
    Let Td1062.4055 =
      CallDir o_param_b.2676 m.2929 
    In
    Let d1.4018 =
      p1.4015 *. Td1062.4055
    In
    Let Td1063.4054 =
      CallDir o_param_c.2678 m.2929 
    In
    Let d2.4019 =
      p2.4016 *. Td1063.4054
    In
    Let Ti1091.4022 =
      CallDir o_isrot.2672 m.2929 
    In
    Let Tu150.4020 =
      If Ti1091.4022 = 0 Then
        Let Ti1064.4053 =
          Set (0)
        In
        Let o.7048 =
          Ti1064.4053 << 2
        In
        Let Tu147.4049 =
          FStore d0.4017 to nvector.2590[o.7048]
        In
        Let Ti1065.4052 =
          Set (1)
        In
        Let o.7049 =
          Ti1065.4052 << 2
        In
        Let Tu146.4050 =
          FStore d1.4018 to nvector.2590[o.7049]
        In
        Let Ti1066.4051 =
          Set (2)
        In
        Let o.7050 =
          Ti1066.4051 << 2
        In
        Ans (
          FStore d2.4019 to nvector.2590[o.7050]
        )
      Then
        Let Ti1067.4041 =
          Set (0)
        In
        Let Td1068.4048 =
          CallDir o_param_r3.2702 m.2929 
        In
        Let Td1069.4045 =
          p1.4015 *. Td1068.4048
        In
        Let Td1070.4047 =
          CallDir o_param_r2.2700 m.2929 
        In
        Let Td1071.4046 =
          p2.4016 *. Td1070.4047
        In
        Let Td1072.4044 =
          Td1069.4045 +. Td1071.4046
        In
        Let Td1073.4043 =
          CallDir fhalf.2529 Td1072.4044 
        In
        Let Td1074.4042 =
          d0.4017 +. Td1073.4043
        In
        Let o.7045 =
          Ti1067.4041 << 2
        In
        Let Tu149.4023 =
          FStore Td1074.4042 to nvector.2590[o.7045]
        In
        Let Ti1075.4033 =
          Set (1)
        In
        Let Td1076.4040 =
          CallDir o_param_r3.2702 m.2929 
        In
        Let Td1077.4037 =
          p0.4014 *. Td1076.4040
        In
        Let Td1078.4039 =
          CallDir o_param_r1.2698 m.2929 
        In
        Let Td1079.4038 =
          p2.4016 *. Td1078.4039
        In
        Let Td1080.4036 =
          Td1077.4037 +. Td1079.4038
        In
        Let Td1081.4035 =
          CallDir fhalf.2529 Td1080.4036 
        In
        Let Td1082.4034 =
          d1.4018 +. Td1081.4035
        In
        Let o.7046 =
          Ti1075.4033 << 2
        In
        Let Tu148.4024 =
          FStore Td1082.4034 to nvector.2590[o.7046]
        In
        Let Ti1083.4025 =
          Set (2)
        In
        Let Td1084.4032 =
          CallDir o_param_r2.2700 m.2929 
        In
        Let Td1085.4029 =
          p0.4014 *. Td1084.4032
        In
        Let Td1086.4031 =
          CallDir o_param_r1.2698 m.2929 
        In
        Let Td1087.4030 =
          p1.4015 *. Td1086.4031
        In
        Let Td1088.4028 =
          Td1085.4029 +. Td1087.4030
        In
        Let Td1089.4027 =
          CallDir fhalf.2529 Td1088.4028 
        In
        Let Td1090.4026 =
          d2.4019 +. Td1089.4027
        In
        Let o.7047 =
          Ti1083.4025 << 2
        In
        Ans (
          FStore Td1090.4026 to nvector.2590[o.7047]
        )
    In
    Let Tb1092.4021 =
      CallDir o_isinvert.2670 m.2929 
    In
    Ans (
      CallDir vecunit_sgn.2636 nvector.2590 Tb1092.4021 
    )
  Unit get_nvector.2930 (m.2931 dirvec.2932 ) =
    Let get_nvector_second.2928 =
      Lord %g27[-12]
    In
    Let get_nvector_rect.2924 =
      Lord %g27[-8]
    In
    Let get_nvector_plane.2926 =
      Lord %g27[-4]
    In
    Let m_shape.4012 =
      CallDir o_form.2666 m.2931 
    In
    Ans (
      If m_shape.4012 = 1 Then
        Ans (
          CallCls get_nvector_rect.2924 dirvec.2932 
        )
      Then
        Let Ti1051.4013 =
          Set (2)
        In
        Ans (
          If m_shape.4012 = Ti1051.4013 Then
            Ans (
              CallCls get_nvector_plane.2926 m.2931 
            )
          Then
            Ans (
              CallCls get_nvector_second.2928 m.2931 
            )
        )
    )
  Unit utexture.2933 (m.2934 p.2935 ) =
    Let texture_color.2591 =
      Lord %g27[-16]
    In
    Let sin.2546 =
      Lord %g27[-12]
    In
    Let cos.2548 =
      Lord %g27[-8]
    In
    Let atan.2540 =
      Lord %g27[-4]
    In
    Let m_tex.3865 =
      CallDir o_texturetype.2664 m.2934 
    In
    Let Ti934.4010 =
      Set (0)
    In
    Let Td935.4011 =
      CallDir o_color_red.2692 m.2934 
    In
    Let o.7051 =
      Ti934.4010 << 2
    In
    Let Tu155.3866 =
      FStore Td935.4011 to texture_color.2591[o.7051]
    In
    Let Ti936.4008 =
      Set (1)
    In
    Let Td937.4009 =
      CallDir o_color_green.2694 m.2934 
    In
    Let o.7052 =
      Ti936.4008 << 2
    In
    Let Tu154.3867 =
      FStore Td937.4009 to texture_color.2591[o.7052]
    In
    Let Ti938.4006 =
      Set (2)
    In
    Let Td939.4007 =
      CallDir o_color_blue.2696 m.2934 
    In
    Let o.7053 =
      Ti938.4006 << 2
    In
    Let Tu153.3868 =
      FStore Td939.4007 to texture_color.2591[o.7053]
    In
    Ans (
      If m_tex.3865 = 1 Then
        Let Ti940.4005 =
          Set (0)
        In
        Let o.7103 =
          Ti940.4005 << 2
        In
        Let Td941.4003 =
          FLord p.2935[o.7103]
        In
        Let Td942.4004 =
          CallDir o_param_x.2682 m.2934 
        In
        Let w1.3980 =
          Td941.4003 -. Td942.4004
        In
        Let l.7106 =
          Set (l.7105)
        In
        Let Td943.4002 =
          FLord l.7106[0]
        In
        Let Td944.4001 =
          w1.3980 *. Td943.4002
        In
        Let Td945.3999 =
          CallDir min_caml_floor Td944.4001 
        In
        Let l.7108 =
          Set (l.7107)
        In
        Let Td946.4000 =
          FLord l.7108[0]
        In
        Let d1.3996 =
          Td945.3999 *. Td946.4000
        In
        Let Td947.3997 =
          w1.3980 -. d1.3996
        In
        Let l.7109 =
          Set (l.7086)
        In
        Let Td948.3998 =
          FLord l.7109[0]
        In
        Let flag1.3981 =
          CallDir fless.2511 Td947.3997 Td948.3998 
        In
        Let Ti949.3995 =
          Set (2)
        In
        Let o.7110 =
          Ti949.3995 << 2
        In
        Let Td950.3993 =
          FLord p.2935[o.7110]
        In
        Let Td951.3994 =
          CallDir o_param_z.2686 m.2934 
        In
        Let w3.3982 =
          Td950.3993 -. Td951.3994
        In
        Let l.7112 =
          Set (l.7105)
        In
        Let Td952.3992 =
          FLord l.7112[0]
        In
        Let Td953.3991 =
          w3.3982 *. Td952.3992
        In
        Let Td954.3989 =
          CallDir min_caml_floor Td953.3991 
        In
        Let l.7113 =
          Set (l.7107)
        In
        Let Td955.3990 =
          FLord l.7113[0]
        In
        Let d2.3986 =
          Td954.3989 *. Td955.3990
        In
        Let Td956.3987 =
          w3.3982 -. d2.3986
        In
        Let l.7114 =
          Set (l.7086)
        In
        Let Td957.3988 =
          FLord l.7114[0]
        In
        Let flag2.3983 =
          CallDir fless.2511 Td956.3987 Td957.3988 
        In
        Let Ti958.3984 =
          Set (1)
        In
        Let Td959.3985 =
          If flag1.3981 = 0 Then
            Ans (
              If flag2.3983 = 0 Then
                Let l.7118 =
                  Set (l.7077)
                In
                Ans (
                  FLord l.7118[0]
                )
              Then
                Let l.7117 =
                  Set (l.6252)
                In
                Ans (
                  FLord l.7117[0]
                )
            )
          Then
            Ans (
              If flag2.3983 = 0 Then
                Let l.7116 =
                  Set (l.6252)
                In
                Ans (
                  FLord l.7116[0]
                )
              Then
                Let l.7115 =
                  Set (l.7077)
                In
                Ans (
                  FLord l.7115[0]
                )
            )
        In
        Let o.7119 =
          Ti958.3984 << 2
        In
        Ans (
          FStore Td959.3985 to texture_color.2591[o.7119]
        )
      Then
        Let Ti1050.3869 =
          Set (2)
        In
        Ans (
          If m_tex.3865 = Ti1050.3869 Then
            Let Ti960.3979 =
              Set (1)
            In
            Let o.7094 =
              Ti960.3979 << 2
            In
            Let Td961.3977 =
              FLord p.2935[o.7094]
            In
            Let l.7097 =
              Set (l.7096)
            In
            Let Td962.3978 =
              FLord l.7097[0]
            In
            Let Td963.3976 =
              Td961.3977 *. Td962.3978
            In
            Let Td964.3975 =
              CallCls sin.2546 Td963.3976 
            In
            Let w2.3965 =
              CallDir fsqr.2531 Td964.3975 
            In
            Let Ti965.3972 =
              Set (0)
            In
            Let l.7098 =
              Set (l.7077)
            In
            Let Td966.3974 =
              FLord l.7098[0]
            In
            Let Td967.3973 =
              Td966.3974 *. w2.3965
            In
            Let o.7099 =
              Ti965.3972 << 2
            In
            Let Tu151.3966 =
              FStore Td967.3973 to texture_color.2591[o.7099]
            In
            Let Ti968.3967 =
              Set (1)
            In
            Let l.7100 =
              Set (l.7077)
            In
            Let Td969.3969 =
              FLord l.7100[0]
            In
            Let l.7101 =
              Set (l.6261)
            In
            Let Td970.3971 =
              FLord l.7101[0]
            In
            Let Td971.3970 =
              Td970.3971 -. w2.3965
            In
            Let Td972.3968 =
              Td969.3969 *. Td971.3970
            In
            Let o.7102 =
              Ti968.3967 << 2
            In
            Ans (
              FStore Td972.3968 to texture_color.2591[o.7102]
            )
          Then
            Let Ti1049.3870 =
              Set (3)
            In
            Ans (
              If m_tex.3865 = Ti1049.3870 Then
                Let Ti973.3964 =
                  Set (0)
                In
                Let o.7082 =
                  Ti973.3964 << 2
                In
                Let Td974.3962 =
                  FLord p.2935[o.7082]
                In
                Let Td975.3963 =
                  CallDir o_param_x.2682 m.2934 
                In
                Let w1.3936 =
                  Td974.3962 -. Td975.3963
                In
                Let Ti976.3961 =
                  Set (2)
                In
                Let o.7084 =
                  Ti976.3961 << 2
                In
                Let Td977.3959 =
                  FLord p.2935[o.7084]
                In
                Let Td978.3960 =
                  CallDir o_param_z.2686 m.2934 
                In
                Let w3.3937 =
                  Td977.3959 -. Td978.3960
                In
                Let Td979.3957 =
                  CallDir fsqr.2531 w1.3936 
                In
                Let Td980.3958 =
                  CallDir fsqr.2531 w3.3937 
                In
                Let Td981.3956 =
                  Td979.3957 +. Td980.3958
                In
                Let Td982.3954 =
                  CallDir min_caml_sqrt Td981.3956 
                In
                Let l.7087 =
                  Set (l.7086)
                In
                Let Td983.3955 =
                  FLord l.7087[0]
                In
                Let w2.3938 =
                  Td982.3954 /. Td983.3955
                In
                Let Td984.3953 =
                  CallDir min_caml_floor w2.3938 
                In
                Let Td985.3951 =
                  w2.3938 -. Td984.3953
                In
                Let l.7088 =
                  Set (l.7064)
                In
                Let Td986.3952 =
                  FLord l.7088[0]
                In
                Let w4.3939 =
                  Td985.3951 *. Td986.3952
                In
                Let Td987.3950 =
                  CallCls cos.2548 w4.3939 
                In
                Let cws.3940 =
                  CallDir fsqr.2531 Td987.3950 
                In
                Let Ti988.3947 =
                  Set (1)
                In
                Let l.7089 =
                  Set (l.7077)
                In
                Let Td989.3949 =
                  FLord l.7089[0]
                In
                Let Td990.3948 =
                  cws.3940 *. Td989.3949
                In
                Let o.7090 =
                  Ti988.3947 << 2
                In
                Let Tu152.3941 =
                  FStore Td990.3948 to texture_color.2591[o.7090]
                In
                Let Ti991.3942 =
                  Set (2)
                In
                Let l.7091 =
                  Set (l.6261)
                In
                Let Td992.3946 =
                  FLord l.7091[0]
                In
                Let Td993.3944 =
                  Td992.3946 -. cws.3940
                In
                Let l.7092 =
                  Set (l.7077)
                In
                Let Td994.3945 =
                  FLord l.7092[0]
                In
                Let Td995.3943 =
                  Td993.3944 *. Td994.3945
                In
                Let o.7093 =
                  Ti991.3942 << 2
                In
                Ans (
                  FStore Td995.3943 to texture_color.2591[o.7093]
                )
              Then
                Let Ti1048.3871 =
                  Set (4)
                In
                Ans (
                  If m_tex.3865 = Ti1048.3871 Then
                    Let Ti996.3935 =
                      Set (0)
                    In
                    Let o.7054 =
                      Ti996.3935 << 2
                    In
                    Let Td997.3933 =
                      FLord p.2935[o.7054]
                    In
                    Let Td998.3934 =
                      CallDir o_param_x.2682 m.2934 
                    In
                    Let Td999.3930 =
                      Td997.3933 -. Td998.3934
                    In
                    Let Td1000.3932 =
                      CallDir o_param_a.2674 m.2934 
                    In
                    Let Td1001.3931 =
                      CallDir min_caml_sqrt Td1000.3932 
                    In
                    Let w1.3872 =
                      Td999.3930 *. Td1001.3931
                    In
                    Let Ti1002.3929 =
                      Set (2)
                    In
                    Let o.7056 =
                      Ti1002.3929 << 2
                    In
                    Let Td1003.3927 =
                      FLord p.2935[o.7056]
                    In
                    Let Td1004.3928 =
                      CallDir o_param_z.2686 m.2934 
                    In
                    Let Td1005.3924 =
                      Td1003.3927 -. Td1004.3928
                    In
                    Let Td1006.3926 =
                      CallDir o_param_c.2678 m.2934 
                    In
                    Let Td1007.3925 =
                      CallDir min_caml_sqrt Td1006.3926 
                    In
                    Let w3.3873 =
                      Td1005.3924 *. Td1007.3925
                    In
                    Let Td1008.3922 =
                      CallDir fsqr.2531 w1.3872 
                    In
                    Let Td1009.3923 =
                      CallDir fsqr.2531 w3.3873 
                    In
                    Let w4.3874 =
                      Td1008.3922 +. Td1009.3923
                    In
                    Let Td1010.3920 =
                      CallDir fabs.2523 w1.3872 
                    In
                    Let l.7059 =
                      Set (l.7058)
                    In
                    Let Td1011.3921 =
                      FLord l.7059[0]
                    In
                    Let Tb1017.3913 =
                      CallDir fless.2511 Td1010.3920 Td1011.3921 
                    In
                    Let w7.3875 =
                      If Tb1017.3913 = 0 Then
                        Let Td1012.3919 =
                          w3.3873 /. w1.3872
                        In
                        Let w5.3914 =
                          CallDir fabs.2523 Td1012.3919 
                        In
                        Let Td1013.3917 =
                          CallCls atan.2540 w5.3914 
                        In
                        Let l.7063 =
                          Set (l.7062)
                        In
                        Let Td1014.3918 =
                          FLord l.7063[0]
                        In
                        Let Td1015.3915 =
                          Td1013.3917 *. Td1014.3918
                        In
                        Let l.7065 =
                          Set (l.7064)
                        In
                        Let Td1016.3916 =
                          FLord l.7065[0]
                        In
                        Ans (
                          Td1015.3915 /. Td1016.3916
                        )
                      Then
                        Let l.7061 =
                          Set (l.7060)
                        In
                        Ans (
                          FLord l.7061[0]
                        )
                    In
                    Let Td1018.3912 =
                      CallDir min_caml_floor w7.3875 
                    In
                    Let w9.3876 =
                      w7.3875 -. Td1018.3912
                    In
                    Let Ti1019.3911 =
                      Set (1)
                    In
                    Let o.7066 =
                      Ti1019.3911 << 2
                    In
                    Let Td1020.3909 =
                      FLord p.2935[o.7066]
                    In
                    Let Td1021.3910 =
                      CallDir o_param_y.2684 m.2934 
                    In
                    Let Td1022.3906 =
                      Td1020.3909 -. Td1021.3910
                    In
                    Let Td1023.3908 =
                      CallDir o_param_b.2676 m.2934 
                    In
                    Let Td1024.3907 =
                      CallDir min_caml_sqrt Td1023.3908 
                    In
                    Let w2.3877 =
                      Td1022.3906 *. Td1024.3907
                    In
                    Let Td1025.3904 =
                      CallDir fabs.2523 w4.3874 
                    In
                    Let l.7068 =
                      Set (l.7058)
                    In
                    Let Td1026.3905 =
                      FLord l.7068[0]
                    In
                    Let Tb1032.3897 =
                      CallDir fless.2511 Td1025.3904 Td1026.3905 
                    In
                    Let w8.3878 =
                      If Tb1032.3897 = 0 Then
                        Let Td1027.3903 =
                          w2.3877 /. w4.3874
                        In
                        Let w6.3898 =
                          CallDir fabs.2523 Td1027.3903 
                        In
                        Let Td1028.3901 =
                          CallCls atan.2540 w6.3898 
                        In
                        Let l.7070 =
                          Set (l.7062)
                        In
                        Let Td1029.3902 =
                          FLord l.7070[0]
                        In
                        Let Td1030.3899 =
                          Td1028.3901 *. Td1029.3902
                        In
                        Let l.7071 =
                          Set (l.7064)
                        In
                        Let Td1031.3900 =
                          FLord l.7071[0]
                        In
                        Ans (
                          Td1030.3899 /. Td1031.3900
                        )
                      Then
                        Let l.7069 =
                          Set (l.7060)
                        In
                        Ans (
                          FLord l.7069[0]
                        )
                    In
                    Let Td1033.3896 =
                      CallDir min_caml_floor w8.3878 
                    In
                    Let w10.3879 =
                      w8.3878 -. Td1033.3896
                    In
                    Let l.7073 =
                      Set (l.7072)
                    In
                    Let Td1034.3892 =
                      FLord l.7073[0]
                    In
                    Let l.7074 =
                      Set (l.6259)
                    In
                    Let Td1035.3895 =
                      FLord l.7074[0]
                    In
                    Let Td1036.3894 =
                      Td1035.3895 -. w9.3876
                    In
                    Let Td1037.3893 =
                      CallDir fsqr.2531 Td1036.3894 
                    In
                    Let Td1038.3888 =
                      Td1034.3892 -. Td1037.3893
                    In
                    Let l.7075 =
                      Set (l.6259)
                    In
                    Let Td1039.3891 =
                      FLord l.7075[0]
                    In
                    Let Td1040.3890 =
                      Td1039.3891 -. w10.3879
                    In
                    Let Td1041.3889 =
                      CallDir fsqr.2531 Td1040.3890 
                    In
                    Let w11.3880 =
                      Td1038.3888 -. Td1041.3889
                    In
                    Let Tb1042.3887 =
                      CallDir fisneg.2516 w11.3880 
                    In
                    Let w12.3881 =
                      If Tb1042.3887 = 0 Then
                        Ans (
                          FMovD (w11.3880)
                        )
                      Then
                        Let l.7076 =
                          Set (l.6252)
                        In
                        Ans (
                          FLord l.7076[0]
                        )
                    In
                    Let Ti1043.3882 =
                      Set (2)
                    In
                    Let l.7078 =
                      Set (l.7077)
                    In
                    Let Td1044.3886 =
                      FLord l.7078[0]
                    In
                    Let Td1045.3884 =
                      Td1044.3886 *. w12.3881
                    In
                    Let l.7080 =
                      Set (l.7079)
                    In
                    Let Td1046.3885 =
                      FLord l.7080[0]
                    In
                    Let Td1047.3883 =
                      Td1045.3884 /. Td1046.3885
                    In
                    Let o.7081 =
                      Ti1043.3882 << 2
                    In
                    Ans (
                      FStore Td1047.3883 to texture_color.2591[o.7081]
                    )
                  Then
                    Ans (
                      Nop
                    )
                )
            )
        )
    )
  Unit add_light.2936 (bright.2937 hilight.2938 hilight_scale.2939 ) =
    Let texture_color.2591 =
      Lord %g27[-8]
    In
    Let rgb.2593 =
      Lord %g27[-4]
    In
    Let Tb918.3864 =
      CallDir fispos.2514 bright.2937 
    In
    Let Tu158.3845 =
      If Tb918.3864 = 0 Then
        Ans (
          Nop
        )
      Then
        Ans (
          CallDir vecaccum.2647 rgb.2593 texture_color.2591 bright.2937 
        )
    In
    Let Tb933.3846 =
      CallDir fispos.2514 hilight.2938 
    In
    Ans (
      If Tb933.3846 = 0 Then
        Ans (
          Nop
        )
      Then
        Let Td919.3863 =
          CallDir fsqr.2531 hilight.2938 
        In
        Let Td920.3862 =
          CallDir fsqr.2531 Td919.3863 
        In
        Let ihl.3847 =
          Td920.3862 *. hilight_scale.2939
        In
        Let Ti921.3858 =
          Set (0)
        In
        Let Ti922.3861 =
          Set (0)
        In
        Let o.7120 =
          Ti922.3861 << 2
        In
        Let Td923.3860 =
          FLord rgb.2593[o.7120]
        In
        Let Td924.3859 =
          Td923.3860 +. ihl.3847
        In
        Let o.7122 =
          Ti921.3858 << 2
        In
        Let Tu157.3848 =
          FStore Td924.3859 to rgb.2593[o.7122]
        In
        Let Ti925.3854 =
          Set (1)
        In
        Let Ti926.3857 =
          Set (1)
        In
        Let o.7123 =
          Ti926.3857 << 2
        In
        Let Td927.3856 =
          FLord rgb.2593[o.7123]
        In
        Let Td928.3855 =
          Td927.3856 +. ihl.3847
        In
        Let o.7125 =
          Ti925.3854 << 2
        In
        Let Tu156.3849 =
          FStore Td928.3855 to rgb.2593[o.7125]
        In
        Let Ti929.3850 =
          Set (2)
        In
        Let Ti930.3853 =
          Set (2)
        In
        Let o.7126 =
          Ti930.3853 << 2
        In
        Let Td931.3852 =
          FLord rgb.2593[o.7126]
        In
        Let Td932.3851 =
          Td931.3852 +. ihl.3847
        In
        Let o.7128 =
          Ti929.3850 << 2
        In
        Ans (
          FStore Td932.3851 to rgb.2593[o.7128]
        )
    )
  Unit trace_reflections.2940 (index.2941 dirvec.2944 diffuse.2942 hilight_scale.2943 ) =
    Let shadow_check_one_or_matrix.2893 =
      Lord %g27[-32]
    In
    Let reflections.2605 =
      Lord %g27[-28]
    In
    Let or_net.2584 =
      Lord %g27[-24]
    In
    Let nvector.2590 =
      Lord %g27[-20]
    In
    Let judge_intersection_fast.2922 =
      Lord %g27[-16]
    In
    Let intsec_rectside.2586 =
      Lord %g27[-12]
    In
    Let intersected_object_id.2589 =
      Lord %g27[-8]
    In
    Let add_light.2936 =
      Lord %g27[-4]
    In
    Ans (
      If index.2941 >= 0 Then
        Let o.7129 =
          index.2941 << 2
        In
        Let rinfo.3819 =
          Lord reflections.2605[o.7129]
        In
        Let dvec.3820 =
          CallDir r_dvec.2731 rinfo.3819 
        In
        Let Tb915.3824 =
          CallCls judge_intersection_fast.2922 dvec.3820 
        In
        Let Tu159.3821 =
          If Tb915.3824 = 0 Then
            Ans (
              Nop
            )
          Then
            Let Ti900.3844 =
              Set (0)
            In
            Let o.7131 =
              Ti900.3844 << 2
            In
            Let Ti901.3842 =
              Lord intersected_object_id.2589[o.7131]
            In
            Let Ti902.3843 =
              Set (2)
            In
            Let Ti903.3839 =
              Ti901.3842 << Ti902.3843
            In
            Let Ti904.3841 =
              Set (0)
            In
            Let o.7133 =
              Ti904.3841 << 2
            In
            Let Ti905.3840 =
              Lord intsec_rectside.2586[o.7133]
            In
            Let surface_id.3825 =
              Ti903.3839 + Ti905.3840
            In
            Let Ti914.3826 =
              CallDir r_surface_id.2729 rinfo.3819 
            In
            Ans (
              If surface_id.3825 = Ti914.3826 Then
                Let Ti906.3836 =
                  Set (0)
                In
                Let Ti907.3838 =
                  Set (0)
                In
                Let o.7135 =
                  Ti907.3838 << 2
                In
                Let Ta908.3837 =
                  Lord or_net.2584[o.7135]
                In
                Let Tb913.3827 =
                  CallCls shadow_check_one_or_matrix.2893 Ti906.3836 Ta908.3837 
                In
                Ans (
                  If Tb913.3827 = 0 Then
                    Let Ta909.3835 =
                      CallDir d_vec.2725 dvec.3820 
                    In
                    Let p.3828 =
                      CallDir veciprod.2639 nvector.2590 Ta909.3835 
                    In
                    Let scale.3829 =
                      CallDir r_bright.2733 rinfo.3819 
                    In
                    Let Td910.3834 =
                      scale.3829 *. diffuse.2942
                    In
                    Let bright.3830 =
                      Td910.3834 *. p.3828
                    In
                    Let Ta911.3833 =
                      CallDir d_vec.2725 dvec.3820 
                    In
                    Let Td912.3832 =
                      CallDir veciprod.2639 dirvec.2944 Ta911.3833 
                    In
                    Let hilight.3831 =
                      scale.3829 *. Td912.3832
                    In
                    Ans (
                      CallCls add_light.2936 bright.3830 hilight.3831 hilight_scale.2943 
                    )
                  Then
                    Ans (
                      Nop
                    )
                )
              Then
                Ans (
                  Nop
                )
            )
        In
        Let Ti916.3823 =
          Set (1)
        In
        Let Ti917.3822 =
          index.2941 - Ti916.3823
        In
        Ans (
          CallCls trace_reflections.2940 Ti917.3822 dirvec.2944 diffuse.2942 hilight_scale.2943 
        )
      Then
        Ans (
          Nop
        )
    )
  Unit trace_ray.2945 (nref.2946 dirvec.2948 pixel.2949 energy.2947 dist.2950 ) =
    Let utexture.2933 =
      Lord %g27[-80]
    In
    Let trace_reflections.2940 =
      Lord %g27[-76]
    In
    Let tmin.2587 =
      Lord %g27[-72]
    In
    Let texture_color.2591 =
      Lord %g27[-68]
    In
    Let startp.2597 =
      Lord %g27[-64]
    In
    Let shadow_check_one_or_matrix.2893 =
      Lord %g27[-60]
    In
    Let setup_startp.2859 =
      Lord %g27[-56]
    In
    Let rgb.2593 =
      Lord %g27[-52]
    In
    Let or_net.2584 =
      Lord %g27[-48]
    In
    Let objects.2578 =
      Lord %g27[-44]
    In
    Let nvector.2590 =
      Lord %g27[-40]
    In
    Let n_reflections.2606 =
      Lord %g27[-36]
    In
    Let light.2581 =
      Lord %g27[-32]
    In
    Let judge_intersection.2908 =
      Lord %g27[-28]
    In
    Let intsec_rectside.2586 =
      Lord %g27[-24]
    In
    Let intersection_point.2588 =
      Lord %g27[-20]
    In
    Let intersected_object_id.2589 =
      Lord %g27[-16]
    In
    Let get_nvector.2930 =
      Lord %g27[-12]
    In
    Let beam.2582 =
      Lord %g27[-8]
    In
    Let add_light.2936 =
      Lord %g27[-4]
    In
    Let Ti899.3713 =
      Set (4)
    In
    Ans (
      If nref.2946 <= Ti899.3713 Then
        Let surface_ids.3714 =
          CallDir p_surface_ids.2710 pixel.2949 
        In
        Let Tb898.3715 =
          CallCls judge_intersection.2908 dirvec.2948 
        In
        Ans (
          If Tb898.3715 = 0 Then
            Let Ti827.3818 =
              Set (1)
            In
            Let Ti828.3817 =
              Neg (Ti827.3818)
            In
            Let o.7170 =
              nref.2946 << 2
            In
            Let Tu176.3793 =
              Store Ti828.3817 to surface_ids.3714[o.7170]
            In
            Ans (
              If nref.2946 = 0 Then
                Ans (
                  Nop
                )
              Then
                Let Td829.3816 =
                  CallDir veciprod.2639 dirvec.2948 light.2581 
                In
                Let hl.3794 =
                  CallDir fneg.2527 Td829.3816 
                In
                Let Tb847.3795 =
                  CallDir fispos.2514 hl.3794 
                In
                Ans (
                  If Tb847.3795 = 0 Then
                    Ans (
                      Nop
                    )
                  Then
                    Let Td830.3815 =
                      CallDir fsqr.2531 hl.3794 
                    In
                    Let Td831.3814 =
                      Td830.3815 *. hl.3794
                    In
                    Let Td832.3811 =
                      Td831.3814 *. energy.2947
                    In
                    Let Ti833.3813 =
                      Set (0)
                    In
                    Let o.7171 =
                      Ti833.3813 << 2
                    In
                    Let Td834.3812 =
                      FLord beam.2582[o.7171]
                    In
                    Let ihl.3796 =
                      Td832.3811 *. Td834.3812
                    In
                    Let Ti835.3807 =
                      Set (0)
                    In
                    Let Ti836.3810 =
                      Set (0)
                    In
                    Let o.7173 =
                      Ti836.3810 << 2
                    In
                    Let Td837.3809 =
                      FLord rgb.2593[o.7173]
                    In
                    Let Td838.3808 =
                      Td837.3809 +. ihl.3796
                    In
                    Let o.7175 =
                      Ti835.3807 << 2
                    In
                    Let Tu175.3797 =
                      FStore Td838.3808 to rgb.2593[o.7175]
                    In
                    Let Ti839.3803 =
                      Set (1)
                    In
                    Let Ti840.3806 =
                      Set (1)
                    In
                    Let o.7176 =
                      Ti840.3806 << 2
                    In
                    Let Td841.3805 =
                      FLord rgb.2593[o.7176]
                    In
                    Let Td842.3804 =
                      Td841.3805 +. ihl.3796
                    In
                    Let o.7178 =
                      Ti839.3803 << 2
                    In
                    Let Tu174.3798 =
                      FStore Td842.3804 to rgb.2593[o.7178]
                    In
                    Let Ti843.3799 =
                      Set (2)
                    In
                    Let Ti844.3802 =
                      Set (2)
                    In
                    Let o.7179 =
                      Ti844.3802 << 2
                    In
                    Let Td845.3801 =
                      FLord rgb.2593[o.7179]
                    In
                    Let Td846.3800 =
                      Td845.3801 +. ihl.3796
                    In
                    Let o.7181 =
                      Ti843.3799 << 2
                    In
                    Ans (
                      FStore Td846.3800 to rgb.2593[o.7181]
                    )
                )
            )
          Then
            Let Ti848.3792 =
              Set (0)
            In
            Let o.7137 =
              Ti848.3792 << 2
            In
            Let obj_id.3716 =
              Lord intersected_object_id.2589[o.7137]
            In
            Let o.7139 =
              obj_id.3716 << 2
            In
            Let obj.3717 =
              Lord objects.2578[o.7139]
            In
            Let m_surface.3718 =
              CallDir o_reflectiontype.2668 obj.3717 
            In
            Let Td849.3791 =
              CallDir o_diffuse.2688 obj.3717 
            In
            Let diffuse.3719 =
              Td849.3791 *. energy.2947
            In
            Let Tu173.3720 =
              CallCls get_nvector.2930 obj.3717 dirvec.2948 
            In
            Let Tu172.3721 =
              CallDir veccpy.2628 startp.2597 intersection_point.2588 
            In
            Let Tu171.3722 =
              CallCls utexture.2933 obj.3717 intersection_point.2588 
            In
            Let Ti850.3790 =
              Set (2)
            In
            Let Ti851.3787 =
              obj_id.3716 << Ti850.3790
            In
            Let Ti852.3789 =
              Set (0)
            In
            Let o.7141 =
              Ti852.3789 << 2
            In
            Let Ti853.3788 =
              Lord intsec_rectside.2586[o.7141]
            In
            Let Ti854.3786 =
              Ti851.3787 + Ti853.3788
            In
            Let o.7143 =
              nref.2946 << 2
            In
            Let Tu170.3723 =
              Store Ti854.3786 to surface_ids.3714[o.7143]
            In
            Let intersection_points.3724 =
              CallDir p_intersection_points.2708 pixel.2949 
            In
            Let o.7144 =
              nref.2946 << 2
            In
            Let Ta855.3785 =
              Lord intersection_points.3724[o.7144]
            In
            Let Tu169.3725 =
              CallDir veccpy.2628 Ta855.3785 intersection_point.2588 
            In
            Let calc_diffuse.3726 =
              CallDir p_calc_diffuse.2712 pixel.2949 
            In
            Let Td856.3783 =
              CallDir o_diffuse.2688 obj.3717 
            In
            Let l.7146 =
              Set (l.6259)
            In
            Let Td857.3784 =
              FLord l.7146[0]
            In
            Let Tb867.3768 =
              CallDir fless.2511 Td856.3783 Td857.3784 
            In
            Let Tu168.3727 =
              If Tb867.3768 = 0 Then
                Let Ti858.3782 =
                  Set (1)
                In
                Let o.7148 =
                  nref.2946 << 2
                In
                Let Tu162.3770 =
                  Store Ti858.3782 to calc_diffuse.3726[o.7148]
                In
                Let energya.3771 =
                  CallDir p_energy.2714 pixel.2949 
                In
                Let o.7149 =
                  nref.2946 << 2
                In
                Let Ta859.3781 =
                  Lord energya.3771[o.7149]
                In
                Let Tu161.3772 =
                  CallDir veccpy.2628 Ta859.3781 texture_color.2591 
                In
                Let o.7151 =
                  nref.2946 << 2
                In
                Let Ta860.3776 =
                  Lord energya.3771[o.7151]
                In
                Let l.7153 =
                  Set (l.6261)
                In
                Let Td861.3779 =
                  FLord l.7153[0]
                In
                Let l.7155 =
                  Set (l.7154)
                In
                Let Td862.3780 =
                  FLord l.7155[0]
                In
                Let Td863.3778 =
                  Td861.3779 /. Td862.3780
                In
                Let Td864.3777 =
                  Td863.3778 *. diffuse.3719
                In
                Let Tu160.3773 =
                  CallDir vecscale.2657 Ta860.3776 Td864.3777 
                In
                Let nvectors.3774 =
                  CallDir p_nvectors.2723 pixel.2949 
                In
                Let o.7156 =
                  nref.2946 << 2
                In
                Let Ta865.3775 =
                  Lord nvectors.3774[o.7156]
                In
                Ans (
                  CallDir veccpy.2628 Ta865.3775 nvector.2590 
                )
              Then
                Let Ti866.3769 =
                  Set (0)
                In
                Let o.7147 =
                  nref.2946 << 2
                In
                Ans (
                  Store Ti866.3769 to calc_diffuse.3726[o.7147]
                )
            In
            Let l.7159 =
              Set (l.7158)
            In
            Let Td868.3766 =
              FLord l.7159[0]
            In
            Let Td869.3767 =
              CallDir veciprod.2639 dirvec.2948 nvector.2590 
            In
            Let w.3728 =
              Td868.3766 *. Td869.3767
            In
            Let Tu167.3729 =
              CallDir vecaccum.2647 dirvec.2948 nvector.2590 w.3728 
            In
            Let Td870.3765 =
              CallDir o_hilight.2690 obj.3717 
            In
            Let hilight_scale.3730 =
              energy.2947 *. Td870.3765
            In
            Let Ti871.3762 =
              Set (0)
            In
            Let Ti872.3764 =
              Set (0)
            In
            Let o.7160 =
              Ti872.3764 << 2
            In
            Let Ta873.3763 =
              Lord or_net.2584[o.7160]
            In
            Let Tb877.3756 =
              CallCls shadow_check_one_or_matrix.2893 Ti871.3762 Ta873.3763 
            In
            Let Tu166.3731 =
              If Tb877.3756 = 0 Then
                Let Td874.3761 =
                  CallDir veciprod.2639 nvector.2590 light.2581 
                In
                Let Td875.3760 =
                  CallDir fneg.2527 Td874.3761 
                In
                Let bright.3757 =
                  Td875.3760 *. diffuse.3719
                In
                Let Td876.3759 =
                  CallDir veciprod.2639 dirvec.2948 light.2581 
                In
                Let hilight.3758 =
                  CallDir fneg.2527 Td876.3759 
                In
                Ans (
                  CallCls add_light.2936 bright.3757 hilight.3758 hilight_scale.3730 
                )
              Then
                Ans (
                  Nop
                )
            In
            Let Tu165.3732 =
              CallCls setup_startp.2859 intersection_point.2588 
            In
            Let Ti878.3755 =
              Set (0)
            In
            Let o.7162 =
              Ti878.3755 << 2
            In
            Let Ti879.3753 =
              Lord n_reflections.2606[o.7162]
            In
            Let Ti880.3754 =
              Set (1)
            In
            Let Ti881.3752 =
              Ti879.3753 - Ti880.3754
            In
            Let Tu164.3733 =
              CallCls trace_reflections.2940 Ti881.3752 dirvec.2948 diffuse.3719 hilight_scale.3730 
            In
            Let l.7165 =
              Set (l.7164)
            In
            Let Td882.3751 =
              FLord l.7165[0]
            In
            Let Tb897.3734 =
              CallDir fless.2511 Td882.3751 energy.2947 
            In
            Ans (
              If Tb897.3734 = 0 Then
                Ans (
                  Nop
                )
              Then
                Let Ti887.3746 =
                  Set (4)
                In
                Let Tu163.3735 =
                  If Ti887.3746 <= nref.2946 Then
                    Ans (
                      Nop
                    )
                  Then
                    Let Ti883.3750 =
                      Set (1)
                    In
                    Let Ti884.3747 =
                      nref.2946 + Ti883.3750
                    In
                    Let Ti885.3749 =
                      Set (1)
                    In
                    Let Ti886.3748 =
                      Neg (Ti885.3749)
                    In
                    Let o.7166 =
                      Ti884.3747 << 2
                    In
                    Ans (
                      Store Ti886.3748 to surface_ids.3714[o.7166]
                    )
                In
                Let Ti896.3736 =
                  Set (2)
                In
                Ans (
                  If m_surface.3718 = Ti896.3736 Then
                    Let l.7167 =
                      Set (l.6261)
                    In
                    Let Td888.3744 =
                      FLord l.7167[0]
                    In
                    Let Td889.3745 =
                      CallDir o_diffuse.2688 obj.3717 
                    In
                    Let Td890.3743 =
                      Td888.3744 -. Td889.3745
                    In
                    Let energy2.3737 =
                      energy.2947 *. Td890.3743
                    In
                    Let Ti891.3742 =
                      Set (1)
                    In
                    Let Ti892.3738 =
                      nref.2946 + Ti891.3742
                    In
                    Let Ti893.3741 =
                      Set (0)
                    In
                    Let o.7168 =
                      Ti893.3741 << 2
                    In
                    Let Td894.3740 =
                      FLord tmin.2587[o.7168]
                    In
                    Let Td895.3739 =
                      dist.2950 +. Td894.3740
                    In
                    Ans (
                      CallCls trace_ray.2945 Ti892.3738 dirvec.2948 pixel.2949 energy2.3737 Td895.3739 
                    )
                  Then
                    Ans (
                      Nop
                    )
                )
            )
        )
      Then
        Ans (
          Nop
        )
    )
  Unit trace_diffuse_ray.2951 (dirvec.2952 energy.2953 ) =
    Let utexture.2933 =
      Lord %g27[-48]
    In
    Let texture_color.2591 =
      Lord %g27[-44]
    In
    Let shadow_check_one_or_matrix.2893 =
      Lord %g27[-40]
    In
    Let or_net.2584 =
      Lord %g27[-36]
    In
    Let objects.2578 =
      Lord %g27[-32]
    In
    Let nvector.2590 =
      Lord %g27[-28]
    In
    Let light.2581 =
      Lord %g27[-24]
    In
    Let judge_intersection_fast.2922 =
      Lord %g27[-20]
    In
    Let intersection_point.2588 =
      Lord %g27[-16]
    In
    Let intersected_object_id.2589 =
      Lord %g27[-12]
    In
    Let get_nvector.2930 =
      Lord %g27[-8]
    In
    Let diffuse_ray.2592 =
      Lord %g27[-4]
    In
    Let Tb826.3695 =
      CallCls judge_intersection_fast.2922 dirvec.2952 
    In
    Ans (
      If Tb826.3695 = 0 Then
        Ans (
          Nop
        )
      Then
        Let Ti814.3712 =
          Set (0)
        In
        Let o.7182 =
          Ti814.3712 << 2
        In
        Let Ti815.3711 =
          Lord intersected_object_id.2589[o.7182]
        In
        Let o.7184 =
          Ti815.3711 << 2
        In
        Let obj.3696 =
          Lord objects.2578[o.7184]
        In
        Let Ta816.3710 =
          CallDir d_vec.2725 dirvec.2952 
        In
        Let Tu178.3697 =
          CallCls get_nvector.2930 obj.3696 Ta816.3710 
        In
        Let Tu177.3698 =
          CallCls utexture.2933 obj.3696 intersection_point.2588 
        In
        Let Ti817.3707 =
          Set (0)
        In
        Let Ti818.3709 =
          Set (0)
        In
        Let o.7186 =
          Ti818.3709 << 2
        In
        Let Ta819.3708 =
          Lord or_net.2584[o.7186]
        In
        Let Tb825.3699 =
          CallCls shadow_check_one_or_matrix.2893 Ti817.3707 Ta819.3708 
        In
        Ans (
          If Tb825.3699 = 0 Then
            Let Td820.3706 =
              CallDir veciprod.2639 nvector.2590 light.2581 
            In
            Let br.3700 =
              CallDir fneg.2527 Td820.3706 
            In
            Let Tb821.3705 =
              CallDir fispos.2514 br.3700 
            In
            Let bright.3701 =
              If Tb821.3705 = 0 Then
                Let l.7188 =
                  Set (l.6252)
                In
                Ans (
                  FLord l.7188[0]
                )
              Then
                Ans (
                  FMovD (br.3700)
                )
            In
            Let Td822.3703 =
              energy.2953 *. bright.3701
            In
            Let Td823.3704 =
              CallDir o_diffuse.2688 obj.3696 
            In
            Let Td824.3702 =
              Td822.3703 *. Td823.3704
            In
            Ans (
              CallDir vecaccum.2647 diffuse_ray.2592 texture_color.2591 Td824.3702 
            )
          Then
            Ans (
              Nop
            )
        )
    )
  Unit iter_trace_diffuse_rays.2954 (dirvec_group.2955 nvector.2956 org.2957 index.2958 ) =
    Let trace_diffuse_ray.2951 =
      Lord %g27[-4]
    In
    Ans (
      If index.2958 >= 0 Then
        Let o.7189 =
          index.2958 << 2
        In
        Let Tt801.3694 =
          Lord dirvec_group.2955[o.7189]
        In
        Let Ta802.3693 =
          CallDir d_vec.2725 Tt801.3694 
        In
        Let p.3680 =
          CallDir veciprod.2639 Ta802.3693 nvector.2956 
        In
        Let Tb811.3684 =
          CallDir fisneg.2516 p.3680 
        In
        Let Tu179.3681 =
          If Tb811.3684 = 0 Then
            Let o.7195 =
              index.2958 << 2
            In
            Let Tt803.3690 =
              Lord dirvec_group.2955[o.7195]
            In
            Let l.7198 =
              Set (l.7197)
            In
            Let Td804.3692 =
              FLord l.7198[0]
            In
            Let Td805.3691 =
              p.3680 /. Td804.3692
            In
            Ans (
              CallCls trace_diffuse_ray.2951 Tt803.3690 Td805.3691 
            )
          Then
            Let Ti806.3689 =
              Set (1)
            In
            Let Ti807.3688 =
              index.2958 + Ti806.3689
            In
            Let o.7191 =
              Ti807.3688 << 2
            In
            Let Tt808.3685 =
              Lord dirvec_group.2955[o.7191]
            In
            Let l.7194 =
              Set (l.7193)
            In
            Let Td809.3687 =
              FLord l.7194[0]
            In
            Let Td810.3686 =
              p.3680 /. Td809.3687
            In
            Ans (
              CallCls trace_diffuse_ray.2951 Tt808.3685 Td810.3686 
            )
        In
        Let Ti812.3683 =
          Set (2)
        In
        Let Ti813.3682 =
          index.2958 - Ti812.3683
        In
        Ans (
          CallCls iter_trace_diffuse_rays.2954 dirvec_group.2955 nvector.2956 org.2957 Ti813.3682 
        )
      Then
        Ans (
          Nop
        )
    )
  Unit trace_diffuse_rays.2959 (dirvec_group.2960 nvector.2961 org.2962 ) =
    Let setup_startp.2859 =
      Lord %g27[-8]
    In
    Let iter_trace_diffuse_rays.2954 =
      Lord %g27[-4]
    In
    Let Tu180.3678 =
      CallCls setup_startp.2859 org.2962 
    In
    Let Ti800.3679 =
      Set (118)
    In
    Ans (
      CallCls iter_trace_diffuse_rays.2954 dirvec_group.2960 nvector.2961 org.2962 Ti800.3679 
    )
  Unit trace_diffuse_ray_80percent.2963 (group_id.2964 nvector.2965 org.2966 ) =
    Let trace_diffuse_rays.2959 =
      Lord %g27[-8]
    In
    Let dirvecs.2603 =
      Lord %g27[-4]
    In
    Let Tu184.3661 =
      If group_id.2964 = 0 Then
        Ans (
          Nop
        )
      Then
        Let Ti787.3677 =
          Set (0)
        In
        Let o.7199 =
          Ti787.3677 << 2
        In
        Let Ta788.3676 =
          Lord dirvecs.2603[o.7199]
        In
        Ans (
          CallCls trace_diffuse_rays.2959 Ta788.3676 nvector.2965 org.2966 
        )
    In
    Let Tu183.3662 =
      If group_id.2964 = 1 Then
        Ans (
          Nop
        )
      Then
        Let Ti789.3675 =
          Set (1)
        In
        Let o.7201 =
          Ti789.3675 << 2
        In
        Let Ta790.3674 =
          Lord dirvecs.2603[o.7201]
        In
        Ans (
          CallCls trace_diffuse_rays.2959 Ta790.3674 nvector.2965 org.2966 
        )
    In
    Let Ti793.3671 =
      Set (2)
    In
    Let Tu182.3663 =
      If group_id.2964 = Ti793.3671 Then
        Ans (
          Nop
        )
      Then
        Let Ti791.3673 =
          Set (2)
        In
        Let o.7203 =
          Ti791.3673 << 2
        In
        Let Ta792.3672 =
          Lord dirvecs.2603[o.7203]
        In
        Ans (
          CallCls trace_diffuse_rays.2959 Ta792.3672 nvector.2965 org.2966 
        )
    In
    Let Ti796.3668 =
      Set (3)
    In
    Let Tu181.3664 =
      If group_id.2964 = Ti796.3668 Then
        Ans (
          Nop
        )
      Then
        Let Ti794.3670 =
          Set (3)
        In
        Let o.7205 =
          Ti794.3670 << 2
        In
        Let Ta795.3669 =
          Lord dirvecs.2603[o.7205]
        In
        Ans (
          CallCls trace_diffuse_rays.2959 Ta795.3669 nvector.2965 org.2966 
        )
    In
    Let Ti799.3665 =
      Set (4)
    In
    Ans (
      If group_id.2964 = Ti799.3665 Then
        Ans (
          Nop
        )
      Then
        Let Ti797.3667 =
          Set (4)
        In
        Let o.7207 =
          Ti797.3667 << 2
        In
        Let Ta798.3666 =
          Lord dirvecs.2603[o.7207]
        In
        Ans (
          CallCls trace_diffuse_rays.2959 Ta798.3666 nvector.2965 org.2966 
        )
    )
  Unit calc_diffuse_using_1point.2967 (pixel.2968 nref.2969 ) =
    Let trace_diffuse_ray_80percent.2963 =
      Lord %g27[-12]
    In
    Let rgb.2593 =
      Lord %g27[-8]
    In
    Let diffuse_ray.2592 =
      Lord %g27[-4]
    In
    Let ray20p.3650 =
      CallDir p_received_ray_20percent.2716 pixel.2968 
    In
    Let nvectors.3651 =
      CallDir p_nvectors.2723 pixel.2968 
    In
    Let intersection_points.3652 =
      CallDir p_intersection_points.2708 pixel.2968 
    In
    Let energya.3653 =
      CallDir p_energy.2714 pixel.2968 
    In
    Let o.7209 =
      nref.2969 << 2
    In
    Let Ta782.3660 =
      Lord ray20p.3650[o.7209]
    In
    Let Tu186.3654 =
      CallDir veccpy.2628 diffuse_ray.2592 Ta782.3660 
    In
    Let Ti783.3657 =
      CallDir p_group_id.2718 pixel.2968 
    In
    Let o.7211 =
      nref.2969 << 2
    In
    Let Ta784.3658 =
      Lord nvectors.3651[o.7211]
    In
    Let o.7213 =
      nref.2969 << 2
    In
    Let Ta785.3659 =
      Lord intersection_points.3652[o.7213]
    In
    Let Tu185.3655 =
      CallCls trace_diffuse_ray_80percent.2963 Ti783.3657 Ta784.3658 Ta785.3659 
    In
    Let o.7215 =
      nref.2969 << 2
    In
    Let Ta786.3656 =
      Lord energya.3653[o.7215]
    In
    Ans (
      CallDir vecaccumv.2660 rgb.2593 Ta786.3656 diffuse_ray.2592 
    )
  Unit calc_diffuse_using_5points.2970 (x.2971 prev.2972 cur.2973 next.2974 nref.2975 ) =
    Let rgb.2593 =
      Lord %g27[-8]
    In
    Let diffuse_ray.2592 =
      Lord %g27[-4]
    In
    Let o.7217 =
      x.2971 << 2
    In
    Let Tt766.3649 =
      Lord prev.2972[o.7217]
    In
    Let r_up.3623 =
      CallDir p_received_ray_20percent.2716 Tt766.3649 
    In
    Let Ti767.3648 =
      Set (1)
    In
    Let Ti768.3647 =
      x.2971 - Ti767.3648
    In
    Let o.7219 =
      Ti768.3647 << 2
    In
    Let Tt769.3646 =
      Lord cur.2973[o.7219]
    In
    Let r_left.3624 =
      CallDir p_received_ray_20percent.2716 Tt769.3646 
    In
    Let o.7221 =
      x.2971 << 2
    In
    Let Tt770.3645 =
      Lord cur.2973[o.7221]
    In
    Let r_center.3625 =
      CallDir p_received_ray_20percent.2716 Tt770.3645 
    In
    Let Ti771.3644 =
      Set (1)
    In
    Let Ti772.3643 =
      x.2971 + Ti771.3644
    In
    Let o.7223 =
      Ti772.3643 << 2
    In
    Let Tt773.3642 =
      Lord cur.2973[o.7223]
    In
    Let r_right.3626 =
      CallDir p_received_ray_20percent.2716 Tt773.3642 
    In
    Let o.7225 =
      x.2971 << 2
    In
    Let Tt774.3641 =
      Lord next.2974[o.7225]
    In
    Let r_down.3627 =
      CallDir p_received_ray_20percent.2716 Tt774.3641 
    In
    Let o.7227 =
      nref.2975 << 2
    In
    Let Ta775.3640 =
      Lord r_up.3623[o.7227]
    In
    Let Tu191.3628 =
      CallDir veccpy.2628 diffuse_ray.2592 Ta775.3640 
    In
    Let o.7229 =
      nref.2975 << 2
    In
    Let Ta776.3639 =
      Lord r_left.3624[o.7229]
    In
    Let Tu190.3629 =
      CallDir vecadd.2651 diffuse_ray.2592 Ta776.3639 
    In
    Let o.7231 =
      nref.2975 << 2
    In
    Let Ta777.3638 =
      Lord r_center.3625[o.7231]
    In
    Let Tu189.3630 =
      CallDir vecadd.2651 diffuse_ray.2592 Ta777.3638 
    In
    Let o.7233 =
      nref.2975 << 2
    In
    Let Ta778.3637 =
      Lord r_right.3626[o.7233]
    In
    Let Tu188.3631 =
      CallDir vecadd.2651 diffuse_ray.2592 Ta778.3637 
    In
    Let o.7235 =
      nref.2975 << 2
    In
    Let Ta779.3636 =
      Lord r_down.3627[o.7235]
    In
    Let Tu187.3632 =
      CallDir vecadd.2651 diffuse_ray.2592 Ta779.3636 
    In
    Let o.7237 =
      x.2971 << 2
    In
    Let Tt780.3635 =
      Lord cur.2973[o.7237]
    In
    Let energya.3633 =
      CallDir p_energy.2714 Tt780.3635 
    In
    Let o.7239 =
      nref.2975 << 2
    In
    Let Ta781.3634 =
      Lord energya.3633[o.7239]
    In
    Ans (
      CallDir vecaccumv.2660 rgb.2593 Ta781.3634 diffuse_ray.2592 
    )
  Unit do_without_neighbors.2976 (pixel.2977 nref.2978 ) =
    Let calc_diffuse_using_1point.2967 =
      Lord %g27[-4]
    In
    Let Ti765.3615 =
      Set (4)
    In
    Ans (
      If nref.2978 <= Ti765.3615 Then
        Let surface_ids.3616 =
          CallDir p_surface_ids.2710 pixel.2977 
        In
        Let o.7241 =
          nref.2978 << 2
        In
        Let Ti764.3617 =
          Lord surface_ids.3616[o.7241]
        In
        Ans (
          If Ti764.3617 >= 0 Then
            Let calc_diffuse.3618 =
              CallDir p_calc_diffuse.2712 pixel.2977 
            In
            Let o.7243 =
              nref.2978 << 2
            In
            Let Tb761.3622 =
              Lord calc_diffuse.3618[o.7243]
            In
            Let Tu192.3619 =
              If Tb761.3622 = 0 Then
                Ans (
                  Nop
                )
              Then
                Ans (
                  CallCls calc_diffuse_using_1point.2967 pixel.2977 nref.2978 
                )
            In
            Let Ti762.3621 =
              Set (1)
            In
            Let Ti763.3620 =
              nref.2978 + Ti762.3621
            In
            Ans (
              CallCls do_without_neighbors.2976 pixel.2977 Ti763.3620 
            )
          Then
            Ans (
              Nop
            )
        )
      Then
        Ans (
          Nop
        )
    )
  Bool neighbors_exist.2979 (x.2980 y.2981 next.2982 ) =
    Let image_size.2594 =
      Lord %g27[-4]
    In
    Let Ti753.3614 =
      Set (1)
    In
    Let o.7245 =
      Ti753.3614 << 2
    In
    Let Ti759.3607 =
      Lord image_size.2594[o.7245]
    In
    Let Ti754.3613 =
      Set (1)
    In
    Let Ti760.3608 =
      y.2981 + Ti754.3613
    In
    Ans (
      If Ti759.3607 <= Ti760.3608 Then
        Ans (
          Set (0)
        )
      Then
        Ans (
          If y.2981 <= 0 Then
            Ans (
              Set (0)
            )
          Then
            Let Ti755.3612 =
              Set (0)
            In
            Let o.7247 =
              Ti755.3612 << 2
            In
            Let Ti757.3609 =
              Lord image_size.2594[o.7247]
            In
            Let Ti756.3611 =
              Set (1)
            In
            Let Ti758.3610 =
              x.2980 + Ti756.3611
            In
            Ans (
              If Ti757.3609 <= Ti758.3610 Then
                Ans (
                  Set (0)
                )
              Then
                Ans (
                  If x.2980 <= 0 Then
                    Ans (
                      Set (0)
                    )
                  Then
                    Ans (
                      Set (1)
                    )
                )
            )
        )
    )
  Int get_surface_id.2983 (pixel.2984 index.2985 ) =
    Let surface_ids.3606 =
      CallDir p_surface_ids.2710 pixel.2984 
    In
    Let o.7249 =
      index.2985 << 2
    In
    Ans (
      Lord surface_ids.3606[o.7249]
    )
  Bool neighbors_are_available.2986 (x.2987 prev.2988 cur.2989 next.2990 nref.2991 ) =
    Let o.7251 =
      x.2987 << 2
    In
    Let Tt740.3605 =
      Lord cur.2989[o.7251]
    In
    Let sid_center.3592 =
      CallDir get_surface_id.2983 Tt740.3605 nref.2991 
    In
    Let o.7253 =
      x.2987 << 2
    In
    Let Tt741.3604 =
      Lord prev.2988[o.7253]
    In
    Let Ti752.3593 =
      CallDir get_surface_id.2983 Tt741.3604 nref.2991 
    In
    Ans (
      If Ti752.3593 = sid_center.3592 Then
        Let o.7255 =
          x.2987 << 2
        In
        Let Tt742.3603 =
          Lord next.2990[o.7255]
        In
        Let Ti751.3594 =
          CallDir get_surface_id.2983 Tt742.3603 nref.2991 
        In
        Ans (
          If Ti751.3594 = sid_center.3592 Then
            Let Ti743.3602 =
              Set (1)
            In
            Let Ti744.3601 =
              x.2987 - Ti743.3602
            In
            Let o.7257 =
              Ti744.3601 << 2
            In
            Let Tt745.3600 =
              Lord cur.2989[o.7257]
            In
            Let Ti750.3595 =
              CallDir get_surface_id.2983 Tt745.3600 nref.2991 
            In
            Ans (
              If Ti750.3595 = sid_center.3592 Then
                Let Ti746.3599 =
                  Set (1)
                In
                Let Ti747.3598 =
                  x.2987 + Ti746.3599
                In
                Let o.7259 =
                  Ti747.3598 << 2
                In
                Let Tt748.3597 =
                  Lord cur.2989[o.7259]
                In
                Let Ti749.3596 =
                  CallDir get_surface_id.2983 Tt748.3597 nref.2991 
                In
                Ans (
                  If Ti749.3596 = sid_center.3592 Then
                    Ans (
                      Set (1)
                    )
                  Then
                    Ans (
                      Set (0)
                    )
                )
              Then
                Ans (
                  Set (0)
                )
            )
          Then
            Ans (
              Set (0)
            )
        )
      Then
        Ans (
          Set (0)
        )
    )
  Unit try_exploit_neighbors.2992 (x.2993 y.2994 prev.2995 cur.2996 next.2997 nref.2998 ) =
    Let do_without_neighbors.2976 =
      Lord %g27[-8]
    In
    Let calc_diffuse_using_5points.2970 =
      Lord %g27[-4]
    In
    Let o.7261 =
      x.2993 << 2
    In
    Let pixel.3582 =
      Lord cur.2996[o.7261]
    In
    Let Ti739.3583 =
      Set (4)
    In
    Ans (
      If nref.2998 <= Ti739.3583 Then
        Let Ti738.3584 =
          CallDir get_surface_id.2983 pixel.3582 nref.2998 
        In
        Ans (
          If Ti738.3584 >= 0 Then
            Let Tb737.3585 =
              CallDir neighbors_are_available.2986 x.2993 prev.2995 cur.2996 next.2997 nref.2998 
            In
            Ans (
              If Tb737.3585 = 0 Then
                Let o.7265 =
                  x.2993 << 2
                In
                Let Tt733.3591 =
                  Lord cur.2996[o.7265]
                In
                Ans (
                  CallCls do_without_neighbors.2976 Tt733.3591 nref.2998 
                )
              Then
                Let calc_diffuse.3586 =
                  CallDir p_calc_diffuse.2712 pixel.3582 
                In
                Let o.7263 =
                  nref.2998 << 2
                In
                Let Tb734.3590 =
                  Lord calc_diffuse.3586[o.7263]
                In
                Let Tu193.3587 =
                  If Tb734.3590 = 0 Then
                    Ans (
                      Nop
                    )
                  Then
                    Ans (
                      CallCls calc_diffuse_using_5points.2970 x.2993 prev.2995 cur.2996 next.2997 nref.2998 
                    )
                In
                Let Ti735.3589 =
                  Set (1)
                In
                Let Ti736.3588 =
                  nref.2998 + Ti735.3589
                In
                Ans (
                  CallCls try_exploit_neighbors.2992 x.2993 y.2994 prev.2995 cur.2996 next.2997 Ti736.3588 
                )
            )
          Then
            Ans (
              Nop
            )
        )
      Then
        Ans (
          Nop
        )
    )
  Unit write_ppm_header.2999 () =
    Let image_size.2594 =
      Lord %g27[-4]
    In
    Let Ti720.3581 =
      Set (80)
    In
    Let Tu202.3561 =
      CallDir min_caml_print_char Ti720.3581 
    In
    Let Ti721.3579 =
      Set (48)
    In
    Let Ti722.3580 =
      Set (3)
    In
    Let Ti723.3578 =
      Ti721.3579 + Ti722.3580
    In
    Let Tu201.3562 =
      CallDir min_caml_print_char Ti723.3578 
    In
    Let Ti724.3577 =
      Set (10)
    In
    Let Tu200.3563 =
      CallDir min_caml_print_char Ti724.3577 
    In
    Let Ti725.3576 =
      Set (0)
    In
    Let o.7267 =
      Ti725.3576 << 2
    In
    Let Ti726.3575 =
      Lord image_size.2594[o.7267]
    In
    Let Tu199.3564 =
      CallDir print_int.2575 Ti726.3575 
    In
    Let Ti727.3574 =
      Set (32)
    In
    Let Tu198.3565 =
      CallDir min_caml_print_char Ti727.3574 
    In
    Let Ti728.3573 =
      Set (1)
    In
    Let o.7269 =
      Ti728.3573 << 2
    In
    Let Ti729.3572 =
      Lord image_size.2594[o.7269]
    In
    Let Tu197.3566 =
      CallDir print_int.2575 Ti729.3572 
    In
    Let Ti730.3571 =
      Set (32)
    In
    Let Tu196.3567 =
      CallDir min_caml_print_char Ti730.3571 
    In
    Let Ti731.3570 =
      Set (255)
    In
    Let Tu195.3568 =
      CallDir print_int.2575 Ti731.3570 
    In
    Let Ti732.3569 =
      Set (10)
    In
    Ans (
      CallDir min_caml_print_char Ti732.3569 
    )
  Unit write_rgb_element.3001 (x.3002 ) =
    Let ix.3558 =
      CallDir min_caml_int_of_float x.3002 
    In
    Let Ti719.3560 =
      Set (255)
    In
    Let elem.3559 =
      If ix.3558 <= Ti719.3560 Then
        Ans (
          If ix.3558 >= 0 Then
            Ans (
              Mov (ix.3558)
            )
          Then
            Ans (
              Set (0)
            )
        )
      Then
        Ans (
          Set (255)
        )
    In
    Ans (
      CallDir print_int.2575 elem.3559 
    )
  Unit write_rgb.3003 () =
    Let rgb.2593 =
      Lord %g27[-4]
    In
    Let Ti710.3557 =
      Set (0)
    In
    Let o.7271 =
      Ti710.3557 << 2
    In
    Let Td711.3556 =
      FLord rgb.2593[o.7271]
    In
    Let Tu208.3544 =
      CallDir write_rgb_element.3001 Td711.3556 
    In
    Let Ti712.3555 =
      Set (32)
    In
    Let Tu207.3545 =
      CallDir min_caml_print_char Ti712.3555 
    In
    Let Ti713.3554 =
      Set (1)
    In
    Let o.7273 =
      Ti713.3554 << 2
    In
    Let Td714.3553 =
      FLord rgb.2593[o.7273]
    In
    Let Tu206.3546 =
      CallDir write_rgb_element.3001 Td714.3553 
    In
    Let Ti715.3552 =
      Set (32)
    In
    Let Tu205.3547 =
      CallDir min_caml_print_char Ti715.3552 
    In
    Let Ti716.3551 =
      Set (2)
    In
    Let o.7275 =
      Ti716.3551 << 2
    In
    Let Td717.3550 =
      FLord rgb.2593[o.7275]
    In
    Let Tu204.3548 =
      CallDir write_rgb_element.3001 Td717.3550 
    In
    Let Ti718.3549 =
      Set (10)
    In
    Ans (
      CallDir min_caml_print_char Ti718.3549 
    )
  Unit pretrace_diffuse_rays.3005 (pixel.3006 nref.3007 ) =
    Let trace_diffuse_rays.2959 =
      Lord %g27[-12]
    In
    Let dirvecs.2603 =
      Lord %g27[-8]
    In
    Let diffuse_ray.2592 =
      Lord %g27[-4]
    In
    Let Ti709.3527 =
      Set (4)
    In
    Ans (
      If nref.3007 <= Ti709.3527 Then
        Let sid.3528 =
          CallDir get_surface_id.2983 pixel.3006 nref.3007 
        In
        Ans (
          If sid.3528 >= 0 Then
            Let calc_diffuse.3529 =
              CallDir p_calc_diffuse.2712 pixel.3006 
            In
            Let o.7277 =
              nref.3007 << 2
            In
            Let Tb706.3533 =
              Lord calc_diffuse.3529[o.7277]
            In
            Let Tu211.3530 =
              If Tb706.3533 = 0 Then
                Ans (
                  Nop
                )
              Then
                Let group_id.3534 =
                  CallDir p_group_id.2718 pixel.3006 
                In
                Let Tu210.3535 =
                  CallDir vecbzero.2626 diffuse_ray.2592 
                In
                Let nvectors.3536 =
                  CallDir p_nvectors.2723 pixel.3006 
                In
                Let intersection_points.3537 =
                  CallDir p_intersection_points.2708 pixel.3006 
                In
                Let o.7279 =
                  group_id.3534 << 2
                In
                Let Ta702.3541 =
                  Lord dirvecs.2603[o.7279]
                In
                Let o.7281 =
                  nref.3007 << 2
                In
                Let Ta703.3542 =
                  Lord nvectors.3536[o.7281]
                In
                Let o.7283 =
                  nref.3007 << 2
                In
                Let Ta704.3543 =
                  Lord intersection_points.3537[o.7283]
                In
                Let Tu209.3538 =
                  CallCls trace_diffuse_rays.2959 Ta702.3541 Ta703.3542 Ta704.3543 
                In
                Let ray20p.3539 =
                  CallDir p_received_ray_20percent.2716 pixel.3006 
                In
                Let o.7285 =
                  nref.3007 << 2
                In
                Let Ta705.3540 =
                  Lord ray20p.3539[o.7285]
                In
                Ans (
                  CallDir veccpy.2628 Ta705.3540 diffuse_ray.2592 
                )
            In
            Let Ti707.3532 =
              Set (1)
            In
            Let Ti708.3531 =
              nref.3007 + Ti707.3532
            In
            Ans (
              CallCls pretrace_diffuse_rays.3005 pixel.3006 Ti708.3531 
            )
          Then
            Ans (
              Nop
            )
        )
      Then
        Ans (
          Nop
        )
    )
  Unit pretrace_pixels.3008 (line.3009 x.3010 group_id.3011 lc0.3012 lc1.3013 lc2.3014 ) =
    Let viewpoint.2580 =
      Lord %g27[-36]
    In
    Let trace_ray.2945 =
      Lord %g27[-32]
    In
    Let startp.2597 =
      Lord %g27[-28]
    In
    Let screenx_dir.2599 =
      Lord %g27[-24]
    In
    Let scan_pitch.2596 =
      Lord %g27[-20]
    In
    Let rgb.2593 =
      Lord %g27[-16]
    In
    Let ptrace_dirvec.2602 =
      Lord %g27[-12]
    In
    Let pretrace_diffuse_rays.3005 =
      Lord %g27[-8]
    In
    Let image_center.2595 =
      Lord %g27[-4]
    In
    Ans (
      If x.3010 >= 0 Then
        Let Ti667.3526 =
          Set (0)
        In
        Let o.7287 =
          Ti667.3526 << 2
        In
        Let Td668.3521 =
          FLord scan_pitch.2596[o.7287]
        In
        Let Ti669.3525 =
          Set (0)
        In
        Let o.7289 =
          Ti669.3525 << 2
        In
        Let Ti670.3524 =
          Lord image_center.2595[o.7289]
        In
        Let Ti671.3523 =
          x.3010 - Ti670.3524
        In
        Let Td672.3522 =
          CallDir min_caml_float_of_int Ti671.3523 
        In
        Let xdisp.3481 =
          Td668.3521 *. Td672.3522
        In
        Let Ti673.3516 =
          Set (0)
        In
        Let Ti674.3520 =
          Set (0)
        In
        Let o.7291 =
          Ti674.3520 << 2
        In
        Let Td675.3519 =
          FLord screenx_dir.2599[o.7291]
        In
        Let Td676.3518 =
          xdisp.3481 *. Td675.3519
        In
        Let Td677.3517 =
          Td676.3518 +. lc0.3012
        In
        Let o.7293 =
          Ti673.3516 << 2
        In
        Let Tu221.3482 =
          FStore Td677.3517 to ptrace_dirvec.2602[o.7293]
        In
        Let Ti678.3511 =
          Set (1)
        In
        Let Ti679.3515 =
          Set (1)
        In
        Let o.7294 =
          Ti679.3515 << 2
        In
        Let Td680.3514 =
          FLord screenx_dir.2599[o.7294]
        In
        Let Td681.3513 =
          xdisp.3481 *. Td680.3514
        In
        Let Td682.3512 =
          Td681.3513 +. lc1.3013
        In
        Let o.7296 =
          Ti678.3511 << 2
        In
        Let Tu220.3483 =
          FStore Td682.3512 to ptrace_dirvec.2602[o.7296]
        In
        Let Ti683.3506 =
          Set (2)
        In
        Let Ti684.3510 =
          Set (2)
        In
        Let o.7297 =
          Ti684.3510 << 2
        In
        Let Td685.3509 =
          FLord screenx_dir.2599[o.7297]
        In
        Let Td686.3508 =
          xdisp.3481 *. Td685.3509
        In
        Let Td687.3507 =
          Td686.3508 +. lc2.3014
        In
        Let o.7299 =
          Ti683.3506 << 2
        In
        Let Tu219.3484 =
          FStore Td687.3507 to ptrace_dirvec.2602[o.7299]
        In
        Let Ti688.3505 =
          Set (0)
        In
        Let Tu218.3485 =
          CallDir vecunit_sgn.2636 ptrace_dirvec.2602 Ti688.3505 
        In
        Let Tu217.3486 =
          CallDir vecbzero.2626 rgb.2593 
        In
        Let Tu216.3487 =
          CallDir veccpy.2628 startp.2597 viewpoint.2580 
        In
        Let Ti689.3501 =
          Set (0)
        In
        Let l.7300 =
          Set (l.6261)
        In
        Let Td690.3502 =
          FLord l.7300[0]
        In
        Let o.7301 =
          x.3010 << 2
        In
        Let Tt691.3503 =
          Lord line.3009[o.7301]
        In
        Let l.7303 =
          Set (l.6252)
        In
        Let Td692.3504 =
          FLord l.7303[0]
        In
        Let Tu215.3488 =
          CallCls trace_ray.2945 Ti689.3501 ptrace_dirvec.2602 Tt691.3503 Td690.3502 Td692.3504 
        In
        Let o.7304 =
          x.3010 << 2
        In
        Let Tt693.3500 =
          Lord line.3009[o.7304]
        In
        Let Ta694.3499 =
          CallDir p_rgb.2706 Tt693.3500 
        In
        Let Tu214.3489 =
          CallDir veccpy.2628 Ta694.3499 rgb.2593 
        In
        Let o.7306 =
          x.3010 << 2
        In
        Let Tt695.3498 =
          Lord line.3009[o.7306]
        In
        Let Tu213.3490 =
          CallDir p_set_group_id.2720 Tt695.3498 group_id.3011 
        In
        Let o.7308 =
          x.3010 << 2
        In
        Let Tt696.3496 =
          Lord line.3009[o.7308]
        In
        Let Ti697.3497 =
          Set (0)
        In
        Let Tu212.3491 =
          CallCls pretrace_diffuse_rays.3005 Tt696.3496 Ti697.3497 
        In
        Let Ti698.3495 =
          Set (1)
        In
        Let Ti699.3492 =
          x.3010 - Ti698.3495
        In
        Let Ti700.3494 =
          Set (1)
        In
        Let Ti701.3493 =
          CallDir add_mod5.2615 group_id.3011 Ti700.3494 
        In
        Ans (
          CallCls pretrace_pixels.3008 line.3009 Ti699.3492 Ti701.3493 lc0.3012 lc1.3013 lc2.3014 
        )
      Then
        Ans (
          Nop
        )
    )
  Unit pretrace_line.3015 (line.3016 y.3017 group_id.3018 ) =
    Let screenz_dir.2601 =
      Lord %g27[-24]
    In
    Let screeny_dir.2600 =
      Lord %g27[-20]
    In
    Let scan_pitch.2596 =
      Lord %g27[-16]
    In
    Let pretrace_pixels.3008 =
      Lord %g27[-12]
    In
    Let image_size.2594 =
      Lord %g27[-8]
    In
    Let image_center.2595 =
      Lord %g27[-4]
    In
    Let Ti642.3480 =
      Set (0)
    In
    Let o.7310 =
      Ti642.3480 << 2
    In
    Let Td643.3475 =
      FLord scan_pitch.2596[o.7310]
    In
    Let Ti644.3479 =
      Set (1)
    In
    Let o.7312 =
      Ti644.3479 << 2
    In
    Let Ti645.3478 =
      Lord image_center.2595[o.7312]
    In
    Let Ti646.3477 =
      y.3017 - Ti645.3478
    In
    Let Td647.3476 =
      CallDir min_caml_float_of_int Ti646.3477 
    In
    Let ydisp.3452 =
      Td643.3475 *. Td647.3476
    In
    Let Ti648.3474 =
      Set (0)
    In
    Let o.7314 =
      Ti648.3474 << 2
    In
    Let Td649.3473 =
      FLord screeny_dir.2600[o.7314]
    In
    Let Td650.3470 =
      ydisp.3452 *. Td649.3473
    In
    Let Ti651.3472 =
      Set (0)
    In
    Let o.7316 =
      Ti651.3472 << 2
    In
    Let Td652.3471 =
      FLord screenz_dir.2601[o.7316]
    In
    Let lc0.3453 =
      Td650.3470 +. Td652.3471
    In
    Let Ti653.3469 =
      Set (1)
    In
    Let o.7318 =
      Ti653.3469 << 2
    In
    Let Td654.3468 =
      FLord screeny_dir.2600[o.7318]
    In
    Let Td655.3465 =
      ydisp.3452 *. Td654.3468
    In
    Let Ti656.3467 =
      Set (1)
    In
    Let o.7320 =
      Ti656.3467 << 2
    In
    Let Td657.3466 =
      FLord screenz_dir.2601[o.7320]
    In
    Let lc1.3454 =
      Td655.3465 +. Td657.3466
    In
    Let Ti658.3464 =
      Set (2)
    In
    Let o.7322 =
      Ti658.3464 << 2
    In
    Let Td659.3463 =
      FLord screeny_dir.2600[o.7322]
    In
    Let Td660.3460 =
      ydisp.3452 *. Td659.3463
    In
    Let Ti661.3462 =
      Set (2)
    In
    Let o.7324 =
      Ti661.3462 << 2
    In
    Let Td662.3461 =
      FLord screenz_dir.2601[o.7324]
    In
    Let lc2.3455 =
      Td660.3460 +. Td662.3461
    In
    Let Ti663.3459 =
      Set (0)
    In
    Let o.7326 =
      Ti663.3459 << 2
    In
    Let Ti664.3457 =
      Lord image_size.2594[o.7326]
    In
    Let Ti665.3458 =
      Set (1)
    In
    Let Ti666.3456 =
      Ti664.3457 - Ti665.3458
    In
    Ans (
      CallCls pretrace_pixels.3008 line.3016 Ti666.3456 group_id.3018 lc0.3453 lc1.3454 lc2.3455 
    )
  Unit scan_pixel.3019 (x.3020 y.3021 prev.3022 cur.3023 next.3024 ) =
    Let write_rgb.3003 =
      Lord %g27[-24]
    In
    Let try_exploit_neighbors.2992 =
      Lord %g27[-20]
    In
    Let rgb.2593 =
      Lord %g27[-16]
    In
    Let neighbors_exist.2979 =
      Lord %g27[-12]
    In
    Let image_size.2594 =
      Lord %g27[-8]
    In
    Let do_without_neighbors.2976 =
      Lord %g27[-4]
    In
    Let Ti631.3451 =
      Set (0)
    In
    Let o.7328 =
      Ti631.3451 << 2
    In
    Let Ti641.3438 =
      Lord image_size.2594[o.7328]
    In
    Ans (
      If Ti641.3438 <= x.3020 Then
        Ans (
          Nop
        )
      Then
        Let o.7330 =
          x.3020 << 2
        In
        Let Tt632.3450 =
          Lord cur.3023[o.7330]
        In
        Let Ta633.3449 =
          CallDir p_rgb.2706 Tt632.3450 
        In
        Let Tu224.3439 =
          CallDir veccpy.2628 rgb.2593 Ta633.3449 
        In
        Let Tb637.3445 =
          CallCls neighbors_exist.2979 x.3020 y.3021 next.3024 
        In
        Let Tu223.3440 =
          If Tb637.3445 = 0 Then
            Let o.7332 =
              x.3020 << 2
            In
            Let Tt634.3447 =
              Lord cur.3023[o.7332]
            In
            Let Ti635.3448 =
              Set (0)
            In
            Ans (
              CallCls do_without_neighbors.2976 Tt634.3447 Ti635.3448 
            )
          Then
            Let Ti636.3446 =
              Set (0)
            In
            Ans (
              CallCls try_exploit_neighbors.2992 x.3020 y.3021 prev.3022 cur.3023 next.3024 Ti636.3446 
            )
        In
        Let Tu638.3444 =
          Nop
        In
        Let Tu222.3441 =
          CallCls write_rgb.3003 
        In
        Let Ti639.3443 =
          Set (1)
        In
        Let Ti640.3442 =
          x.3020 + Ti639.3443
        In
        Ans (
          CallCls scan_pixel.3019 Ti640.3442 y.3021 prev.3022 cur.3023 next.3024 
        )
    )
  Unit scan_line.3025 (y.3026 prev.3027 cur.3028 next.3029 group_id.3030 ) =
    Let scan_pixel.3019 =
      Lord %g27[-12]
    In
    Let pretrace_line.3015 =
      Lord %g27[-8]
    In
    Let image_size.2594 =
      Lord %g27[-4]
    In
    Let Ti618.3437 =
      Set (1)
    In
    Let o.7334 =
      Ti618.3437 << 2
    In
    Let Ti630.3423 =
      Lord image_size.2594[o.7334]
    In
    Ans (
      If Ti630.3423 <= y.3026 Then
        Ans (
          Nop
        )
      Then
        Let Ti619.3436 =
          Set (1)
        In
        Let o.7336 =
          Ti619.3436 << 2
        In
        Let Ti620.3434 =
          Lord image_size.2594[o.7336]
        In
        Let Ti621.3435 =
          Set (1)
        In
        Let Ti624.3431 =
          Ti620.3434 - Ti621.3435
        In
        Let Tu226.3424 =
          If Ti624.3431 <= y.3026 Then
            Ans (
              Nop
            )
          Then
            Let Ti622.3433 =
              Set (1)
            In
            Let Ti623.3432 =
              y.3026 + Ti622.3433
            In
            Ans (
              CallCls pretrace_line.3015 next.3029 Ti623.3432 group_id.3030 
            )
        In
        Let Ti625.3430 =
          Set (0)
        In
        Let Tu225.3425 =
          CallCls scan_pixel.3019 Ti625.3430 y.3026 prev.3027 cur.3028 next.3029 
        In
        Let Ti626.3429 =
          Set (1)
        In
        Let Ti627.3426 =
          y.3026 + Ti626.3429
        In
        Let Ti628.3428 =
          Set (2)
        In
        Let Ti629.3427 =
          CallDir add_mod5.2615 group_id.3030 Ti628.3428 
        In
        Ans (
          CallCls scan_line.3025 Ti627.3426 cur.3028 next.3029 prev.3027 Ti629.3427 
        )
    )
  Array(Array(Float)) create_float5x3array.3031 () =
    Let Ti599.3421 =
      Set (3)
    In
    Let l.7338 =
      Set (l.6252)
    In
    Let Td600.3422 =
      FLord l.7338[0]
    In
    Let vec.3398 =
      CallDir min_caml_create_float_array Ti599.3421 Td600.3422 
    In
    Let Ti601.3420 =
      Set (5)
    In
    Let array.3399 =
      CallDir min_caml_create_array Ti601.3420 vec.3398 
    In
    Let Ti602.3416 =
      Set (1)
    In
    Let Ti603.3418 =
      Set (3)
    In
    Let l.7339 =
      Set (l.6252)
    In
    Let Td604.3419 =
      FLord l.7339[0]
    In
    Let Ta605.3417 =
      CallDir min_caml_create_float_array Ti603.3418 Td604.3419 
    In
    Let o.7340 =
      Ti602.3416 << 2
    In
    Let Tu231.3400 =
      Store Ta605.3417 to array.3399[o.7340]
    In
    Let Ti606.3412 =
      Set (2)
    In
    Let Ti607.3414 =
      Set (3)
    In
    Let l.7341 =
      Set (l.6252)
    In
    Let Td608.3415 =
      FLord l.7341[0]
    In
    Let Ta609.3413 =
      CallDir min_caml_create_float_array Ti607.3414 Td608.3415 
    In
    Let o.7342 =
      Ti606.3412 << 2
    In
    Let Tu230.3401 =
      Store Ta609.3413 to array.3399[o.7342]
    In
    Let Ti610.3408 =
      Set (3)
    In
    Let Ti611.3410 =
      Set (3)
    In
    Let l.7343 =
      Set (l.6252)
    In
    Let Td612.3411 =
      FLord l.7343[0]
    In
    Let Ta613.3409 =
      CallDir min_caml_create_float_array Ti611.3410 Td612.3411 
    In
    Let o.7344 =
      Ti610.3408 << 2
    In
    Let Tu229.3402 =
      Store Ta613.3409 to array.3399[o.7344]
    In
    Let Ti614.3404 =
      Set (4)
    In
    Let Ti615.3406 =
      Set (3)
    In
    Let l.7345 =
      Set (l.6252)
    In
    Let Td616.3407 =
      FLord l.7345[0]
    In
    Let Ta617.3405 =
      CallDir min_caml_create_float_array Ti615.3406 Td616.3407 
    In
    Let o.7346 =
      Ti614.3404 << 2
    In
    Let Tu228.3403 =
      Store Ta617.3405 to array.3399[o.7346]
    In
    Ans (
      Mov (array.3399)
    )
  Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float)) create_pixel.3033 () =
    Let Ti587.3396 =
      Set (3)
    In
    Let l.7347 =
      Set (l.6252)
    In
    Let Td588.3397 =
      FLord l.7347[0]
    In
    Let m_rgb.3378 =
      CallDir min_caml_create_float_array Ti587.3396 Td588.3397 
    In
    Let Tu589.3395 =
      Nop
    In
    Let m_isect_ps.3379 =
      CallDir create_float5x3array.3031 
    In
    Let Ti590.3393 =
      Set (5)
    In
    Let Ti591.3394 =
      Set (0)
    In
    Let m_sids.3380 =
      CallDir min_caml_create_array Ti590.3393 Ti591.3394 
    In
    Let Ti592.3391 =
      Set (5)
    In
    Let Ti593.3392 =
      Set (0)
    In
    Let m_cdif.3381 =
      CallDir min_caml_create_array Ti592.3391 Ti593.3392 
    In
    Let Tu594.3390 =
      Nop
    In
    Let m_engy.3382 =
      CallDir create_float5x3array.3031 
    In
    Let Tu595.3389 =
      Nop
    In
    Let m_r20p.3383 =
      CallDir create_float5x3array.3031 
    In
    Let Ti596.3387 =
      Set (1)
    In
    Let Ti597.3388 =
      Set (0)
    In
    Let m_gid.3384 =
      CallDir min_caml_create_array Ti596.3387 Ti597.3388 
    In
    Let Tu598.3386 =
      Nop
    In
    Let m_nvectors.3385 =
      CallDir create_float5x3array.3031 
    In
    Let t.7348 =
      Mov (%g2)
    In
    Let %g2 =
      %g2 + 32
    In
    Let Tu7356 =
      Store m_nvectors.3385 to t.7348[-28]
    In
    Let Tu7355 =
      Store m_gid.3384 to t.7348[-24]
    In
    Let Tu7354 =
      Store m_r20p.3383 to t.7348[-20]
    In
    Let Tu7353 =
      Store m_engy.3382 to t.7348[-16]
    In
    Let Tu7352 =
      Store m_cdif.3381 to t.7348[-12]
    In
    Let Tu7351 =
      Store m_sids.3380 to t.7348[-8]
    In
    Let Tu7350 =
      Store m_isect_ps.3379 to t.7348[-4]
    In
    Let Tu7349 =
      Store m_rgb.3378 to t.7348[0]
    In
    Ans (
      Mov (t.7348)
    )
  Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) init_line_elements.3035 (line.3036 n.3037 ) =
    Ans (
      If n.3037 >= 0 Then
        Let Tu583.3377 =
          Nop
        In
        Let Tt584.3376 =
          CallDir create_pixel.3033 
        In
        Let o.7357 =
          n.3037 << 2
        In
        Let Tu233.3373 =
          Store Tt584.3376 to line.3036[o.7357]
        In
        Let Ti585.3375 =
          Set (1)
        In
        Let Ti586.3374 =
          n.3037 - Ti585.3375
        In
        Ans (
          CallDir init_line_elements.3035 line.3036 Ti586.3374 
        )
      Then
        Ans (
          Mov (line.3036)
        )
    )
  Array(Array(Float) * Array(Array(Float)) * Array(Int) * Array(Bool) * Array(Array(Float)) * Array(Array(Float)) * Array(Int) * Array(Array(Float))) create_pixelline.3038 () =
    Let image_size.2594 =
      Lord %g27[-4]
    In
    Let Ti575.3372 =
      Set (0)
    In
    Let o.7358 =
      Ti575.3372 << 2
    In
    Let Ti576.3369 =
      Lord image_size.2594[o.7358]
    In
    Let Tu577.3371 =
      Nop
    In
    Let Tt578.3370 =
      CallDir create_pixel.3033 
    In
    Let line.3364 =
      CallDir min_caml_create_array Ti576.3369 Tt578.3370 
    In
    Let Ti579.3368 =
      Set (0)
    In
    Let o.7360 =
      Ti579.3368 << 2
    In
    Let Ti580.3366 =
      Lord image_size.2594[o.7360]
    In
    Let Ti581.3367 =
      Set (2)
    In
    Let Ti582.3365 =
      Ti580.3366 - Ti581.3367
    In
    Ans (
      CallDir init_line_elements.3035 line.3364 Ti582.3365 
    )
  Float tan.3040 (x.3041 ) =
    Let sin.2546 =
      Lord %g27[-8]
    In
    Let cos.2548 =
      Lord %g27[-4]
    In
    Let Td573.3362 =
      CallCls sin.2546 x.3041 
    In
    Let Td574.3363 =
      CallCls cos.2548 x.3041 
    In
    Ans (
      Td573.3362 /. Td574.3363
    )
  Float adjust_position.3042 (h.3043 ratio.3044 ) =
    Let tan.3040 =
      Lord %g27[-8]
    In
    Let atan.2540 =
      Lord %g27[-4]
    In
    Let Td568.3360 =
      h.3043 *. h.3043
    In
    Let l.7362 =
      Set (l.7164)
    In
    Let Td569.3361 =
      FLord l.7362[0]
    In
    Let Td570.3359 =
      Td568.3360 +. Td569.3361
    In
    Let l.3353 =
      CallDir min_caml_sqrt Td570.3359 
    In
    Let l.7363 =
      Set (l.6261)
    In
    Let Td571.3358 =
      FLord l.7363[0]
    In
    Let tan_h.3354 =
      Td571.3358 /. l.3353
    In
    Let theta_h.3355 =
      CallCls atan.2540 tan_h.3354 
    In
    Let Td572.3357 =
      theta_h.3355 *. ratio.3044
    In
    Let tan_m.3356 =
      CallCls tan.3040 Td572.3357 
    In
    Ans (
      tan_m.3356 *. l.3353
    )
  Unit calc_dirvec.3045 (icount.3046 group_id.3051 index.3052 x.3047 y.3048 rx.3049 ry.3050 ) =
    Let dirvecs.2603 =
      Lord %g27[-8]
    In
    Let adjust_position.3042 =
      Lord %g27[-4]
    In
    Let Ti567.3301 =
      Set (5)
    In
    Ans (
      If Ti567.3301 <= icount.3046 Then
        Let Td527.3351 =
          CallDir fsqr.2531 x.3047 
        In
        Let Td528.3352 =
          CallDir fsqr.2531 y.3048 
        In
        Let Td529.3349 =
          Td527.3351 +. Td528.3352
        In
        Let l.7364 =
          Set (l.6261)
        In
        Let Td530.3350 =
          FLord l.7364[0]
        In
        Let Td531.3348 =
          Td529.3349 +. Td530.3350
        In
        Let l.3306 =
          CallDir min_caml_sqrt Td531.3348 
        In
        Let vx.3307 =
          x.3047 /. l.3306
        In
        Let vy.3308 =
          y.3048 /. l.3306
        In
        Let l.7365 =
          Set (l.6261)
        In
        Let Td532.3347 =
          FLord l.7365[0]
        In
        Let vz.3309 =
          Td532.3347 /. l.3306
        In
        Let o.7366 =
          group_id.3051 << 2
        In
        Let dgroup.3310 =
          Lord dirvecs.2603[o.7366]
        In
        Let o.7368 =
          index.3052 << 2
        In
        Let Tt533.3346 =
          Lord dgroup.3310[o.7368]
        In
        Let Ta534.3345 =
          CallDir d_vec.2725 Tt533.3346 
        In
        Let Tu239.3311 =
          CallDir vecset.2618 Ta534.3345 vx.3307 vy.3308 vz.3309 
        In
        Let Ti535.3344 =
          Set (40)
        In
        Let Ti536.3343 =
          index.3052 + Ti535.3344
        In
        Let o.7370 =
          Ti536.3343 << 2
        In
        Let Tt537.3342 =
          Lord dgroup.3310[o.7370]
        In
        Let Ta538.3340 =
          CallDir d_vec.2725 Tt537.3342 
        In
        Let Td539.3341 =
          CallDir fneg.2527 vy.3308 
        In
        Let Tu238.3312 =
          CallDir vecset.2618 Ta538.3340 vx.3307 vz.3309 Td539.3341 
        In
        Let Ti540.3339 =
          Set (80)
        In
        Let Ti541.3338 =
          index.3052 + Ti540.3339
        In
        Let o.7372 =
          Ti541.3338 << 2
        In
        Let Tt542.3337 =
          Lord dgroup.3310[o.7372]
        In
        Let Ta543.3334 =
          CallDir d_vec.2725 Tt542.3337 
        In
        Let Td544.3335 =
          CallDir fneg.2527 vx.3307 
        In
        Let Td545.3336 =
          CallDir fneg.2527 vy.3308 
        In
        Let Tu237.3313 =
          CallDir vecset.2618 Ta543.3334 vz.3309 Td544.3335 Td545.3336 
        In
        Let Ti546.3333 =
          Set (1)
        In
        Let Ti547.3332 =
          index.3052 + Ti546.3333
        In
        Let o.7374 =
          Ti547.3332 << 2
        In
        Let Tt548.3331 =
          Lord dgroup.3310[o.7374]
        In
        Let Ta549.3327 =
          CallDir d_vec.2725 Tt548.3331 
        In
        Let Td550.3328 =
          CallDir fneg.2527 vx.3307 
        In
        Let Td551.3329 =
          CallDir fneg.2527 vy.3308 
        In
        Let Td552.3330 =
          CallDir fneg.2527 vz.3309 
        In
        Let Tu236.3314 =
          CallDir vecset.2618 Ta549.3327 Td550.3328 Td551.3329 Td552.3330 
        In
        Let Ti553.3326 =
          Set (41)
        In
        Let Ti554.3325 =
          index.3052 + Ti553.3326
        In
        Let o.7376 =
          Ti554.3325 << 2
        In
        Let Tt555.3324 =
          Lord dgroup.3310[o.7376]
        In
        Let Ta556.3321 =
          CallDir d_vec.2725 Tt555.3324 
        In
        Let Td557.3322 =
          CallDir fneg.2527 vx.3307 
        In
        Let Td558.3323 =
          CallDir fneg.2527 vz.3309 
        In
        Let Tu235.3315 =
          CallDir vecset.2618 Ta556.3321 Td557.3322 Td558.3323 vy.3308 
        In
        Let Ti559.3320 =
          Set (81)
        In
        Let Ti560.3319 =
          index.3052 + Ti559.3320
        In
        Let o.7378 =
          Ti560.3319 << 2
        In
        Let Tt561.3318 =
          Lord dgroup.3310[o.7378]
        In
        Let Ta562.3316 =
          CallDir d_vec.2725 Tt561.3318 
        In
        Let Td563.3317 =
          CallDir fneg.2527 vz.3309 
        In
        Ans (
          CallDir vecset.2618 Ta562.3316 Td563.3317 vx.3307 vy.3308 
        )
      Then
        Let x2.3302 =
          CallCls adjust_position.3042 y.3048 rx.3049 
        In
        Let Ti564.3305 =
          Set (1)
        In
        Let Ti565.3303 =
          icount.3046 + Ti564.3305
        In
        Let Td566.3304 =
          CallCls adjust_position.3042 x2.3302 ry.3050 
        In
        Ans (
          CallCls calc_dirvec.3045 Ti565.3303 group_id.3051 index.3052 x2.3302 Td566.3304 rx.3049 ry.3050 
        )
    )
  Unit calc_dirvecs.3053 (col.3054 group_id.3056 index.3057 ry.3055 ) =
    Let calc_dirvec.3045 =
      Lord %g27[-4]
    In
    Ans (
      If col.3054 >= 0 Then
        Let Td507.3299 =
          CallDir min_caml_float_of_int col.3054 
        In
        Let l.7381 =
          Set (l.7380)
        In
        Let Td508.3300 =
          FLord l.7381[0]
        In
        Let Td509.3297 =
          Td507.3299 *. Td508.3300
        In
        Let l.7383 =
          Set (l.7382)
        In
        Let Td510.3298 =
          FLord l.7383[0]
        In
        Let rx.3277 =
          Td509.3297 -. Td510.3298
        In
        Let Ti511.3294 =
          Set (0)
        In
        Let l.7384 =
          Set (l.6252)
        In
        Let Td512.3295 =
          FLord l.7384[0]
        In
        Let l.7385 =
          Set (l.6252)
        In
        Let Td513.3296 =
          FLord l.7385[0]
        In
        Let Tu241.3278 =
          CallCls calc_dirvec.3045 Ti511.3294 group_id.3056 index.3057 Td512.3295 Td513.3296 rx.3277 ry.3055 
        In
        Let Td514.3292 =
          CallDir min_caml_float_of_int col.3054 
        In
        Let l.7386 =
          Set (l.7380)
        In
        Let Td515.3293 =
          FLord l.7386[0]
        In
        Let Td516.3290 =
          Td514.3292 *. Td515.3293
        In
        Let l.7387 =
          Set (l.7164)
        In
        Let Td517.3291 =
          FLord l.7387[0]
        In
        Let rx2.3279 =
          Td516.3290 +. Td517.3291
        In
        Let Ti518.3285 =
          Set (0)
        In
        Let l.7388 =
          Set (l.6252)
        In
        Let Td519.3286 =
          FLord l.7388[0]
        In
        Let l.7389 =
          Set (l.6252)
        In
        Let Td520.3287 =
          FLord l.7389[0]
        In
        Let Ti521.3289 =
          Set (2)
        In
        Let Ti522.3288 =
          index.3057 + Ti521.3289
        In
        Let Tu240.3280 =
          CallCls calc_dirvec.3045 Ti518.3285 group_id.3056 Ti522.3288 Td519.3286 Td520.3287 rx2.3279 ry.3055 
        In
        Let Ti523.3284 =
          Set (1)
        In
        Let Ti524.3281 =
          col.3054 - Ti523.3284
        In
        Let Ti525.3283 =
          Set (1)
        In
        Let Ti526.3282 =
          CallDir add_mod5.2615 group_id.3056 Ti525.3283 
        In
        Ans (
          CallCls calc_dirvecs.3053 Ti524.3281 Ti526.3282 index.3057 ry.3055 
        )
      Then
        Ans (
          Nop
        )
    )
  Unit calc_dirvec_rows.3058 (row.3059 group_id.3060 index.3061 ) =
    Let calc_dirvecs.3053 =
      Lord %g27[-4]
    In
    Ans (
      If row.3059 >= 0 Then
        Let Td496.3275 =
          CallDir min_caml_float_of_int row.3059 
        In
        Let l.7390 =
          Set (l.7380)
        In
        Let Td497.3276 =
          FLord l.7390[0]
        In
        Let Td498.3273 =
          Td496.3275 *. Td497.3276
        In
        Let l.7391 =
          Set (l.7382)
        In
        Let Td499.3274 =
          FLord l.7391[0]
        In
        Let ry.3264 =
          Td498.3273 -. Td499.3274
        In
        Let Ti500.3272 =
          Set (4)
        In
        Let Tu242.3265 =
          CallCls calc_dirvecs.3053 Ti500.3272 group_id.3060 index.3061 ry.3264 
        In
        Let Ti501.3271 =
          Set (1)
        In
        Let Ti502.3266 =
          row.3059 - Ti501.3271
        In
        Let Ti503.3270 =
          Set (2)
        In
        Let Ti504.3267 =
          CallDir add_mod5.2615 group_id.3060 Ti503.3270 
        In
        Let Ti505.3269 =
          Set (4)
        In
        Let Ti506.3268 =
          index.3061 + Ti505.3269
        In
        Ans (
          CallCls calc_dirvec_rows.3058 Ti502.3266 Ti504.3267 Ti506.3268 
        )
      Then
        Ans (
          Nop
        )
    )
  Array(Float) * Array(Array(Float)) create_dirvec.3062 () =
    Let n_objects.2577 =
      Lord %g27[-4]
    In
    Let Ti492.3262 =
      Set (3)
    In
    Let l.7392 =
      Set (l.6252)
    In
    Let Td493.3263 =
      FLord l.7392[0]
    In
    Let v3.3258 =
      CallDir min_caml_create_float_array Ti492.3262 Td493.3263 
    In
    Let Ti494.3261 =
      Set (0)
    In
    Let o.7393 =
      Ti494.3261 << 2
    In
    Let Ti495.3260 =
      Lord n_objects.2577[o.7393]
    In
    Let consts.3259 =
      CallDir min_caml_create_array Ti495.3260 v3.3258 
    In
    Let t.7395 =
      Mov (%g2)
    In
    Let %g2 =
      %g2 + 8
    In
    Let Tu7397 =
      Store consts.3259 to t.7395[-4]
    In
    Let Tu7396 =
      Store v3.3258 to t.7395[0]
    In
    Ans (
      Mov (t.7395)
    )
  Unit create_dirvec_elements.3064 (d.3065 index.3066 ) =
    Let create_dirvec.3062 =
      Lord %g27[-4]
    In
    Ans (
      If index.3066 >= 0 Then
        Let Tu488.3257 =
          Nop
        In
        Let Tt489.3256 =
          CallCls create_dirvec.3062 
        In
        Let o.7398 =
          index.3066 << 2
        In
        Let Tu244.3253 =
          Store Tt489.3256 to d.3065[o.7398]
        In
        Let Ti490.3255 =
          Set (1)
        In
        Let Ti491.3254 =
          index.3066 - Ti490.3255
        In
        Ans (
          CallCls create_dirvec_elements.3064 d.3065 Ti491.3254 
        )
      Then
        Ans (
          Nop
        )
    )
  Unit create_dirvecs.3067 (index.3068 ) =
    Let dirvecs.2603 =
      Lord %g27[-12]
    In
    Let create_dirvec_elements.3064 =
      Lord %g27[-8]
    In
    Let create_dirvec.3062 =
      Lord %g27[-4]
    In
    Ans (
      If index.3068 >= 0 Then
        Let Ti480.3250 =
          Set (120)
        In
        Let Tu481.3252 =
          Nop
        In
        Let Tt482.3251 =
          CallCls create_dirvec.3062 
        In
        Let Ta483.3249 =
          CallDir min_caml_create_array Ti480.3250 Tt482.3251 
        In
        Let o.7399 =
          index.3068 << 2
        In
        Let Tu246.3243 =
          Store Ta483.3249 to dirvecs.2603[o.7399]
        In
        Let o.7400 =
          index.3068 << 2
        In
        Let Ta484.3247 =
          Lord dirvecs.2603[o.7400]
        In
        Let Ti485.3248 =
          Set (118)
        In
        Let Tu245.3244 =
          CallCls create_dirvec_elements.3064 Ta484.3247 Ti485.3248 
        In
        Let Ti486.3246 =
          Set (1)
        In
        Let Ti487.3245 =
          index.3068 - Ti486.3246
        In
        Ans (
          CallCls create_dirvecs.3067 Ti487.3245 
        )
      Then
        Ans (
          Nop
        )
    )
  Unit init_dirvec_constants.3069 (vecset.3070 index.3071 ) =
    Let setup_dirvec_constants.2854 =
      Lord %g27[-4]
    In
    Ans (
      If index.3071 >= 0 Then
        Let o.7402 =
          index.3071 << 2
        In
        Let Tt477.3242 =
          Lord vecset.3070[o.7402]
        In
        Let Tu247.3239 =
          CallCls setup_dirvec_constants.2854 Tt477.3242 
        In
        Let Ti478.3241 =
          Set (1)
        In
        Let Ti479.3240 =
          index.3071 - Ti478.3241
        In
        Ans (
          CallCls init_dirvec_constants.3069 vecset.3070 Ti479.3240 
        )
      Then
        Ans (
          Nop
        )
    )
  Unit init_vecset_constants.3072 (index.3073 ) =
    Let init_dirvec_constants.3069 =
      Lord %g27[-8]
    In
    Let dirvecs.2603 =
      Lord %g27[-4]
    In
    Ans (
      If index.3073 >= 0 Then
        Let o.7404 =
          index.3073 << 2
        In
        Let Ta473.3237 =
          Lord dirvecs.2603[o.7404]
        In
        Let Ti474.3238 =
          Set (119)
        In
        Let Tu248.3234 =
          CallCls init_dirvec_constants.3069 Ta473.3237 Ti474.3238 
        In
        Let Ti475.3236 =
          Set (1)
        In
        Let Ti476.3235 =
          index.3073 - Ti475.3236
        In
        Ans (
          CallCls init_vecset_constants.3072 Ti476.3235 
        )
      Then
        Ans (
          Nop
        )
    )
  Unit init_dirvecs.3074 () =
    Let init_vecset_constants.3072 =
      Lord %g27[-12]
    In
    Let create_dirvecs.3067 =
      Lord %g27[-8]
    In
    Let calc_dirvec_rows.3058 =
      Lord %g27[-4]
    In
    Let Ti468.3233 =
      Set (4)
    In
    Let Tu251.3227 =
      CallCls create_dirvecs.3067 Ti468.3233 
    In
    Let Ti469.3230 =
      Set (9)
    In
    Let Ti470.3231 =
      Set (0)
    In
    Let Ti471.3232 =
      Set (0)
    In
    Let Tu250.3228 =
      CallCls calc_dirvec_rows.3058 Ti469.3230 Ti470.3231 Ti471.3232 
    In
    Let Ti472.3229 =
      Set (4)
    In
    Ans (
      CallCls init_vecset_constants.3072 Ti472.3229 
    )
  Unit add_reflection.3076 (index.3077 surface_id.3078 bright.3079 v0.3080 v1.3081 v2.3082 ) =
    Let setup_dirvec_constants.2854 =
      Lord %g27[-12]
    In
    Let reflections.2605 =
      Lord %g27[-8]
    In
    Let create_dirvec.3062 =
      Lord %g27[-4]
    In
    Let Tu465.3226 =
      Nop
    In
    Let dvec.3221 =
      CallCls create_dirvec.3062 
    In
    Let Ta466.3225 =
      CallDir d_vec.2725 dvec.3221 
    In
    Let Tu253.3222 =
      CallDir vecset.2618 Ta466.3225 v0.3080 v1.3081 v2.3082 
    In
    Let Tu252.3223 =
      CallCls setup_dirvec_constants.2854 dvec.3221 
    In
    Let t.7406 =
      Mov (%g2)
    In
    Let %g2 =
      %g2 + 16
    In
    Let Tu7409 =
      FStore bright.3079 to t.7406[-8]
    In
    Let Tu7408 =
      Store dvec.3221 to t.7406[-4]
    In
    Let Tu7407 =
      Store surface_id.3078 to t.7406[0]
    In
    Let Tt467.3224 =
      Mov (t.7406)
    In
    Let o.7410 =
      index.3077 << 2
    In
    Ans (
      Store Tt467.3224 to reflections.2605[o.7410]
    )
  Unit setup_rect_reflection.3083 (obj_id.3084 obj.3085 ) =
    Let n_reflections.2606 =
      Lord %g27[-12]
    In
    Let light.2581 =
      Lord %g27[-8]
    In
    Let add_reflection.3076 =
      Lord %g27[-4]
    In
    Let Ti436.3220 =
      Set (2)
    In
    Let sid.3183 =
      obj_id.3084 << Ti436.3220
    In
    Let Ti437.3219 =
      Set (0)
    In
    Let o.7411 =
      Ti437.3219 << 2
    In
    Let nr.3184 =
      Lord n_reflections.2606[o.7411]
    In
    Let l.7413 =
      Set (l.6261)
    In
    Let Td438.3217 =
      FLord l.7413[0]
    In
    Let Td439.3218 =
      CallDir o_diffuse.2688 obj.3085 
    In
    Let br.3185 =
      Td438.3217 -. Td439.3218
    In
    Let Ti440.3216 =
      Set (0)
    In
    Let o.7414 =
      Ti440.3216 << 2
    In
    Let Td441.3215 =
      FLord light.2581[o.7414]
    In
    Let n0.3186 =
      CallDir fneg.2527 Td441.3215 
    In
    Let Ti442.3214 =
      Set (1)
    In
    Let o.7416 =
      Ti442.3214 << 2
    In
    Let Td443.3213 =
      FLord light.2581[o.7416]
    In
    Let n1.3187 =
      CallDir fneg.2527 Td443.3213 
    In
    Let Ti444.3212 =
      Set (2)
    In
    Let o.7418 =
      Ti444.3212 << 2
    In
    Let Td445.3211 =
      FLord light.2581[o.7418]
    In
    Let n2.3188 =
      CallDir fneg.2527 Td445.3211 
    In
    Let Ti446.3210 =
      Set (1)
    In
    Let Ti447.3207 =
      sid.3183 + Ti446.3210
    In
    Let Ti448.3209 =
      Set (0)
    In
    Let o.7420 =
      Ti448.3209 << 2
    In
    Let Td449.3208 =
      FLord light.2581[o.7420]
    In
    Let Tu256.3189 =
      CallCls add_reflection.3076 nr.3184 Ti447.3207 br.3185 Td449.3208 n1.3187 n2.3188 
    In
    Let Ti450.3206 =
      Set (1)
    In
    Let Ti451.3201 =
      nr.3184 + Ti450.3206
    In
    Let Ti452.3205 =
      Set (2)
    In
    Let Ti453.3202 =
      sid.3183 + Ti452.3205
    In
    Let Ti454.3204 =
      Set (1)
    In
    Let o.7422 =
      Ti454.3204 << 2
    In
    Let Td455.3203 =
      FLord light.2581[o.7422]
    In
    Let Tu255.3190 =
      CallCls add_reflection.3076 Ti451.3201 Ti453.3202 br.3185 n0.3186 Td455.3203 n2.3188 
    In
    Let Ti456.3200 =
      Set (2)
    In
    Let Ti457.3195 =
      nr.3184 + Ti456.3200
    In
    Let Ti458.3199 =
      Set (3)
    In
    Let Ti459.3196 =
      sid.3183 + Ti458.3199
    In
    Let Ti460.3198 =
      Set (2)
    In
    Let o.7424 =
      Ti460.3198 << 2
    In
    Let Td461.3197 =
      FLord light.2581[o.7424]
    In
    Let Tu254.3191 =
      CallCls add_reflection.3076 Ti457.3195 Ti459.3196 br.3185 n0.3186 n1.3187 Td461.3197 
    In
    Let Ti462.3192 =
      Set (0)
    In
    Let Ti463.3194 =
      Set (3)
    In
    Let Ti464.3193 =
      nr.3184 + Ti463.3194
    In
    Let o.7426 =
      Ti462.3192 << 2
    In
    Ans (
      Store Ti464.3193 to n_reflections.2606[o.7426]
    )
  Unit setup_surface_reflection.3086 (obj_id.3087 obj.3088 ) =
    Let n_reflections.2606 =
      Lord %g27[-12]
    In
    Let light.2581 =
      Lord %g27[-8]
    In
    Let add_reflection.3076 =
      Lord %g27[-4]
    In
    Let Ti405.3182 =
      Set (2)
    In
    Let Ti406.3180 =
      obj_id.3087 << Ti405.3182
    In
    Let Ti407.3181 =
      Set (1)
    In
    Let sid.3147 =
      Ti406.3180 + Ti407.3181
    In
    Let Ti408.3179 =
      Set (0)
    In
    Let o.7427 =
      Ti408.3179 << 2
    In
    Let nr.3148 =
      Lord n_reflections.2606[o.7427]
    In
    Let l.7429 =
      Set (l.6261)
    In
    Let Td409.3177 =
      FLord l.7429[0]
    In
    Let Td410.3178 =
      CallDir o_diffuse.2688 obj.3088 
    In
    Let br.3149 =
      Td409.3177 -. Td410.3178
    In
    Let Ta411.3176 =
      CallDir o_param_abc.2680 obj.3088 
    In
    Let p.3150 =
      CallDir veciprod.2639 light.2581 Ta411.3176 
    In
    Let l.7430 =
      Set (l.6257)
    In
    Let Td412.3174 =
      FLord l.7430[0]
    In
    Let Td413.3175 =
      CallDir o_param_a.2674 obj.3088 
    In
    Let Td414.3173 =
      Td412.3174 *. Td413.3175
    In
    Let Td415.3170 =
      Td414.3173 *. p.3150
    In
    Let Ti416.3172 =
      Set (0)
    In
    Let o.7431 =
      Ti416.3172 << 2
    In
    Let Td417.3171 =
      FLord light.2581[o.7431]
    In
    Let Td418.3155 =
      Td415.3170 -. Td417.3171
    In
    Let l.7433 =
      Set (l.6257)
    In
    Let Td419.3168 =
      FLord l.7433[0]
    In
    Let Td420.3169 =
      CallDir o_param_b.2676 obj.3088 
    In
    Let Td421.3167 =
      Td419.3168 *. Td420.3169
    In
    Let Td422.3164 =
      Td421.3167 *. p.3150
    In
    Let Ti423.3166 =
      Set (1)
    In
    Let o.7434 =
      Ti423.3166 << 2
    In
    Let Td424.3165 =
      FLord light.2581[o.7434]
    In
    Let Td425.3156 =
      Td422.3164 -. Td424.3165
    In
    Let l.7436 =
      Set (l.6257)
    In
    Let Td426.3162 =
      FLord l.7436[0]
    In
    Let Td427.3163 =
      CallDir o_param_c.2678 obj.3088 
    In
    Let Td428.3161 =
      Td426.3162 *. Td427.3163
    In
    Let Td429.3158 =
      Td428.3161 *. p.3150
    In
    Let Ti430.3160 =
      Set (2)
    In
    Let o.7437 =
      Ti430.3160 << 2
    In
    Let Td431.3159 =
      FLord light.2581[o.7437]
    In
    Let Td432.3157 =
      Td429.3158 -. Td431.3159
    In
    Let Tu257.3151 =
      CallCls add_reflection.3076 nr.3148 sid.3147 br.3149 Td418.3155 Td425.3156 Td432.3157 
    In
    Let Ti433.3152 =
      Set (0)
    In
    Let Ti434.3154 =
      Set (1)
    In
    Let Ti435.3153 =
      nr.3148 + Ti434.3154
    In
    Let o.7439 =
      Ti433.3152 << 2
    In
    Ans (
      Store Ti435.3153 to n_reflections.2606[o.7439]
    )
  Unit setup_reflections.3089 (obj_id.3090 ) =
    Let setup_surface_reflection.3086 =
      Lord %g27[-12]
    In
    Let setup_rect_reflection.3083 =
      Lord %g27[-8]
    In
    Let objects.2578 =
      Lord %g27[-4]
    In
    Ans (
      If obj_id.3090 >= 0 Then
        Let o.7440 =
          obj_id.3090 << 2
        In
        Let obj.3139 =
          Lord objects.2578[o.7440]
        In
        Let Ti403.3140 =
          CallDir o_reflectiontype.2668 obj.3139 
        In
        Let Ti404.3141 =
          Set (2)
        In
        Ans (
          If Ti403.3140 = Ti404.3141 Then
            Let Td399.3145 =
              CallDir o_diffuse.2688 obj.3139 
            In
            Let l.7442 =
              Set (l.6261)
            In
            Let Td400.3146 =
              FLord l.7442[0]
            In
            Let Tb402.3142 =
              CallDir fless.2511 Td399.3145 Td400.3146 
            In
            Ans (
              If Tb402.3142 = 0 Then
                Ans (
                  Nop
                )
              Then
                Let m_shape.3143 =
                  CallDir o_form.2666 obj.3139 
                In
                Ans (
                  If m_shape.3143 = 1 Then
                    Ans (
                      CallCls setup_rect_reflection.3083 obj_id.3090 obj.3139 
                    )
                  Then
                    Let Ti401.3144 =
                      Set (2)
                    In
                    Ans (
                      If m_shape.3143 = Ti401.3144 Then
                        Ans (
                          CallCls setup_surface_reflection.3086 obj_id.3090 obj.3139 
                        )
                      Then
                        Ans (
                          Nop
                        )
                    )
                )
            )
          Then
            Ans (
              Nop
            )
        )
      Then
        Ans (
          Nop
        )
    )
  Unit rt.3091 (size_x.3092 size_y.3093 ) =
    Let write_ppm_header.2999 =
      Lord %g27[-56]
    In
    Let setup_reflections.3089 =
      Lord %g27[-52]
    In
    Let setup_dirvec_constants.2854 =
      Lord %g27[-48]
    In
    Let scan_pitch.2596 =
      Lord %g27[-44]
    In
    Let scan_line.3025 =
      Lord %g27[-40]
    In
    Let read_parameter.2756 =
      Lord %g27[-36]
    In
    Let pretrace_line.3015 =
      Lord %g27[-32]
    In
    Let n_objects.2577 =
      Lord %g27[-28]
    In
    Let light_dirvec.2604 =
      Lord %g27[-24]
    In
    Let light.2581 =
      Lord %g27[-20]
    In
    Let init_dirvecs.3074 =
      Lord %g27[-16]
    In
    Let image_size.2594 =
      Lord %g27[-12]
    In
    Let image_center.2595 =
      Lord %g27[-8]
    In
    Let create_pixelline.3038 =
      Lord %g27[-4]
    In
    Let Ti372.3138 =
      Set (0)
    In
    Let o.7443 =
      Ti372.3138 << 2
    In
    Let Tu269.3097 =
      Store size_x.3092 to image_size.2594[o.7443]
    In
    Let Ti373.3137 =
      Set (1)
    In
    Let o.7444 =
      Ti373.3137 << 2
    In
    Let Tu268.3098 =
      Store size_y.3093 to image_size.2594[o.7444]
    In
    Let Ti374.3134 =
      Set (0)
    In
    Let Ti375.3136 =
      Set (-1)
    In
    Let Ti376.3135 =
      size_x.3092 << Ti375.3136
    In
    Let o.7445 =
      Ti374.3134 << 2
    In
    Let Tu267.3099 =
      Store Ti376.3135 to image_center.2595[o.7445]
    In
    Let Ti377.3131 =
      Set (1)
    In
    Let Ti378.3133 =
      Set (-1)
    In
    Let Ti379.3132 =
      size_y.3093 << Ti378.3133
    In
    Let o.7446 =
      Ti377.3131 << 2
    In
    Let Tu266.3100 =
      Store Ti379.3132 to image_center.2595[o.7446]
    In
    Let Ti380.3127 =
      Set (0)
    In
    Let l.7448 =
      Set (l.7447)
    In
    Let Td381.3129 =
      FLord l.7448[0]
    In
    Let Td382.3130 =
      CallDir min_caml_float_of_int size_x.3092 
    In
    Let Td383.3128 =
      Td381.3129 /. Td382.3130
    In
    Let o.7449 =
      Ti380.3127 << 2
    In
    Let Tu265.3101 =
      FStore Td383.3128 to scan_pitch.2596[o.7449]
    In
    Let Tu384.3126 =
      Nop
    In
    Let prev.3102 =
      CallCls create_pixelline.3038 
    In
    Let Tu385.3125 =
      Nop
    In
    Let cur.3103 =
      CallCls create_pixelline.3038 
    In
    Let Tu386.3124 =
      Nop
    In
    Let next.3104 =
      CallCls create_pixelline.3038 
    In
    Let Tu387.3123 =
      Nop
    In
    Let Tu264.3105 =
      CallCls read_parameter.2756 
    In
    Let Tu388.3122 =
      Nop
    In
    Let Tu263.3106 =
      CallCls write_ppm_header.2999 
    In
    Let Tu389.3121 =
      Nop
    In
    Let Tu262.3107 =
      CallCls init_dirvecs.3074 
    In
    Let Ta390.3120 =
      CallDir d_vec.2725 light_dirvec.2604 
    In
    Let Tu261.3108 =
      CallDir veccpy.2628 Ta390.3120 light.2581 
    In
    Let Tu260.3109 =
      CallCls setup_dirvec_constants.2854 light_dirvec.2604 
    In
    Let Ti391.3119 =
      Set (0)
    In
    Let o.7450 =
      Ti391.3119 << 2
    In
    Let Ti392.3117 =
      Lord n_objects.2577[o.7450]
    In
    Let Ti393.3118 =
      Set (1)
    In
    Let Ti394.3116 =
      Ti392.3117 - Ti393.3118
    In
    Let Tu259.3110 =
      CallCls setup_reflections.3089 Ti394.3116 
    In
    Let Ti395.3114 =
      Set (0)
    In
    Let Ti396.3115 =
      Set (0)
    In
    Let Tu258.3111 =
      CallCls pretrace_line.3015 cur.3103 Ti395.3114 Ti396.3115 
    In
    Let Ti397.3112 =
      Set (0)
    In
    Let Ti398.3113 =
      Set (2)
    In
    Ans (
      CallCls scan_line.3025 Ti397.3112 prev.3102 cur.3103 next.3104 Ti398.3113 
    )
  Let l.7453 =
    Set (l.7452)
  In
  Let pi.2533 =
    FLord l.7453[0]
  In
  Let l.7454 =
    Set (l.6257)
  In
  Let Td271.6246 =
    FLord l.7454[0]
  In
  Let pi2.2534 =
    pi.2533 *. Td271.6246
  In
  Let l.7455 =
    Set (l.6259)
  In
  Let Td272.6245 =
    FLord l.7455[0]
  In
  Let pih.2535 =
    pi.2533 *. Td272.6245
  In
  Let atan.2540 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7959 =
    Set (atan.2540)
  In
  Let Tu7960 =
    Store l.7959 to atan.2540[0]
  In
  Let Tu7958 =
    FStore pi.2533 to atan.2540[-8]
  In
  Let sin_sub.2544 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7956 =
    Set (sin_sub.2544)
  In
  Let Tu7957 =
    Store l.7956 to sin_sub.2544[0]
  In
  Let Tu7955 =
    FStore pi2.2534 to sin_sub.2544[-8]
  In
  Let sin.2546 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 40
  In
  Let l.7953 =
    Set (sin.2546)
  In
  Let Tu7954 =
    Store l.7953 to sin.2546[0]
  In
  Let Tu7952 =
    Store sin_sub.2544 to sin.2546[-32]
  In
  Let Tu7951 =
    FStore pih.2535 to sin.2546[-24]
  In
  Let Tu7950 =
    FStore pi2.2534 to sin.2546[-16]
  In
  Let Tu7949 =
    FStore pi.2533 to sin.2546[-8]
  In
  Let cos.2548 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7947 =
    Set (cos.2548)
  In
  Let Tu7948 =
    Store l.7947 to cos.2548[0]
  In
  Let Tu7946 =
    Store sin.2546 to cos.2548[-4]
  In
  Let Ti273.6172 =
    Set (1)
  In
  Let Ti274.6173 =
    Set (0)
  In
  Let read_int_ans.2552 =
    CallDir min_caml_create_array Ti273.6172 Ti274.6173 
  In
  Let Ti275.6170 =
    Set (1)
  In
  Let Ti276.6171 =
    Set (0)
  In
  Let read_int_s.2553 =
    CallDir min_caml_create_array Ti275.6170 Ti276.6171 
  In
  Let read_int_token.2554 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7944 =
    Set (read_int_token.2554)
  In
  Let Tu7945 =
    Store l.7944 to read_int_token.2554[0]
  In
  Let Tu7943 =
    Store read_int_s.2553 to read_int_token.2554[-8]
  In
  Let Tu7942 =
    Store read_int_ans.2552 to read_int_token.2554[-4]
  In
  Let read_int.2557 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7940 =
    Set (read_int.2557)
  In
  Let Tu7941 =
    Store l.7940 to read_int.2557[0]
  In
  Let Tu7939 =
    Store read_int_token.2554 to read_int.2557[-12]
  In
  Let Tu7938 =
    Store read_int_s.2553 to read_int.2557[-8]
  In
  Let Tu7937 =
    Store read_int_ans.2552 to read_int.2557[-4]
  In
  Let Ti277.6131 =
    Set (1)
  In
  Let Ti278.6132 =
    Set (0)
  In
  Let read_float_i.2559 =
    CallDir min_caml_create_array Ti277.6131 Ti278.6132 
  In
  Let Ti279.6129 =
    Set (1)
  In
  Let Ti280.6130 =
    Set (0)
  In
  Let read_float_f.2560 =
    CallDir min_caml_create_array Ti279.6129 Ti280.6130 
  In
  Let Ti281.6127 =
    Set (1)
  In
  Let Ti282.6128 =
    Set (1)
  In
  Let read_float_exp.2561 =
    CallDir min_caml_create_array Ti281.6127 Ti282.6128 
  In
  Let Ti283.6125 =
    Set (1)
  In
  Let Ti284.6126 =
    Set (0)
  In
  Let read_float_s.2562 =
    CallDir min_caml_create_array Ti283.6125 Ti284.6126 
  In
  Let read_float_token1.2563 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7935 =
    Set (read_float_token1.2563)
  In
  Let Tu7936 =
    Store l.7935 to read_float_token1.2563[0]
  In
  Let Tu7934 =
    Store read_float_s.2562 to read_float_token1.2563[-8]
  In
  Let Tu7933 =
    Store read_float_i.2559 to read_float_token1.2563[-4]
  In
  Let read_float_token2.2566 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7931 =
    Set (read_float_token2.2566)
  In
  Let Tu7932 =
    Store l.7931 to read_float_token2.2566[0]
  In
  Let Tu7930 =
    Store read_float_f.2560 to read_float_token2.2566[-8]
  In
  Let Tu7929 =
    Store read_float_exp.2561 to read_float_token2.2566[-4]
  In
  Let read_float.2568 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 32
  In
  Let l.7927 =
    Set (read_float.2568)
  In
  Let Tu7928 =
    Store l.7927 to read_float.2568[0]
  In
  Let Tu7926 =
    Store read_float_token2.2566 to read_float.2568[-24]
  In
  Let Tu7925 =
    Store read_float_token1.2563 to read_float.2568[-20]
  In
  Let Tu7924 =
    Store read_float_s.2562 to read_float.2568[-16]
  In
  Let Tu7923 =
    Store read_float_i.2559 to read_float.2568[-12]
  In
  Let Tu7922 =
    Store read_float_f.2560 to read_float.2568[-8]
  In
  Let Tu7921 =
    Store read_float_exp.2561 to read_float.2568[-4]
  In
  Let Ti285.5996 =
    Set (1)
  In
  Let Ti286.5997 =
    Set (0)
  In
  Let n_objects.2577 =
    CallDir min_caml_create_array Ti285.5996 Ti286.5997 
  In
  Let Ti287.5994 =
    Set (0)
  In
  Let l.7456 =
    Set (l.6252)
  In
  Let Td288.5995 =
    FLord l.7456[0]
  In
  Let dummy.5986 =
    CallDir min_caml_create_float_array Ti287.5994 Td288.5995 
  In
  Let Ti289.5987 =
    Set (60)
  In
  Let Ti290.5989 =
    Set (0)
  In
  Let Ti291.5990 =
    Set (0)
  In
  Let Ti292.5991 =
    Set (0)
  In
  Let Ti293.5992 =
    Set (0)
  In
  Let Ti294.5993 =
    Set (0)
  In
  Let t.7457 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 48
  In
  Let Tu7468 =
    Store dummy.5986 to t.7457[-40]
  In
  Let Tu7467 =
    Store dummy.5986 to t.7457[-36]
  In
  Let Tu7466 =
    Store dummy.5986 to t.7457[-32]
  In
  Let Tu7465 =
    Store dummy.5986 to t.7457[-28]
  In
  Let Tu7464 =
    Store Ti294.5993 to t.7457[-24]
  In
  Let Tu7463 =
    Store dummy.5986 to t.7457[-20]
  In
  Let Tu7462 =
    Store dummy.5986 to t.7457[-16]
  In
  Let Tu7461 =
    Store Ti293.5992 to t.7457[-12]
  In
  Let Tu7460 =
    Store Ti292.5991 to t.7457[-8]
  In
  Let Tu7459 =
    Store Ti291.5990 to t.7457[-4]
  In
  Let Tu7458 =
    Store Ti290.5989 to t.7457[0]
  In
  Let Tt295.5988 =
    Mov (t.7457)
  In
  Let objects.2578 =
    CallDir min_caml_create_array Ti289.5987 Tt295.5988 
  In
  Let Ti296.5984 =
    Set (3)
  In
  Let l.7469 =
    Set (l.6252)
  In
  Let Td297.5985 =
    FLord l.7469[0]
  In
  Let screen.2579 =
    CallDir min_caml_create_float_array Ti296.5984 Td297.5985 
  In
  Let Ti298.5982 =
    Set (3)
  In
  Let l.7470 =
    Set (l.6252)
  In
  Let Td299.5983 =
    FLord l.7470[0]
  In
  Let viewpoint.2580 =
    CallDir min_caml_create_float_array Ti298.5982 Td299.5983 
  In
  Let Ti300.5980 =
    Set (3)
  In
  Let l.7471 =
    Set (l.6252)
  In
  Let Td301.5981 =
    FLord l.7471[0]
  In
  Let light.2581 =
    CallDir min_caml_create_float_array Ti300.5980 Td301.5981 
  In
  Let Ti302.5978 =
    Set (1)
  In
  Let l.7472 =
    Set (l.7077)
  In
  Let Td303.5979 =
    FLord l.7472[0]
  In
  Let beam.2582 =
    CallDir min_caml_create_float_array Ti302.5978 Td303.5979 
  In
  Let Ti304.5973 =
    Set (50)
  In
  Let Ti305.5975 =
    Set (1)
  In
  Let Ti306.5977 =
    Set (1)
  In
  Let Ti307.5976 =
    Neg (Ti306.5977)
  In
  Let Ta308.5974 =
    CallDir min_caml_create_array Ti305.5975 Ti307.5976 
  In
  Let and_net.2583 =
    CallDir min_caml_create_array Ti304.5973 Ta308.5974 
  In
  Let Ti309.5968 =
    Set (1)
  In
  Let Ti310.5970 =
    Set (1)
  In
  Let Ti311.5972 =
    Set (0)
  In
  Let o.7473 =
    Ti311.5972 << 2
  In
  Let Ta312.5971 =
    Lord and_net.2583[o.7473]
  In
  Let Ta313.5969 =
    CallDir min_caml_create_array Ti310.5970 Ta312.5971 
  In
  Let or_net.2584 =
    CallDir min_caml_create_array Ti309.5968 Ta313.5969 
  In
  Let Ti314.5966 =
    Set (1)
  In
  Let l.7475 =
    Set (l.6252)
  In
  Let Td315.5967 =
    FLord l.7475[0]
  In
  Let solver_dist.2585 =
    CallDir min_caml_create_float_array Ti314.5966 Td315.5967 
  In
  Let Ti316.5964 =
    Set (1)
  In
  Let Ti317.5965 =
    Set (0)
  In
  Let intsec_rectside.2586 =
    CallDir min_caml_create_array Ti316.5964 Ti317.5965 
  In
  Let Ti318.5962 =
    Set (1)
  In
  Let l.7476 =
    Set (l.6976)
  In
  Let Td319.5963 =
    FLord l.7476[0]
  In
  Let tmin.2587 =
    CallDir min_caml_create_float_array Ti318.5962 Td319.5963 
  In
  Let Ti320.5960 =
    Set (3)
  In
  Let l.7477 =
    Set (l.6252)
  In
  Let Td321.5961 =
    FLord l.7477[0]
  In
  Let intersection_point.2588 =
    CallDir min_caml_create_float_array Ti320.5960 Td321.5961 
  In
  Let Ti322.5958 =
    Set (1)
  In
  Let Ti323.5959 =
    Set (0)
  In
  Let intersected_object_id.2589 =
    CallDir min_caml_create_array Ti322.5958 Ti323.5959 
  In
  Let Ti324.5956 =
    Set (3)
  In
  Let l.7478 =
    Set (l.6252)
  In
  Let Td325.5957 =
    FLord l.7478[0]
  In
  Let nvector.2590 =
    CallDir min_caml_create_float_array Ti324.5956 Td325.5957 
  In
  Let Ti326.5954 =
    Set (3)
  In
  Let l.7479 =
    Set (l.6252)
  In
  Let Td327.5955 =
    FLord l.7479[0]
  In
  Let texture_color.2591 =
    CallDir min_caml_create_float_array Ti326.5954 Td327.5955 
  In
  Let Ti328.5952 =
    Set (3)
  In
  Let l.7480 =
    Set (l.6252)
  In
  Let Td329.5953 =
    FLord l.7480[0]
  In
  Let diffuse_ray.2592 =
    CallDir min_caml_create_float_array Ti328.5952 Td329.5953 
  In
  Let Ti330.5950 =
    Set (3)
  In
  Let l.7481 =
    Set (l.6252)
  In
  Let Td331.5951 =
    FLord l.7481[0]
  In
  Let rgb.2593 =
    CallDir min_caml_create_float_array Ti330.5950 Td331.5951 
  In
  Let Ti332.5948 =
    Set (2)
  In
  Let Ti333.5949 =
    Set (0)
  In
  Let image_size.2594 =
    CallDir min_caml_create_array Ti332.5948 Ti333.5949 
  In
  Let Ti334.5946 =
    Set (2)
  In
  Let Ti335.5947 =
    Set (0)
  In
  Let image_center.2595 =
    CallDir min_caml_create_array Ti334.5946 Ti335.5947 
  In
  Let Ti336.5944 =
    Set (1)
  In
  Let l.7482 =
    Set (l.6252)
  In
  Let Td337.5945 =
    FLord l.7482[0]
  In
  Let scan_pitch.2596 =
    CallDir min_caml_create_float_array Ti336.5944 Td337.5945 
  In
  Let Ti338.5942 =
    Set (3)
  In
  Let l.7483 =
    Set (l.6252)
  In
  Let Td339.5943 =
    FLord l.7483[0]
  In
  Let startp.2597 =
    CallDir min_caml_create_float_array Ti338.5942 Td339.5943 
  In
  Let Ti340.5940 =
    Set (3)
  In
  Let l.7484 =
    Set (l.6252)
  In
  Let Td341.5941 =
    FLord l.7484[0]
  In
  Let startp_fast.2598 =
    CallDir min_caml_create_float_array Ti340.5940 Td341.5941 
  In
  Let Ti342.5938 =
    Set (3)
  In
  Let l.7485 =
    Set (l.6252)
  In
  Let Td343.5939 =
    FLord l.7485[0]
  In
  Let screenx_dir.2599 =
    CallDir min_caml_create_float_array Ti342.5938 Td343.5939 
  In
  Let Ti344.5936 =
    Set (3)
  In
  Let l.7486 =
    Set (l.6252)
  In
  Let Td345.5937 =
    FLord l.7486[0]
  In
  Let screeny_dir.2600 =
    CallDir min_caml_create_float_array Ti344.5936 Td345.5937 
  In
  Let Ti346.5934 =
    Set (3)
  In
  Let l.7487 =
    Set (l.6252)
  In
  Let Td347.5935 =
    FLord l.7487[0]
  In
  Let screenz_dir.2601 =
    CallDir min_caml_create_float_array Ti346.5934 Td347.5935 
  In
  Let Ti348.5932 =
    Set (3)
  In
  Let l.7488 =
    Set (l.6252)
  In
  Let Td349.5933 =
    FLord l.7488[0]
  In
  Let ptrace_dirvec.2602 =
    CallDir min_caml_create_float_array Ti348.5932 Td349.5933 
  In
  Let Ti350.5930 =
    Set (0)
  In
  Let l.7489 =
    Set (l.6252)
  In
  Let Td351.5931 =
    FLord l.7489[0]
  In
  Let dummyf.5923 =
    CallDir min_caml_create_float_array Ti350.5930 Td351.5931 
  In
  Let Ti352.5929 =
    Set (0)
  In
  Let dummyff.5924 =
    CallDir min_caml_create_array Ti352.5929 dummyf.5923 
  In
  Let Ti353.5927 =
    Set (0)
  In
  Let t.7490 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let Tu7492 =
    Store dummyff.5924 to t.7490[-4]
  In
  Let Tu7491 =
    Store dummyf.5923 to t.7490[0]
  In
  Let Tt354.5928 =
    Mov (t.7490)
  In
  Let dummy_vs.5925 =
    CallDir min_caml_create_array Ti353.5927 Tt354.5928 
  In
  Let Ti355.5926 =
    Set (5)
  In
  Let dirvecs.2603 =
    CallDir min_caml_create_array Ti355.5926 dummy_vs.5925 
  In
  Let Ti356.5921 =
    Set (0)
  In
  Let l.7493 =
    Set (l.6252)
  In
  Let Td357.5922 =
    FLord l.7493[0]
  In
  Let dummyf2.5915 =
    CallDir min_caml_create_float_array Ti356.5921 Td357.5922 
  In
  Let Ti358.5919 =
    Set (3)
  In
  Let l.7494 =
    Set (l.6252)
  In
  Let Td359.5920 =
    FLord l.7494[0]
  In
  Let v3.5916 =
    CallDir min_caml_create_float_array Ti358.5919 Td359.5920 
  In
  Let Ti360.5918 =
    Set (60)
  In
  Let consts.5917 =
    CallDir min_caml_create_array Ti360.5918 dummyf2.5915 
  In
  Let t.7495 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let Tu7497 =
    Store consts.5917 to t.7495[-4]
  In
  Let Tu7496 =
    Store v3.5916 to t.7495[0]
  In
  Let light_dirvec.2604 =
    Mov (t.7495)
  In
  Let Ti361.5913 =
    Set (0)
  In
  Let l.7498 =
    Set (l.6252)
  In
  Let Td362.5914 =
    FLord l.7498[0]
  In
  Let dummyf3.5905 =
    CallDir min_caml_create_float_array Ti361.5913 Td362.5914 
  In
  Let Ti363.5912 =
    Set (0)
  In
  Let dummyff3.5906 =
    CallDir min_caml_create_array Ti363.5912 dummyf3.5905 
  In
  Let t.7499 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let Tu7501 =
    Store dummyff3.5906 to t.7499[-4]
  In
  Let Tu7500 =
    Store dummyf3.5905 to t.7499[0]
  In
  Let dummydv.5907 =
    Mov (t.7499)
  In
  Let Ti364.5908 =
    Set (180)
  In
  Let Ti365.5910 =
    Set (0)
  In
  Let l.7502 =
    Set (l.6252)
  In
  Let Td366.5911 =
    FLord l.7502[0]
  In
  Let t.7503 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let Tu7506 =
    FStore Td366.5911 to t.7503[-8]
  In
  Let Tu7505 =
    Store dummydv.5907 to t.7503[-4]
  In
  Let Tu7504 =
    Store Ti365.5910 to t.7503[0]
  In
  Let Tt367.5909 =
    Mov (t.7503)
  In
  Let reflections.2605 =
    CallDir min_caml_create_array Ti364.5908 Tt367.5909 
  In
  Let Ti368.5903 =
    Set (1)
  In
  Let Ti369.5904 =
    Set (0)
  In
  Let n_reflections.2606 =
    CallDir min_caml_create_array Ti368.5903 Ti369.5904 
  In
  Let read_screen_settings.2737 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 40
  In
  Let l.7919 =
    Set (read_screen_settings.2737)
  In
  Let Tu7920 =
    Store l.7919 to read_screen_settings.2737[0]
  In
  Let Tu7918 =
    Store viewpoint.2580 to read_screen_settings.2737[-32]
  In
  Let Tu7917 =
    Store sin.2546 to read_screen_settings.2737[-28]
  In
  Let Tu7916 =
    Store screenz_dir.2601 to read_screen_settings.2737[-24]
  In
  Let Tu7915 =
    Store screeny_dir.2600 to read_screen_settings.2737[-20]
  In
  Let Tu7914 =
    Store screenx_dir.2599 to read_screen_settings.2737[-16]
  In
  Let Tu7913 =
    Store screen.2579 to read_screen_settings.2737[-12]
  In
  Let Tu7912 =
    Store read_float.2568 to read_screen_settings.2737[-8]
  In
  Let Tu7911 =
    Store cos.2548 to read_screen_settings.2737[-4]
  In
  Let read_light.2739 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 32
  In
  Let l.7909 =
    Set (read_light.2739)
  In
  Let Tu7910 =
    Store l.7909 to read_light.2739[0]
  In
  Let Tu7908 =
    Store sin.2546 to read_light.2739[-24]
  In
  Let Tu7907 =
    Store read_int.2557 to read_light.2739[-20]
  In
  Let Tu7906 =
    Store read_float.2568 to read_light.2739[-16]
  In
  Let Tu7905 =
    Store light.2581 to read_light.2739[-12]
  In
  Let Tu7904 =
    Store cos.2548 to read_light.2739[-8]
  In
  Let Tu7903 =
    Store beam.2582 to read_light.2739[-4]
  In
  Let rotate_quadratic_matrix.2741 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7901 =
    Set (rotate_quadratic_matrix.2741)
  In
  Let Tu7902 =
    Store l.7901 to rotate_quadratic_matrix.2741[0]
  In
  Let Tu7900 =
    Store sin.2546 to rotate_quadratic_matrix.2741[-8]
  In
  Let Tu7899 =
    Store cos.2548 to rotate_quadratic_matrix.2741[-4]
  In
  Let read_nth_object.2744 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 24
  In
  Let l.7897 =
    Set (read_nth_object.2744)
  In
  Let Tu7898 =
    Store l.7897 to read_nth_object.2744[0]
  In
  Let Tu7896 =
    Store rotate_quadratic_matrix.2741 to read_nth_object.2744[-16]
  In
  Let Tu7895 =
    Store read_int.2557 to read_nth_object.2744[-12]
  In
  Let Tu7894 =
    Store read_float.2568 to read_nth_object.2744[-8]
  In
  Let Tu7893 =
    Store objects.2578 to read_nth_object.2744[-4]
  In
  Let read_object.2746 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7891 =
    Set (read_object.2746)
  In
  Let Tu7892 =
    Store l.7891 to read_object.2746[0]
  In
  Let Tu7890 =
    Store read_nth_object.2744 to read_object.2746[-8]
  In
  Let Tu7889 =
    Store n_objects.2577 to read_object.2746[-4]
  In
  Let read_all_object.2748 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7887 =
    Set (read_all_object.2748)
  In
  Let Tu7888 =
    Store l.7887 to read_all_object.2748[0]
  In
  Let Tu7886 =
    Store read_object.2746 to read_all_object.2748[-4]
  In
  Let read_net_item.2750 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7884 =
    Set (read_net_item.2750)
  In
  Let Tu7885 =
    Store l.7884 to read_net_item.2750[0]
  In
  Let Tu7883 =
    Store read_int.2557 to read_net_item.2750[-4]
  In
  Let read_or_network.2752 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7881 =
    Set (read_or_network.2752)
  In
  Let Tu7882 =
    Store l.7881 to read_or_network.2752[0]
  In
  Let Tu7880 =
    Store read_net_item.2750 to read_or_network.2752[-4]
  In
  Let read_and_network.2754 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7878 =
    Set (read_and_network.2754)
  In
  Let Tu7879 =
    Store l.7878 to read_and_network.2754[0]
  In
  Let Tu7877 =
    Store read_net_item.2750 to read_and_network.2754[-8]
  In
  Let Tu7876 =
    Store and_net.2583 to read_and_network.2754[-4]
  In
  Let read_parameter.2756 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 32
  In
  Let l.7874 =
    Set (read_parameter.2756)
  In
  Let Tu7875 =
    Store l.7874 to read_parameter.2756[0]
  In
  Let Tu7873 =
    Store read_screen_settings.2737 to read_parameter.2756[-24]
  In
  Let Tu7872 =
    Store read_or_network.2752 to read_parameter.2756[-20]
  In
  Let Tu7871 =
    Store read_light.2739 to read_parameter.2756[-16]
  In
  Let Tu7870 =
    Store read_and_network.2754 to read_parameter.2756[-12]
  In
  Let Tu7869 =
    Store read_all_object.2748 to read_parameter.2756[-8]
  In
  Let Tu7868 =
    Store or_net.2584 to read_parameter.2756[-4]
  In
  Let solver_rect_surface.2758 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7866 =
    Set (solver_rect_surface.2758)
  In
  Let Tu7867 =
    Store l.7866 to solver_rect_surface.2758[0]
  In
  Let Tu7865 =
    Store solver_dist.2585 to solver_rect_surface.2758[-4]
  In
  Let solver_rect.2767 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7863 =
    Set (solver_rect.2767)
  In
  Let Tu7864 =
    Store l.7863 to solver_rect.2767[0]
  In
  Let Tu7862 =
    Store solver_rect_surface.2758 to solver_rect.2767[-4]
  In
  Let solver_surface.2773 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7860 =
    Set (solver_surface.2773)
  In
  Let Tu7861 =
    Store l.7860 to solver_surface.2773[0]
  In
  Let Tu7859 =
    Store solver_dist.2585 to solver_surface.2773[-4]
  In
  Let solver_second.2792 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7857 =
    Set (solver_second.2792)
  In
  Let Tu7858 =
    Store l.7857 to solver_second.2792[0]
  In
  Let Tu7856 =
    Store solver_dist.2585 to solver_second.2792[-4]
  In
  Let solver.2798 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 24
  In
  Let l.7854 =
    Set (solver.2798)
  In
  Let Tu7855 =
    Store l.7854 to solver.2798[0]
  In
  Let Tu7853 =
    Store solver_surface.2773 to solver.2798[-16]
  In
  Let Tu7852 =
    Store solver_second.2792 to solver.2798[-12]
  In
  Let Tu7851 =
    Store solver_rect.2767 to solver.2798[-8]
  In
  Let Tu7850 =
    Store objects.2578 to solver.2798[-4]
  In
  Let solver_rect_fast.2802 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7848 =
    Set (solver_rect_fast.2802)
  In
  Let Tu7849 =
    Store l.7848 to solver_rect_fast.2802[0]
  In
  Let Tu7847 =
    Store solver_dist.2585 to solver_rect_fast.2802[-4]
  In
  Let solver_surface_fast.2809 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7845 =
    Set (solver_surface_fast.2809)
  In
  Let Tu7846 =
    Store l.7845 to solver_surface_fast.2809[0]
  In
  Let Tu7844 =
    Store solver_dist.2585 to solver_surface_fast.2809[-4]
  In
  Let solver_second_fast.2815 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7842 =
    Set (solver_second_fast.2815)
  In
  Let Tu7843 =
    Store l.7842 to solver_second_fast.2815[0]
  In
  Let Tu7841 =
    Store solver_dist.2585 to solver_second_fast.2815[-4]
  In
  Let solver_fast.2821 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 24
  In
  Let l.7839 =
    Set (solver_fast.2821)
  In
  Let Tu7840 =
    Store l.7839 to solver_fast.2821[0]
  In
  Let Tu7838 =
    Store solver_surface_fast.2809 to solver_fast.2821[-16]
  In
  Let Tu7837 =
    Store solver_second_fast.2815 to solver_fast.2821[-12]
  In
  Let Tu7836 =
    Store solver_rect_fast.2802 to solver_fast.2821[-8]
  In
  Let Tu7835 =
    Store objects.2578 to solver_fast.2821[-4]
  In
  Let solver_surface_fast2.2825 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7833 =
    Set (solver_surface_fast2.2825)
  In
  Let Tu7834 =
    Store l.7833 to solver_surface_fast2.2825[0]
  In
  Let Tu7832 =
    Store solver_dist.2585 to solver_surface_fast2.2825[-4]
  In
  Let solver_second_fast2.2832 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7830 =
    Set (solver_second_fast2.2832)
  In
  Let Tu7831 =
    Store l.7830 to solver_second_fast2.2832[0]
  In
  Let Tu7829 =
    Store solver_dist.2585 to solver_second_fast2.2832[-4]
  In
  Let solver_fast2.2839 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 24
  In
  Let l.7827 =
    Set (solver_fast2.2839)
  In
  Let Tu7828 =
    Store l.7827 to solver_fast2.2839[0]
  In
  Let Tu7826 =
    Store solver_surface_fast2.2825 to solver_fast2.2839[-16]
  In
  Let Tu7825 =
    Store solver_second_fast2.2832 to solver_fast2.2839[-12]
  In
  Let Tu7824 =
    Store solver_rect_fast.2802 to solver_fast2.2839[-8]
  In
  Let Tu7823 =
    Store objects.2578 to solver_fast2.2839[-4]
  In
  Let iter_setup_dirvec_constants.2851 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7821 =
    Set (iter_setup_dirvec_constants.2851)
  In
  Let Tu7822 =
    Store l.7821 to iter_setup_dirvec_constants.2851[0]
  In
  Let Tu7820 =
    Store objects.2578 to iter_setup_dirvec_constants.2851[-4]
  In
  Let setup_dirvec_constants.2854 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7818 =
    Set (setup_dirvec_constants.2854)
  In
  Let Tu7819 =
    Store l.7818 to setup_dirvec_constants.2854[0]
  In
  Let Tu7817 =
    Store n_objects.2577 to setup_dirvec_constants.2854[-8]
  In
  Let Tu7816 =
    Store iter_setup_dirvec_constants.2851 to setup_dirvec_constants.2854[-4]
  In
  Let setup_startp_constants.2856 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7814 =
    Set (setup_startp_constants.2856)
  In
  Let Tu7815 =
    Store l.7814 to setup_startp_constants.2856[0]
  In
  Let Tu7813 =
    Store objects.2578 to setup_startp_constants.2856[-4]
  In
  Let setup_startp.2859 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7811 =
    Set (setup_startp.2859)
  In
  Let Tu7812 =
    Store l.7811 to setup_startp.2859[0]
  In
  Let Tu7810 =
    Store startp_fast.2598 to setup_startp.2859[-12]
  In
  Let Tu7809 =
    Store setup_startp_constants.2856 to setup_startp.2859[-8]
  In
  Let Tu7808 =
    Store n_objects.2577 to setup_startp.2859[-4]
  In
  Let check_all_inside.2881 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7806 =
    Set (check_all_inside.2881)
  In
  Let Tu7807 =
    Store l.7806 to check_all_inside.2881[0]
  In
  Let Tu7805 =
    Store objects.2578 to check_all_inside.2881[-4]
  In
  Let shadow_check_and_group.2887 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 32
  In
  Let l.7803 =
    Set (shadow_check_and_group.2887)
  In
  Let Tu7804 =
    Store l.7803 to shadow_check_and_group.2887[0]
  In
  Let Tu7802 =
    Store solver_fast.2821 to shadow_check_and_group.2887[-28]
  In
  Let Tu7801 =
    Store solver_dist.2585 to shadow_check_and_group.2887[-24]
  In
  Let Tu7800 =
    Store objects.2578 to shadow_check_and_group.2887[-20]
  In
  Let Tu7799 =
    Store light_dirvec.2604 to shadow_check_and_group.2887[-16]
  In
  Let Tu7798 =
    Store light.2581 to shadow_check_and_group.2887[-12]
  In
  Let Tu7797 =
    Store intersection_point.2588 to shadow_check_and_group.2887[-8]
  In
  Let Tu7796 =
    Store check_all_inside.2881 to shadow_check_and_group.2887[-4]
  In
  Let shadow_check_one_or_group.2890 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7794 =
    Set (shadow_check_one_or_group.2890)
  In
  Let Tu7795 =
    Store l.7794 to shadow_check_one_or_group.2890[0]
  In
  Let Tu7793 =
    Store shadow_check_and_group.2887 to shadow_check_one_or_group.2890[-8]
  In
  Let Tu7792 =
    Store and_net.2583 to shadow_check_one_or_group.2890[-4]
  In
  Let shadow_check_one_or_matrix.2893 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 24
  In
  Let l.7790 =
    Set (shadow_check_one_or_matrix.2893)
  In
  Let Tu7791 =
    Store l.7790 to shadow_check_one_or_matrix.2893[0]
  In
  Let Tu7789 =
    Store solver_fast.2821 to shadow_check_one_or_matrix.2893[-20]
  In
  Let Tu7788 =
    Store solver_dist.2585 to shadow_check_one_or_matrix.2893[-16]
  In
  Let Tu7787 =
    Store shadow_check_one_or_group.2890 to shadow_check_one_or_matrix.2893[-12]
  In
  Let Tu7786 =
    Store light_dirvec.2604 to shadow_check_one_or_matrix.2893[-8]
  In
  Let Tu7785 =
    Store intersection_point.2588 to shadow_check_one_or_matrix.2893[-4]
  In
  Let solve_each_element.2896 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 40
  In
  Let l.7783 =
    Set (solve_each_element.2896)
  In
  Let Tu7784 =
    Store l.7783 to solve_each_element.2896[0]
  In
  Let Tu7782 =
    Store tmin.2587 to solve_each_element.2896[-36]
  In
  Let Tu7781 =
    Store startp.2597 to solve_each_element.2896[-32]
  In
  Let Tu7780 =
    Store solver_dist.2585 to solve_each_element.2896[-28]
  In
  Let Tu7779 =
    Store solver.2798 to solve_each_element.2896[-24]
  In
  Let Tu7778 =
    Store objects.2578 to solve_each_element.2896[-20]
  In
  Let Tu7777 =
    Store intsec_rectside.2586 to solve_each_element.2896[-16]
  In
  Let Tu7776 =
    Store intersection_point.2588 to solve_each_element.2896[-12]
  In
  Let Tu7775 =
    Store intersected_object_id.2589 to solve_each_element.2896[-8]
  In
  Let Tu7774 =
    Store check_all_inside.2881 to solve_each_element.2896[-4]
  In
  Let solve_one_or_network.2900 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7772 =
    Set (solve_one_or_network.2900)
  In
  Let Tu7773 =
    Store l.7772 to solve_one_or_network.2900[0]
  In
  Let Tu7771 =
    Store solve_each_element.2896 to solve_one_or_network.2900[-8]
  In
  Let Tu7770 =
    Store and_net.2583 to solve_one_or_network.2900[-4]
  In
  Let trace_or_matrix.2904 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 24
  In
  Let l.7768 =
    Set (trace_or_matrix.2904)
  In
  Let Tu7769 =
    Store l.7768 to trace_or_matrix.2904[0]
  In
  Let Tu7767 =
    Store tmin.2587 to trace_or_matrix.2904[-20]
  In
  Let Tu7766 =
    Store startp.2597 to trace_or_matrix.2904[-16]
  In
  Let Tu7765 =
    Store solver_dist.2585 to trace_or_matrix.2904[-12]
  In
  Let Tu7764 =
    Store solver.2798 to trace_or_matrix.2904[-8]
  In
  Let Tu7763 =
    Store solve_one_or_network.2900 to trace_or_matrix.2904[-4]
  In
  Let judge_intersection.2908 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7761 =
    Set (judge_intersection.2908)
  In
  Let Tu7762 =
    Store l.7761 to judge_intersection.2908[0]
  In
  Let Tu7760 =
    Store trace_or_matrix.2904 to judge_intersection.2908[-12]
  In
  Let Tu7759 =
    Store tmin.2587 to judge_intersection.2908[-8]
  In
  Let Tu7758 =
    Store or_net.2584 to judge_intersection.2908[-4]
  In
  Let solve_each_element_fast.2910 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 40
  In
  Let l.7756 =
    Set (solve_each_element_fast.2910)
  In
  Let Tu7757 =
    Store l.7756 to solve_each_element_fast.2910[0]
  In
  Let Tu7755 =
    Store tmin.2587 to solve_each_element_fast.2910[-36]
  In
  Let Tu7754 =
    Store startp_fast.2598 to solve_each_element_fast.2910[-32]
  In
  Let Tu7753 =
    Store solver_fast2.2839 to solve_each_element_fast.2910[-28]
  In
  Let Tu7752 =
    Store solver_dist.2585 to solve_each_element_fast.2910[-24]
  In
  Let Tu7751 =
    Store objects.2578 to solve_each_element_fast.2910[-20]
  In
  Let Tu7750 =
    Store intsec_rectside.2586 to solve_each_element_fast.2910[-16]
  In
  Let Tu7749 =
    Store intersection_point.2588 to solve_each_element_fast.2910[-12]
  In
  Let Tu7748 =
    Store intersected_object_id.2589 to solve_each_element_fast.2910[-8]
  In
  Let Tu7747 =
    Store check_all_inside.2881 to solve_each_element_fast.2910[-4]
  In
  Let solve_one_or_network_fast.2914 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7745 =
    Set (solve_one_or_network_fast.2914)
  In
  Let Tu7746 =
    Store l.7745 to solve_one_or_network_fast.2914[0]
  In
  Let Tu7744 =
    Store solve_each_element_fast.2910 to solve_one_or_network_fast.2914[-8]
  In
  Let Tu7743 =
    Store and_net.2583 to solve_one_or_network_fast.2914[-4]
  In
  Let trace_or_matrix_fast.2918 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 24
  In
  Let l.7741 =
    Set (trace_or_matrix_fast.2918)
  In
  Let Tu7742 =
    Store l.7741 to trace_or_matrix_fast.2918[0]
  In
  Let Tu7740 =
    Store tmin.2587 to trace_or_matrix_fast.2918[-16]
  In
  Let Tu7739 =
    Store solver_fast2.2839 to trace_or_matrix_fast.2918[-12]
  In
  Let Tu7738 =
    Store solver_dist.2585 to trace_or_matrix_fast.2918[-8]
  In
  Let Tu7737 =
    Store solve_one_or_network_fast.2914 to trace_or_matrix_fast.2918[-4]
  In
  Let judge_intersection_fast.2922 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7735 =
    Set (judge_intersection_fast.2922)
  In
  Let Tu7736 =
    Store l.7735 to judge_intersection_fast.2922[0]
  In
  Let Tu7734 =
    Store trace_or_matrix_fast.2918 to judge_intersection_fast.2922[-12]
  In
  Let Tu7733 =
    Store tmin.2587 to judge_intersection_fast.2922[-8]
  In
  Let Tu7732 =
    Store or_net.2584 to judge_intersection_fast.2922[-4]
  In
  Let get_nvector_rect.2924 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7730 =
    Set (get_nvector_rect.2924)
  In
  Let Tu7731 =
    Store l.7730 to get_nvector_rect.2924[0]
  In
  Let Tu7729 =
    Store nvector.2590 to get_nvector_rect.2924[-8]
  In
  Let Tu7728 =
    Store intsec_rectside.2586 to get_nvector_rect.2924[-4]
  In
  Let get_nvector_plane.2926 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7726 =
    Set (get_nvector_plane.2926)
  In
  Let Tu7727 =
    Store l.7726 to get_nvector_plane.2926[0]
  In
  Let Tu7725 =
    Store nvector.2590 to get_nvector_plane.2926[-4]
  In
  Let get_nvector_second.2928 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7723 =
    Set (get_nvector_second.2928)
  In
  Let Tu7724 =
    Store l.7723 to get_nvector_second.2928[0]
  In
  Let Tu7722 =
    Store nvector.2590 to get_nvector_second.2928[-8]
  In
  Let Tu7721 =
    Store intersection_point.2588 to get_nvector_second.2928[-4]
  In
  Let get_nvector.2930 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7719 =
    Set (get_nvector.2930)
  In
  Let Tu7720 =
    Store l.7719 to get_nvector.2930[0]
  In
  Let Tu7718 =
    Store get_nvector_second.2928 to get_nvector.2930[-12]
  In
  Let Tu7717 =
    Store get_nvector_rect.2924 to get_nvector.2930[-8]
  In
  Let Tu7716 =
    Store get_nvector_plane.2926 to get_nvector.2930[-4]
  In
  Let utexture.2933 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 24
  In
  Let l.7714 =
    Set (utexture.2933)
  In
  Let Tu7715 =
    Store l.7714 to utexture.2933[0]
  In
  Let Tu7713 =
    Store texture_color.2591 to utexture.2933[-16]
  In
  Let Tu7712 =
    Store sin.2546 to utexture.2933[-12]
  In
  Let Tu7711 =
    Store cos.2548 to utexture.2933[-8]
  In
  Let Tu7710 =
    Store atan.2540 to utexture.2933[-4]
  In
  Let add_light.2936 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7708 =
    Set (add_light.2936)
  In
  Let Tu7709 =
    Store l.7708 to add_light.2936[0]
  In
  Let Tu7707 =
    Store texture_color.2591 to add_light.2936[-8]
  In
  Let Tu7706 =
    Store rgb.2593 to add_light.2936[-4]
  In
  Let trace_reflections.2940 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 40
  In
  Let l.7704 =
    Set (trace_reflections.2940)
  In
  Let Tu7705 =
    Store l.7704 to trace_reflections.2940[0]
  In
  Let Tu7703 =
    Store shadow_check_one_or_matrix.2893 to trace_reflections.2940[-32]
  In
  Let Tu7702 =
    Store reflections.2605 to trace_reflections.2940[-28]
  In
  Let Tu7701 =
    Store or_net.2584 to trace_reflections.2940[-24]
  In
  Let Tu7700 =
    Store nvector.2590 to trace_reflections.2940[-20]
  In
  Let Tu7699 =
    Store judge_intersection_fast.2922 to trace_reflections.2940[-16]
  In
  Let Tu7698 =
    Store intsec_rectside.2586 to trace_reflections.2940[-12]
  In
  Let Tu7697 =
    Store intersected_object_id.2589 to trace_reflections.2940[-8]
  In
  Let Tu7696 =
    Store add_light.2936 to trace_reflections.2940[-4]
  In
  Let trace_ray.2945 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 88
  In
  Let l.7694 =
    Set (trace_ray.2945)
  In
  Let Tu7695 =
    Store l.7694 to trace_ray.2945[0]
  In
  Let Tu7693 =
    Store utexture.2933 to trace_ray.2945[-80]
  In
  Let Tu7692 =
    Store trace_reflections.2940 to trace_ray.2945[-76]
  In
  Let Tu7691 =
    Store tmin.2587 to trace_ray.2945[-72]
  In
  Let Tu7690 =
    Store texture_color.2591 to trace_ray.2945[-68]
  In
  Let Tu7689 =
    Store startp.2597 to trace_ray.2945[-64]
  In
  Let Tu7688 =
    Store shadow_check_one_or_matrix.2893 to trace_ray.2945[-60]
  In
  Let Tu7687 =
    Store setup_startp.2859 to trace_ray.2945[-56]
  In
  Let Tu7686 =
    Store rgb.2593 to trace_ray.2945[-52]
  In
  Let Tu7685 =
    Store or_net.2584 to trace_ray.2945[-48]
  In
  Let Tu7684 =
    Store objects.2578 to trace_ray.2945[-44]
  In
  Let Tu7683 =
    Store nvector.2590 to trace_ray.2945[-40]
  In
  Let Tu7682 =
    Store n_reflections.2606 to trace_ray.2945[-36]
  In
  Let Tu7681 =
    Store light.2581 to trace_ray.2945[-32]
  In
  Let Tu7680 =
    Store judge_intersection.2908 to trace_ray.2945[-28]
  In
  Let Tu7679 =
    Store intsec_rectside.2586 to trace_ray.2945[-24]
  In
  Let Tu7678 =
    Store intersection_point.2588 to trace_ray.2945[-20]
  In
  Let Tu7677 =
    Store intersected_object_id.2589 to trace_ray.2945[-16]
  In
  Let Tu7676 =
    Store get_nvector.2930 to trace_ray.2945[-12]
  In
  Let Tu7675 =
    Store beam.2582 to trace_ray.2945[-8]
  In
  Let Tu7674 =
    Store add_light.2936 to trace_ray.2945[-4]
  In
  Let trace_diffuse_ray.2951 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 56
  In
  Let l.7672 =
    Set (trace_diffuse_ray.2951)
  In
  Let Tu7673 =
    Store l.7672 to trace_diffuse_ray.2951[0]
  In
  Let Tu7671 =
    Store utexture.2933 to trace_diffuse_ray.2951[-48]
  In
  Let Tu7670 =
    Store texture_color.2591 to trace_diffuse_ray.2951[-44]
  In
  Let Tu7669 =
    Store shadow_check_one_or_matrix.2893 to trace_diffuse_ray.2951[-40]
  In
  Let Tu7668 =
    Store or_net.2584 to trace_diffuse_ray.2951[-36]
  In
  Let Tu7667 =
    Store objects.2578 to trace_diffuse_ray.2951[-32]
  In
  Let Tu7666 =
    Store nvector.2590 to trace_diffuse_ray.2951[-28]
  In
  Let Tu7665 =
    Store light.2581 to trace_diffuse_ray.2951[-24]
  In
  Let Tu7664 =
    Store judge_intersection_fast.2922 to trace_diffuse_ray.2951[-20]
  In
  Let Tu7663 =
    Store intersection_point.2588 to trace_diffuse_ray.2951[-16]
  In
  Let Tu7662 =
    Store intersected_object_id.2589 to trace_diffuse_ray.2951[-12]
  In
  Let Tu7661 =
    Store get_nvector.2930 to trace_diffuse_ray.2951[-8]
  In
  Let Tu7660 =
    Store diffuse_ray.2592 to trace_diffuse_ray.2951[-4]
  In
  Let iter_trace_diffuse_rays.2954 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7658 =
    Set (iter_trace_diffuse_rays.2954)
  In
  Let Tu7659 =
    Store l.7658 to iter_trace_diffuse_rays.2954[0]
  In
  Let Tu7657 =
    Store trace_diffuse_ray.2951 to iter_trace_diffuse_rays.2954[-4]
  In
  Let trace_diffuse_rays.2959 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7655 =
    Set (trace_diffuse_rays.2959)
  In
  Let Tu7656 =
    Store l.7655 to trace_diffuse_rays.2959[0]
  In
  Let Tu7654 =
    Store setup_startp.2859 to trace_diffuse_rays.2959[-8]
  In
  Let Tu7653 =
    Store iter_trace_diffuse_rays.2954 to trace_diffuse_rays.2959[-4]
  In
  Let trace_diffuse_ray_80percent.2963 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7651 =
    Set (trace_diffuse_ray_80percent.2963)
  In
  Let Tu7652 =
    Store l.7651 to trace_diffuse_ray_80percent.2963[0]
  In
  Let Tu7650 =
    Store trace_diffuse_rays.2959 to trace_diffuse_ray_80percent.2963[-8]
  In
  Let Tu7649 =
    Store dirvecs.2603 to trace_diffuse_ray_80percent.2963[-4]
  In
  Let calc_diffuse_using_1point.2967 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7647 =
    Set (calc_diffuse_using_1point.2967)
  In
  Let Tu7648 =
    Store l.7647 to calc_diffuse_using_1point.2967[0]
  In
  Let Tu7646 =
    Store trace_diffuse_ray_80percent.2963 to calc_diffuse_using_1point.2967[-12]
  In
  Let Tu7645 =
    Store rgb.2593 to calc_diffuse_using_1point.2967[-8]
  In
  Let Tu7644 =
    Store diffuse_ray.2592 to calc_diffuse_using_1point.2967[-4]
  In
  Let calc_diffuse_using_5points.2970 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7642 =
    Set (calc_diffuse_using_5points.2970)
  In
  Let Tu7643 =
    Store l.7642 to calc_diffuse_using_5points.2970[0]
  In
  Let Tu7641 =
    Store rgb.2593 to calc_diffuse_using_5points.2970[-8]
  In
  Let Tu7640 =
    Store diffuse_ray.2592 to calc_diffuse_using_5points.2970[-4]
  In
  Let do_without_neighbors.2976 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7638 =
    Set (do_without_neighbors.2976)
  In
  Let Tu7639 =
    Store l.7638 to do_without_neighbors.2976[0]
  In
  Let Tu7637 =
    Store calc_diffuse_using_1point.2967 to do_without_neighbors.2976[-4]
  In
  Let neighbors_exist.2979 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7635 =
    Set (neighbors_exist.2979)
  In
  Let Tu7636 =
    Store l.7635 to neighbors_exist.2979[0]
  In
  Let Tu7634 =
    Store image_size.2594 to neighbors_exist.2979[-4]
  In
  Let try_exploit_neighbors.2992 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7632 =
    Set (try_exploit_neighbors.2992)
  In
  Let Tu7633 =
    Store l.7632 to try_exploit_neighbors.2992[0]
  In
  Let Tu7631 =
    Store do_without_neighbors.2976 to try_exploit_neighbors.2992[-8]
  In
  Let Tu7630 =
    Store calc_diffuse_using_5points.2970 to try_exploit_neighbors.2992[-4]
  In
  Let write_ppm_header.2999 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7628 =
    Set (write_ppm_header.2999)
  In
  Let Tu7629 =
    Store l.7628 to write_ppm_header.2999[0]
  In
  Let Tu7627 =
    Store image_size.2594 to write_ppm_header.2999[-4]
  In
  Let write_rgb.3003 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7625 =
    Set (write_rgb.3003)
  In
  Let Tu7626 =
    Store l.7625 to write_rgb.3003[0]
  In
  Let Tu7624 =
    Store rgb.2593 to write_rgb.3003[-4]
  In
  Let pretrace_diffuse_rays.3005 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7622 =
    Set (pretrace_diffuse_rays.3005)
  In
  Let Tu7623 =
    Store l.7622 to pretrace_diffuse_rays.3005[0]
  In
  Let Tu7621 =
    Store trace_diffuse_rays.2959 to pretrace_diffuse_rays.3005[-12]
  In
  Let Tu7620 =
    Store dirvecs.2603 to pretrace_diffuse_rays.3005[-8]
  In
  Let Tu7619 =
    Store diffuse_ray.2592 to pretrace_diffuse_rays.3005[-4]
  In
  Let pretrace_pixels.3008 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 40
  In
  Let l.7617 =
    Set (pretrace_pixels.3008)
  In
  Let Tu7618 =
    Store l.7617 to pretrace_pixels.3008[0]
  In
  Let Tu7616 =
    Store viewpoint.2580 to pretrace_pixels.3008[-36]
  In
  Let Tu7615 =
    Store trace_ray.2945 to pretrace_pixels.3008[-32]
  In
  Let Tu7614 =
    Store startp.2597 to pretrace_pixels.3008[-28]
  In
  Let Tu7613 =
    Store screenx_dir.2599 to pretrace_pixels.3008[-24]
  In
  Let Tu7612 =
    Store scan_pitch.2596 to pretrace_pixels.3008[-20]
  In
  Let Tu7611 =
    Store rgb.2593 to pretrace_pixels.3008[-16]
  In
  Let Tu7610 =
    Store ptrace_dirvec.2602 to pretrace_pixels.3008[-12]
  In
  Let Tu7609 =
    Store pretrace_diffuse_rays.3005 to pretrace_pixels.3008[-8]
  In
  Let Tu7608 =
    Store image_center.2595 to pretrace_pixels.3008[-4]
  In
  Let pretrace_line.3015 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 32
  In
  Let l.7606 =
    Set (pretrace_line.3015)
  In
  Let Tu7607 =
    Store l.7606 to pretrace_line.3015[0]
  In
  Let Tu7605 =
    Store screenz_dir.2601 to pretrace_line.3015[-24]
  In
  Let Tu7604 =
    Store screeny_dir.2600 to pretrace_line.3015[-20]
  In
  Let Tu7603 =
    Store scan_pitch.2596 to pretrace_line.3015[-16]
  In
  Let Tu7602 =
    Store pretrace_pixels.3008 to pretrace_line.3015[-12]
  In
  Let Tu7601 =
    Store image_size.2594 to pretrace_line.3015[-8]
  In
  Let Tu7600 =
    Store image_center.2595 to pretrace_line.3015[-4]
  In
  Let scan_pixel.3019 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 32
  In
  Let l.7598 =
    Set (scan_pixel.3019)
  In
  Let Tu7599 =
    Store l.7598 to scan_pixel.3019[0]
  In
  Let Tu7597 =
    Store write_rgb.3003 to scan_pixel.3019[-24]
  In
  Let Tu7596 =
    Store try_exploit_neighbors.2992 to scan_pixel.3019[-20]
  In
  Let Tu7595 =
    Store rgb.2593 to scan_pixel.3019[-16]
  In
  Let Tu7594 =
    Store neighbors_exist.2979 to scan_pixel.3019[-12]
  In
  Let Tu7593 =
    Store image_size.2594 to scan_pixel.3019[-8]
  In
  Let Tu7592 =
    Store do_without_neighbors.2976 to scan_pixel.3019[-4]
  In
  Let scan_line.3025 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7590 =
    Set (scan_line.3025)
  In
  Let Tu7591 =
    Store l.7590 to scan_line.3025[0]
  In
  Let Tu7589 =
    Store scan_pixel.3019 to scan_line.3025[-12]
  In
  Let Tu7588 =
    Store pretrace_line.3015 to scan_line.3025[-8]
  In
  Let Tu7587 =
    Store image_size.2594 to scan_line.3025[-4]
  In
  Let create_pixelline.3038 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7585 =
    Set (create_pixelline.3038)
  In
  Let Tu7586 =
    Store l.7585 to create_pixelline.3038[0]
  In
  Let Tu7584 =
    Store image_size.2594 to create_pixelline.3038[-4]
  In
  Let tan.3040 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7582 =
    Set (tan.3040)
  In
  Let Tu7583 =
    Store l.7582 to tan.3040[0]
  In
  Let Tu7581 =
    Store sin.2546 to tan.3040[-8]
  In
  Let Tu7580 =
    Store cos.2548 to tan.3040[-4]
  In
  Let adjust_position.3042 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7578 =
    Set (adjust_position.3042)
  In
  Let Tu7579 =
    Store l.7578 to adjust_position.3042[0]
  In
  Let Tu7577 =
    Store tan.3040 to adjust_position.3042[-8]
  In
  Let Tu7576 =
    Store atan.2540 to adjust_position.3042[-4]
  In
  Let calc_dirvec.3045 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7574 =
    Set (calc_dirvec.3045)
  In
  Let Tu7575 =
    Store l.7574 to calc_dirvec.3045[0]
  In
  Let Tu7573 =
    Store dirvecs.2603 to calc_dirvec.3045[-8]
  In
  Let Tu7572 =
    Store adjust_position.3042 to calc_dirvec.3045[-4]
  In
  Let calc_dirvecs.3053 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7570 =
    Set (calc_dirvecs.3053)
  In
  Let Tu7571 =
    Store l.7570 to calc_dirvecs.3053[0]
  In
  Let Tu7569 =
    Store calc_dirvec.3045 to calc_dirvecs.3053[-4]
  In
  Let calc_dirvec_rows.3058 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7567 =
    Set (calc_dirvec_rows.3058)
  In
  Let Tu7568 =
    Store l.7567 to calc_dirvec_rows.3058[0]
  In
  Let Tu7566 =
    Store calc_dirvecs.3053 to calc_dirvec_rows.3058[-4]
  In
  Let create_dirvec.3062 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7564 =
    Set (create_dirvec.3062)
  In
  Let Tu7565 =
    Store l.7564 to create_dirvec.3062[0]
  In
  Let Tu7563 =
    Store n_objects.2577 to create_dirvec.3062[-4]
  In
  Let create_dirvec_elements.3064 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7561 =
    Set (create_dirvec_elements.3064)
  In
  Let Tu7562 =
    Store l.7561 to create_dirvec_elements.3064[0]
  In
  Let Tu7560 =
    Store create_dirvec.3062 to create_dirvec_elements.3064[-4]
  In
  Let create_dirvecs.3067 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7558 =
    Set (create_dirvecs.3067)
  In
  Let Tu7559 =
    Store l.7558 to create_dirvecs.3067[0]
  In
  Let Tu7557 =
    Store dirvecs.2603 to create_dirvecs.3067[-12]
  In
  Let Tu7556 =
    Store create_dirvec_elements.3064 to create_dirvecs.3067[-8]
  In
  Let Tu7555 =
    Store create_dirvec.3062 to create_dirvecs.3067[-4]
  In
  Let init_dirvec_constants.3069 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 8
  In
  Let l.7553 =
    Set (init_dirvec_constants.3069)
  In
  Let Tu7554 =
    Store l.7553 to init_dirvec_constants.3069[0]
  In
  Let Tu7552 =
    Store setup_dirvec_constants.2854 to init_dirvec_constants.3069[-4]
  In
  Let init_vecset_constants.3072 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7550 =
    Set (init_vecset_constants.3072)
  In
  Let Tu7551 =
    Store l.7550 to init_vecset_constants.3072[0]
  In
  Let Tu7549 =
    Store init_dirvec_constants.3069 to init_vecset_constants.3072[-8]
  In
  Let Tu7548 =
    Store dirvecs.2603 to init_vecset_constants.3072[-4]
  In
  Let init_dirvecs.3074 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7546 =
    Set (init_dirvecs.3074)
  In
  Let Tu7547 =
    Store l.7546 to init_dirvecs.3074[0]
  In
  Let Tu7545 =
    Store init_vecset_constants.3072 to init_dirvecs.3074[-12]
  In
  Let Tu7544 =
    Store create_dirvecs.3067 to init_dirvecs.3074[-8]
  In
  Let Tu7543 =
    Store calc_dirvec_rows.3058 to init_dirvecs.3074[-4]
  In
  Let add_reflection.3076 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7541 =
    Set (add_reflection.3076)
  In
  Let Tu7542 =
    Store l.7541 to add_reflection.3076[0]
  In
  Let Tu7540 =
    Store setup_dirvec_constants.2854 to add_reflection.3076[-12]
  In
  Let Tu7539 =
    Store reflections.2605 to add_reflection.3076[-8]
  In
  Let Tu7538 =
    Store create_dirvec.3062 to add_reflection.3076[-4]
  In
  Let setup_rect_reflection.3083 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7536 =
    Set (setup_rect_reflection.3083)
  In
  Let Tu7537 =
    Store l.7536 to setup_rect_reflection.3083[0]
  In
  Let Tu7535 =
    Store n_reflections.2606 to setup_rect_reflection.3083[-12]
  In
  Let Tu7534 =
    Store light.2581 to setup_rect_reflection.3083[-8]
  In
  Let Tu7533 =
    Store add_reflection.3076 to setup_rect_reflection.3083[-4]
  In
  Let setup_surface_reflection.3086 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7531 =
    Set (setup_surface_reflection.3086)
  In
  Let Tu7532 =
    Store l.7531 to setup_surface_reflection.3086[0]
  In
  Let Tu7530 =
    Store n_reflections.2606 to setup_surface_reflection.3086[-12]
  In
  Let Tu7529 =
    Store light.2581 to setup_surface_reflection.3086[-8]
  In
  Let Tu7528 =
    Store add_reflection.3076 to setup_surface_reflection.3086[-4]
  In
  Let setup_reflections.3089 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 16
  In
  Let l.7526 =
    Set (setup_reflections.3089)
  In
  Let Tu7527 =
    Store l.7526 to setup_reflections.3089[0]
  In
  Let Tu7525 =
    Store setup_surface_reflection.3086 to setup_reflections.3089[-12]
  In
  Let Tu7524 =
    Store setup_rect_reflection.3083 to setup_reflections.3089[-8]
  In
  Let Tu7523 =
    Store objects.2578 to setup_reflections.3089[-4]
  In
  Let rt.3091 =
    Mov (%g2)
  In
  Let %g2 =
    %g2 + 64
  In
  Let l.7521 =
    Set (rt.3091)
  In
  Let Tu7522 =
    Store l.7521 to rt.3091[0]
  In
  Let Tu7520 =
    Store write_ppm_header.2999 to rt.3091[-56]
  In
  Let Tu7519 =
    Store setup_reflections.3089 to rt.3091[-52]
  In
  Let Tu7518 =
    Store setup_dirvec_constants.2854 to rt.3091[-48]
  In
  Let Tu7517 =
    Store scan_pitch.2596 to rt.3091[-44]
  In
  Let Tu7516 =
    Store scan_line.3025 to rt.3091[-40]
  In
  Let Tu7515 =
    Store read_parameter.2756 to rt.3091[-36]
  In
  Let Tu7514 =
    Store pretrace_line.3015 to rt.3091[-32]
  In
  Let Tu7513 =
    Store n_objects.2577 to rt.3091[-28]
  In
  Let Tu7512 =
    Store light_dirvec.2604 to rt.3091[-24]
  In
  Let Tu7511 =
    Store light.2581 to rt.3091[-20]
  In
  Let Tu7510 =
    Store init_dirvecs.3074 to rt.3091[-16]
  In
  Let Tu7509 =
    Store image_size.2594 to rt.3091[-12]
  In
  Let Tu7508 =
    Store image_center.2595 to rt.3091[-8]
  In
  Let Tu7507 =
    Store create_pixelline.3038 to rt.3091[-4]
  In
  Let Ti370.3095 =
    Set (128)
  In
  Let Ti371.3096 =
    Set (128)
  In
  Let Tu270.3094 =
    CallCls rt.3091 Ti370.3095 Ti371.3096 
  In
  Ans (
    Set (0)
  )

	l.7105[0] => %f31
	l.7107[0] => %f30
	l.7382[0] => %f29
	l.6911[0] => %f28
	l.6937[0] => %f27
	l.6976[0] => %f26
	l.7064[0] => %f25
	l.7086[0] => %f24
	l.7164[0] => %f23
	l.7380[0] => %f22
	l.6266[0] => %f21
	l.6259[0] => %f20
	l.7077[0] => %f19
	l.6257[0] => %f18
	l.6261[0] => %f17
	l.6252[0] => %f16
	len = 37
	ifle
	ifge
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifle
	ifge
	ifle
	ifeq
	ifle
	ifeq
	ifle
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifge
	ifeq
	ifge
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifge
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifeq
	ifge
	ifeq
	ifeq
	ifeq
	ifge
	ifeq
	ifle
	ifle
	ifge
	ifeq
	ifeq
	ifge
	ifge
	ifeq
	ifge
	ifeq
	ifge
	ifge
	ifge
	ifge
	ifge
	ifge
	ifge
	ifge
	ifeq
	ifeq
